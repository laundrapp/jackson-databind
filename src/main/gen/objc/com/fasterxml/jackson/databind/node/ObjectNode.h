//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/node/ObjectNode.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeObjectNode")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindNodeObjectNode
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeObjectNode 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeObjectNode 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindNodeObjectNode

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindNodeObjectNode_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeObjectNode || defined(INCLUDE_ComFasterxmlJacksonDatabindNodeObjectNode))
#define ComFasterxmlJacksonDatabindNodeObjectNode_

#define RESTRICT_ComFasterxmlJacksonDatabindNodeContainerNode 1
#define INCLUDE_ComFasterxmlJacksonDatabindNodeContainerNode 1
#include "com/fasterxml/jackson/databind/node/ContainerNode.h"

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonCoreJsonPointer;
@class ComFasterxmlJacksonCoreJsonToken;
@class ComFasterxmlJacksonDatabindJsonNode;
@class ComFasterxmlJacksonDatabindJsontypeTypeSerializer;
@class ComFasterxmlJacksonDatabindNodeArrayNode;
@class ComFasterxmlJacksonDatabindNodeJsonNodeFactory;
@class ComFasterxmlJacksonDatabindNodeJsonNodeType;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class ComFasterxmlJacksonDatabindUtilRawValue;
@class IOSByteArray;
@class IOSObjectArray;
@class JavaLangBoolean;
@class JavaLangDouble;
@class JavaLangFloat;
@class JavaLangInteger;
@class JavaLangLong;
@class JavaLangShort;
@class JavaMathBigDecimal;
@class JavaMathBigInteger;
@protocol JavaUtilCollection;
@protocol JavaUtilComparator;
@protocol JavaUtilIterator;
@protocol JavaUtilList;
@protocol JavaUtilMap;

/*!
 @brief Node that maps to JSON Object structures in JSON content.
 <p>
  Note: class was <code>final</code> temporarily for Jackson 2.2.
 */
@interface ComFasterxmlJacksonDatabindNodeObjectNode : ComFasterxmlJacksonDatabindNodeContainerNode {
 @public
  id<JavaUtilMap> _children_;
}

#pragma mark Public

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory:(ComFasterxmlJacksonDatabindNodeJsonNodeFactory *)nc;

/*!
 @since 2.4
 */
- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory:(ComFasterxmlJacksonDatabindNodeJsonNodeFactory *)nc
                                                                 withJavaUtilMap:(id<JavaUtilMap>)kids;

- (ComFasterxmlJacksonCoreJsonToken *)asToken;

- (ComFasterxmlJacksonDatabindNodeObjectNode *)deepCopy;

- (id<JavaUtilIterator>)elements;

- (jboolean)equalsWithJavaUtilComparator:(id<JavaUtilComparator>)comparator
 withComFasterxmlJacksonDatabindJsonNode:(ComFasterxmlJacksonDatabindJsonNode *)o;

- (jboolean)isEqual:(id)o;

- (id<JavaUtilIterator>)fieldNames;

/*!
 @brief Method to use for accessing all fields (with both names
  and values) of this JSON Object.
 */
- (id<JavaUtilIterator>)fields;

- (ComFasterxmlJacksonDatabindNodeObjectNode *)findParentWithNSString:(NSString *)fieldName;

- (id<JavaUtilList>)findParentsWithNSString:(NSString *)fieldName
                           withJavaUtilList:(id<JavaUtilList>)foundSoFar;

- (ComFasterxmlJacksonDatabindJsonNode *)findValueWithNSString:(NSString *)fieldName;

- (id<JavaUtilList>)findValuesWithNSString:(NSString *)fieldName
                          withJavaUtilList:(id<JavaUtilList>)foundSoFar;

- (id<JavaUtilList>)findValuesAsTextWithNSString:(NSString *)fieldName
                                withJavaUtilList:(id<JavaUtilList>)foundSoFar;

- (ComFasterxmlJacksonDatabindJsonNode *)getWithInt:(jint)index;

- (ComFasterxmlJacksonDatabindJsonNode *)getWithNSString:(NSString *)fieldName;

- (ComFasterxmlJacksonDatabindNodeJsonNodeType *)getNodeType;

- (NSUInteger)hash;

- (jboolean)isEmptyWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)serializers;

- (jboolean)isObject;

- (ComFasterxmlJacksonDatabindJsonNode *)pathWithInt:(jint)index;

- (ComFasterxmlJacksonDatabindJsonNode *)pathWithNSString:(NSString *)fieldName;

/*!
 @brief Method for setting value of a field to specified numeric value.
 @return This node (to allow chaining)
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)putWithNSString:(NSString *)fieldName
                                        withJavaMathBigDecimal:(JavaMathBigDecimal *)v;

/*!
 @brief Method for setting value of a field to specified numeric value.
 @return This node (to allow chaining)
 @since 2.9
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)putWithNSString:(NSString *)fieldName
                                        withJavaMathBigInteger:(JavaMathBigInteger *)v;

/*!
 @brief Method for setting value of a field to specified String value.
 @return This node (to allow chaining)
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)putWithNSString:(NSString *)fieldName
                                                   withBoolean:(jboolean)v;

/*!
 @brief Alternative method that we need to avoid bumping into NPE issues
  with auto-unboxing.
 @return This node (to allow chaining)
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)putWithNSString:(NSString *)fieldName
                                           withJavaLangBoolean:(JavaLangBoolean *)v;

/*!
 @brief Method for setting value of a field to specified binary value
 @return This node (to allow chaining)
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)putWithNSString:(NSString *)fieldName
                                                 withByteArray:(IOSByteArray *)v;

/*!
 @brief Method for setting value of a field to specified numeric value.
 @return This node (to allow chaining)
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)putWithNSString:(NSString *)fieldName
                                                    withDouble:(jdouble)v;

/*!
 @brief Alternative method that we need to avoid bumping into NPE issues
  with auto-unboxing.
 @return This node (to allow chaining)
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)putWithNSString:(NSString *)fieldName
                                            withJavaLangDouble:(JavaLangDouble *)v;

/*!
 @brief Method for setting value of a field to specified numeric value.
 @return This node (to allow chaining)
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)putWithNSString:(NSString *)fieldName
                                                     withFloat:(jfloat)v;

/*!
 @brief Alternative method that we need to avoid bumping into NPE issues
  with auto-unboxing.
 @return This node (to allow chaining)
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)putWithNSString:(NSString *)fieldName
                                             withJavaLangFloat:(JavaLangFloat *)v;

/*!
 @brief Method for setting value of a field to specified numeric value.
 The underlying <code>JsonNode</code> that will be added is constructed
  using <code>JsonNodeFactory.numberNode(int)</code>, and may be
   "smaller" (like <code>ShortNode</code>) in cases where value fits within
   range of a smaller integral numeric value.
 @return This node (to allow chaining)
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)putWithNSString:(NSString *)fieldName
                                                       withInt:(jint)v;

/*!
 @brief Alternative method that we need to avoid bumping into NPE issues
  with auto-unboxing.
 @return This node (to allow chaining)
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)putWithNSString:(NSString *)fieldName
                                           withJavaLangInteger:(JavaLangInteger *)v;

/*!
 @brief Method that will set specified field, replacing old value, if any.
 @param value to set field to; if null, will be converted    to a 
 <code>NullNode</code>  first  (to remove field entry, call    <code>remove</code>
   instead)
 @return Old value of the field, if any; null if there was no
    old value.
 */
- (ComFasterxmlJacksonDatabindJsonNode *)putWithNSString:(NSString *)fieldName
                 withComFasterxmlJacksonDatabindJsonNode:(ComFasterxmlJacksonDatabindJsonNode *)value;

/*!
 @brief Method for setting value of a field to specified numeric value.
 The underlying <code>JsonNode</code> that will be added is constructed
  using <code>JsonNodeFactory.numberNode(long)</code>, and may be
   "smaller" (like <code>IntNode</code>) in cases where value fits within
   range of a smaller integral numeric value.
 @return This node (to allow chaining)
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)putWithNSString:(NSString *)fieldName
                                                      withLong:(jlong)v;

/*!
 @brief Method for setting value of a field to specified numeric value.
 The underlying <code>JsonNode</code> that will be added is constructed
  using <code>JsonNodeFactory.numberNode(Long)</code>, and may be
   "smaller" (like <code>IntNode</code>) in cases where value fits within
   range of a smaller integral numeric value. 
 <p>
  Note that this is alternative to <code>long)</code> needed to avoid
  bumping into NPE issues with auto-unboxing.
 @return This node (to allow chaining)
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)putWithNSString:(NSString *)fieldName
                                              withJavaLangLong:(JavaLangLong *)v;

/*!
 @brief Method for setting value of a field to specified numeric value.
 @return This node (to allow chaining)
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)putWithNSString:(NSString *)fieldName
                                                     withShort:(jshort)v;

/*!
 @brief Alternative method that we need to avoid bumping into NPE issues
  with auto-unboxing.
 @return This node (to allow chaining)
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)putWithNSString:(NSString *)fieldName
                                             withJavaLangShort:(JavaLangShort *)v;

/*!
 @brief Method for setting value of a field to specified String value.
 @return This node (to allow chaining)
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)putWithNSString:(NSString *)fieldName
                                                  withNSString:(NSString *)v;

/*!
 @brief Method for adding given properties to this object node, overriding
  any existing values for those properties.
 @param properties Properties to add
 @return This node after adding/replacing property values (to allow chaining)
 */
- (ComFasterxmlJacksonDatabindJsonNode *)putAllWithJavaUtilMap:(id<JavaUtilMap>)properties;

/*!
 @brief Method for adding all properties of the given Object, overriding
  any existing values for those properties.
 @param other Object of which properties to add to this object
 @return This node (to allow chaining)
 */
- (ComFasterxmlJacksonDatabindJsonNode *)putAllWithComFasterxmlJacksonDatabindNodeObjectNode:(ComFasterxmlJacksonDatabindNodeObjectNode *)other;

/*!
 @brief Method that will construct an ArrayNode and add it as a
  field of this ObjectNode, replacing old value, if any.
 <p>
  <b>NOTE</b>: Unlike all <b>put(...)</b> methods, return value
  is <b>NOT</b> this <code>ObjectNode</code>, but the 
 <b>newly created</b> <code>ArrayNode</code> instance.
 @return Newly constructed ArrayNode (NOT the old value,
    which could be of any type)
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)putArrayWithNSString:(NSString *)fieldName;

/*!
 @return This node (to allow chaining)
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)putNullWithNSString:(NSString *)fieldName;

/*!
 @brief Method that will construct an ObjectNode and add it as a
  field of this ObjectNode, replacing old value, if any.
 <p>
  <b>NOTE</b>: Unlike all <b>put(...)</b> methods, return value
  is <b>NOT</b> this <code>ObjectNode</code>, but the 
 <b>newly created</b> <code>ObjectNode</code> instance.
 @return Newly constructed ObjectNode (NOT the old value,
    which could be of any type)
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)putObjectWithNSString:(NSString *)fieldName;

/*!
 @return This node (to allow chaining)
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)putPOJOWithNSString:(NSString *)fieldName
                                                            withId:(id)pojo;

/*!
 @since 2.6
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)putRawValueWithNSString:(NSString *)fieldName
                           withComFasterxmlJacksonDatabindUtilRawValue:(ComFasterxmlJacksonDatabindUtilRawValue *)raw;

/*!
 @brief Method for removing specified field properties out of
  this ObjectNode.
 @param fieldNames Names of fields to remove
 @return This node after removing entries
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)removeWithJavaUtilCollection:(id<JavaUtilCollection>)fieldNames;

/*!
 @brief Method for removing field entry from this ObjectNode.
 Will return value of the field, if such field existed;
  null if not.
 @return Value of specified field, if it existed; null if not
 */
- (ComFasterxmlJacksonDatabindJsonNode *)removeWithNSString:(NSString *)fieldName;

/*!
 @brief Method for removing all field properties, such that this
  ObjectNode will contain no properties after call.
 @return This node after removing all entries
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)removeAll;

/*!
 @brief Method for replacing value of specific property with passed
  value, and returning value (or null if none).
 @param fieldName Property of which value to replace
 @param value Value to set property to, replacing old value if any
 @return Old value of the property; null if there was no such property
    with value
 @since 2.1
 */
- (ComFasterxmlJacksonDatabindJsonNode *)replaceWithNSString:(NSString *)fieldName
                     withComFasterxmlJacksonDatabindJsonNode:(ComFasterxmlJacksonDatabindJsonNode *)value;

/*!
 @brief Method for removing all field properties out of this ObjectNode 
 <b>except</b> for ones specified in argument.
 @param fieldNames Fields to  <b> retain </b>  in this ObjectNode
 @return This node (to allow call chaining)
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)retain__WithJavaUtilCollection:(id<JavaUtilCollection>)fieldNames;

/*!
 @brief Method for removing all field properties out of this ObjectNode 
 <b>except</b> for ones specified in argument.
 @param fieldNames Fields to  <b> retain </b>  in this ObjectNode
 @return This node (to allow call chaining)
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)retain__WithNSStringArray:(IOSObjectArray *)fieldNames;

/*!
 @brief Method that can be called to serialize this node and
  all of its descendants using specified JSON generator.
 */
- (void)serializeWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
        withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

- (void)serializeWithTypeWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
                withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
            withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer;

/*!
 @brief Method that will set specified field, replacing old value, if any.
 Note that this is identical to <code>JsonNode)</code>,
  except for return value.
 <p>
  NOTE: added to replace those uses of <code>JsonNode)</code>
  where chaining with 'this' is desired.
 @param value to set field to; if null, will be converted    to a 
 <code>NullNode</code>  first  (to remove field entry, call    <code>remove</code>
   instead)
 @return This node after adding/replacing property value (to allow chaining)
 @since 2.1
 */
- (ComFasterxmlJacksonDatabindJsonNode *)setWithNSString:(NSString *)fieldName
                 withComFasterxmlJacksonDatabindJsonNode:(ComFasterxmlJacksonDatabindJsonNode *)value;

/*!
 @brief Method for adding given properties to this object node, overriding
  any existing values for those properties.
 @param properties Properties to add
 @return This node after adding/replacing property values (to allow chaining)
 @since 2.1
 */
- (ComFasterxmlJacksonDatabindJsonNode *)setAllWithJavaUtilMap:(id<JavaUtilMap>)properties;

/*!
 @brief Method for adding all properties of the given Object, overriding
  any existing values for those properties.
 @param other Object of which properties to add to this object
 @return This node after addition (to allow chaining)
 @since 2.1
 */
- (ComFasterxmlJacksonDatabindJsonNode *)setAllWithComFasterxmlJacksonDatabindNodeObjectNode:(ComFasterxmlJacksonDatabindNodeObjectNode *)other;

- (jint)size;

- (NSString *)description;

- (ComFasterxmlJacksonDatabindNodeObjectNode *)withWithNSString:(NSString *)propertyName;

- (ComFasterxmlJacksonDatabindNodeArrayNode *)withArrayWithNSString:(NSString *)propertyName;

/*!
 @brief Method for removing specified field properties out of
  this ObjectNode.
 @param fieldNames Names of fields to remove
 @return This node after removing entries
 @since 2.1
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)withoutWithJavaUtilCollection:(id<JavaUtilCollection>)fieldNames;

/*!
 @brief Method for removing field entry from this ObjectNode, and
  returning instance after removal.
 @return This node after removing entry (if any)
 @since 2.1
 */
- (ComFasterxmlJacksonDatabindJsonNode *)withoutWithNSString:(NSString *)fieldName;

#pragma mark Protected

- (ComFasterxmlJacksonDatabindJsonNode *)_atWithComFasterxmlJacksonCoreJsonPointer:(ComFasterxmlJacksonCoreJsonPointer *)ptr;

/*!
 @since 2.3
 */
- (jboolean)_childrenEqualWithComFasterxmlJacksonDatabindNodeObjectNode:(ComFasterxmlJacksonDatabindNodeObjectNode *)other;

- (ComFasterxmlJacksonDatabindNodeObjectNode *)_putWithNSString:(NSString *)fieldName
                        withComFasterxmlJacksonDatabindJsonNode:(ComFasterxmlJacksonDatabindJsonNode *)value;

#pragma mark Package-Private

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindNodeObjectNode)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindNodeObjectNode, _children_, id<JavaUtilMap>)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindNodeObjectNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_(ComFasterxmlJacksonDatabindNodeObjectNode *self, ComFasterxmlJacksonDatabindNodeJsonNodeFactory *nc);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeObjectNode *new_ComFasterxmlJacksonDatabindNodeObjectNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_(ComFasterxmlJacksonDatabindNodeJsonNodeFactory *nc) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeObjectNode *create_ComFasterxmlJacksonDatabindNodeObjectNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_(ComFasterxmlJacksonDatabindNodeJsonNodeFactory *nc);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindNodeObjectNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_withJavaUtilMap_(ComFasterxmlJacksonDatabindNodeObjectNode *self, ComFasterxmlJacksonDatabindNodeJsonNodeFactory *nc, id<JavaUtilMap> kids);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeObjectNode *new_ComFasterxmlJacksonDatabindNodeObjectNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_withJavaUtilMap_(ComFasterxmlJacksonDatabindNodeJsonNodeFactory *nc, id<JavaUtilMap> kids) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeObjectNode *create_ComFasterxmlJacksonDatabindNodeObjectNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_withJavaUtilMap_(ComFasterxmlJacksonDatabindNodeJsonNodeFactory *nc, id<JavaUtilMap> kids);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindNodeObjectNode)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeObjectNode")
