//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/BasicSerializerFactory.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/annotation/JsonFormat.h"
#include "com/fasterxml/jackson/annotation/JsonIgnoreProperties.h"
#include "com/fasterxml/jackson/annotation/JsonInclude.h"
#include "com/fasterxml/jackson/databind/AnnotationIntrospector.h"
#include "com/fasterxml/jackson/databind/BeanDescription.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/JsonSerializable.h"
#include "com/fasterxml/jackson/databind/JsonSerializer.h"
#include "com/fasterxml/jackson/databind/MapperFeature.h"
#include "com/fasterxml/jackson/databind/SerializationConfig.h"
#include "com/fasterxml/jackson/databind/SerializationFeature.h"
#include "com/fasterxml/jackson/databind/SerializerProvider.h"
#include "com/fasterxml/jackson/databind/annotation/JsonSerialize.h"
#include "com/fasterxml/jackson/databind/cfg/SerializerFactoryConfig.h"
#include "com/fasterxml/jackson/databind/ext/OptionalHandlerFactory.h"
#include "com/fasterxml/jackson/databind/introspect/Annotated.h"
#include "com/fasterxml/jackson/databind/introspect/AnnotatedClass.h"
#include "com/fasterxml/jackson/databind/introspect/AnnotatedMember.h"
#include "com/fasterxml/jackson/databind/introspect/BasicBeanDescription.h"
#include "com/fasterxml/jackson/databind/jsontype/SubtypeResolver.h"
#include "com/fasterxml/jackson/databind/jsontype/TypeResolverBuilder.h"
#include "com/fasterxml/jackson/databind/jsontype/TypeSerializer.h"
#include "com/fasterxml/jackson/databind/ser/BasicSerializerFactory.h"
#include "com/fasterxml/jackson/databind/ser/BeanSerializerModifier.h"
#include "com/fasterxml/jackson/databind/ser/ContainerSerializer.h"
#include "com/fasterxml/jackson/databind/ser/SerializerFactory.h"
#include "com/fasterxml/jackson/databind/ser/Serializers.h"
#include "com/fasterxml/jackson/databind/ser/impl/IndexedListSerializer.h"
#include "com/fasterxml/jackson/databind/ser/impl/IndexedStringListSerializer.h"
#include "com/fasterxml/jackson/databind/ser/impl/IteratorSerializer.h"
#include "com/fasterxml/jackson/databind/ser/impl/MapEntrySerializer.h"
#include "com/fasterxml/jackson/databind/ser/impl/StringArraySerializer.h"
#include "com/fasterxml/jackson/databind/ser/impl/StringCollectionSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/AtomicReferenceSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/BooleanSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/ByteBufferSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/CalendarSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/CollectionSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/DateSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/EnumSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/EnumSetSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/InetAddressSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/InetSocketAddressSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/IterableSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/JsonValueSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/MapSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/NumberSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/NumberSerializers.h"
#include "com/fasterxml/jackson/databind/ser/std/ObjectArraySerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/ReferenceTypeSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/SerializableSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/StdArraySerializers.h"
#include "com/fasterxml/jackson/databind/ser/std/StdDelegatingSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/StdJdkSerializers.h"
#include "com/fasterxml/jackson/databind/ser/std/StdKeySerializers.h"
#include "com/fasterxml/jackson/databind/ser/std/StringSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/TimeZoneSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/ToStringSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/TokenBufferSerializer.h"
#include "com/fasterxml/jackson/databind/type/ArrayType.h"
#include "com/fasterxml/jackson/databind/type/CollectionLikeType.h"
#include "com/fasterxml/jackson/databind/type/CollectionType.h"
#include "com/fasterxml/jackson/databind/type/MapLikeType.h"
#include "com/fasterxml/jackson/databind/type/MapType.h"
#include "com/fasterxml/jackson/databind/type/ReferenceType.h"
#include "com/fasterxml/jackson/databind/type/TypeFactory.h"
#include "com/fasterxml/jackson/databind/util/ArrayBuilders.h"
#include "com/fasterxml/jackson/databind/util/BeanUtil.h"
#include "com/fasterxml/jackson/databind/util/ClassUtil.h"
#include "com/fasterxml/jackson/databind/util/Converter.h"
#include "com/fasterxml/jackson/databind/util/TokenBuffer.h"
#include "java/lang/Boolean.h"
#include "java/lang/CharSequence.h"
#include "java/lang/Character.h"
#include "java/lang/Enum.h"
#include "java/lang/Iterable.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/reflect/Member.h"
#include "java/math/BigDecimal.h"
#include "java/math/BigInteger.h"
#include "java/net/InetAddress.h"
#include "java/net/InetSocketAddress.h"
#include "java/nio/ByteBuffer.h"
#include "java/nio/charset/Charset.h"
#include "java/util/Calendar.h"
#include "java/util/Collection.h"
#include "java/util/Date.h"
#include "java/util/EnumSet.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"
#include "java/util/RandomAccess.h"
#include "java/util/Set.h"
#include "java/util/TimeZone.h"
#include "java/util/concurrent/atomic/AtomicReference.h"

__attribute__((unused)) static ComFasterxmlJacksonDatabindJsonSerializer *ComFasterxmlJacksonDatabindSerBasicSerializerFactory_findSerializerByAnnotationsWithComFasterxmlJacksonDatabindSerializerProvider_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindBeanDescription_(ComFasterxmlJacksonDatabindSerBasicSerializerFactory *self, ComFasterxmlJacksonDatabindSerializerProvider *prov, ComFasterxmlJacksonDatabindJavaType *type, ComFasterxmlJacksonDatabindBeanDescription *beanDesc);

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindSerBasicSerializerFactory)

JavaUtilHashMap *ComFasterxmlJacksonDatabindSerBasicSerializerFactory__concrete;
JavaUtilHashMap *ComFasterxmlJacksonDatabindSerBasicSerializerFactory__concreteLazy;

@implementation ComFasterxmlJacksonDatabindSerBasicSerializerFactory

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindCfgSerializerFactoryConfig:(ComFasterxmlJacksonDatabindCfgSerializerFactoryConfig *)config {
  ComFasterxmlJacksonDatabindSerBasicSerializerFactory_initWithComFasterxmlJacksonDatabindCfgSerializerFactoryConfig_(self, config);
  return self;
}

- (ComFasterxmlJacksonDatabindCfgSerializerFactoryConfig *)getFactoryConfig {
  return _factoryConfig_;
}

- (ComFasterxmlJacksonDatabindSerSerializerFactory *)withConfigWithComFasterxmlJacksonDatabindCfgSerializerFactoryConfig:(ComFasterxmlJacksonDatabindCfgSerializerFactoryConfig *)config {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindSerSerializerFactory *)withAdditionalSerializersWithComFasterxmlJacksonDatabindSerSerializers:(id<ComFasterxmlJacksonDatabindSerSerializers>)additional {
  return [self withConfigWithComFasterxmlJacksonDatabindCfgSerializerFactoryConfig:[((ComFasterxmlJacksonDatabindCfgSerializerFactoryConfig *) nil_chk(_factoryConfig_)) withAdditionalSerializersWithComFasterxmlJacksonDatabindSerSerializers:additional]];
}

- (ComFasterxmlJacksonDatabindSerSerializerFactory *)withAdditionalKeySerializersWithComFasterxmlJacksonDatabindSerSerializers:(id<ComFasterxmlJacksonDatabindSerSerializers>)additional {
  return [self withConfigWithComFasterxmlJacksonDatabindCfgSerializerFactoryConfig:[((ComFasterxmlJacksonDatabindCfgSerializerFactoryConfig *) nil_chk(_factoryConfig_)) withAdditionalKeySerializersWithComFasterxmlJacksonDatabindSerSerializers:additional]];
}

- (ComFasterxmlJacksonDatabindSerSerializerFactory *)withSerializerModifierWithComFasterxmlJacksonDatabindSerBeanSerializerModifier:(ComFasterxmlJacksonDatabindSerBeanSerializerModifier *)modifier {
  return [self withConfigWithComFasterxmlJacksonDatabindCfgSerializerFactoryConfig:[((ComFasterxmlJacksonDatabindCfgSerializerFactoryConfig *) nil_chk(_factoryConfig_)) withSerializerModifierWithComFasterxmlJacksonDatabindSerBeanSerializerModifier:modifier]];
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)createSerializerWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                                         withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)createKeySerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                             withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)keyType
                                                                       withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)defaultImpl {
  ComFasterxmlJacksonDatabindBeanDescription *beanDesc = [((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(config)) introspectClassAnnotationsWithIOSClass:[((ComFasterxmlJacksonDatabindJavaType *) nil_chk(keyType)) getRawClass]];
  ComFasterxmlJacksonDatabindJsonSerializer *ser = nil;
  if ([((ComFasterxmlJacksonDatabindCfgSerializerFactoryConfig *) nil_chk(_factoryConfig_)) hasKeySerializers]) {
    for (id<ComFasterxmlJacksonDatabindSerSerializers> __strong serializers in nil_chk([_factoryConfig_ keySerializers])) {
      ser = [((id<ComFasterxmlJacksonDatabindSerSerializers>) nil_chk(serializers)) findSerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindJavaType:keyType withComFasterxmlJacksonDatabindBeanDescription:beanDesc];
      if (ser != nil) {
        break;
      }
    }
  }
  if (ser == nil) {
    ser = defaultImpl;
    if (ser == nil) {
      ser = ComFasterxmlJacksonDatabindSerStdStdKeySerializers_getStdKeySerializerWithComFasterxmlJacksonDatabindSerializationConfig_withIOSClass_withBoolean_(config, [keyType getRawClass], false);
      if (ser == nil) {
        beanDesc = [config introspectWithComFasterxmlJacksonDatabindJavaType:keyType];
        ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *am = [((ComFasterxmlJacksonDatabindBeanDescription *) nil_chk(beanDesc)) findJsonValueAccessor];
        if (am != nil) {
          IOSClass *rawType = [am getRawType];
          ComFasterxmlJacksonDatabindJsonSerializer *delegate = ComFasterxmlJacksonDatabindSerStdStdKeySerializers_getStdKeySerializerWithComFasterxmlJacksonDatabindSerializationConfig_withIOSClass_withBoolean_(config, rawType, true);
          if ([config canOverrideAccessModifiers]) {
            ComFasterxmlJacksonDatabindUtilClassUtil_checkAndFixAccessWithJavaLangReflectMember_withBoolean_([am getMember], [config isEnabledWithComFasterxmlJacksonDatabindMapperFeature:JreLoadEnum(ComFasterxmlJacksonDatabindMapperFeature, OVERRIDE_PUBLIC_ACCESS_MODIFIERS)]);
          }
          ser = create_ComFasterxmlJacksonDatabindSerStdJsonValueSerializer_initWithComFasterxmlJacksonDatabindIntrospectAnnotatedMember_withComFasterxmlJacksonDatabindJsonSerializer_(am, delegate);
        }
        else {
          ser = ComFasterxmlJacksonDatabindSerStdStdKeySerializers_getFallbackKeySerializerWithComFasterxmlJacksonDatabindSerializationConfig_withIOSClass_(config, [keyType getRawClass]);
        }
      }
    }
  }
  if ([_factoryConfig_ hasSerializerModifiers]) {
    for (ComFasterxmlJacksonDatabindSerBeanSerializerModifier * __strong mod in nil_chk([_factoryConfig_ serializerModifiers])) {
      ser = [((ComFasterxmlJacksonDatabindSerBeanSerializerModifier *) nil_chk(mod)) modifyKeySerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindJavaType:keyType withComFasterxmlJacksonDatabindBeanDescription:beanDesc withComFasterxmlJacksonDatabindJsonSerializer:ser];
    }
  }
  return ser;
}

- (ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)createTypeSerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                                      withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)baseType {
  ComFasterxmlJacksonDatabindBeanDescription *bean = [((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(config)) introspectClassAnnotationsWithIOSClass:[((ComFasterxmlJacksonDatabindJavaType *) nil_chk(baseType)) getRawClass]];
  ComFasterxmlJacksonDatabindIntrospectAnnotatedClass *ac = [((ComFasterxmlJacksonDatabindBeanDescription *) nil_chk(bean)) getClassInfo];
  ComFasterxmlJacksonDatabindAnnotationIntrospector *ai = [config getAnnotationIntrospector];
  id<ComFasterxmlJacksonDatabindJsontypeTypeResolverBuilder> b = [((ComFasterxmlJacksonDatabindAnnotationIntrospector *) nil_chk(ai)) findTypeResolverWithComFasterxmlJacksonDatabindCfgMapperConfig:config withComFasterxmlJacksonDatabindIntrospectAnnotatedClass:ac withComFasterxmlJacksonDatabindJavaType:baseType];
  id<JavaUtilCollection> subtypes = nil;
  if (b == nil) {
    b = [config getDefaultTyperWithComFasterxmlJacksonDatabindJavaType:baseType];
  }
  else {
    subtypes = [((ComFasterxmlJacksonDatabindJsontypeSubtypeResolver *) nil_chk([config getSubtypeResolver])) collectAndResolveSubtypesByClassWithComFasterxmlJacksonDatabindCfgMapperConfig:config withComFasterxmlJacksonDatabindIntrospectAnnotatedClass:ac];
  }
  if (b == nil) {
    return nil;
  }
  return [b buildTypeSerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindJavaType:baseType withJavaUtilCollection:subtypes];
}

- (id<JavaLangIterable>)customSerializers {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)findSerializerByLookupWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                          withComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                              withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                                                 withBoolean:(jboolean)staticTyping {
  IOSClass *raw = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(type)) getRawClass];
  NSString *clsName = [((IOSClass *) nil_chk(raw)) getName];
  ComFasterxmlJacksonDatabindJsonSerializer *ser = [((JavaUtilHashMap *) nil_chk(ComFasterxmlJacksonDatabindSerBasicSerializerFactory__concrete)) getWithId:clsName];
  if (ser == nil) {
    IOSClass *serClass = [((JavaUtilHashMap *) nil_chk(ComFasterxmlJacksonDatabindSerBasicSerializerFactory__concreteLazy)) getWithId:clsName];
    if (serClass != nil) {
      return ComFasterxmlJacksonDatabindUtilClassUtil_createInstanceWithIOSClass_withBoolean_(serClass, false);
    }
  }
  return ser;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)findSerializerByAnnotationsWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                                                    withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                                             withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc {
  return ComFasterxmlJacksonDatabindSerBasicSerializerFactory_findSerializerByAnnotationsWithComFasterxmlJacksonDatabindSerializerProvider_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindBeanDescription_(self, prov, type, beanDesc);
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)findSerializerByPrimaryTypeWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                                                    withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                                             withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                                                                withBoolean:(jboolean)staticTyping {
  IOSClass *raw = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(type)) getRawClass];
  ComFasterxmlJacksonDatabindJsonSerializer *ser = [self findOptionalStdSerializerWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindJavaType:type withComFasterxmlJacksonDatabindBeanDescription:beanDesc withBoolean:staticTyping];
  if (ser != nil) {
    return ser;
  }
  if ([JavaUtilCalendar_class_() isAssignableFrom:raw]) {
    return JreLoadStatic(ComFasterxmlJacksonDatabindSerStdCalendarSerializer, instance);
  }
  if ([JavaUtilDate_class_() isAssignableFrom:raw]) {
    return JreLoadStatic(ComFasterxmlJacksonDatabindSerStdDateSerializer, instance);
  }
  if ([JavaUtilMap_Entry_class_() isAssignableFrom:raw]) {
    ComFasterxmlJacksonDatabindJavaType *mapEntryType = [type findSuperTypeWithIOSClass:JavaUtilMap_Entry_class_()];
    ComFasterxmlJacksonDatabindJavaType *kt = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(mapEntryType)) containedTypeOrUnknownWithInt:0];
    ComFasterxmlJacksonDatabindJavaType *vt = [mapEntryType containedTypeOrUnknownWithInt:1];
    return [self buildMapEntrySerializerWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindJavaType:type withComFasterxmlJacksonDatabindBeanDescription:beanDesc withBoolean:staticTyping withComFasterxmlJacksonDatabindJavaType:kt withComFasterxmlJacksonDatabindJavaType:vt];
  }
  if ([JavaNioByteBuffer_class_() isAssignableFrom:raw]) {
    return create_ComFasterxmlJacksonDatabindSerStdByteBufferSerializer_init();
  }
  if ([JavaNetInetAddress_class_() isAssignableFrom:raw]) {
    return create_ComFasterxmlJacksonDatabindSerStdInetAddressSerializer_init();
  }
  if ([JavaNetInetSocketAddress_class_() isAssignableFrom:raw]) {
    return create_ComFasterxmlJacksonDatabindSerStdInetSocketAddressSerializer_init();
  }
  if ([JavaUtilTimeZone_class_() isAssignableFrom:raw]) {
    return create_ComFasterxmlJacksonDatabindSerStdTimeZoneSerializer_init();
  }
  if ([JavaNioCharsetCharset_class_() isAssignableFrom:raw]) {
    return JreLoadStatic(ComFasterxmlJacksonDatabindSerStdToStringSerializer, instance);
  }
  if ([NSNumber_class_() isAssignableFrom:raw]) {
    ComFasterxmlJacksonAnnotationJsonFormat_Value *format = [((ComFasterxmlJacksonDatabindBeanDescription *) nil_chk(beanDesc)) findExpectedFormatWithComFasterxmlJacksonAnnotationJsonFormat_Value:nil];
    if (format != nil) {
      switch ([[format getShape] ordinal]) {
        case ComFasterxmlJacksonAnnotationJsonFormat_Shape_Enum_STRING:
        return JreLoadStatic(ComFasterxmlJacksonDatabindSerStdToStringSerializer, instance);
        case ComFasterxmlJacksonAnnotationJsonFormat_Shape_Enum_OBJECT:
        case ComFasterxmlJacksonAnnotationJsonFormat_Shape_Enum_ARRAY:
        return nil;
        default:
        ;
      }
    }
    return JreLoadStatic(ComFasterxmlJacksonDatabindSerStdNumberSerializer, instance);
  }
  if ([JavaLangEnum_class_() isAssignableFrom:raw]) {
    return [self buildEnumSerializerWithComFasterxmlJacksonDatabindSerializationConfig:[((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(prov)) getConfig] withComFasterxmlJacksonDatabindJavaType:type withComFasterxmlJacksonDatabindBeanDescription:beanDesc];
  }
  return nil;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)findOptionalStdSerializerWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                                                  withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                                           withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                                                              withBoolean:(jboolean)staticTyping {
  return [((ComFasterxmlJacksonDatabindExtOptionalHandlerFactory *) nil_chk(JreLoadStatic(ComFasterxmlJacksonDatabindExtOptionalHandlerFactory, instance))) findSerializerWithComFasterxmlJacksonDatabindSerializationConfig:[((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(prov)) getConfig] withComFasterxmlJacksonDatabindJavaType:type withComFasterxmlJacksonDatabindBeanDescription:beanDesc];
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)findSerializerByAddonTypeWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                                   withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)javaType
                                                                            withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                                                               withBoolean:(jboolean)staticTyping {
  IOSClass *rawType = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(javaType)) getRawClass];
  if ([JavaUtilIterator_class_() isAssignableFrom:rawType]) {
    IOSObjectArray *params = [((ComFasterxmlJacksonDatabindTypeTypeFactory *) nil_chk([((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(config)) getTypeFactory])) findTypeParametersWithComFasterxmlJacksonDatabindJavaType:javaType withIOSClass:JavaUtilIterator_class_()];
    ComFasterxmlJacksonDatabindJavaType *vt = (params == nil || params->size_ != 1) ? ComFasterxmlJacksonDatabindTypeTypeFactory_unknownType() : IOSObjectArray_Get(nil_chk(params), 0);
    return [self buildIteratorSerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindJavaType:javaType withComFasterxmlJacksonDatabindBeanDescription:beanDesc withBoolean:staticTyping withComFasterxmlJacksonDatabindJavaType:vt];
  }
  if ([JavaLangIterable_class_() isAssignableFrom:rawType]) {
    IOSObjectArray *params = [((ComFasterxmlJacksonDatabindTypeTypeFactory *) nil_chk([((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(config)) getTypeFactory])) findTypeParametersWithComFasterxmlJacksonDatabindJavaType:javaType withIOSClass:JavaLangIterable_class_()];
    ComFasterxmlJacksonDatabindJavaType *vt = (params == nil || params->size_ != 1) ? ComFasterxmlJacksonDatabindTypeTypeFactory_unknownType() : IOSObjectArray_Get(nil_chk(params), 0);
    return [self buildIterableSerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindJavaType:javaType withComFasterxmlJacksonDatabindBeanDescription:beanDesc withBoolean:staticTyping withComFasterxmlJacksonDatabindJavaType:vt];
  }
  if ([JavaLangCharSequence_class_() isAssignableFrom:rawType]) {
    return JreLoadStatic(ComFasterxmlJacksonDatabindSerStdToStringSerializer, instance);
  }
  return nil;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)findSerializerFromAnnotationWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                                          withComFasterxmlJacksonDatabindIntrospectAnnotated:(ComFasterxmlJacksonDatabindIntrospectAnnotated *)a {
  id serDef = [((ComFasterxmlJacksonDatabindAnnotationIntrospector *) nil_chk([((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(prov)) getAnnotationIntrospector])) findSerializerWithComFasterxmlJacksonDatabindIntrospectAnnotated:a];
  if (serDef == nil) {
    return nil;
  }
  ComFasterxmlJacksonDatabindJsonSerializer *ser = [prov serializerInstanceWithComFasterxmlJacksonDatabindIntrospectAnnotated:a withId:serDef];
  return [self findConvertingSerializerWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindIntrospectAnnotated:a withComFasterxmlJacksonDatabindJsonSerializer:ser];
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)findConvertingSerializerWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                                      withComFasterxmlJacksonDatabindIntrospectAnnotated:(ComFasterxmlJacksonDatabindIntrospectAnnotated *)a
                                                                           withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)ser {
  id<ComFasterxmlJacksonDatabindUtilConverter> conv = [self findConverterWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindIntrospectAnnotated:a];
  if (conv == nil) {
    return ser;
  }
  ComFasterxmlJacksonDatabindJavaType *delegateType = [conv getOutputTypeWithComFasterxmlJacksonDatabindTypeTypeFactory:[((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(prov)) getTypeFactory]];
  return create_ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer_initWithComFasterxmlJacksonDatabindUtilConverter_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJsonSerializer_(conv, delegateType, ser);
}

- (id<ComFasterxmlJacksonDatabindUtilConverter>)findConverterWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                            withComFasterxmlJacksonDatabindIntrospectAnnotated:(ComFasterxmlJacksonDatabindIntrospectAnnotated *)a {
  id convDef = [((ComFasterxmlJacksonDatabindAnnotationIntrospector *) nil_chk([((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(prov)) getAnnotationIntrospector])) findSerializationConverterWithComFasterxmlJacksonDatabindIntrospectAnnotated:a];
  if (convDef == nil) {
    return nil;
  }
  return [prov converterInstanceWithComFasterxmlJacksonDatabindIntrospectAnnotated:a withId:convDef];
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)buildContainerSerializerWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                                          withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                                                             withBoolean:(jboolean)staticTyping {
  ComFasterxmlJacksonDatabindSerializationConfig *config = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(prov)) getConfig];
  if (!staticTyping && [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(type)) useStaticType]) {
    if (![((ComFasterxmlJacksonDatabindJavaType *) nil_chk(type)) isContainerType] || ![((ComFasterxmlJacksonDatabindJavaType *) nil_chk([type getContentType])) isJavaLangObject]) {
      staticTyping = true;
    }
  }
  ComFasterxmlJacksonDatabindJavaType *elementType = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(type)) getContentType];
  ComFasterxmlJacksonDatabindJsontypeTypeSerializer *elementTypeSerializer = [self createTypeSerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindJavaType:elementType];
  if (elementTypeSerializer != nil) {
    staticTyping = false;
  }
  ComFasterxmlJacksonDatabindJsonSerializer *elementValueSerializer = [self _findContentSerializerWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindIntrospectAnnotated:[((ComFasterxmlJacksonDatabindBeanDescription *) nil_chk(beanDesc)) getClassInfo]];
  if ([type isMapLikeType]) {
    ComFasterxmlJacksonDatabindTypeMapLikeType *mlt = (ComFasterxmlJacksonDatabindTypeMapLikeType *) cast_chk(type, [ComFasterxmlJacksonDatabindTypeMapLikeType class]);
    ComFasterxmlJacksonDatabindJsonSerializer *keySerializer = [self _findKeySerializerWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindIntrospectAnnotated:[beanDesc getClassInfo]];
    if ([mlt isTrueMapType]) {
      return [self buildMapSerializerWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindTypeMapType:(ComFasterxmlJacksonDatabindTypeMapType *) cast_chk(mlt, [ComFasterxmlJacksonDatabindTypeMapType class]) withComFasterxmlJacksonDatabindBeanDescription:beanDesc withBoolean:staticTyping withComFasterxmlJacksonDatabindJsonSerializer:keySerializer withComFasterxmlJacksonDatabindJsontypeTypeSerializer:elementTypeSerializer withComFasterxmlJacksonDatabindJsonSerializer:elementValueSerializer];
    }
    ComFasterxmlJacksonDatabindJsonSerializer *ser = nil;
    ComFasterxmlJacksonDatabindTypeMapLikeType *mlType = (ComFasterxmlJacksonDatabindTypeMapLikeType *) cast_chk(type, [ComFasterxmlJacksonDatabindTypeMapLikeType class]);
    for (id<ComFasterxmlJacksonDatabindSerSerializers> __strong serializers in nil_chk([self customSerializers])) {
      ser = [((id<ComFasterxmlJacksonDatabindSerSerializers>) nil_chk(serializers)) findMapLikeSerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindTypeMapLikeType:mlType withComFasterxmlJacksonDatabindBeanDescription:beanDesc withComFasterxmlJacksonDatabindJsonSerializer:keySerializer withComFasterxmlJacksonDatabindJsontypeTypeSerializer:elementTypeSerializer withComFasterxmlJacksonDatabindJsonSerializer:elementValueSerializer];
      if (ser != nil) {
        break;
      }
    }
    if (ser == nil) {
      ser = ComFasterxmlJacksonDatabindSerBasicSerializerFactory_findSerializerByAnnotationsWithComFasterxmlJacksonDatabindSerializerProvider_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindBeanDescription_(self, prov, type, beanDesc);
    }
    if (ser != nil) {
      if ([((ComFasterxmlJacksonDatabindCfgSerializerFactoryConfig *) nil_chk(_factoryConfig_)) hasSerializerModifiers]) {
        for (ComFasterxmlJacksonDatabindSerBeanSerializerModifier * __strong mod in nil_chk([_factoryConfig_ serializerModifiers])) {
          ser = [((ComFasterxmlJacksonDatabindSerBeanSerializerModifier *) nil_chk(mod)) modifyMapLikeSerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindTypeMapLikeType:mlType withComFasterxmlJacksonDatabindBeanDescription:beanDesc withComFasterxmlJacksonDatabindJsonSerializer:ser];
        }
      }
    }
    return ser;
  }
  if ([type isCollectionLikeType]) {
    ComFasterxmlJacksonDatabindTypeCollectionLikeType *clt = (ComFasterxmlJacksonDatabindTypeCollectionLikeType *) cast_chk(type, [ComFasterxmlJacksonDatabindTypeCollectionLikeType class]);
    if ([clt isTrueCollectionType]) {
      return [self buildCollectionSerializerWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindTypeCollectionType:(ComFasterxmlJacksonDatabindTypeCollectionType *) cast_chk(clt, [ComFasterxmlJacksonDatabindTypeCollectionType class]) withComFasterxmlJacksonDatabindBeanDescription:beanDesc withBoolean:staticTyping withComFasterxmlJacksonDatabindJsontypeTypeSerializer:elementTypeSerializer withComFasterxmlJacksonDatabindJsonSerializer:elementValueSerializer];
    }
    ComFasterxmlJacksonDatabindJsonSerializer *ser = nil;
    ComFasterxmlJacksonDatabindTypeCollectionLikeType *clType = (ComFasterxmlJacksonDatabindTypeCollectionLikeType *) cast_chk(type, [ComFasterxmlJacksonDatabindTypeCollectionLikeType class]);
    for (id<ComFasterxmlJacksonDatabindSerSerializers> __strong serializers in nil_chk([self customSerializers])) {
      ser = [((id<ComFasterxmlJacksonDatabindSerSerializers>) nil_chk(serializers)) findCollectionLikeSerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindTypeCollectionLikeType:clType withComFasterxmlJacksonDatabindBeanDescription:beanDesc withComFasterxmlJacksonDatabindJsontypeTypeSerializer:elementTypeSerializer withComFasterxmlJacksonDatabindJsonSerializer:elementValueSerializer];
      if (ser != nil) {
        break;
      }
    }
    if (ser == nil) {
      ser = ComFasterxmlJacksonDatabindSerBasicSerializerFactory_findSerializerByAnnotationsWithComFasterxmlJacksonDatabindSerializerProvider_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindBeanDescription_(self, prov, type, beanDesc);
    }
    if (ser != nil) {
      if ([((ComFasterxmlJacksonDatabindCfgSerializerFactoryConfig *) nil_chk(_factoryConfig_)) hasSerializerModifiers]) {
        for (ComFasterxmlJacksonDatabindSerBeanSerializerModifier * __strong mod in nil_chk([_factoryConfig_ serializerModifiers])) {
          ser = [((ComFasterxmlJacksonDatabindSerBeanSerializerModifier *) nil_chk(mod)) modifyCollectionLikeSerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindTypeCollectionLikeType:clType withComFasterxmlJacksonDatabindBeanDescription:beanDesc withComFasterxmlJacksonDatabindJsonSerializer:ser];
        }
      }
    }
    return ser;
  }
  if ([type isArrayType]) {
    return [self buildArraySerializerWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindTypeArrayType:(ComFasterxmlJacksonDatabindTypeArrayType *) cast_chk(type, [ComFasterxmlJacksonDatabindTypeArrayType class]) withComFasterxmlJacksonDatabindBeanDescription:beanDesc withBoolean:staticTyping withComFasterxmlJacksonDatabindJsontypeTypeSerializer:elementTypeSerializer withComFasterxmlJacksonDatabindJsonSerializer:elementValueSerializer];
  }
  return nil;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)buildCollectionSerializerWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                                        withComFasterxmlJacksonDatabindTypeCollectionType:(ComFasterxmlJacksonDatabindTypeCollectionType *)type
                                                                           withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                                                              withBoolean:(jboolean)staticTyping
                                                                    withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)elementTypeSerializer
                                                                            withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)elementValueSerializer {
  ComFasterxmlJacksonDatabindSerializationConfig *config = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(prov)) getConfig];
  ComFasterxmlJacksonDatabindJsonSerializer *ser = nil;
  for (id<ComFasterxmlJacksonDatabindSerSerializers> __strong serializers in nil_chk([self customSerializers])) {
    ser = [((id<ComFasterxmlJacksonDatabindSerSerializers>) nil_chk(serializers)) findCollectionSerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindTypeCollectionType:type withComFasterxmlJacksonDatabindBeanDescription:beanDesc withComFasterxmlJacksonDatabindJsontypeTypeSerializer:elementTypeSerializer withComFasterxmlJacksonDatabindJsonSerializer:elementValueSerializer];
    if (ser != nil) {
      break;
    }
  }
  if (ser == nil) {
    ser = ComFasterxmlJacksonDatabindSerBasicSerializerFactory_findSerializerByAnnotationsWithComFasterxmlJacksonDatabindSerializerProvider_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindBeanDescription_(self, prov, type, beanDesc);
    if (ser == nil) {
      ComFasterxmlJacksonAnnotationJsonFormat_Value *format = [((ComFasterxmlJacksonDatabindBeanDescription *) nil_chk(beanDesc)) findExpectedFormatWithComFasterxmlJacksonAnnotationJsonFormat_Value:nil];
      if ((format != nil) && [((ComFasterxmlJacksonAnnotationJsonFormat_Value *) nil_chk(format)) getShape] == JreLoadEnum(ComFasterxmlJacksonAnnotationJsonFormat_Shape, OBJECT)) {
        return nil;
      }
      IOSClass *raw = [((ComFasterxmlJacksonDatabindTypeCollectionType *) nil_chk(type)) getRawClass];
      if ([JavaUtilEnumSet_class_() isAssignableFrom:raw]) {
        ComFasterxmlJacksonDatabindJavaType *enumType = [type getContentType];
        if (![((ComFasterxmlJacksonDatabindJavaType *) nil_chk(enumType)) isEnumType]) {
          enumType = nil;
        }
        ser = [self buildEnumSetSerializerWithComFasterxmlJacksonDatabindJavaType:enumType];
      }
      else {
        IOSClass *elementRaw = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk([type getContentType])) getRawClass];
        if ([self isIndexedListWithIOSClass:raw]) {
          if (elementRaw == NSString_class_()) {
            if (ComFasterxmlJacksonDatabindUtilClassUtil_isJacksonStdImplWithId_(elementValueSerializer)) {
              ser = JreLoadStatic(ComFasterxmlJacksonDatabindSerImplIndexedStringListSerializer, instance);
            }
          }
          else {
            ser = [self buildIndexedListSerializerWithComFasterxmlJacksonDatabindJavaType:[type getContentType] withBoolean:staticTyping withComFasterxmlJacksonDatabindJsontypeTypeSerializer:elementTypeSerializer withComFasterxmlJacksonDatabindJsonSerializer:elementValueSerializer];
          }
        }
        else if (elementRaw == NSString_class_()) {
          if (ComFasterxmlJacksonDatabindUtilClassUtil_isJacksonStdImplWithId_(elementValueSerializer)) {
            ser = JreLoadStatic(ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer, instance);
          }
        }
        if (ser == nil) {
          ser = [self buildCollectionSerializerWithComFasterxmlJacksonDatabindJavaType:[type getContentType] withBoolean:staticTyping withComFasterxmlJacksonDatabindJsontypeTypeSerializer:elementTypeSerializer withComFasterxmlJacksonDatabindJsonSerializer:elementValueSerializer];
        }
      }
    }
  }
  if ([((ComFasterxmlJacksonDatabindCfgSerializerFactoryConfig *) nil_chk(_factoryConfig_)) hasSerializerModifiers]) {
    for (ComFasterxmlJacksonDatabindSerBeanSerializerModifier * __strong mod in nil_chk([_factoryConfig_ serializerModifiers])) {
      ser = [((ComFasterxmlJacksonDatabindSerBeanSerializerModifier *) nil_chk(mod)) modifyCollectionSerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindTypeCollectionType:type withComFasterxmlJacksonDatabindBeanDescription:beanDesc withComFasterxmlJacksonDatabindJsonSerializer:ser];
    }
  }
  return ser;
}

- (jboolean)isIndexedListWithIOSClass:(IOSClass *)cls {
  return [JavaUtilRandomAccess_class_() isAssignableFrom:cls];
}

- (ComFasterxmlJacksonDatabindSerContainerSerializer *)buildIndexedListSerializerWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)elemType
                                                                                                             withBoolean:(jboolean)staticTyping
                                                                   withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)vts
                                                                           withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)valueSerializer {
  return create_ComFasterxmlJacksonDatabindSerImplIndexedListSerializer_initWithComFasterxmlJacksonDatabindJavaType_withBoolean_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withComFasterxmlJacksonDatabindJsonSerializer_(elemType, staticTyping, vts, valueSerializer);
}

- (ComFasterxmlJacksonDatabindSerContainerSerializer *)buildCollectionSerializerWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)elemType
                                                                                                            withBoolean:(jboolean)staticTyping
                                                                  withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)vts
                                                                          withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)valueSerializer {
  return create_ComFasterxmlJacksonDatabindSerStdCollectionSerializer_initWithComFasterxmlJacksonDatabindJavaType_withBoolean_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withComFasterxmlJacksonDatabindJsonSerializer_(elemType, staticTyping, vts, valueSerializer);
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)buildEnumSetSerializerWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)enumType {
  return create_ComFasterxmlJacksonDatabindSerStdEnumSetSerializer_initWithComFasterxmlJacksonDatabindJavaType_(enumType);
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)buildMapSerializerWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                                        withComFasterxmlJacksonDatabindTypeMapType:(ComFasterxmlJacksonDatabindTypeMapType *)type
                                                                    withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                                                       withBoolean:(jboolean)staticTyping
                                                                     withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)keySerializer
                                                             withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)elementTypeSerializer
                                                                     withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)elementValueSerializer {
  ComFasterxmlJacksonAnnotationJsonFormat_Value *format = [((ComFasterxmlJacksonDatabindBeanDescription *) nil_chk(beanDesc)) findExpectedFormatWithComFasterxmlJacksonAnnotationJsonFormat_Value:nil];
  if ((format != nil) && [((ComFasterxmlJacksonAnnotationJsonFormat_Value *) nil_chk(format)) getShape] == JreLoadEnum(ComFasterxmlJacksonAnnotationJsonFormat_Shape, OBJECT)) {
    return nil;
  }
  ComFasterxmlJacksonDatabindJsonSerializer *ser = nil;
  ComFasterxmlJacksonDatabindSerializationConfig *config = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(prov)) getConfig];
  for (id<ComFasterxmlJacksonDatabindSerSerializers> __strong serializers in nil_chk([self customSerializers])) {
    ser = [((id<ComFasterxmlJacksonDatabindSerSerializers>) nil_chk(serializers)) findMapSerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindTypeMapType:type withComFasterxmlJacksonDatabindBeanDescription:beanDesc withComFasterxmlJacksonDatabindJsonSerializer:keySerializer withComFasterxmlJacksonDatabindJsontypeTypeSerializer:elementTypeSerializer withComFasterxmlJacksonDatabindJsonSerializer:elementValueSerializer];
    if (ser != nil) {
      break;
    }
  }
  if (ser == nil) {
    ser = ComFasterxmlJacksonDatabindSerBasicSerializerFactory_findSerializerByAnnotationsWithComFasterxmlJacksonDatabindSerializerProvider_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindBeanDescription_(self, prov, type, beanDesc);
    if (ser == nil) {
      id filterId = [self findFilterIdWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindBeanDescription:beanDesc];
      ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *ignorals = [((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(config)) getDefaultPropertyIgnoralsWithIOSClass:JavaUtilMap_class_() withComFasterxmlJacksonDatabindIntrospectAnnotatedClass:[beanDesc getClassInfo]];
      id<JavaUtilSet> ignored = (ignorals == nil) ? nil : [((ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *) nil_chk(ignorals)) findIgnoredForSerialization];
      ComFasterxmlJacksonDatabindSerStdMapSerializer *mapSer = ComFasterxmlJacksonDatabindSerStdMapSerializer_constructWithJavaUtilSet_withComFasterxmlJacksonDatabindJavaType_withBoolean_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withId_(ignored, type, staticTyping, elementTypeSerializer, keySerializer, elementValueSerializer, filterId);
      ser = [self _checkMapContentInclusionWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindBeanDescription:beanDesc withComFasterxmlJacksonDatabindSerStdMapSerializer:mapSer];
    }
  }
  if ([((ComFasterxmlJacksonDatabindCfgSerializerFactoryConfig *) nil_chk(_factoryConfig_)) hasSerializerModifiers]) {
    for (ComFasterxmlJacksonDatabindSerBeanSerializerModifier * __strong mod in nil_chk([_factoryConfig_ serializerModifiers])) {
      ser = [((ComFasterxmlJacksonDatabindSerBeanSerializerModifier *) nil_chk(mod)) modifyMapSerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindTypeMapType:type withComFasterxmlJacksonDatabindBeanDescription:beanDesc withComFasterxmlJacksonDatabindJsonSerializer:ser];
    }
  }
  return ser;
}

- (ComFasterxmlJacksonDatabindSerStdMapSerializer *)_checkMapContentInclusionWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                                                withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                            withComFasterxmlJacksonDatabindSerStdMapSerializer:(ComFasterxmlJacksonDatabindSerStdMapSerializer *)mapSer {
  ComFasterxmlJacksonDatabindJavaType *contentType = [((ComFasterxmlJacksonDatabindSerStdMapSerializer *) nil_chk(mapSer)) getContentType];
  ComFasterxmlJacksonAnnotationJsonInclude_Value *inclV = [self _findInclusionWithContentWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindBeanDescription:beanDesc withComFasterxmlJacksonDatabindJavaType:contentType withIOSClass:JavaUtilMap_class_()];
  ComFasterxmlJacksonAnnotationJsonInclude_Include *incl = (inclV == nil) ? JreLoadEnum(ComFasterxmlJacksonAnnotationJsonInclude_Include, USE_DEFAULTS) : [((ComFasterxmlJacksonAnnotationJsonInclude_Value *) nil_chk(inclV)) getContentInclusion];
  if (incl == JreLoadEnum(ComFasterxmlJacksonAnnotationJsonInclude_Include, USE_DEFAULTS) || incl == JreLoadEnum(ComFasterxmlJacksonAnnotationJsonInclude_Include, ALWAYS)) {
    if (![((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(prov)) isEnabledWithComFasterxmlJacksonDatabindSerializationFeature:JreLoadEnum(ComFasterxmlJacksonDatabindSerializationFeature, WRITE_NULL_MAP_VALUES)]) {
      return [mapSer withContentInclusionWithId:nil withBoolean:true];
    }
    return mapSer;
  }
  id valueToSuppress;
  jboolean suppressNulls = true;
  switch ([incl ordinal]) {
    case ComFasterxmlJacksonAnnotationJsonInclude_Include_Enum_NON_DEFAULT:
    valueToSuppress = ComFasterxmlJacksonDatabindUtilBeanUtil_getDefaultValueWithComFasterxmlJacksonDatabindJavaType_(contentType);
    if (valueToSuppress != nil) {
      if ([[valueToSuppress java_getClass] isArray]) {
        valueToSuppress = ComFasterxmlJacksonDatabindUtilArrayBuilders_getArrayComparatorWithId_(valueToSuppress);
      }
    }
    break;
    case ComFasterxmlJacksonAnnotationJsonInclude_Include_Enum_NON_ABSENT:
    valueToSuppress = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(contentType)) isReferenceType] ? JreLoadStatic(ComFasterxmlJacksonDatabindSerStdMapSerializer, MARKER_FOR_EMPTY) : nil;
    break;
    case ComFasterxmlJacksonAnnotationJsonInclude_Include_Enum_NON_EMPTY:
    valueToSuppress = JreLoadStatic(ComFasterxmlJacksonDatabindSerStdMapSerializer, MARKER_FOR_EMPTY);
    break;
    case ComFasterxmlJacksonAnnotationJsonInclude_Include_Enum_CUSTOM:
    valueToSuppress = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(prov)) includeFilterInstanceWithComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition:nil withIOSClass:[((ComFasterxmlJacksonAnnotationJsonInclude_Value *) nil_chk(inclV)) getContentFilter]];
    if (valueToSuppress == nil) {
      suppressNulls = true;
    }
    else {
      suppressNulls = [prov includeFilterSuppressNullsWithId:valueToSuppress];
    }
    break;
    case ComFasterxmlJacksonAnnotationJsonInclude_Include_Enum_NON_NULL:
    default:
    valueToSuppress = nil;
    break;
  }
  return [mapSer withContentInclusionWithId:valueToSuppress withBoolean:suppressNulls];
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)buildMapEntrySerializerWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                                                withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                                         withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                                                            withBoolean:(jboolean)staticTyping
                                                                                withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)keyType
                                                                                withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)valueType {
  ComFasterxmlJacksonAnnotationJsonFormat_Value *format = [((ComFasterxmlJacksonDatabindBeanDescription *) nil_chk(beanDesc)) findExpectedFormatWithComFasterxmlJacksonAnnotationJsonFormat_Value:nil];
  if (format != nil && [format getShape] == JreLoadEnum(ComFasterxmlJacksonAnnotationJsonFormat_Shape, OBJECT)) {
    return nil;
  }
  ComFasterxmlJacksonDatabindSerImplMapEntrySerializer *ser = create_ComFasterxmlJacksonDatabindSerImplMapEntrySerializer_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_withBoolean_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withComFasterxmlJacksonDatabindBeanProperty_(valueType, keyType, valueType, staticTyping, [self createTypeSerializerWithComFasterxmlJacksonDatabindSerializationConfig:[((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(prov)) getConfig] withComFasterxmlJacksonDatabindJavaType:valueType], nil);
  ComFasterxmlJacksonDatabindJavaType *contentType = [ser getContentType];
  ComFasterxmlJacksonAnnotationJsonInclude_Value *inclV = [self _findInclusionWithContentWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindBeanDescription:beanDesc withComFasterxmlJacksonDatabindJavaType:contentType withIOSClass:JavaUtilMap_Entry_class_()];
  ComFasterxmlJacksonAnnotationJsonInclude_Include *incl = (inclV == nil) ? JreLoadEnum(ComFasterxmlJacksonAnnotationJsonInclude_Include, USE_DEFAULTS) : [((ComFasterxmlJacksonAnnotationJsonInclude_Value *) nil_chk(inclV)) getContentInclusion];
  if (incl == JreLoadEnum(ComFasterxmlJacksonAnnotationJsonInclude_Include, USE_DEFAULTS) || incl == JreLoadEnum(ComFasterxmlJacksonAnnotationJsonInclude_Include, ALWAYS)) {
    return ser;
  }
  id valueToSuppress;
  jboolean suppressNulls = true;
  switch ([incl ordinal]) {
    case ComFasterxmlJacksonAnnotationJsonInclude_Include_Enum_NON_DEFAULT:
    valueToSuppress = ComFasterxmlJacksonDatabindUtilBeanUtil_getDefaultValueWithComFasterxmlJacksonDatabindJavaType_(contentType);
    if (valueToSuppress != nil) {
      if ([[valueToSuppress java_getClass] isArray]) {
        valueToSuppress = ComFasterxmlJacksonDatabindUtilArrayBuilders_getArrayComparatorWithId_(valueToSuppress);
      }
    }
    break;
    case ComFasterxmlJacksonAnnotationJsonInclude_Include_Enum_NON_ABSENT:
    valueToSuppress = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(contentType)) isReferenceType] ? JreLoadStatic(ComFasterxmlJacksonDatabindSerStdMapSerializer, MARKER_FOR_EMPTY) : nil;
    break;
    case ComFasterxmlJacksonAnnotationJsonInclude_Include_Enum_NON_EMPTY:
    valueToSuppress = JreLoadStatic(ComFasterxmlJacksonDatabindSerStdMapSerializer, MARKER_FOR_EMPTY);
    break;
    case ComFasterxmlJacksonAnnotationJsonInclude_Include_Enum_CUSTOM:
    valueToSuppress = [prov includeFilterInstanceWithComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition:nil withIOSClass:[((ComFasterxmlJacksonAnnotationJsonInclude_Value *) nil_chk(inclV)) getContentFilter]];
    if (valueToSuppress == nil) {
      suppressNulls = true;
    }
    else {
      suppressNulls = [prov includeFilterSuppressNullsWithId:valueToSuppress];
    }
    break;
    case ComFasterxmlJacksonAnnotationJsonInclude_Include_Enum_NON_NULL:
    default:
    valueToSuppress = nil;
    break;
  }
  return [ser withContentInclusionWithId:valueToSuppress withBoolean:suppressNulls];
}

- (ComFasterxmlJacksonAnnotationJsonInclude_Value *)_findInclusionWithContentWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                                                withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                                       withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)contentType
                                                                                                                  withIOSClass:(IOSClass *)configType {
  ComFasterxmlJacksonDatabindSerializationConfig *config = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(prov)) getConfig];
  ComFasterxmlJacksonAnnotationJsonInclude_Value *inclV = [((ComFasterxmlJacksonDatabindBeanDescription *) nil_chk(beanDesc)) findPropertyInclusionWithComFasterxmlJacksonAnnotationJsonInclude_Value:[((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(config)) getDefaultPropertyInclusion]];
  inclV = [config getDefaultPropertyInclusionWithIOSClass:configType withComFasterxmlJacksonAnnotationJsonInclude_Value:inclV];
  ComFasterxmlJacksonAnnotationJsonInclude_Value *valueIncl = [config getDefaultPropertyInclusionWithIOSClass:[((ComFasterxmlJacksonDatabindJavaType *) nil_chk(contentType)) getRawClass] withComFasterxmlJacksonAnnotationJsonInclude_Value:nil];
  if (valueIncl != nil) {
    switch ([[valueIncl getValueInclusion] ordinal]) {
      case ComFasterxmlJacksonAnnotationJsonInclude_Include_Enum_USE_DEFAULTS:
      break;
      case ComFasterxmlJacksonAnnotationJsonInclude_Include_Enum_CUSTOM:
      inclV = [((ComFasterxmlJacksonAnnotationJsonInclude_Value *) nil_chk(inclV)) withContentFilterWithIOSClass:[valueIncl getContentFilter]];
      break;
      default:
      inclV = [((ComFasterxmlJacksonAnnotationJsonInclude_Value *) nil_chk(inclV)) withContentInclusionWithComFasterxmlJacksonAnnotationJsonInclude_Include:[valueIncl getValueInclusion]];
    }
  }
  return inclV;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)buildArraySerializerWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                                        withComFasterxmlJacksonDatabindTypeArrayType:(ComFasterxmlJacksonDatabindTypeArrayType *)type
                                                                      withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                                                         withBoolean:(jboolean)staticTyping
                                                               withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)elementTypeSerializer
                                                                       withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)elementValueSerializer {
  ComFasterxmlJacksonDatabindSerializationConfig *config = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(prov)) getConfig];
  ComFasterxmlJacksonDatabindJsonSerializer *ser = nil;
  for (id<ComFasterxmlJacksonDatabindSerSerializers> __strong serializers in nil_chk([self customSerializers])) {
    ser = [((id<ComFasterxmlJacksonDatabindSerSerializers>) nil_chk(serializers)) findArraySerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindTypeArrayType:type withComFasterxmlJacksonDatabindBeanDescription:beanDesc withComFasterxmlJacksonDatabindJsontypeTypeSerializer:elementTypeSerializer withComFasterxmlJacksonDatabindJsonSerializer:elementValueSerializer];
    if (ser != nil) {
      break;
    }
  }
  if (ser == nil) {
    IOSClass *raw = [((ComFasterxmlJacksonDatabindTypeArrayType *) nil_chk(type)) getRawClass];
    if (elementValueSerializer == nil || ComFasterxmlJacksonDatabindUtilClassUtil_isJacksonStdImplWithId_(elementValueSerializer)) {
      if (IOSClass_arrayType(NSString_class_(), 1) == raw) {
        ser = JreLoadStatic(ComFasterxmlJacksonDatabindSerImplStringArraySerializer, instance);
      }
      else {
        ser = ComFasterxmlJacksonDatabindSerStdStdArraySerializers_findStandardImplWithIOSClass_(raw);
      }
    }
    if (ser == nil) {
      ser = create_ComFasterxmlJacksonDatabindSerStdObjectArraySerializer_initWithComFasterxmlJacksonDatabindJavaType_withBoolean_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withComFasterxmlJacksonDatabindJsonSerializer_([type getContentType], staticTyping, elementTypeSerializer, elementValueSerializer);
    }
  }
  if ([((ComFasterxmlJacksonDatabindCfgSerializerFactoryConfig *) nil_chk(_factoryConfig_)) hasSerializerModifiers]) {
    for (ComFasterxmlJacksonDatabindSerBeanSerializerModifier * __strong mod in nil_chk([_factoryConfig_ serializerModifiers])) {
      ser = [((ComFasterxmlJacksonDatabindSerBeanSerializerModifier *) nil_chk(mod)) modifyArraySerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindTypeArrayType:type withComFasterxmlJacksonDatabindBeanDescription:beanDesc withComFasterxmlJacksonDatabindJsonSerializer:ser];
    }
  }
  return ser;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)findReferenceSerializerWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                                       withComFasterxmlJacksonDatabindTypeReferenceType:(ComFasterxmlJacksonDatabindTypeReferenceType *)refType
                                                                         withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                                                            withBoolean:(jboolean)staticTyping {
  ComFasterxmlJacksonDatabindJavaType *contentType = [((ComFasterxmlJacksonDatabindTypeReferenceType *) nil_chk(refType)) getContentType];
  ComFasterxmlJacksonDatabindJsontypeTypeSerializer *contentTypeSerializer = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(contentType)) getTypeHandler];
  ComFasterxmlJacksonDatabindSerializationConfig *config = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(prov)) getConfig];
  if (contentTypeSerializer == nil) {
    contentTypeSerializer = [self createTypeSerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindJavaType:contentType];
  }
  ComFasterxmlJacksonDatabindJsonSerializer *contentSerializer = [contentType getValueHandler];
  for (id<ComFasterxmlJacksonDatabindSerSerializers> __strong serializers in nil_chk([self customSerializers])) {
    ComFasterxmlJacksonDatabindJsonSerializer *ser = [((id<ComFasterxmlJacksonDatabindSerSerializers>) nil_chk(serializers)) findReferenceSerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindTypeReferenceType:refType withComFasterxmlJacksonDatabindBeanDescription:beanDesc withComFasterxmlJacksonDatabindJsontypeTypeSerializer:contentTypeSerializer withComFasterxmlJacksonDatabindJsonSerializer:contentSerializer];
    if (ser != nil) {
      return ser;
    }
  }
  if ([refType isTypeOrSubTypeOfWithIOSClass:JavaUtilConcurrentAtomicAtomicReference_class_()]) {
    return [self buildAtomicReferenceSerializerWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindTypeReferenceType:refType withComFasterxmlJacksonDatabindBeanDescription:beanDesc withBoolean:staticTyping withComFasterxmlJacksonDatabindJsontypeTypeSerializer:contentTypeSerializer withComFasterxmlJacksonDatabindJsonSerializer:contentSerializer];
  }
  return nil;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)buildAtomicReferenceSerializerWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                                              withComFasterxmlJacksonDatabindTypeReferenceType:(ComFasterxmlJacksonDatabindTypeReferenceType *)refType
                                                                                withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                                                                   withBoolean:(jboolean)staticTyping
                                                                         withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)contentTypeSerializer
                                                                                 withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)contentSerializer {
  ComFasterxmlJacksonDatabindJavaType *contentType = [((ComFasterxmlJacksonDatabindTypeReferenceType *) nil_chk(refType)) getReferencedType];
  ComFasterxmlJacksonAnnotationJsonInclude_Value *inclV = [self _findInclusionWithContentWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindBeanDescription:beanDesc withComFasterxmlJacksonDatabindJavaType:contentType withIOSClass:JavaUtilConcurrentAtomicAtomicReference_class_()];
  ComFasterxmlJacksonAnnotationJsonInclude_Include *incl = (inclV == nil) ? JreLoadEnum(ComFasterxmlJacksonAnnotationJsonInclude_Include, USE_DEFAULTS) : [((ComFasterxmlJacksonAnnotationJsonInclude_Value *) nil_chk(inclV)) getContentInclusion];
  id valueToSuppress;
  jboolean suppressNulls;
  if (incl == JreLoadEnum(ComFasterxmlJacksonAnnotationJsonInclude_Include, USE_DEFAULTS) || incl == JreLoadEnum(ComFasterxmlJacksonAnnotationJsonInclude_Include, ALWAYS)) {
    valueToSuppress = nil;
    suppressNulls = false;
  }
  else {
    suppressNulls = true;
    switch ([incl ordinal]) {
      case ComFasterxmlJacksonAnnotationJsonInclude_Include_Enum_NON_DEFAULT:
      valueToSuppress = ComFasterxmlJacksonDatabindUtilBeanUtil_getDefaultValueWithComFasterxmlJacksonDatabindJavaType_(contentType);
      if (valueToSuppress != nil) {
        if ([[valueToSuppress java_getClass] isArray]) {
          valueToSuppress = ComFasterxmlJacksonDatabindUtilArrayBuilders_getArrayComparatorWithId_(valueToSuppress);
        }
      }
      break;
      case ComFasterxmlJacksonAnnotationJsonInclude_Include_Enum_NON_ABSENT:
      valueToSuppress = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(contentType)) isReferenceType] ? JreLoadStatic(ComFasterxmlJacksonDatabindSerStdMapSerializer, MARKER_FOR_EMPTY) : nil;
      break;
      case ComFasterxmlJacksonAnnotationJsonInclude_Include_Enum_NON_EMPTY:
      valueToSuppress = JreLoadStatic(ComFasterxmlJacksonDatabindSerStdMapSerializer, MARKER_FOR_EMPTY);
      break;
      case ComFasterxmlJacksonAnnotationJsonInclude_Include_Enum_CUSTOM:
      valueToSuppress = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(prov)) includeFilterInstanceWithComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition:nil withIOSClass:[((ComFasterxmlJacksonAnnotationJsonInclude_Value *) nil_chk(inclV)) getContentFilter]];
      if (valueToSuppress == nil) {
        suppressNulls = true;
      }
      else {
        suppressNulls = [prov includeFilterSuppressNullsWithId:valueToSuppress];
      }
      break;
      case ComFasterxmlJacksonAnnotationJsonInclude_Include_Enum_NON_NULL:
      default:
      valueToSuppress = nil;
      break;
    }
  }
  ComFasterxmlJacksonDatabindSerStdAtomicReferenceSerializer *ser = create_ComFasterxmlJacksonDatabindSerStdAtomicReferenceSerializer_initWithComFasterxmlJacksonDatabindTypeReferenceType_withBoolean_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withComFasterxmlJacksonDatabindJsonSerializer_(refType, staticTyping, contentTypeSerializer, contentSerializer);
  return [ser withContentInclusionWithId:valueToSuppress withBoolean:suppressNulls];
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)buildIteratorSerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                                          withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                                                             withBoolean:(jboolean)staticTyping
                                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)valueType {
  return create_ComFasterxmlJacksonDatabindSerImplIteratorSerializer_initWithComFasterxmlJacksonDatabindJavaType_withBoolean_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_(valueType, staticTyping, [self createTypeSerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindJavaType:valueType]);
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)buildIterableSerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                                          withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                                                             withBoolean:(jboolean)staticTyping
                                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)valueType {
  return create_ComFasterxmlJacksonDatabindSerStdIterableSerializer_initWithComFasterxmlJacksonDatabindJavaType_withBoolean_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_(valueType, staticTyping, [self createTypeSerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindJavaType:valueType]);
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)buildEnumSerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                             withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                                      withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc {
  ComFasterxmlJacksonAnnotationJsonFormat_Value *format = [((ComFasterxmlJacksonDatabindBeanDescription *) nil_chk(beanDesc)) findExpectedFormatWithComFasterxmlJacksonAnnotationJsonFormat_Value:nil];
  if (format != nil && [format getShape] == JreLoadEnum(ComFasterxmlJacksonAnnotationJsonFormat_Shape, OBJECT)) {
    [((ComFasterxmlJacksonDatabindIntrospectBasicBeanDescription *) cast_chk(beanDesc, [ComFasterxmlJacksonDatabindIntrospectBasicBeanDescription class])) removePropertyWithNSString:@"declaringClass"];
    return nil;
  }
  IOSClass *enumClass = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(type)) getRawClass];
  ComFasterxmlJacksonDatabindJsonSerializer *ser = ComFasterxmlJacksonDatabindSerStdEnumSerializer_constructWithIOSClass_withComFasterxmlJacksonDatabindSerializationConfig_withComFasterxmlJacksonDatabindBeanDescription_withComFasterxmlJacksonAnnotationJsonFormat_Value_(enumClass, config, beanDesc, format);
  if ([((ComFasterxmlJacksonDatabindCfgSerializerFactoryConfig *) nil_chk(_factoryConfig_)) hasSerializerModifiers]) {
    for (ComFasterxmlJacksonDatabindSerBeanSerializerModifier * __strong mod in nil_chk([_factoryConfig_ serializerModifiers])) {
      ser = [((ComFasterxmlJacksonDatabindSerBeanSerializerModifier *) nil_chk(mod)) modifyEnumSerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindJavaType:type withComFasterxmlJacksonDatabindBeanDescription:beanDesc withComFasterxmlJacksonDatabindJsonSerializer:ser];
    }
  }
  return ser;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)_findKeySerializerWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                                withComFasterxmlJacksonDatabindIntrospectAnnotated:(ComFasterxmlJacksonDatabindIntrospectAnnotated *)a {
  ComFasterxmlJacksonDatabindAnnotationIntrospector *intr = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(prov)) getAnnotationIntrospector];
  id serDef = [((ComFasterxmlJacksonDatabindAnnotationIntrospector *) nil_chk(intr)) findKeySerializerWithComFasterxmlJacksonDatabindIntrospectAnnotated:a];
  if (serDef != nil) {
    return [prov serializerInstanceWithComFasterxmlJacksonDatabindIntrospectAnnotated:a withId:serDef];
  }
  return nil;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)_findContentSerializerWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                                    withComFasterxmlJacksonDatabindIntrospectAnnotated:(ComFasterxmlJacksonDatabindIntrospectAnnotated *)a {
  ComFasterxmlJacksonDatabindAnnotationIntrospector *intr = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(prov)) getAnnotationIntrospector];
  id serDef = [((ComFasterxmlJacksonDatabindAnnotationIntrospector *) nil_chk(intr)) findContentSerializerWithComFasterxmlJacksonDatabindIntrospectAnnotated:a];
  if (serDef != nil) {
    return [prov serializerInstanceWithComFasterxmlJacksonDatabindIntrospectAnnotated:a withId:serDef];
  }
  return nil;
}

- (id)findFilterIdWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                      withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc {
  return [((ComFasterxmlJacksonDatabindAnnotationIntrospector *) nil_chk([((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(config)) getAnnotationIntrospector])) findFilterIdWithComFasterxmlJacksonDatabindIntrospectAnnotated:[((ComFasterxmlJacksonDatabindBeanDescription *) nil_chk(beanDesc)) getClassInfo]];
}

- (jboolean)usesStaticTypingWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                         withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer {
  if (typeSer != nil) {
    return false;
  }
  ComFasterxmlJacksonDatabindAnnotationIntrospector *intr = [((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(config)) getAnnotationIntrospector];
  ComFasterxmlJacksonDatabindAnnotationJsonSerialize_Typing *t = [((ComFasterxmlJacksonDatabindAnnotationIntrospector *) nil_chk(intr)) findSerializationTypingWithComFasterxmlJacksonDatabindIntrospectAnnotated:[((ComFasterxmlJacksonDatabindBeanDescription *) nil_chk(beanDesc)) getClassInfo]];
  if (t != nil && t != JreLoadEnum(ComFasterxmlJacksonDatabindAnnotationJsonSerialize_Typing, DEFAULT_TYPING)) {
    return t == JreLoadEnum(ComFasterxmlJacksonDatabindAnnotationJsonSerialize_Typing, STATIC);
  }
  return [config isEnabledWithComFasterxmlJacksonDatabindMapperFeature:JreLoadEnum(ComFasterxmlJacksonDatabindMapperFeature, USE_STATIC_TYPING)];
}

- (void)dealloc {
  RELEASE_(_factoryConfig_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgSerializerFactoryConfig;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerSerializerFactory;", 0x401, 1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerSerializerFactory;", 0x11, 2, 3, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerSerializerFactory;", 0x11, 4, 3, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerSerializerFactory;", 0x11, 5, 6, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x401, 7, 8, 9, 10, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 11, 12, -1, 13, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsontypeTypeSerializer;", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "LJavaLangIterable;", 0x404, -1, -1, -1, 16, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x14, 17, 18, -1, 19, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x14, 20, 21, 9, 22, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x14, 23, 24, 9, 25, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x4, 26, 24, 9, 25, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x14, 27, 28, 9, 29, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x4, 30, 31, 9, 32, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x4, 33, 34, 9, 35, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindUtilConverter;", 0x4, 36, 31, 9, 37, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x4, 38, 24, 9, 25, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x4, 39, 40, 9, 41, -1, -1 },
    { NULL, "Z", 0x4, 42, 43, -1, 44, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerContainerSerializer;", 0x1, 45, 46, -1, 47, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerContainerSerializer;", 0x1, 39, 46, -1, 47, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 48, 49, -1, 50, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x4, 51, 52, 9, 53, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerStdMapSerializer;", 0x4, 54, 55, 9, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x4, 56, 57, 9, 58, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonInclude_Value;", 0x4, 59, 60, 9, 61, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x4, 62, 63, 9, 64, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 65, 66, 9, 67, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x4, 68, 69, 9, 70, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x4, 71, 72, 9, 73, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x4, 74, 72, 9, 73, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x4, 75, 76, 9, 77, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x4, 78, 31, 9, 32, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x4, 79, 31, 9, 32, -1, -1 },
    { NULL, "LNSObject;", 0x4, 80, 81, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 82, 83, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonDatabindCfgSerializerFactoryConfig:);
  methods[1].selector = @selector(getFactoryConfig);
  methods[2].selector = @selector(withConfigWithComFasterxmlJacksonDatabindCfgSerializerFactoryConfig:);
  methods[3].selector = @selector(withAdditionalSerializersWithComFasterxmlJacksonDatabindSerSerializers:);
  methods[4].selector = @selector(withAdditionalKeySerializersWithComFasterxmlJacksonDatabindSerSerializers:);
  methods[5].selector = @selector(withSerializerModifierWithComFasterxmlJacksonDatabindSerBeanSerializerModifier:);
  methods[6].selector = @selector(createSerializerWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindJavaType:);
  methods[7].selector = @selector(createKeySerializerWithComFasterxmlJacksonDatabindSerializationConfig:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindJsonSerializer:);
  methods[8].selector = @selector(createTypeSerializerWithComFasterxmlJacksonDatabindSerializationConfig:withComFasterxmlJacksonDatabindJavaType:);
  methods[9].selector = @selector(customSerializers);
  methods[10].selector = @selector(findSerializerByLookupWithComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindSerializationConfig:withComFasterxmlJacksonDatabindBeanDescription:withBoolean:);
  methods[11].selector = @selector(findSerializerByAnnotationsWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindBeanDescription:);
  methods[12].selector = @selector(findSerializerByPrimaryTypeWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindBeanDescription:withBoolean:);
  methods[13].selector = @selector(findOptionalStdSerializerWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindBeanDescription:withBoolean:);
  methods[14].selector = @selector(findSerializerByAddonTypeWithComFasterxmlJacksonDatabindSerializationConfig:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindBeanDescription:withBoolean:);
  methods[15].selector = @selector(findSerializerFromAnnotationWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindIntrospectAnnotated:);
  methods[16].selector = @selector(findConvertingSerializerWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindIntrospectAnnotated:withComFasterxmlJacksonDatabindJsonSerializer:);
  methods[17].selector = @selector(findConverterWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindIntrospectAnnotated:);
  methods[18].selector = @selector(buildContainerSerializerWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindBeanDescription:withBoolean:);
  methods[19].selector = @selector(buildCollectionSerializerWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindTypeCollectionType:withComFasterxmlJacksonDatabindBeanDescription:withBoolean:withComFasterxmlJacksonDatabindJsontypeTypeSerializer:withComFasterxmlJacksonDatabindJsonSerializer:);
  methods[20].selector = @selector(isIndexedListWithIOSClass:);
  methods[21].selector = @selector(buildIndexedListSerializerWithComFasterxmlJacksonDatabindJavaType:withBoolean:withComFasterxmlJacksonDatabindJsontypeTypeSerializer:withComFasterxmlJacksonDatabindJsonSerializer:);
  methods[22].selector = @selector(buildCollectionSerializerWithComFasterxmlJacksonDatabindJavaType:withBoolean:withComFasterxmlJacksonDatabindJsontypeTypeSerializer:withComFasterxmlJacksonDatabindJsonSerializer:);
  methods[23].selector = @selector(buildEnumSetSerializerWithComFasterxmlJacksonDatabindJavaType:);
  methods[24].selector = @selector(buildMapSerializerWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindTypeMapType:withComFasterxmlJacksonDatabindBeanDescription:withBoolean:withComFasterxmlJacksonDatabindJsonSerializer:withComFasterxmlJacksonDatabindJsontypeTypeSerializer:withComFasterxmlJacksonDatabindJsonSerializer:);
  methods[25].selector = @selector(_checkMapContentInclusionWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindBeanDescription:withComFasterxmlJacksonDatabindSerStdMapSerializer:);
  methods[26].selector = @selector(buildMapEntrySerializerWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindBeanDescription:withBoolean:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindJavaType:);
  methods[27].selector = @selector(_findInclusionWithContentWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindBeanDescription:withComFasterxmlJacksonDatabindJavaType:withIOSClass:);
  methods[28].selector = @selector(buildArraySerializerWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindTypeArrayType:withComFasterxmlJacksonDatabindBeanDescription:withBoolean:withComFasterxmlJacksonDatabindJsontypeTypeSerializer:withComFasterxmlJacksonDatabindJsonSerializer:);
  methods[29].selector = @selector(findReferenceSerializerWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindTypeReferenceType:withComFasterxmlJacksonDatabindBeanDescription:withBoolean:);
  methods[30].selector = @selector(buildAtomicReferenceSerializerWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindTypeReferenceType:withComFasterxmlJacksonDatabindBeanDescription:withBoolean:withComFasterxmlJacksonDatabindJsontypeTypeSerializer:withComFasterxmlJacksonDatabindJsonSerializer:);
  methods[31].selector = @selector(buildIteratorSerializerWithComFasterxmlJacksonDatabindSerializationConfig:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindBeanDescription:withBoolean:withComFasterxmlJacksonDatabindJavaType:);
  methods[32].selector = @selector(buildIterableSerializerWithComFasterxmlJacksonDatabindSerializationConfig:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindBeanDescription:withBoolean:withComFasterxmlJacksonDatabindJavaType:);
  methods[33].selector = @selector(buildEnumSerializerWithComFasterxmlJacksonDatabindSerializationConfig:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindBeanDescription:);
  methods[34].selector = @selector(_findKeySerializerWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindIntrospectAnnotated:);
  methods[35].selector = @selector(_findContentSerializerWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindIntrospectAnnotated:);
  methods[36].selector = @selector(findFilterIdWithComFasterxmlJacksonDatabindSerializationConfig:withComFasterxmlJacksonDatabindBeanDescription:);
  methods[37].selector = @selector(usesStaticTypingWithComFasterxmlJacksonDatabindSerializationConfig:withComFasterxmlJacksonDatabindBeanDescription:withComFasterxmlJacksonDatabindJsontypeTypeSerializer:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_concrete", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x1c, -1, 84, 85, -1 },
    { "_concreteLazy", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x1c, -1, 86, 87, -1 },
    { "_factoryConfig_", "LComFasterxmlJacksonDatabindCfgSerializerFactoryConfig;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindCfgSerializerFactoryConfig;", "withConfig", "withAdditionalSerializers", "LComFasterxmlJacksonDatabindSerSerializers;", "withAdditionalKeySerializers", "withSerializerModifier", "LComFasterxmlJacksonDatabindSerBeanSerializerModifier;", "createSerializer", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindJavaType;", "LComFasterxmlJacksonDatabindJsonMappingException;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", "createKeySerializer", "LComFasterxmlJacksonDatabindSerializationConfig;LComFasterxmlJacksonDatabindJavaType;LComFasterxmlJacksonDatabindJsonSerializer;", "(Lcom/fasterxml/jackson/databind/SerializationConfig;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;)Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", "createTypeSerializer", "LComFasterxmlJacksonDatabindSerializationConfig;LComFasterxmlJacksonDatabindJavaType;", "()Ljava/lang/Iterable<Lcom/fasterxml/jackson/databind/ser/Serializers;>;", "findSerializerByLookup", "LComFasterxmlJacksonDatabindJavaType;LComFasterxmlJacksonDatabindSerializationConfig;LComFasterxmlJacksonDatabindBeanDescription;Z", "(Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/SerializationConfig;Lcom/fasterxml/jackson/databind/BeanDescription;Z)Lcom/fasterxml/jackson/databind/JsonSerializer<*>;", "findSerializerByAnnotations", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindJavaType;LComFasterxmlJacksonDatabindBeanDescription;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/BeanDescription;)Lcom/fasterxml/jackson/databind/JsonSerializer<*>;", "findSerializerByPrimaryType", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindJavaType;LComFasterxmlJacksonDatabindBeanDescription;Z", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/BeanDescription;Z)Lcom/fasterxml/jackson/databind/JsonSerializer<*>;", "findOptionalStdSerializer", "findSerializerByAddonType", "LComFasterxmlJacksonDatabindSerializationConfig;LComFasterxmlJacksonDatabindJavaType;LComFasterxmlJacksonDatabindBeanDescription;Z", "(Lcom/fasterxml/jackson/databind/SerializationConfig;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/BeanDescription;Z)Lcom/fasterxml/jackson/databind/JsonSerializer<*>;", "findSerializerFromAnnotation", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindIntrospectAnnotated;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/introspect/Annotated;)Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", "findConvertingSerializer", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindIntrospectAnnotated;LComFasterxmlJacksonDatabindJsonSerializer;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/introspect/Annotated;Lcom/fasterxml/jackson/databind/JsonSerializer<*>;)Lcom/fasterxml/jackson/databind/JsonSerializer<*>;", "findConverter", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/introspect/Annotated;)Lcom/fasterxml/jackson/databind/util/Converter<Ljava/lang/Object;Ljava/lang/Object;>;", "buildContainerSerializer", "buildCollectionSerializer", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindTypeCollectionType;LComFasterxmlJacksonDatabindBeanDescription;ZLComFasterxmlJacksonDatabindJsontypeTypeSerializer;LComFasterxmlJacksonDatabindJsonSerializer;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/type/CollectionType;Lcom/fasterxml/jackson/databind/BeanDescription;ZLcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;)Lcom/fasterxml/jackson/databind/JsonSerializer<*>;", "isIndexedList", "LIOSClass;", "(Ljava/lang/Class<*>;)Z", "buildIndexedListSerializer", "LComFasterxmlJacksonDatabindJavaType;ZLComFasterxmlJacksonDatabindJsontypeTypeSerializer;LComFasterxmlJacksonDatabindJsonSerializer;", "(Lcom/fasterxml/jackson/databind/JavaType;ZLcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;)Lcom/fasterxml/jackson/databind/ser/ContainerSerializer<*>;", "buildEnumSetSerializer", "LComFasterxmlJacksonDatabindJavaType;", "(Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/JsonSerializer<*>;", "buildMapSerializer", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindTypeMapType;LComFasterxmlJacksonDatabindBeanDescription;ZLComFasterxmlJacksonDatabindJsonSerializer;LComFasterxmlJacksonDatabindJsontypeTypeSerializer;LComFasterxmlJacksonDatabindJsonSerializer;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/type/MapType;Lcom/fasterxml/jackson/databind/BeanDescription;ZLcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;)Lcom/fasterxml/jackson/databind/JsonSerializer<*>;", "_checkMapContentInclusion", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindBeanDescription;LComFasterxmlJacksonDatabindSerStdMapSerializer;", "buildMapEntrySerializer", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindJavaType;LComFasterxmlJacksonDatabindBeanDescription;ZLComFasterxmlJacksonDatabindJavaType;LComFasterxmlJacksonDatabindJavaType;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/BeanDescription;ZLcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/JsonSerializer<*>;", "_findInclusionWithContent", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindBeanDescription;LComFasterxmlJacksonDatabindJavaType;LIOSClass;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanDescription;Lcom/fasterxml/jackson/databind/JavaType;Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/annotation/JsonInclude$Value;", "buildArraySerializer", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindTypeArrayType;LComFasterxmlJacksonDatabindBeanDescription;ZLComFasterxmlJacksonDatabindJsontypeTypeSerializer;LComFasterxmlJacksonDatabindJsonSerializer;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/type/ArrayType;Lcom/fasterxml/jackson/databind/BeanDescription;ZLcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;)Lcom/fasterxml/jackson/databind/JsonSerializer<*>;", "findReferenceSerializer", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindTypeReferenceType;LComFasterxmlJacksonDatabindBeanDescription;Z", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/type/ReferenceType;Lcom/fasterxml/jackson/databind/BeanDescription;Z)Lcom/fasterxml/jackson/databind/JsonSerializer<*>;", "buildAtomicReferenceSerializer", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindTypeReferenceType;LComFasterxmlJacksonDatabindBeanDescription;ZLComFasterxmlJacksonDatabindJsontypeTypeSerializer;LComFasterxmlJacksonDatabindJsonSerializer;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/type/ReferenceType;Lcom/fasterxml/jackson/databind/BeanDescription;ZLcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;)Lcom/fasterxml/jackson/databind/JsonSerializer<*>;", "buildIteratorSerializer", "LComFasterxmlJacksonDatabindSerializationConfig;LComFasterxmlJacksonDatabindJavaType;LComFasterxmlJacksonDatabindBeanDescription;ZLComFasterxmlJacksonDatabindJavaType;", "(Lcom/fasterxml/jackson/databind/SerializationConfig;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/BeanDescription;ZLcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/JsonSerializer<*>;", "buildIterableSerializer", "buildEnumSerializer", "LComFasterxmlJacksonDatabindSerializationConfig;LComFasterxmlJacksonDatabindJavaType;LComFasterxmlJacksonDatabindBeanDescription;", "(Lcom/fasterxml/jackson/databind/SerializationConfig;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/BeanDescription;)Lcom/fasterxml/jackson/databind/JsonSerializer<*>;", "_findKeySerializer", "_findContentSerializer", "findFilterId", "LComFasterxmlJacksonDatabindSerializationConfig;LComFasterxmlJacksonDatabindBeanDescription;", "usesStaticTyping", "LComFasterxmlJacksonDatabindSerializationConfig;LComFasterxmlJacksonDatabindBeanDescription;LComFasterxmlJacksonDatabindJsontypeTypeSerializer;", &ComFasterxmlJacksonDatabindSerBasicSerializerFactory__concrete, "Ljava/util/HashMap<Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonSerializer<*>;>;", &ComFasterxmlJacksonDatabindSerBasicSerializerFactory__concreteLazy, "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Class<+Lcom/fasterxml/jackson/databind/JsonSerializer<*>;>;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerBasicSerializerFactory = { "BasicSerializerFactory", "com.fasterxml.jackson.databind.ser", ptrTable, methods, fields, 7, 0x401, 38, 3, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindSerBasicSerializerFactory;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindSerBasicSerializerFactory class]) {
    {
      JavaUtilHashMap *concLazy = create_JavaUtilHashMap_init();
      JavaUtilHashMap *concrete = create_JavaUtilHashMap_init();
      [concrete putWithId:[NSString_class_() getName] withId:create_ComFasterxmlJacksonDatabindSerStdStringSerializer_init()];
      ComFasterxmlJacksonDatabindSerStdToStringSerializer *sls = JreLoadStatic(ComFasterxmlJacksonDatabindSerStdToStringSerializer, instance);
      [concrete putWithId:[JavaLangStringBuffer_class_() getName] withId:sls];
      [concrete putWithId:[JavaLangStringBuilder_class_() getName] withId:sls];
      [concrete putWithId:[JavaLangCharacter_class_() getName] withId:sls];
      [concrete putWithId:[((IOSClass *) nil_chk(JreLoadStatic(JavaLangCharacter, TYPE))) getName] withId:sls];
      ComFasterxmlJacksonDatabindSerStdNumberSerializers_addAllWithJavaUtilMap_(concrete);
      [concrete putWithId:[((IOSClass *) nil_chk(JreLoadStatic(JavaLangBoolean, TYPE))) getName] withId:create_ComFasterxmlJacksonDatabindSerStdBooleanSerializer_initWithBoolean_(true)];
      [concrete putWithId:[JavaLangBoolean_class_() getName] withId:create_ComFasterxmlJacksonDatabindSerStdBooleanSerializer_initWithBoolean_(false)];
      [concrete putWithId:[JavaMathBigInteger_class_() getName] withId:create_ComFasterxmlJacksonDatabindSerStdNumberSerializer_initWithIOSClass_(JavaMathBigInteger_class_())];
      [concrete putWithId:[JavaMathBigDecimal_class_() getName] withId:create_ComFasterxmlJacksonDatabindSerStdNumberSerializer_initWithIOSClass_(JavaMathBigDecimal_class_())];
      [concrete putWithId:[JavaUtilCalendar_class_() getName] withId:JreLoadStatic(ComFasterxmlJacksonDatabindSerStdCalendarSerializer, instance)];
      [concrete putWithId:[JavaUtilDate_class_() getName] withId:JreLoadStatic(ComFasterxmlJacksonDatabindSerStdDateSerializer, instance)];
      for (id<JavaUtilMap_Entry> __strong en in nil_chk(ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_all())) {
        id value = [((id<JavaUtilMap_Entry>) nil_chk(en)) getValue];
        if ([value isKindOfClass:[ComFasterxmlJacksonDatabindJsonSerializer class]]) {
          [concrete putWithId:[((IOSClass *) nil_chk([en getKey])) getName] withId:(ComFasterxmlJacksonDatabindJsonSerializer *) cast_chk(value, [ComFasterxmlJacksonDatabindJsonSerializer class])];
        }
        else {
          IOSClass *cls = (IOSClass *) cast_chk(value, [IOSClass class]);
          [concLazy putWithId:[((IOSClass *) nil_chk([en getKey])) getName] withId:cls];
        }
      }
      [concLazy putWithId:[ComFasterxmlJacksonDatabindUtilTokenBuffer_class_() getName] withId:ComFasterxmlJacksonDatabindSerStdTokenBufferSerializer_class_()];
      JreStrongAssign(&ComFasterxmlJacksonDatabindSerBasicSerializerFactory__concrete, concrete);
      JreStrongAssign(&ComFasterxmlJacksonDatabindSerBasicSerializerFactory__concreteLazy, concLazy);
    }
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindSerBasicSerializerFactory)
  }
}

@end

void ComFasterxmlJacksonDatabindSerBasicSerializerFactory_initWithComFasterxmlJacksonDatabindCfgSerializerFactoryConfig_(ComFasterxmlJacksonDatabindSerBasicSerializerFactory *self, ComFasterxmlJacksonDatabindCfgSerializerFactoryConfig *config) {
  ComFasterxmlJacksonDatabindSerSerializerFactory_init(self);
  JreStrongAssign(&self->_factoryConfig_, (config == nil) ? create_ComFasterxmlJacksonDatabindCfgSerializerFactoryConfig_init() : config);
}

ComFasterxmlJacksonDatabindJsonSerializer *ComFasterxmlJacksonDatabindSerBasicSerializerFactory_findSerializerByAnnotationsWithComFasterxmlJacksonDatabindSerializerProvider_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindBeanDescription_(ComFasterxmlJacksonDatabindSerBasicSerializerFactory *self, ComFasterxmlJacksonDatabindSerializerProvider *prov, ComFasterxmlJacksonDatabindJavaType *type, ComFasterxmlJacksonDatabindBeanDescription *beanDesc) {
  IOSClass *raw = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(type)) getRawClass];
  if ([ComFasterxmlJacksonDatabindJsonSerializable_class_() isAssignableFrom:raw]) {
    return JreLoadStatic(ComFasterxmlJacksonDatabindSerStdSerializableSerializer, instance);
  }
  ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *valueAccessor = [((ComFasterxmlJacksonDatabindBeanDescription *) nil_chk(beanDesc)) findJsonValueAccessor];
  if (valueAccessor != nil) {
    if ([((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(prov)) canOverrideAccessModifiers]) {
      ComFasterxmlJacksonDatabindUtilClassUtil_checkAndFixAccessWithJavaLangReflectMember_withBoolean_([valueAccessor getMember], [prov isEnabledWithComFasterxmlJacksonDatabindMapperFeature:JreLoadEnum(ComFasterxmlJacksonDatabindMapperFeature, OVERRIDE_PUBLIC_ACCESS_MODIFIERS)]);
    }
    ComFasterxmlJacksonDatabindJsonSerializer *ser = [self findSerializerFromAnnotationWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindIntrospectAnnotated:valueAccessor];
    return create_ComFasterxmlJacksonDatabindSerStdJsonValueSerializer_initWithComFasterxmlJacksonDatabindIntrospectAnnotatedMember_withComFasterxmlJacksonDatabindJsonSerializer_(valueAccessor, ser);
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerBasicSerializerFactory)
