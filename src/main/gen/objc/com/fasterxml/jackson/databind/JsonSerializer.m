//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/JsonSerializer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/JsonSerializer.h"
#include "com/fasterxml/jackson/databind/SerializerProvider.h"
#include "com/fasterxml/jackson/databind/jsonFormatVisitors/JsonAnyFormatVisitor.h"
#include "com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper.h"
#include "com/fasterxml/jackson/databind/jsontype/TypeSerializer.h"
#include "com/fasterxml/jackson/databind/util/ClassUtil.h"
#include "com/fasterxml/jackson/databind/util/NameTransformer.h"
#include "java/lang/Deprecated.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Iterator.h"

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindJsonSerializer__Annotations$0(void);

@implementation ComFasterxmlJacksonDatabindJsonSerializer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindJsonSerializer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComFasterxmlJacksonDatabindJsonSerializer *)unwrappingSerializerWithComFasterxmlJacksonDatabindUtilNameTransformer:(ComFasterxmlJacksonDatabindUtilNameTransformer *)unwrapper {
  return self;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)replaceDelegateeWithComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)delegatee {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)withFilterIdWithId:(id)filterId {
  return self;
}

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)serializers {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)serializeWithTypeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)serializers
withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer {
  IOSClass *clz = [self handledType];
  if (clz == nil) {
    clz = [nil_chk(value) java_getClass];
  }
  [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(serializers)) reportBadDefinitionWithIOSClass:clz withNSString:NSString_java_formatWithNSString_withNSObjectArray_(@"Type id handling not implemented for type %s (by serializer of type %s)", [IOSObjectArray arrayWithObjects:(id[]){ [clz getName], [[self java_getClass] getName] } count:2 type:NSObject_class_()])];
}

- (IOSClass *)handledType {
  return nil;
}

- (jboolean)isEmptyWithId:(id)value {
  return [self isEmptyWithComFasterxmlJacksonDatabindSerializerProvider:nil withId:value];
}

- (jboolean)isEmptyWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                              withId:(id)value {
  return value == nil;
}

- (jboolean)usesObjectId {
  return false;
}

- (jboolean)isUnwrappingSerializer {
  return false;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)getDelegatee {
  return nil;
}

- (id<JavaUtilIterator>)properties {
  return ComFasterxmlJacksonDatabindUtilClassUtil_emptyIterator();
}

- (void)acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type {
  [((id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>) nil_chk(visitor)) expectAnyFormatWithComFasterxmlJacksonDatabindJavaType:type];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 6, 7, -1, 8, -1, -1 },
    { NULL, "V", 0x401, 9, 10, 11, 12, -1, -1 },
    { NULL, "V", 0x1, 13, 14, 11, 15, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 16, -1, -1 },
    { NULL, "Z", 0x1, 17, 7, -1, 18, 19, -1 },
    { NULL, "Z", 0x1, 17, 20, -1, 21, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, -1, -1, -1, 22, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 23, -1, -1 },
    { NULL, "V", 0x1, 24, 25, 26, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(unwrappingSerializerWithComFasterxmlJacksonDatabindUtilNameTransformer:);
  methods[2].selector = @selector(replaceDelegateeWithComFasterxmlJacksonDatabindJsonSerializer:);
  methods[3].selector = @selector(withFilterIdWithId:);
  methods[4].selector = @selector(serializeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  methods[5].selector = @selector(serializeWithTypeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindJsontypeTypeSerializer:);
  methods[6].selector = @selector(handledType);
  methods[7].selector = @selector(isEmptyWithId:);
  methods[8].selector = @selector(isEmptyWithComFasterxmlJacksonDatabindSerializerProvider:withId:);
  methods[9].selector = @selector(usesObjectId);
  methods[10].selector = @selector(isUnwrappingSerializer);
  methods[11].selector = @selector(getDelegatee);
  methods[12].selector = @selector(properties);
  methods[13].selector = @selector(acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:withComFasterxmlJacksonDatabindJavaType:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "unwrappingSerializer", "LComFasterxmlJacksonDatabindUtilNameTransformer;", "(Lcom/fasterxml/jackson/databind/util/NameTransformer;)Lcom/fasterxml/jackson/databind/JsonSerializer<TT;>;", "replaceDelegatee", "LComFasterxmlJacksonDatabindJsonSerializer;", "(Lcom/fasterxml/jackson/databind/JsonSerializer<*>;)Lcom/fasterxml/jackson/databind/JsonSerializer<TT;>;", "withFilterId", "LNSObject;", "(Ljava/lang/Object;)Lcom/fasterxml/jackson/databind/JsonSerializer<*>;", "serialize", "LNSObject;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;", "LJavaIoIOException;", "(TT;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V", "serializeWithType", "LNSObject;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindJsontypeTypeSerializer;", "(TT;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V", "()Ljava/lang/Class<TT;>;", "isEmpty", "(TT;)Z", (void *)&ComFasterxmlJacksonDatabindJsonSerializer__Annotations$0, "LComFasterxmlJacksonDatabindSerializerProvider;LNSObject;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;TT;)Z", "()Lcom/fasterxml/jackson/databind/JsonSerializer<*>;", "()Ljava/util/Iterator<Lcom/fasterxml/jackson/databind/ser/PropertyWriter;>;", "acceptJsonFormatVisitor", "LComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;LComFasterxmlJacksonDatabindJavaType;", "LComFasterxmlJacksonDatabindJsonMappingException;", "LComFasterxmlJacksonDatabindJsonSerializer_None;", "<T:Ljava/lang/Object;>Ljava/lang/Object;Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitable;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindJsonSerializer = { "JsonSerializer", "com.fasterxml.jackson.databind", ptrTable, methods, NULL, 7, 0x401, 14, 0, -1, 27, -1, 28, -1 };
  return &_ComFasterxmlJacksonDatabindJsonSerializer;
}

@end

void ComFasterxmlJacksonDatabindJsonSerializer_init(ComFasterxmlJacksonDatabindJsonSerializer *self) {
  NSObject_init(self);
}

IOSObjectArray *ComFasterxmlJacksonDatabindJsonSerializer__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindJsonSerializer)

@implementation ComFasterxmlJacksonDatabindJsonSerializer_None

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindJsonSerializer_None_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindJsonSerializer;", "Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindJsonSerializer_None = { "None", "com.fasterxml.jackson.databind", ptrTable, methods, NULL, 7, 0x409, 1, 0, 0, -1, -1, 1, -1 };
  return &_ComFasterxmlJacksonDatabindJsonSerializer_None;
}

@end

void ComFasterxmlJacksonDatabindJsonSerializer_None_init(ComFasterxmlJacksonDatabindJsonSerializer_None *self) {
  ComFasterxmlJacksonDatabindJsonSerializer_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindJsonSerializer_None)
