//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/node/TreeTraversingParser.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeTreeTraversingParser")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindNodeTreeTraversingParser
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeTreeTraversingParser 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeTreeTraversingParser 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindNodeTreeTraversingParser

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindNodeTreeTraversingParser_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeTreeTraversingParser || defined(INCLUDE_ComFasterxmlJacksonDatabindNodeTreeTraversingParser))
#define ComFasterxmlJacksonDatabindNodeTreeTraversingParser_

#define RESTRICT_ComFasterxmlJacksonCoreBaseParserMinimalBase 1
#define INCLUDE_ComFasterxmlJacksonCoreBaseParserMinimalBase 1
#include "com/fasterxml/jackson/core/base/ParserMinimalBase.h"

@class ComFasterxmlJacksonCoreBase64Variant;
@class ComFasterxmlJacksonCoreJsonLocation;
@class ComFasterxmlJacksonCoreJsonParser;
@class ComFasterxmlJacksonCoreJsonParser_NumberType;
@class ComFasterxmlJacksonCoreJsonStreamContext;
@class ComFasterxmlJacksonCoreJsonToken;
@class ComFasterxmlJacksonCoreObjectCodec;
@class ComFasterxmlJacksonCoreVersion;
@class ComFasterxmlJacksonDatabindJsonNode;
@class ComFasterxmlJacksonDatabindNodeNodeCursor;
@class IOSByteArray;
@class IOSCharArray;
@class JavaIoOutputStream;
@class JavaMathBigDecimal;
@class JavaMathBigInteger;

/*!
 @brief Facade over <code>JsonNode</code> that implements <code>JsonParser</code> to allow
  accessing contents of JSON tree in alternate form (stream of tokens).
 Useful when a streaming source is expected by code, such as data binding
  functionality.
 */
@interface ComFasterxmlJacksonDatabindNodeTreeTraversingParser : ComFasterxmlJacksonCoreBaseParserMinimalBase {
 @public
  ComFasterxmlJacksonCoreObjectCodec *_objectCodec_;
  /*!
   @brief Traversal context within tree
   */
  ComFasterxmlJacksonDatabindNodeNodeCursor *_nodeCursor_;
  /*!
   @brief Sometimes parser needs to buffer a single look-ahead token; if so,
  it'll be stored here.This is currently used for handling
   */
  ComFasterxmlJacksonCoreJsonToken *_nextToken_;
  /*!
   @brief Flag needed to handle recursion into contents of child
  Array/Object nodes.
   */
  jboolean _startContainer_;
  /*!
   @brief Flag that indicates whether parser is closed or not.Gets
  set when parser is either closed by explicit call
  (<code>close</code>) or when end-of-input is reached.
   */
  jboolean _closed_;
}

#pragma mark Public

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJsonNode:(ComFasterxmlJacksonDatabindJsonNode *)n;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJsonNode:(ComFasterxmlJacksonDatabindJsonNode *)n
                               withComFasterxmlJacksonCoreObjectCodec:(ComFasterxmlJacksonCoreObjectCodec *)codec;

- (void)close;

- (JavaMathBigInteger *)getBigIntegerValue;

- (IOSByteArray *)getBinaryValueWithComFasterxmlJacksonCoreBase64Variant:(ComFasterxmlJacksonCoreBase64Variant *)b64variant;

- (ComFasterxmlJacksonCoreObjectCodec *)getCodec;

- (ComFasterxmlJacksonCoreJsonLocation *)getCurrentLocation;

- (NSString *)getCurrentName;

- (JavaMathBigDecimal *)getDecimalValue;

- (jdouble)getDoubleValue;

- (id)getEmbeddedObject;

- (jfloat)getFloatValue;

- (jint)getIntValue;

- (jlong)getLongValue;

- (ComFasterxmlJacksonCoreJsonParser_NumberType *)getNumberType;

- (NSNumber *)getNumberValue;

- (ComFasterxmlJacksonCoreJsonStreamContext *)getParsingContext;

- (NSString *)getText;

- (IOSCharArray *)getTextCharacters;

- (jint)getTextLength;

- (jint)getTextOffset;

- (ComFasterxmlJacksonCoreJsonLocation *)getTokenLocation;

- (jboolean)hasTextCharacters;

- (jboolean)isClosed;

- (jboolean)isNaN;

- (ComFasterxmlJacksonCoreJsonToken *)nextToken;

- (void)overrideCurrentNameWithNSString:(NSString *)name;

- (jint)readBinaryValueWithComFasterxmlJacksonCoreBase64Variant:(ComFasterxmlJacksonCoreBase64Variant *)b64variant
                                         withJavaIoOutputStream:(JavaIoOutputStream *)outArg;

- (void)setCodecWithComFasterxmlJacksonCoreObjectCodec:(ComFasterxmlJacksonCoreObjectCodec *)c;

- (ComFasterxmlJacksonCoreJsonParser *)skipChildren;

- (ComFasterxmlJacksonCoreVersion *)version__;

#pragma mark Protected

- (void)_handleEOF;

- (ComFasterxmlJacksonDatabindJsonNode *)currentNode;

- (ComFasterxmlJacksonDatabindJsonNode *)currentNumericNode;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithInt:(jint)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindNodeTreeTraversingParser)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindNodeTreeTraversingParser, _objectCodec_, ComFasterxmlJacksonCoreObjectCodec *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindNodeTreeTraversingParser, _nodeCursor_, ComFasterxmlJacksonDatabindNodeNodeCursor *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindNodeTreeTraversingParser, _nextToken_, ComFasterxmlJacksonCoreJsonToken *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindNodeTreeTraversingParser_initWithComFasterxmlJacksonDatabindJsonNode_(ComFasterxmlJacksonDatabindNodeTreeTraversingParser *self, ComFasterxmlJacksonDatabindJsonNode *n);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeTreeTraversingParser *new_ComFasterxmlJacksonDatabindNodeTreeTraversingParser_initWithComFasterxmlJacksonDatabindJsonNode_(ComFasterxmlJacksonDatabindJsonNode *n) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeTreeTraversingParser *create_ComFasterxmlJacksonDatabindNodeTreeTraversingParser_initWithComFasterxmlJacksonDatabindJsonNode_(ComFasterxmlJacksonDatabindJsonNode *n);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindNodeTreeTraversingParser_initWithComFasterxmlJacksonDatabindJsonNode_withComFasterxmlJacksonCoreObjectCodec_(ComFasterxmlJacksonDatabindNodeTreeTraversingParser *self, ComFasterxmlJacksonDatabindJsonNode *n, ComFasterxmlJacksonCoreObjectCodec *codec);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeTreeTraversingParser *new_ComFasterxmlJacksonDatabindNodeTreeTraversingParser_initWithComFasterxmlJacksonDatabindJsonNode_withComFasterxmlJacksonCoreObjectCodec_(ComFasterxmlJacksonDatabindJsonNode *n, ComFasterxmlJacksonCoreObjectCodec *codec) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeTreeTraversingParser *create_ComFasterxmlJacksonDatabindNodeTreeTraversingParser_initWithComFasterxmlJacksonDatabindJsonNode_withComFasterxmlJacksonCoreObjectCodec_(ComFasterxmlJacksonDatabindJsonNode *n, ComFasterxmlJacksonCoreObjectCodec *codec);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindNodeTreeTraversingParser)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeTreeTraversingParser")
