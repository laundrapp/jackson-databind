//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/util/ClassUtil.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/databind/DeserializationContext.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/JsonMappingException.h"
#include "com/fasterxml/jackson/databind/annotation/JacksonStdImpl.h"
#include "com/fasterxml/jackson/databind/annotation/NoClass.h"
#include "com/fasterxml/jackson/databind/util/ClassUtil.h"
#include "com/fasterxml/jackson/databind/util/Named.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Character.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Double.h"
#include "java/lang/Enum.h"
#include "java/lang/Error.h"
#include "java/lang/Exception.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/NoClassDefFoundError.h"
#include "java/lang/NoSuchMethodException.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/Package.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/SecurityException.h"
#include "java/lang/Short.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/Thread.h"
#include "java/lang/Throwable.h"
#include "java/lang/Void.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/reflect/AccessibleObject.h"
#include "java/lang/reflect/Constructor.h"
#include "java/lang/reflect/Field.h"
#include "java/lang/reflect/Member.h"
#include "java/lang/reflect/Method.h"
#include "java/lang/reflect/Modifier.h"
#include "java/lang/reflect/Type.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/EnumMap.h"
#include "java/util/EnumSet.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@interface ComFasterxmlJacksonDatabindUtilClassUtil ()

+ (void)_addSuperTypesWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                 withIOSClass:(IOSClass *)endBefore
                                       withJavaUtilCollection:(id<JavaUtilCollection>)result
                                                  withBoolean:(jboolean)addClassItself;

+ (void)_addRawSuperTypesWithIOSClass:(IOSClass *)cls
                         withIOSClass:(IOSClass *)endBefore
               withJavaUtilCollection:(id<JavaUtilCollection>)result
                          withBoolean:(jboolean)addClassItself;

+ (IOSObjectArray *)_interfacesWithIOSClass:(IOSClass *)cls;

@end

inline IOSClass *ComFasterxmlJacksonDatabindUtilClassUtil_get_CLS_OBJECT(void);
static IOSClass *ComFasterxmlJacksonDatabindUtilClassUtil_CLS_OBJECT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindUtilClassUtil, CLS_OBJECT, IOSClass *)

inline IOSObjectArray *ComFasterxmlJacksonDatabindUtilClassUtil_get_NO_ANNOTATIONS(void);
static IOSObjectArray *ComFasterxmlJacksonDatabindUtilClassUtil_NO_ANNOTATIONS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindUtilClassUtil, NO_ANNOTATIONS, IOSObjectArray *)

inline IOSObjectArray *ComFasterxmlJacksonDatabindUtilClassUtil_get_NO_CTORS(void);
static IOSObjectArray *ComFasterxmlJacksonDatabindUtilClassUtil_NO_CTORS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindUtilClassUtil, NO_CTORS, IOSObjectArray *)

inline id<JavaUtilIterator> ComFasterxmlJacksonDatabindUtilClassUtil_get_EMPTY_ITERATOR(void);
static id<JavaUtilIterator> ComFasterxmlJacksonDatabindUtilClassUtil_EMPTY_ITERATOR;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindUtilClassUtil, EMPTY_ITERATOR, id<JavaUtilIterator>)

__attribute__((unused)) static void ComFasterxmlJacksonDatabindUtilClassUtil__addSuperTypesWithComFasterxmlJacksonDatabindJavaType_withIOSClass_withJavaUtilCollection_withBoolean_(ComFasterxmlJacksonDatabindJavaType *type, IOSClass *endBefore, id<JavaUtilCollection> result, jboolean addClassItself);

__attribute__((unused)) static void ComFasterxmlJacksonDatabindUtilClassUtil__addRawSuperTypesWithIOSClass_withIOSClass_withJavaUtilCollection_withBoolean_(IOSClass *cls, IOSClass *endBefore, id<JavaUtilCollection> result, jboolean addClassItself);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindUtilClassUtil__interfacesWithIOSClass_(IOSClass *cls);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindUtilClassUtil__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindUtilClassUtil__Annotations$1(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindUtilClassUtil__Annotations$2(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindUtilClassUtil__Annotations$3(void);

/*!
 @brief Inner class used to contain gory details of how we can determine
  details of instances of common JDK types like <code>EnumMap</code>s.
 */
@interface ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator : NSObject {
 @public
  JavaLangReflectField *enumSetTypeField_;
  JavaLangReflectField *enumMapTypeField_;
}

- (instancetype __nonnull)init;

- (IOSClass *)enumTypeForWithJavaUtilEnumSet:(JavaUtilEnumSet *)set;

- (IOSClass *)enumTypeForWithJavaUtilEnumMap:(JavaUtilEnumMap *)set;

- (id)getWithId:(id)bean
withJavaLangReflectField:(JavaLangReflectField *)field;

+ (JavaLangReflectField *)locateFieldWithIOSClass:(IOSClass *)fromClass
                                     withNSString:(NSString *)expectedName
                                     withIOSClass:(IOSClass *)type;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator, enumSetTypeField_, JavaLangReflectField *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator, enumMapTypeField_, JavaLangReflectField *)

inline ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator *ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator_get_instance(void);
static ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator *ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator, instance, ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator *)

__attribute__((unused)) static void ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator_init(ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator *self);

__attribute__((unused)) static ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator *new_ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator *create_ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator_init(void);

__attribute__((unused)) static id ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator_getWithId_withJavaLangReflectField_(ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator *self, id bean, JavaLangReflectField *field);

__attribute__((unused)) static JavaLangReflectField *ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator_locateFieldWithIOSClass_withNSString_withIOSClass_(IOSClass *fromClass, NSString *expectedName, IOSClass *type);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator)

@interface ComFasterxmlJacksonDatabindUtilClassUtil_Ctor () {
 @public
  IOSObjectArray *_annotations_;
  IOSObjectArray *_paramAnnotations_;
  jint _paramCount_;
}

@end

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindUtilClassUtil_Ctor, _annotations_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindUtilClassUtil_Ctor, _paramAnnotations_, IOSObjectArray *)

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindUtilClassUtil)

@implementation ComFasterxmlJacksonDatabindUtilClassUtil

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindUtilClassUtil_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (id<JavaUtilIterator>)emptyIterator {
  return ComFasterxmlJacksonDatabindUtilClassUtil_emptyIterator();
}

+ (id<JavaUtilList>)findSuperTypesWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                             withIOSClass:(IOSClass *)endBefore
                                                              withBoolean:(jboolean)addClassItself {
  return ComFasterxmlJacksonDatabindUtilClassUtil_findSuperTypesWithComFasterxmlJacksonDatabindJavaType_withIOSClass_withBoolean_(type, endBefore, addClassItself);
}

+ (id<JavaUtilList>)findRawSuperTypesWithIOSClass:(IOSClass *)cls
                                     withIOSClass:(IOSClass *)endBefore
                                      withBoolean:(jboolean)addClassItself {
  return ComFasterxmlJacksonDatabindUtilClassUtil_findRawSuperTypesWithIOSClass_withIOSClass_withBoolean_(cls, endBefore, addClassItself);
}

+ (id<JavaUtilList>)findSuperClassesWithIOSClass:(IOSClass *)cls
                                    withIOSClass:(IOSClass *)endBefore
                                     withBoolean:(jboolean)addClassItself {
  return ComFasterxmlJacksonDatabindUtilClassUtil_findSuperClassesWithIOSClass_withIOSClass_withBoolean_(cls, endBefore, addClassItself);
}

+ (id<JavaUtilList>)findSuperTypesWithIOSClass:(IOSClass *)cls
                                  withIOSClass:(IOSClass *)endBefore {
  return ComFasterxmlJacksonDatabindUtilClassUtil_findSuperTypesWithIOSClass_withIOSClass_(cls, endBefore);
}

+ (id<JavaUtilList>)findSuperTypesWithIOSClass:(IOSClass *)cls
                                  withIOSClass:(IOSClass *)endBefore
                              withJavaUtilList:(id<JavaUtilList>)result {
  return ComFasterxmlJacksonDatabindUtilClassUtil_findSuperTypesWithIOSClass_withIOSClass_withJavaUtilList_(cls, endBefore, result);
}

+ (void)_addSuperTypesWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                 withIOSClass:(IOSClass *)endBefore
                                       withJavaUtilCollection:(id<JavaUtilCollection>)result
                                                  withBoolean:(jboolean)addClassItself {
  ComFasterxmlJacksonDatabindUtilClassUtil__addSuperTypesWithComFasterxmlJacksonDatabindJavaType_withIOSClass_withJavaUtilCollection_withBoolean_(type, endBefore, result, addClassItself);
}

+ (void)_addRawSuperTypesWithIOSClass:(IOSClass *)cls
                         withIOSClass:(IOSClass *)endBefore
               withJavaUtilCollection:(id<JavaUtilCollection>)result
                          withBoolean:(jboolean)addClassItself {
  ComFasterxmlJacksonDatabindUtilClassUtil__addRawSuperTypesWithIOSClass_withIOSClass_withJavaUtilCollection_withBoolean_(cls, endBefore, result, addClassItself);
}

+ (NSString *)canBeABeanTypeWithIOSClass:(IOSClass *)type {
  return ComFasterxmlJacksonDatabindUtilClassUtil_canBeABeanTypeWithIOSClass_(type);
}

+ (NSString *)isLocalTypeWithIOSClass:(IOSClass *)type
                          withBoolean:(jboolean)allowNonStatic {
  return ComFasterxmlJacksonDatabindUtilClassUtil_isLocalTypeWithIOSClass_withBoolean_(type, allowNonStatic);
}

+ (IOSClass *)getOuterClassWithIOSClass:(IOSClass *)type {
  return ComFasterxmlJacksonDatabindUtilClassUtil_getOuterClassWithIOSClass_(type);
}

+ (jboolean)isProxyTypeWithIOSClass:(IOSClass *)type {
  return ComFasterxmlJacksonDatabindUtilClassUtil_isProxyTypeWithIOSClass_(type);
}

+ (jboolean)isConcreteWithIOSClass:(IOSClass *)type {
  return ComFasterxmlJacksonDatabindUtilClassUtil_isConcreteWithIOSClass_(type);
}

+ (jboolean)isConcreteWithJavaLangReflectMember:(id<JavaLangReflectMember>)member {
  return ComFasterxmlJacksonDatabindUtilClassUtil_isConcreteWithJavaLangReflectMember_(member);
}

+ (jboolean)isCollectionMapOrArrayWithIOSClass:(IOSClass *)type {
  return ComFasterxmlJacksonDatabindUtilClassUtil_isCollectionMapOrArrayWithIOSClass_(type);
}

+ (jboolean)isBogusClassWithIOSClass:(IOSClass *)cls {
  return ComFasterxmlJacksonDatabindUtilClassUtil_isBogusClassWithIOSClass_(cls);
}

+ (jboolean)isNonStaticInnerClassWithIOSClass:(IOSClass *)cls {
  return ComFasterxmlJacksonDatabindUtilClassUtil_isNonStaticInnerClassWithIOSClass_(cls);
}

+ (jboolean)isObjectOrPrimitiveWithIOSClass:(IOSClass *)cls {
  return ComFasterxmlJacksonDatabindUtilClassUtil_isObjectOrPrimitiveWithIOSClass_(cls);
}

+ (jboolean)hasClassWithId:(id)inst
              withIOSClass:(IOSClass *)raw {
  return ComFasterxmlJacksonDatabindUtilClassUtil_hasClassWithId_withIOSClass_(inst, raw);
}

+ (void)verifyMustOverrideWithIOSClass:(IOSClass *)expType
                                withId:(id)instance
                          withNSString:(NSString *)method {
  ComFasterxmlJacksonDatabindUtilClassUtil_verifyMustOverrideWithIOSClass_withId_withNSString_(expType, instance, method);
}

+ (jboolean)hasGetterSignatureWithJavaLangReflectMethod:(JavaLangReflectMethod *)m {
  return ComFasterxmlJacksonDatabindUtilClassUtil_hasGetterSignatureWithJavaLangReflectMethod_(m);
}

+ (JavaLangThrowable *)throwIfErrorWithJavaLangThrowable:(JavaLangThrowable *)t {
  return ComFasterxmlJacksonDatabindUtilClassUtil_throwIfErrorWithJavaLangThrowable_(t);
}

+ (JavaLangThrowable *)throwIfRTEWithJavaLangThrowable:(JavaLangThrowable *)t {
  return ComFasterxmlJacksonDatabindUtilClassUtil_throwIfRTEWithJavaLangThrowable_(t);
}

+ (JavaLangThrowable *)throwIfIOEWithJavaLangThrowable:(JavaLangThrowable *)t {
  return ComFasterxmlJacksonDatabindUtilClassUtil_throwIfIOEWithJavaLangThrowable_(t);
}

+ (JavaLangThrowable *)getRootCauseWithJavaLangThrowable:(JavaLangThrowable *)t {
  return ComFasterxmlJacksonDatabindUtilClassUtil_getRootCauseWithJavaLangThrowable_(t);
}

+ (JavaLangThrowable *)throwRootCauseIfIOEWithJavaLangThrowable:(JavaLangThrowable *)t {
  return ComFasterxmlJacksonDatabindUtilClassUtil_throwRootCauseIfIOEWithJavaLangThrowable_(t);
}

+ (void)throwAsIAEWithJavaLangThrowable:(JavaLangThrowable *)t {
  ComFasterxmlJacksonDatabindUtilClassUtil_throwAsIAEWithJavaLangThrowable_(t);
}

+ (void)throwAsIAEWithJavaLangThrowable:(JavaLangThrowable *)t
                           withNSString:(NSString *)msg {
  ComFasterxmlJacksonDatabindUtilClassUtil_throwAsIAEWithJavaLangThrowable_withNSString_(t, msg);
}

+ (id)throwAsMappingExceptionWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                             withJavaIoIOException:(JavaIoIOException *)e0 {
  return ComFasterxmlJacksonDatabindUtilClassUtil_throwAsMappingExceptionWithComFasterxmlJacksonDatabindDeserializationContext_withJavaIoIOException_(ctxt, e0);
}

+ (void)unwrapAndThrowAsIAEWithJavaLangThrowable:(JavaLangThrowable *)t {
  ComFasterxmlJacksonDatabindUtilClassUtil_unwrapAndThrowAsIAEWithJavaLangThrowable_(t);
}

+ (void)unwrapAndThrowAsIAEWithJavaLangThrowable:(JavaLangThrowable *)t
                                    withNSString:(NSString *)msg {
  ComFasterxmlJacksonDatabindUtilClassUtil_unwrapAndThrowAsIAEWithJavaLangThrowable_withNSString_(t, msg);
}

+ (void)closeOnFailAndThrowAsIOEWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
                                                   withJavaLangException:(JavaLangException *)fail {
  ComFasterxmlJacksonDatabindUtilClassUtil_closeOnFailAndThrowAsIOEWithComFasterxmlJacksonCoreJsonGenerator_withJavaLangException_(g, fail);
}

+ (void)closeOnFailAndThrowAsIOEWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
                                                     withJavaIoCloseable:(id<JavaIoCloseable>)toClose
                                                   withJavaLangException:(JavaLangException *)fail {
  ComFasterxmlJacksonDatabindUtilClassUtil_closeOnFailAndThrowAsIOEWithComFasterxmlJacksonCoreJsonGenerator_withJavaIoCloseable_withJavaLangException_(g, toClose, fail);
}

+ (id)createInstanceWithIOSClass:(IOSClass *)cls
                     withBoolean:(jboolean)canFixAccess {
  return ComFasterxmlJacksonDatabindUtilClassUtil_createInstanceWithIOSClass_withBoolean_(cls, canFixAccess);
}

+ (JavaLangReflectConstructor *)findConstructorWithIOSClass:(IOSClass *)cls
                                                withBoolean:(jboolean)forceAccess {
  return ComFasterxmlJacksonDatabindUtilClassUtil_findConstructorWithIOSClass_withBoolean_(cls, forceAccess);
}

+ (IOSClass *)classOfWithId:(id)inst {
  return ComFasterxmlJacksonDatabindUtilClassUtil_classOfWithId_(inst);
}

+ (IOSClass *)rawClassWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)t {
  return ComFasterxmlJacksonDatabindUtilClassUtil_rawClassWithComFasterxmlJacksonDatabindJavaType_(t);
}

+ (id)nonNullWithId:(id)valueOrNull
             withId:(id)defaultValue {
  return ComFasterxmlJacksonDatabindUtilClassUtil_nonNullWithId_withId_(valueOrNull, defaultValue);
}

+ (NSString *)nullOrToStringWithId:(id)value {
  return ComFasterxmlJacksonDatabindUtilClassUtil_nullOrToStringWithId_(value);
}

+ (NSString *)nonNullStringWithNSString:(NSString *)str {
  return ComFasterxmlJacksonDatabindUtilClassUtil_nonNullStringWithNSString_(str);
}

+ (NSString *)quotedOrWithId:(id)str
                withNSString:(NSString *)forNull {
  return ComFasterxmlJacksonDatabindUtilClassUtil_quotedOrWithId_withNSString_(str, forNull);
}

+ (NSString *)getClassDescriptionWithId:(id)classOrInstance {
  return ComFasterxmlJacksonDatabindUtilClassUtil_getClassDescriptionWithId_(classOrInstance);
}

+ (NSString *)classNameOfWithId:(id)inst {
  return ComFasterxmlJacksonDatabindUtilClassUtil_classNameOfWithId_(inst);
}

+ (NSString *)nameOfWithIOSClass:(IOSClass *)cls {
  return ComFasterxmlJacksonDatabindUtilClassUtil_nameOfWithIOSClass_(cls);
}

+ (NSString *)nameOfWithComFasterxmlJacksonDatabindUtilNamed:(id<ComFasterxmlJacksonDatabindUtilNamed>)named {
  return ComFasterxmlJacksonDatabindUtilClassUtil_nameOfWithComFasterxmlJacksonDatabindUtilNamed_(named);
}

+ (NSString *)backtickedWithNSString:(NSString *)text {
  return ComFasterxmlJacksonDatabindUtilClassUtil_backtickedWithNSString_(text);
}

+ (id)defaultValueWithIOSClass:(IOSClass *)cls {
  return ComFasterxmlJacksonDatabindUtilClassUtil_defaultValueWithIOSClass_(cls);
}

+ (IOSClass *)wrapperTypeWithIOSClass:(IOSClass *)primitiveType {
  return ComFasterxmlJacksonDatabindUtilClassUtil_wrapperTypeWithIOSClass_(primitiveType);
}

+ (IOSClass *)primitiveTypeWithIOSClass:(IOSClass *)type {
  return ComFasterxmlJacksonDatabindUtilClassUtil_primitiveTypeWithIOSClass_(type);
}

+ (void)checkAndFixAccessWithJavaLangReflectMember:(id<JavaLangReflectMember>)member {
  ComFasterxmlJacksonDatabindUtilClassUtil_checkAndFixAccessWithJavaLangReflectMember_(member);
}

+ (void)checkAndFixAccessWithJavaLangReflectMember:(id<JavaLangReflectMember>)member
                                       withBoolean:(jboolean)force {
  ComFasterxmlJacksonDatabindUtilClassUtil_checkAndFixAccessWithJavaLangReflectMember_withBoolean_(member, force);
}

+ (IOSClass *)findEnumTypeWithJavaUtilEnumSet:(JavaUtilEnumSet *)s {
  return ComFasterxmlJacksonDatabindUtilClassUtil_findEnumTypeWithJavaUtilEnumSet_(s);
}

+ (IOSClass *)findEnumTypeWithJavaUtilEnumMap:(JavaUtilEnumMap *)m {
  return ComFasterxmlJacksonDatabindUtilClassUtil_findEnumTypeWithJavaUtilEnumMap_(m);
}

+ (IOSClass *)findEnumTypeWithJavaLangEnum:(JavaLangEnum *)en {
  return ComFasterxmlJacksonDatabindUtilClassUtil_findEnumTypeWithJavaLangEnum_(en);
}

+ (IOSClass *)findEnumTypeWithIOSClass:(IOSClass *)cls {
  return ComFasterxmlJacksonDatabindUtilClassUtil_findEnumTypeWithIOSClass_(cls);
}

+ (JavaLangEnum *)findFirstAnnotatedEnumValueWithIOSClass:(IOSClass *)enumClass
                                             withIOSClass:(IOSClass *)annotationClass {
  return ComFasterxmlJacksonDatabindUtilClassUtil_findFirstAnnotatedEnumValueWithIOSClass_withIOSClass_(enumClass, annotationClass);
}

+ (jboolean)isJacksonStdImplWithId:(id)impl {
  return ComFasterxmlJacksonDatabindUtilClassUtil_isJacksonStdImplWithId_(impl);
}

+ (jboolean)isJacksonStdImplWithIOSClass:(IOSClass *)implClass {
  return ComFasterxmlJacksonDatabindUtilClassUtil_isJacksonStdImplWithIOSClass_(implClass);
}

+ (NSString *)getPackageNameWithIOSClass:(IOSClass *)cls {
  return ComFasterxmlJacksonDatabindUtilClassUtil_getPackageNameWithIOSClass_(cls);
}

+ (jboolean)hasEnclosingMethodWithIOSClass:(IOSClass *)cls {
  return ComFasterxmlJacksonDatabindUtilClassUtil_hasEnclosingMethodWithIOSClass_(cls);
}

+ (IOSObjectArray *)getDeclaredFieldsWithIOSClass:(IOSClass *)cls {
  return ComFasterxmlJacksonDatabindUtilClassUtil_getDeclaredFieldsWithIOSClass_(cls);
}

+ (IOSObjectArray *)getDeclaredMethodsWithIOSClass:(IOSClass *)cls {
  return ComFasterxmlJacksonDatabindUtilClassUtil_getDeclaredMethodsWithIOSClass_(cls);
}

+ (IOSObjectArray *)findClassAnnotationsWithIOSClass:(IOSClass *)cls {
  return ComFasterxmlJacksonDatabindUtilClassUtil_findClassAnnotationsWithIOSClass_(cls);
}

+ (IOSObjectArray *)getClassMethodsWithIOSClass:(IOSClass *)cls {
  return ComFasterxmlJacksonDatabindUtilClassUtil_getClassMethodsWithIOSClass_(cls);
}

+ (IOSObjectArray *)getConstructorsWithIOSClass:(IOSClass *)cls {
  return ComFasterxmlJacksonDatabindUtilClassUtil_getConstructorsWithIOSClass_(cls);
}

+ (IOSClass *)getDeclaringClassWithIOSClass:(IOSClass *)cls {
  return ComFasterxmlJacksonDatabindUtilClassUtil_getDeclaringClassWithIOSClass_(cls);
}

+ (id<JavaLangReflectType>)getGenericSuperclassWithIOSClass:(IOSClass *)cls {
  return ComFasterxmlJacksonDatabindUtilClassUtil_getGenericSuperclassWithIOSClass_(cls);
}

+ (IOSObjectArray *)getGenericInterfacesWithIOSClass:(IOSClass *)cls {
  return ComFasterxmlJacksonDatabindUtilClassUtil_getGenericInterfacesWithIOSClass_(cls);
}

+ (IOSClass *)getEnclosingClassWithIOSClass:(IOSClass *)cls {
  return ComFasterxmlJacksonDatabindUtilClassUtil_getEnclosingClassWithIOSClass_(cls);
}

+ (IOSObjectArray *)_interfacesWithIOSClass:(IOSClass *)cls {
  return ComFasterxmlJacksonDatabindUtilClassUtil__interfacesWithIOSClass_(cls);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x9, -1, -1, -1, 0, -1, -1 },
    { NULL, "LJavaUtilList;", 0x9, 1, 2, -1, 3, -1, -1 },
    { NULL, "LJavaUtilList;", 0x9, 4, 5, -1, 6, -1, -1 },
    { NULL, "LJavaUtilList;", 0x9, 7, 5, -1, 6, -1, -1 },
    { NULL, "LJavaUtilList;", 0x9, 1, 8, -1, 9, 10, -1 },
    { NULL, "LJavaUtilList;", 0x9, 1, 11, -1, 12, 13, -1 },
    { NULL, "V", 0xa, 14, 15, -1, 16, -1, -1 },
    { NULL, "V", 0xa, 17, 18, -1, 19, -1, -1 },
    { NULL, "LNSString;", 0x9, 20, 21, -1, 22, -1, -1 },
    { NULL, "LNSString;", 0x9, 23, 24, -1, 25, -1, -1 },
    { NULL, "LIOSClass;", 0x9, 26, 21, -1, 27, -1, -1 },
    { NULL, "Z", 0x9, 28, 21, -1, 29, -1, -1 },
    { NULL, "Z", 0x9, 30, 21, -1, 29, -1, -1 },
    { NULL, "Z", 0x9, 30, 31, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 32, 21, -1, 29, -1, -1 },
    { NULL, "Z", 0x9, 33, 21, -1, 29, -1, -1 },
    { NULL, "Z", 0x9, 34, 21, -1, 29, -1, -1 },
    { NULL, "Z", 0x9, 35, 21, -1, 29, -1, -1 },
    { NULL, "Z", 0x9, 36, 37, -1, 38, -1, -1 },
    { NULL, "V", 0x9, 39, 40, -1, 41, -1, -1 },
    { NULL, "Z", 0x9, 42, 43, -1, -1, 44, -1 },
    { NULL, "LJavaLangThrowable;", 0x9, 45, 46, -1, -1, -1, -1 },
    { NULL, "LJavaLangThrowable;", 0x9, 47, 46, -1, -1, -1, -1 },
    { NULL, "LJavaLangThrowable;", 0x9, 48, 46, 49, -1, -1, -1 },
    { NULL, "LJavaLangThrowable;", 0x9, 50, 46, -1, -1, -1, -1 },
    { NULL, "LJavaLangThrowable;", 0x9, 51, 46, 49, -1, -1, -1 },
    { NULL, "V", 0x9, 52, 46, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 52, 53, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x9, 54, 55, 56, 57, -1, -1 },
    { NULL, "V", 0x9, 58, 46, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 58, 53, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 59, 60, 49, -1, -1, -1 },
    { NULL, "V", 0x9, 59, 61, 49, -1, -1, -1 },
    { NULL, "LNSObject;", 0x9, 62, 24, 63, 64, -1, -1 },
    { NULL, "LJavaLangReflectConstructor;", 0x9, 65, 24, 63, 66, -1, -1 },
    { NULL, "LIOSClass;", 0x9, 67, 68, -1, 69, -1, -1 },
    { NULL, "LIOSClass;", 0x9, 70, 71, -1, 72, -1, -1 },
    { NULL, "LNSObject;", 0x9, 73, 74, -1, 75, -1, -1 },
    { NULL, "LNSString;", 0x9, 76, 68, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 77, 78, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 79, 80, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 81, 68, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 82, 68, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 83, 21, -1, 22, -1, -1 },
    { NULL, "LNSString;", 0x9, 83, 84, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 85, 78, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x9, 86, 21, -1, 87, -1, -1 },
    { NULL, "LIOSClass;", 0x9, 88, 21, -1, 27, -1, -1 },
    { NULL, "LIOSClass;", 0x9, 89, 21, -1, 27, -1, -1 },
    { NULL, "V", 0x9, 90, 31, -1, -1, 91, -1 },
    { NULL, "V", 0x9, 90, 92, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x9, 93, 94, -1, 95, -1, -1 },
    { NULL, "LIOSClass;", 0x9, 93, 96, -1, 97, -1, -1 },
    { NULL, "LIOSClass;", 0x9, 93, 98, -1, 99, -1, -1 },
    { NULL, "LIOSClass;", 0x9, 93, 21, -1, 100, -1, -1 },
    { NULL, "LJavaLangEnum;", 0x9, 101, 8, -1, 102, -1, -1 },
    { NULL, "Z", 0x9, 103, 68, -1, -1, -1, -1 },
    { NULL, "Z", 0x9, 103, 21, -1, 29, -1, -1 },
    { NULL, "LNSString;", 0x9, 104, 21, -1, 22, -1, -1 },
    { NULL, "Z", 0x9, 105, 21, -1, 29, -1, -1 },
    { NULL, "[LJavaLangReflectField;", 0x9, 106, 21, -1, 107, -1, -1 },
    { NULL, "[LJavaLangReflectMethod;", 0x9, 108, 21, -1, 109, -1, -1 },
    { NULL, "[LJavaLangAnnotationAnnotation;", 0x9, 110, 21, -1, 111, -1, -1 },
    { NULL, "[LJavaLangReflectMethod;", 0x9, 112, 21, -1, 109, -1, -1 },
    { NULL, "[LComFasterxmlJacksonDatabindUtilClassUtil_Ctor;", 0x9, 113, 21, -1, 114, -1, -1 },
    { NULL, "LIOSClass;", 0x9, 115, 21, -1, 27, -1, -1 },
    { NULL, "LJavaLangReflectType;", 0x9, 116, 21, -1, 117, -1, -1 },
    { NULL, "[LJavaLangReflectType;", 0x9, 118, 21, -1, 119, -1, -1 },
    { NULL, "LIOSClass;", 0x9, 120, 21, -1, 27, -1, -1 },
    { NULL, "[LIOSClass;", 0xa, 121, 21, -1, 122, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(emptyIterator);
  methods[2].selector = @selector(findSuperTypesWithComFasterxmlJacksonDatabindJavaType:withIOSClass:withBoolean:);
  methods[3].selector = @selector(findRawSuperTypesWithIOSClass:withIOSClass:withBoolean:);
  methods[4].selector = @selector(findSuperClassesWithIOSClass:withIOSClass:withBoolean:);
  methods[5].selector = @selector(findSuperTypesWithIOSClass:withIOSClass:);
  methods[6].selector = @selector(findSuperTypesWithIOSClass:withIOSClass:withJavaUtilList:);
  methods[7].selector = @selector(_addSuperTypesWithComFasterxmlJacksonDatabindJavaType:withIOSClass:withJavaUtilCollection:withBoolean:);
  methods[8].selector = @selector(_addRawSuperTypesWithIOSClass:withIOSClass:withJavaUtilCollection:withBoolean:);
  methods[9].selector = @selector(canBeABeanTypeWithIOSClass:);
  methods[10].selector = @selector(isLocalTypeWithIOSClass:withBoolean:);
  methods[11].selector = @selector(getOuterClassWithIOSClass:);
  methods[12].selector = @selector(isProxyTypeWithIOSClass:);
  methods[13].selector = @selector(isConcreteWithIOSClass:);
  methods[14].selector = @selector(isConcreteWithJavaLangReflectMember:);
  methods[15].selector = @selector(isCollectionMapOrArrayWithIOSClass:);
  methods[16].selector = @selector(isBogusClassWithIOSClass:);
  methods[17].selector = @selector(isNonStaticInnerClassWithIOSClass:);
  methods[18].selector = @selector(isObjectOrPrimitiveWithIOSClass:);
  methods[19].selector = @selector(hasClassWithId:withIOSClass:);
  methods[20].selector = @selector(verifyMustOverrideWithIOSClass:withId:withNSString:);
  methods[21].selector = @selector(hasGetterSignatureWithJavaLangReflectMethod:);
  methods[22].selector = @selector(throwIfErrorWithJavaLangThrowable:);
  methods[23].selector = @selector(throwIfRTEWithJavaLangThrowable:);
  methods[24].selector = @selector(throwIfIOEWithJavaLangThrowable:);
  methods[25].selector = @selector(getRootCauseWithJavaLangThrowable:);
  methods[26].selector = @selector(throwRootCauseIfIOEWithJavaLangThrowable:);
  methods[27].selector = @selector(throwAsIAEWithJavaLangThrowable:);
  methods[28].selector = @selector(throwAsIAEWithJavaLangThrowable:withNSString:);
  methods[29].selector = @selector(throwAsMappingExceptionWithComFasterxmlJacksonDatabindDeserializationContext:withJavaIoIOException:);
  methods[30].selector = @selector(unwrapAndThrowAsIAEWithJavaLangThrowable:);
  methods[31].selector = @selector(unwrapAndThrowAsIAEWithJavaLangThrowable:withNSString:);
  methods[32].selector = @selector(closeOnFailAndThrowAsIOEWithComFasterxmlJacksonCoreJsonGenerator:withJavaLangException:);
  methods[33].selector = @selector(closeOnFailAndThrowAsIOEWithComFasterxmlJacksonCoreJsonGenerator:withJavaIoCloseable:withJavaLangException:);
  methods[34].selector = @selector(createInstanceWithIOSClass:withBoolean:);
  methods[35].selector = @selector(findConstructorWithIOSClass:withBoolean:);
  methods[36].selector = @selector(classOfWithId:);
  methods[37].selector = @selector(rawClassWithComFasterxmlJacksonDatabindJavaType:);
  methods[38].selector = @selector(nonNullWithId:withId:);
  methods[39].selector = @selector(nullOrToStringWithId:);
  methods[40].selector = @selector(nonNullStringWithNSString:);
  methods[41].selector = @selector(quotedOrWithId:withNSString:);
  methods[42].selector = @selector(getClassDescriptionWithId:);
  methods[43].selector = @selector(classNameOfWithId:);
  methods[44].selector = @selector(nameOfWithIOSClass:);
  methods[45].selector = @selector(nameOfWithComFasterxmlJacksonDatabindUtilNamed:);
  methods[46].selector = @selector(backtickedWithNSString:);
  methods[47].selector = @selector(defaultValueWithIOSClass:);
  methods[48].selector = @selector(wrapperTypeWithIOSClass:);
  methods[49].selector = @selector(primitiveTypeWithIOSClass:);
  methods[50].selector = @selector(checkAndFixAccessWithJavaLangReflectMember:);
  methods[51].selector = @selector(checkAndFixAccessWithJavaLangReflectMember:withBoolean:);
  methods[52].selector = @selector(findEnumTypeWithJavaUtilEnumSet:);
  methods[53].selector = @selector(findEnumTypeWithJavaUtilEnumMap:);
  methods[54].selector = @selector(findEnumTypeWithJavaLangEnum:);
  methods[55].selector = @selector(findEnumTypeWithIOSClass:);
  methods[56].selector = @selector(findFirstAnnotatedEnumValueWithIOSClass:withIOSClass:);
  methods[57].selector = @selector(isJacksonStdImplWithId:);
  methods[58].selector = @selector(isJacksonStdImplWithIOSClass:);
  methods[59].selector = @selector(getPackageNameWithIOSClass:);
  methods[60].selector = @selector(hasEnclosingMethodWithIOSClass:);
  methods[61].selector = @selector(getDeclaredFieldsWithIOSClass:);
  methods[62].selector = @selector(getDeclaredMethodsWithIOSClass:);
  methods[63].selector = @selector(findClassAnnotationsWithIOSClass:);
  methods[64].selector = @selector(getClassMethodsWithIOSClass:);
  methods[65].selector = @selector(getConstructorsWithIOSClass:);
  methods[66].selector = @selector(getDeclaringClassWithIOSClass:);
  methods[67].selector = @selector(getGenericSuperclassWithIOSClass:);
  methods[68].selector = @selector(getGenericInterfacesWithIOSClass:);
  methods[69].selector = @selector(getEnclosingClassWithIOSClass:);
  methods[70].selector = @selector(_interfacesWithIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "CLS_OBJECT", "LIOSClass;", .constantValue.asLong = 0, 0x1a, -1, 123, 124, -1 },
    { "NO_ANNOTATIONS", "[LJavaLangAnnotationAnnotation;", .constantValue.asLong = 0, 0x1a, -1, 125, -1, -1 },
    { "NO_CTORS", "[LComFasterxmlJacksonDatabindUtilClassUtil_Ctor;", .constantValue.asLong = 0, 0x1a, -1, 126, -1, -1 },
    { "EMPTY_ITERATOR", "LJavaUtilIterator;", .constantValue.asLong = 0, 0x1a, -1, 127, 128, -1 },
  };
  static const void *ptrTable[] = { "<T:Ljava/lang/Object;>()Ljava/util/Iterator<TT;>;", "findSuperTypes", "LComFasterxmlJacksonDatabindJavaType;LIOSClass;Z", "(Lcom/fasterxml/jackson/databind/JavaType;Ljava/lang/Class<*>;Z)Ljava/util/List<Lcom/fasterxml/jackson/databind/JavaType;>;", "findRawSuperTypes", "LIOSClass;LIOSClass;Z", "(Ljava/lang/Class<*>;Ljava/lang/Class<*>;Z)Ljava/util/List<Ljava/lang/Class<*>;>;", "findSuperClasses", "LIOSClass;LIOSClass;", "(Ljava/lang/Class<*>;Ljava/lang/Class<*>;)Ljava/util/List<Ljava/lang/Class<*>;>;", (void *)&ComFasterxmlJacksonDatabindUtilClassUtil__Annotations$0, "LIOSClass;LIOSClass;LJavaUtilList;", "(Ljava/lang/Class<*>;Ljava/lang/Class<*>;Ljava/util/List<Ljava/lang/Class<*>;>;)Ljava/util/List<Ljava/lang/Class<*>;>;", (void *)&ComFasterxmlJacksonDatabindUtilClassUtil__Annotations$1, "_addSuperTypes", "LComFasterxmlJacksonDatabindJavaType;LIOSClass;LJavaUtilCollection;Z", "(Lcom/fasterxml/jackson/databind/JavaType;Ljava/lang/Class<*>;Ljava/util/Collection<Lcom/fasterxml/jackson/databind/JavaType;>;Z)V", "_addRawSuperTypes", "LIOSClass;LIOSClass;LJavaUtilCollection;Z", "(Ljava/lang/Class<*>;Ljava/lang/Class<*>;Ljava/util/Collection<Ljava/lang/Class<*>;>;Z)V", "canBeABeanType", "LIOSClass;", "(Ljava/lang/Class<*>;)Ljava/lang/String;", "isLocalType", "LIOSClass;Z", "(Ljava/lang/Class<*>;Z)Ljava/lang/String;", "getOuterClass", "(Ljava/lang/Class<*>;)Ljava/lang/Class<*>;", "isProxyType", "(Ljava/lang/Class<*>;)Z", "isConcrete", "LJavaLangReflectMember;", "isCollectionMapOrArray", "isBogusClass", "isNonStaticInnerClass", "isObjectOrPrimitive", "hasClass", "LNSObject;LIOSClass;", "(Ljava/lang/Object;Ljava/lang/Class<*>;)Z", "verifyMustOverride", "LIOSClass;LNSObject;LNSString;", "(Ljava/lang/Class<*>;Ljava/lang/Object;Ljava/lang/String;)V", "hasGetterSignature", "LJavaLangReflectMethod;", (void *)&ComFasterxmlJacksonDatabindUtilClassUtil__Annotations$2, "throwIfError", "LJavaLangThrowable;", "throwIfRTE", "throwIfIOE", "LJavaIoIOException;", "getRootCause", "throwRootCauseIfIOE", "throwAsIAE", "LJavaLangThrowable;LNSString;", "throwAsMappingException", "LComFasterxmlJacksonDatabindDeserializationContext;LJavaIoIOException;", "LComFasterxmlJacksonDatabindJsonMappingException;", "<T:Ljava/lang/Object;>(Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/io/IOException;)TT;", "unwrapAndThrowAsIAE", "closeOnFailAndThrowAsIOE", "LComFasterxmlJacksonCoreJsonGenerator;LJavaLangException;", "LComFasterxmlJacksonCoreJsonGenerator;LJavaIoCloseable;LJavaLangException;", "createInstance", "LJavaLangIllegalArgumentException;", "<T:Ljava/lang/Object;>(Ljava/lang/Class<TT;>;Z)TT;", "findConstructor", "<T:Ljava/lang/Object;>(Ljava/lang/Class<TT;>;Z)Ljava/lang/reflect/Constructor<TT;>;", "classOf", "LNSObject;", "(Ljava/lang/Object;)Ljava/lang/Class<*>;", "rawClass", "LComFasterxmlJacksonDatabindJavaType;", "(Lcom/fasterxml/jackson/databind/JavaType;)Ljava/lang/Class<*>;", "nonNull", "LNSObject;LNSObject;", "<T:Ljava/lang/Object;>(TT;TT;)TT;", "nullOrToString", "nonNullString", "LNSString;", "quotedOr", "LNSObject;LNSString;", "getClassDescription", "classNameOf", "nameOf", "LComFasterxmlJacksonDatabindUtilNamed;", "backticked", "defaultValue", "(Ljava/lang/Class<*>;)Ljava/lang/Object;", "wrapperType", "primitiveType", "checkAndFixAccess", (void *)&ComFasterxmlJacksonDatabindUtilClassUtil__Annotations$3, "LJavaLangReflectMember;Z", "findEnumType", "LJavaUtilEnumSet;", "(Ljava/util/EnumSet<*>;)Ljava/lang/Class<+Ljava/lang/Enum<*>;>;", "LJavaUtilEnumMap;", "(Ljava/util/EnumMap<**>;)Ljava/lang/Class<+Ljava/lang/Enum<*>;>;", "LJavaLangEnum;", "(Ljava/lang/Enum<*>;)Ljava/lang/Class<+Ljava/lang/Enum<*>;>;", "(Ljava/lang/Class<*>;)Ljava/lang/Class<+Ljava/lang/Enum<*>;>;", "findFirstAnnotatedEnumValue", "<T::Ljava/lang/annotation/Annotation;>(Ljava/lang/Class<Ljava/lang/Enum<*>;>;Ljava/lang/Class<TT;>;)Ljava/lang/Enum<*>;", "isJacksonStdImpl", "getPackageName", "hasEnclosingMethod", "getDeclaredFields", "(Ljava/lang/Class<*>;)[Ljava/lang/reflect/Field;", "getDeclaredMethods", "(Ljava/lang/Class<*>;)[Ljava/lang/reflect/Method;", "findClassAnnotations", "(Ljava/lang/Class<*>;)[Ljava/lang/annotation/Annotation;", "getClassMethods", "getConstructors", "(Ljava/lang/Class<*>;)[Lcom/fasterxml/jackson/databind/util/ClassUtil$Ctor;", "getDeclaringClass", "getGenericSuperclass", "(Ljava/lang/Class<*>;)Ljava/lang/reflect/Type;", "getGenericInterfaces", "(Ljava/lang/Class<*>;)[Ljava/lang/reflect/Type;", "getEnclosingClass", "_interfaces", "(Ljava/lang/Class<*>;)[Ljava/lang/Class<*>;", &ComFasterxmlJacksonDatabindUtilClassUtil_CLS_OBJECT, "Ljava/lang/Class<*>;", &ComFasterxmlJacksonDatabindUtilClassUtil_NO_ANNOTATIONS, &ComFasterxmlJacksonDatabindUtilClassUtil_NO_CTORS, &ComFasterxmlJacksonDatabindUtilClassUtil_EMPTY_ITERATOR, "Ljava/util/Iterator<*>;", "LComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator;LComFasterxmlJacksonDatabindUtilClassUtil_Ctor;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindUtilClassUtil = { "ClassUtil", "com.fasterxml.jackson.databind.util", ptrTable, methods, fields, 7, 0x11, 71, 4, -1, 129, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindUtilClassUtil;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindUtilClassUtil class]) {
    JreStrongAssign(&ComFasterxmlJacksonDatabindUtilClassUtil_CLS_OBJECT, NSObject_class_());
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindUtilClassUtil_NO_ANNOTATIONS, [IOSObjectArray newArrayWithLength:0 type:JavaLangAnnotationAnnotation_class_()]);
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindUtilClassUtil_NO_CTORS, [IOSObjectArray newArrayWithLength:0 type:ComFasterxmlJacksonDatabindUtilClassUtil_Ctor_class_()]);
    JreStrongAssign(&ComFasterxmlJacksonDatabindUtilClassUtil_EMPTY_ITERATOR, JavaUtilCollections_emptyIterator());
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindUtilClassUtil)
  }
}

@end

void ComFasterxmlJacksonDatabindUtilClassUtil_init(ComFasterxmlJacksonDatabindUtilClassUtil *self) {
  NSObject_init(self);
}

ComFasterxmlJacksonDatabindUtilClassUtil *new_ComFasterxmlJacksonDatabindUtilClassUtil_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindUtilClassUtil, init)
}

ComFasterxmlJacksonDatabindUtilClassUtil *create_ComFasterxmlJacksonDatabindUtilClassUtil_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindUtilClassUtil, init)
}

id<JavaUtilIterator> ComFasterxmlJacksonDatabindUtilClassUtil_emptyIterator() {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  return ComFasterxmlJacksonDatabindUtilClassUtil_EMPTY_ITERATOR;
}

id<JavaUtilList> ComFasterxmlJacksonDatabindUtilClassUtil_findSuperTypesWithComFasterxmlJacksonDatabindJavaType_withIOSClass_withBoolean_(ComFasterxmlJacksonDatabindJavaType *type, IOSClass *endBefore, jboolean addClassItself) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if ((type == nil) || [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(type)) hasRawClassWithIOSClass:endBefore] || [type hasRawClassWithIOSClass:NSObject_class_()]) {
    return JavaUtilCollections_emptyList();
  }
  id<JavaUtilList> result = create_JavaUtilArrayList_initWithInt_(8);
  ComFasterxmlJacksonDatabindUtilClassUtil__addSuperTypesWithComFasterxmlJacksonDatabindJavaType_withIOSClass_withJavaUtilCollection_withBoolean_(type, endBefore, result, addClassItself);
  return result;
}

id<JavaUtilList> ComFasterxmlJacksonDatabindUtilClassUtil_findRawSuperTypesWithIOSClass_withIOSClass_withBoolean_(IOSClass *cls, IOSClass *endBefore, jboolean addClassItself) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if ((cls == nil) || (cls == endBefore) || (cls == NSObject_class_())) {
    return JavaUtilCollections_emptyList();
  }
  id<JavaUtilList> result = create_JavaUtilArrayList_initWithInt_(8);
  ComFasterxmlJacksonDatabindUtilClassUtil__addRawSuperTypesWithIOSClass_withIOSClass_withJavaUtilCollection_withBoolean_(cls, endBefore, result, addClassItself);
  return result;
}

id<JavaUtilList> ComFasterxmlJacksonDatabindUtilClassUtil_findSuperClassesWithIOSClass_withIOSClass_withBoolean_(IOSClass *cls, IOSClass *endBefore, jboolean addClassItself) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  id<JavaUtilList> result = create_JavaUtilLinkedList_init();
  if ((cls != nil) && (cls != endBefore)) {
    if (addClassItself) {
      [result addWithId:cls];
    }
    while ((cls = [((IOSClass *) nil_chk(cls)) getSuperclass]) != nil) {
      if (cls == endBefore) {
        break;
      }
      [result addWithId:cls];
    }
  }
  return result;
}

id<JavaUtilList> ComFasterxmlJacksonDatabindUtilClassUtil_findSuperTypesWithIOSClass_withIOSClass_(IOSClass *cls, IOSClass *endBefore) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  return ComFasterxmlJacksonDatabindUtilClassUtil_findSuperTypesWithIOSClass_withIOSClass_withJavaUtilList_(cls, endBefore, create_JavaUtilArrayList_initWithInt_(8));
}

id<JavaUtilList> ComFasterxmlJacksonDatabindUtilClassUtil_findSuperTypesWithIOSClass_withIOSClass_withJavaUtilList_(IOSClass *cls, IOSClass *endBefore, id<JavaUtilList> result) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  ComFasterxmlJacksonDatabindUtilClassUtil__addRawSuperTypesWithIOSClass_withIOSClass_withJavaUtilCollection_withBoolean_(cls, endBefore, result, false);
  return result;
}

void ComFasterxmlJacksonDatabindUtilClassUtil__addSuperTypesWithComFasterxmlJacksonDatabindJavaType_withIOSClass_withJavaUtilCollection_withBoolean_(ComFasterxmlJacksonDatabindJavaType *type, IOSClass *endBefore, id<JavaUtilCollection> result, jboolean addClassItself) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if (type == nil) {
    return;
  }
  IOSClass *cls = [type getRawClass];
  if (cls == endBefore || cls == NSObject_class_()) {
    return;
  }
  if (addClassItself) {
    if ([((id<JavaUtilCollection>) nil_chk(result)) containsWithId:type]) {
      return;
    }
    [result addWithId:type];
  }
  for (ComFasterxmlJacksonDatabindJavaType * __strong intCls in nil_chk([type getInterfaces])) {
    ComFasterxmlJacksonDatabindUtilClassUtil__addSuperTypesWithComFasterxmlJacksonDatabindJavaType_withIOSClass_withJavaUtilCollection_withBoolean_(intCls, endBefore, result, true);
  }
  ComFasterxmlJacksonDatabindUtilClassUtil__addSuperTypesWithComFasterxmlJacksonDatabindJavaType_withIOSClass_withJavaUtilCollection_withBoolean_([type getSuperClass], endBefore, result, true);
}

void ComFasterxmlJacksonDatabindUtilClassUtil__addRawSuperTypesWithIOSClass_withIOSClass_withJavaUtilCollection_withBoolean_(IOSClass *cls, IOSClass *endBefore, id<JavaUtilCollection> result, jboolean addClassItself) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if (cls == endBefore || cls == nil || cls == NSObject_class_()) {
    return;
  }
  if (addClassItself) {
    if ([((id<JavaUtilCollection>) nil_chk(result)) containsWithId:cls]) {
      return;
    }
    [result addWithId:cls];
  }
  {
    IOSObjectArray *a__ = ComFasterxmlJacksonDatabindUtilClassUtil__interfacesWithIOSClass_(cls);
    IOSClass * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    IOSClass * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      IOSClass *intCls = *b__++;
      ComFasterxmlJacksonDatabindUtilClassUtil__addRawSuperTypesWithIOSClass_withIOSClass_withJavaUtilCollection_withBoolean_(intCls, endBefore, result, true);
    }
  }
  ComFasterxmlJacksonDatabindUtilClassUtil__addRawSuperTypesWithIOSClass_withIOSClass_withJavaUtilCollection_withBoolean_([cls getSuperclass], endBefore, result, true);
}

NSString *ComFasterxmlJacksonDatabindUtilClassUtil_canBeABeanTypeWithIOSClass_(IOSClass *type) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if ([((IOSClass *) nil_chk(type)) isAnnotation]) {
    return @"annotation";
  }
  if ([type isArray]) {
    return @"array";
  }
  if ([type isEnum]) {
    return @"enum";
  }
  if ([type isPrimitive]) {
    return @"primitive";
  }
  return nil;
}

NSString *ComFasterxmlJacksonDatabindUtilClassUtil_isLocalTypeWithIOSClass_withBoolean_(IOSClass *type, jboolean allowNonStatic) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  @try {
    if (ComFasterxmlJacksonDatabindUtilClassUtil_hasEnclosingMethodWithIOSClass_(type)) {
      return @"local/anonymous";
    }
    if (!allowNonStatic) {
      if (!JavaLangReflectModifier_isStaticWithInt_([((IOSClass *) nil_chk(type)) getModifiers])) {
        if (ComFasterxmlJacksonDatabindUtilClassUtil_getEnclosingClassWithIOSClass_(type) != nil) {
          return @"non-static member class";
        }
      }
    }
  }
  @catch (JavaLangSecurityException *e) {
  }
  @catch (JavaLangNullPointerException *e) {
  }
  return nil;
}

IOSClass *ComFasterxmlJacksonDatabindUtilClassUtil_getOuterClassWithIOSClass_(IOSClass *type) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  @try {
    if (ComFasterxmlJacksonDatabindUtilClassUtil_hasEnclosingMethodWithIOSClass_(type)) {
      return nil;
    }
    if (!JavaLangReflectModifier_isStaticWithInt_([((IOSClass *) nil_chk(type)) getModifiers])) {
      return ComFasterxmlJacksonDatabindUtilClassUtil_getEnclosingClassWithIOSClass_(type);
    }
  }
  @catch (JavaLangSecurityException *e) {
  }
  return nil;
}

jboolean ComFasterxmlJacksonDatabindUtilClassUtil_isProxyTypeWithIOSClass_(IOSClass *type) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  NSString *name = [((IOSClass *) nil_chk(type)) getName];
  if ([((NSString *) nil_chk(name)) java_hasPrefix:@"net.sf.cglib.proxy."] || [name java_hasPrefix:@"org.hibernate.proxy."]) {
    return true;
  }
  return false;
}

jboolean ComFasterxmlJacksonDatabindUtilClassUtil_isConcreteWithIOSClass_(IOSClass *type) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  jint mod = [((IOSClass *) nil_chk(type)) getModifiers];
  return (mod & (JavaLangReflectModifier_INTERFACE | JavaLangReflectModifier_ABSTRACT)) == 0;
}

jboolean ComFasterxmlJacksonDatabindUtilClassUtil_isConcreteWithJavaLangReflectMember_(id<JavaLangReflectMember> member) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  jint mod = [((id<JavaLangReflectMember>) nil_chk(member)) getModifiers];
  return (mod & (JavaLangReflectModifier_INTERFACE | JavaLangReflectModifier_ABSTRACT)) == 0;
}

jboolean ComFasterxmlJacksonDatabindUtilClassUtil_isCollectionMapOrArrayWithIOSClass_(IOSClass *type) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if ([((IOSClass *) nil_chk(type)) isArray]) return true;
  if ([JavaUtilCollection_class_() isAssignableFrom:type]) return true;
  if ([JavaUtilMap_class_() isAssignableFrom:type]) return true;
  return false;
}

jboolean ComFasterxmlJacksonDatabindUtilClassUtil_isBogusClassWithIOSClass_(IOSClass *cls) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  return (cls == JavaLangVoid_class_() || cls == JreLoadStatic(JavaLangVoid, TYPE) || cls == ComFasterxmlJacksonDatabindAnnotationNoClass_class_());
}

jboolean ComFasterxmlJacksonDatabindUtilClassUtil_isNonStaticInnerClassWithIOSClass_(IOSClass *cls) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  return !JavaLangReflectModifier_isStaticWithInt_([((IOSClass *) nil_chk(cls)) getModifiers]) && (ComFasterxmlJacksonDatabindUtilClassUtil_getEnclosingClassWithIOSClass_(cls) != nil);
}

jboolean ComFasterxmlJacksonDatabindUtilClassUtil_isObjectOrPrimitiveWithIOSClass_(IOSClass *cls) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  return (cls == ComFasterxmlJacksonDatabindUtilClassUtil_CLS_OBJECT) || [((IOSClass *) nil_chk(cls)) isPrimitive];
}

jboolean ComFasterxmlJacksonDatabindUtilClassUtil_hasClassWithId_withIOSClass_(id inst, IOSClass *raw) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  return (inst != nil) && ([nil_chk(inst) java_getClass] == raw);
}

void ComFasterxmlJacksonDatabindUtilClassUtil_verifyMustOverrideWithIOSClass_withId_withNSString_(IOSClass *expType, id instance, NSString *method) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if ([nil_chk(instance) java_getClass] != expType) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(NSString_java_formatWithNSString_withNSObjectArray_(@"Sub-class %s (of class %s) must override method '%s'", [IOSObjectArray arrayWithObjects:(id[]){ [[instance java_getClass] getName], [((IOSClass *) nil_chk(expType)) getName], method } count:3 type:NSObject_class_()]));
  }
}

jboolean ComFasterxmlJacksonDatabindUtilClassUtil_hasGetterSignatureWithJavaLangReflectMethod_(JavaLangReflectMethod *m) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if (JavaLangReflectModifier_isStaticWithInt_([((JavaLangReflectMethod *) nil_chk(m)) getModifiers])) {
    return false;
  }
  IOSObjectArray *pts = [m getParameterTypes];
  if (pts != nil && pts->size_ != 0) {
    return false;
  }
  if (JreLoadStatic(JavaLangVoid, TYPE) == [m getReturnType]) {
    return false;
  }
  return true;
}

JavaLangThrowable *ComFasterxmlJacksonDatabindUtilClassUtil_throwIfErrorWithJavaLangThrowable_(JavaLangThrowable *t) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if ([t isKindOfClass:[JavaLangError class]]) {
    @throw nil_chk((JavaLangError *) cast_chk(t, [JavaLangError class]));
  }
  return t;
}

JavaLangThrowable *ComFasterxmlJacksonDatabindUtilClassUtil_throwIfRTEWithJavaLangThrowable_(JavaLangThrowable *t) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if ([t isKindOfClass:[JavaLangRuntimeException class]]) {
    @throw nil_chk((JavaLangRuntimeException *) cast_chk(t, [JavaLangRuntimeException class]));
  }
  return t;
}

JavaLangThrowable *ComFasterxmlJacksonDatabindUtilClassUtil_throwIfIOEWithJavaLangThrowable_(JavaLangThrowable *t) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if ([t isKindOfClass:[JavaIoIOException class]]) {
    @throw nil_chk((JavaIoIOException *) cast_chk(t, [JavaIoIOException class]));
  }
  return t;
}

JavaLangThrowable *ComFasterxmlJacksonDatabindUtilClassUtil_getRootCauseWithJavaLangThrowable_(JavaLangThrowable *t) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  while ([((JavaLangThrowable *) nil_chk(t)) getCause] != nil) {
    t = [t getCause];
  }
  return t;
}

JavaLangThrowable *ComFasterxmlJacksonDatabindUtilClassUtil_throwRootCauseIfIOEWithJavaLangThrowable_(JavaLangThrowable *t) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  return ComFasterxmlJacksonDatabindUtilClassUtil_throwIfIOEWithJavaLangThrowable_(ComFasterxmlJacksonDatabindUtilClassUtil_getRootCauseWithJavaLangThrowable_(t));
}

void ComFasterxmlJacksonDatabindUtilClassUtil_throwAsIAEWithJavaLangThrowable_(JavaLangThrowable *t) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  ComFasterxmlJacksonDatabindUtilClassUtil_throwAsIAEWithJavaLangThrowable_withNSString_(t, [((JavaLangThrowable *) nil_chk(t)) getMessage]);
}

void ComFasterxmlJacksonDatabindUtilClassUtil_throwAsIAEWithJavaLangThrowable_withNSString_(JavaLangThrowable *t, NSString *msg) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  ComFasterxmlJacksonDatabindUtilClassUtil_throwIfRTEWithJavaLangThrowable_(t);
  ComFasterxmlJacksonDatabindUtilClassUtil_throwIfErrorWithJavaLangThrowable_(t);
  @throw create_JavaLangIllegalArgumentException_initWithNSString_withJavaLangThrowable_(msg, t);
}

id ComFasterxmlJacksonDatabindUtilClassUtil_throwAsMappingExceptionWithComFasterxmlJacksonDatabindDeserializationContext_withJavaIoIOException_(ComFasterxmlJacksonDatabindDeserializationContext *ctxt, JavaIoIOException *e0) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if ([e0 isKindOfClass:[ComFasterxmlJacksonDatabindJsonMappingException class]]) {
    @throw nil_chk((ComFasterxmlJacksonDatabindJsonMappingException *) cast_chk(e0, [ComFasterxmlJacksonDatabindJsonMappingException class]));
  }
  ComFasterxmlJacksonDatabindJsonMappingException *e = ComFasterxmlJacksonDatabindJsonMappingException_fromWithComFasterxmlJacksonDatabindDeserializationContext_withNSString_(ctxt, [((JavaIoIOException *) nil_chk(e0)) getMessage]);
  [((ComFasterxmlJacksonDatabindJsonMappingException *) nil_chk(e)) initCauseWithJavaLangThrowable:e0];
  @throw e;
}

void ComFasterxmlJacksonDatabindUtilClassUtil_unwrapAndThrowAsIAEWithJavaLangThrowable_(JavaLangThrowable *t) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  ComFasterxmlJacksonDatabindUtilClassUtil_throwAsIAEWithJavaLangThrowable_(ComFasterxmlJacksonDatabindUtilClassUtil_getRootCauseWithJavaLangThrowable_(t));
}

void ComFasterxmlJacksonDatabindUtilClassUtil_unwrapAndThrowAsIAEWithJavaLangThrowable_withNSString_(JavaLangThrowable *t, NSString *msg) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  ComFasterxmlJacksonDatabindUtilClassUtil_throwAsIAEWithJavaLangThrowable_withNSString_(ComFasterxmlJacksonDatabindUtilClassUtil_getRootCauseWithJavaLangThrowable_(t), msg);
}

void ComFasterxmlJacksonDatabindUtilClassUtil_closeOnFailAndThrowAsIOEWithComFasterxmlJacksonCoreJsonGenerator_withJavaLangException_(ComFasterxmlJacksonCoreJsonGenerator *g, JavaLangException *fail) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) disableWithComFasterxmlJacksonCoreJsonGenerator_Feature:JreLoadEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, AUTO_CLOSE_JSON_CONTENT)];
  @try {
    [g close];
  }
  @catch (JavaLangException *e) {
    [((JavaLangException *) nil_chk(fail)) addSuppressedWithJavaLangThrowable:e];
  }
  ComFasterxmlJacksonDatabindUtilClassUtil_throwIfIOEWithJavaLangThrowable_(fail);
  ComFasterxmlJacksonDatabindUtilClassUtil_throwIfRTEWithJavaLangThrowable_(fail);
  @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(fail);
}

void ComFasterxmlJacksonDatabindUtilClassUtil_closeOnFailAndThrowAsIOEWithComFasterxmlJacksonCoreJsonGenerator_withJavaIoCloseable_withJavaLangException_(ComFasterxmlJacksonCoreJsonGenerator *g, id<JavaIoCloseable> toClose, JavaLangException *fail) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if (g != nil) {
    [g disableWithComFasterxmlJacksonCoreJsonGenerator_Feature:JreLoadEnum(ComFasterxmlJacksonCoreJsonGenerator_Feature, AUTO_CLOSE_JSON_CONTENT)];
    @try {
      [g close];
    }
    @catch (JavaLangException *e) {
      [((JavaLangException *) nil_chk(fail)) addSuppressedWithJavaLangThrowable:e];
    }
  }
  if (toClose != nil) {
    @try {
      [toClose close];
    }
    @catch (JavaLangException *e) {
      [((JavaLangException *) nil_chk(fail)) addSuppressedWithJavaLangThrowable:e];
    }
  }
  ComFasterxmlJacksonDatabindUtilClassUtil_throwIfIOEWithJavaLangThrowable_(fail);
  ComFasterxmlJacksonDatabindUtilClassUtil_throwIfRTEWithJavaLangThrowable_(fail);
  @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(fail);
}

id ComFasterxmlJacksonDatabindUtilClassUtil_createInstanceWithIOSClass_withBoolean_(IOSClass *cls, jboolean canFixAccess) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  JavaLangReflectConstructor *ctor = ComFasterxmlJacksonDatabindUtilClassUtil_findConstructorWithIOSClass_withBoolean_(cls, canFixAccess);
  if (ctor == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"Class ", [((IOSClass *) nil_chk(cls)) getName], @" has no default (no arg) constructor"));
  }
  @try {
    return [ctor newInstanceWithNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]];
  }
  @catch (JavaLangException *e) {
    ComFasterxmlJacksonDatabindUtilClassUtil_unwrapAndThrowAsIAEWithJavaLangThrowable_withNSString_(e, JreStrcat("$$$$", @"Failed to instantiate class ", [((IOSClass *) nil_chk(cls)) getName], @", problem: ", [e getMessage]));
    return nil;
  }
}

JavaLangReflectConstructor *ComFasterxmlJacksonDatabindUtilClassUtil_findConstructorWithIOSClass_withBoolean_(IOSClass *cls, jboolean forceAccess) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  @try {
    JavaLangReflectConstructor *ctor = [((IOSClass *) nil_chk(cls)) getDeclaredConstructor:[IOSObjectArray arrayWithLength:0 type:IOSClass_class_()]];
    if (forceAccess) {
      ComFasterxmlJacksonDatabindUtilClassUtil_checkAndFixAccessWithJavaLangReflectMember_withBoolean_(ctor, forceAccess);
    }
    else {
      if (!JavaLangReflectModifier_isPublicWithInt_([((JavaLangReflectConstructor *) nil_chk(ctor)) getModifiers])) {
        @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"Default constructor for ", [cls getName], @" is not accessible (non-public?): not allowed to try modify access via Reflection: cannot instantiate type"));
      }
    }
    return ctor;
  }
  @catch (JavaLangNoSuchMethodException *e) {
    
    ;
  }
  @catch (JavaLangException *e) {
    ComFasterxmlJacksonDatabindUtilClassUtil_unwrapAndThrowAsIAEWithJavaLangThrowable_withNSString_(e, JreStrcat("$$$$", @"Failed to find default constructor of class ", [cls getName], @", problem: ", [e getMessage]));
  }
  return nil;
}

IOSClass *ComFasterxmlJacksonDatabindUtilClassUtil_classOfWithId_(id inst) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if (inst == nil) {
    return nil;
  }
  return [inst java_getClass];
}

IOSClass *ComFasterxmlJacksonDatabindUtilClassUtil_rawClassWithComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindJavaType *t) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if (t == nil) {
    return nil;
  }
  return [t getRawClass];
}

id ComFasterxmlJacksonDatabindUtilClassUtil_nonNullWithId_withId_(id valueOrNull, id defaultValue) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  return (valueOrNull == nil) ? defaultValue : valueOrNull;
}

NSString *ComFasterxmlJacksonDatabindUtilClassUtil_nullOrToStringWithId_(id value) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if (value == nil) {
    return nil;
  }
  return [value description];
}

NSString *ComFasterxmlJacksonDatabindUtilClassUtil_nonNullStringWithNSString_(NSString *str) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if (str == nil) {
    return @"";
  }
  return str;
}

NSString *ComFasterxmlJacksonDatabindUtilClassUtil_quotedOrWithId_withNSString_(id str, NSString *forNull) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if (str == nil) {
    return forNull;
  }
  return NSString_java_formatWithNSString_withNSObjectArray_(@"\"%s\"", [IOSObjectArray arrayWithObjects:(id[]){ str } count:1 type:NSObject_class_()]);
}

NSString *ComFasterxmlJacksonDatabindUtilClassUtil_getClassDescriptionWithId_(id classOrInstance) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if (classOrInstance == nil) {
    return @"unknown";
  }
  IOSClass *cls = ([classOrInstance isKindOfClass:[IOSClass class]]) ? (IOSClass *) cast_chk(classOrInstance, [IOSClass class]) : [classOrInstance java_getClass];
  return ComFasterxmlJacksonDatabindUtilClassUtil_nameOfWithIOSClass_(cls);
}

NSString *ComFasterxmlJacksonDatabindUtilClassUtil_classNameOfWithId_(id inst) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if (inst == nil) {
    return @"[null]";
  }
  return ComFasterxmlJacksonDatabindUtilClassUtil_nameOfWithIOSClass_([inst java_getClass]);
}

NSString *ComFasterxmlJacksonDatabindUtilClassUtil_nameOfWithIOSClass_(IOSClass *cls) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if (cls == nil) {
    return @"[null]";
  }
  jint index = 0;
  while ([((IOSClass *) nil_chk(cls)) isArray]) {
    ++index;
    cls = [cls getComponentType];
  }
  NSString *base = [cls isPrimitive] ? [cls getSimpleName] : [cls getName];
  if (index > 0) {
    JavaLangStringBuilder *sb = create_JavaLangStringBuilder_initWithNSString_(base);
    do {
      [sb appendWithNSString:@"[]"];
    }
    while (--index > 0);
    base = [sb description];
  }
  return ComFasterxmlJacksonDatabindUtilClassUtil_backtickedWithNSString_(base);
}

NSString *ComFasterxmlJacksonDatabindUtilClassUtil_nameOfWithComFasterxmlJacksonDatabindUtilNamed_(id<ComFasterxmlJacksonDatabindUtilNamed> named) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if (named == nil) {
    return @"[null]";
  }
  return ComFasterxmlJacksonDatabindUtilClassUtil_backtickedWithNSString_([named getName]);
}

NSString *ComFasterxmlJacksonDatabindUtilClassUtil_backtickedWithNSString_(NSString *text) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if (text == nil) {
    return @"[null]";
  }
  return [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([create_JavaLangStringBuilder_initWithInt_([text java_length] + 2) appendWithChar:'`'])) appendWithNSString:text])) appendWithChar:'`'])) description];
}

id ComFasterxmlJacksonDatabindUtilClassUtil_defaultValueWithIOSClass_(IOSClass *cls) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if (cls == JreLoadStatic(JavaLangInteger, TYPE)) {
    return JavaLangInteger_valueOfWithInt_(0);
  }
  if (cls == JreLoadStatic(JavaLangLong, TYPE)) {
    return JavaLangLong_valueOfWithLong_(0LL);
  }
  if (cls == JreLoadStatic(JavaLangBoolean, TYPE)) {
    return JreLoadStatic(JavaLangBoolean, FALSE);
  }
  if (cls == JreLoadStatic(JavaLangDouble, TYPE)) {
    return JavaLangDouble_valueOfWithDouble_(0.0);
  }
  if (cls == JreLoadStatic(JavaLangFloat, TYPE)) {
    return JavaLangFloat_valueOfWithFloat_(0.0f);
  }
  if (cls == JreLoadStatic(JavaLangByte, TYPE)) {
    return JavaLangByte_valueOfWithByte_((jbyte) 0);
  }
  if (cls == JreLoadStatic(JavaLangShort, TYPE)) {
    return JavaLangShort_valueOfWithShort_((jshort) 0);
  }
  if (cls == JreLoadStatic(JavaLangCharacter, TYPE)) {
    return JavaLangCharacter_valueOfWithChar_(0x0000);
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"Class ", [((IOSClass *) nil_chk(cls)) getName], @" is not a primitive type"));
}

IOSClass *ComFasterxmlJacksonDatabindUtilClassUtil_wrapperTypeWithIOSClass_(IOSClass *primitiveType) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if (primitiveType == JreLoadStatic(JavaLangInteger, TYPE)) {
    return JavaLangInteger_class_();
  }
  if (primitiveType == JreLoadStatic(JavaLangLong, TYPE)) {
    return JavaLangLong_class_();
  }
  if (primitiveType == JreLoadStatic(JavaLangBoolean, TYPE)) {
    return JavaLangBoolean_class_();
  }
  if (primitiveType == JreLoadStatic(JavaLangDouble, TYPE)) {
    return JavaLangDouble_class_();
  }
  if (primitiveType == JreLoadStatic(JavaLangFloat, TYPE)) {
    return JavaLangFloat_class_();
  }
  if (primitiveType == JreLoadStatic(JavaLangByte, TYPE)) {
    return JavaLangByte_class_();
  }
  if (primitiveType == JreLoadStatic(JavaLangShort, TYPE)) {
    return JavaLangShort_class_();
  }
  if (primitiveType == JreLoadStatic(JavaLangCharacter, TYPE)) {
    return JavaLangCharacter_class_();
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"Class ", [((IOSClass *) nil_chk(primitiveType)) getName], @" is not a primitive type"));
}

IOSClass *ComFasterxmlJacksonDatabindUtilClassUtil_primitiveTypeWithIOSClass_(IOSClass *type) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if ([((IOSClass *) nil_chk(type)) isPrimitive]) {
    return type;
  }
  if (type == JavaLangInteger_class_()) {
    return JreLoadStatic(JavaLangInteger, TYPE);
  }
  if (type == JavaLangLong_class_()) {
    return JreLoadStatic(JavaLangLong, TYPE);
  }
  if (type == JavaLangBoolean_class_()) {
    return JreLoadStatic(JavaLangBoolean, TYPE);
  }
  if (type == JavaLangDouble_class_()) {
    return JreLoadStatic(JavaLangDouble, TYPE);
  }
  if (type == JavaLangFloat_class_()) {
    return JreLoadStatic(JavaLangFloat, TYPE);
  }
  if (type == JavaLangByte_class_()) {
    return JreLoadStatic(JavaLangByte, TYPE);
  }
  if (type == JavaLangShort_class_()) {
    return JreLoadStatic(JavaLangShort, TYPE);
  }
  if (type == JavaLangCharacter_class_()) {
    return JreLoadStatic(JavaLangCharacter, TYPE);
  }
  return nil;
}

void ComFasterxmlJacksonDatabindUtilClassUtil_checkAndFixAccessWithJavaLangReflectMember_(id<JavaLangReflectMember> member) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  ComFasterxmlJacksonDatabindUtilClassUtil_checkAndFixAccessWithJavaLangReflectMember_withBoolean_(member, false);
}

void ComFasterxmlJacksonDatabindUtilClassUtil_checkAndFixAccessWithJavaLangReflectMember_withBoolean_(id<JavaLangReflectMember> member, jboolean force) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  JavaLangReflectAccessibleObject *ao = (JavaLangReflectAccessibleObject *) cast_chk(member, [JavaLangReflectAccessibleObject class]);
  @try {
    if (force || (!JavaLangReflectModifier_isPublicWithInt_([((id<JavaLangReflectMember>) nil_chk(member)) getModifiers]) || !JavaLangReflectModifier_isPublicWithInt_([((IOSClass *) nil_chk([member getDeclaringClass])) getModifiers]))) {
      [((JavaLangReflectAccessibleObject *) nil_chk(ao)) setAccessibleWithBoolean:true];
    }
  }
  @catch (JavaLangSecurityException *se) {
    if (![((JavaLangReflectAccessibleObject *) nil_chk(ao)) isAccessible]) {
      IOSClass *declClass = [((id<JavaLangReflectMember>) nil_chk(member)) getDeclaringClass];
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$$$$", @"Cannot access ", member, @" (from class ", [((IOSClass *) nil_chk(declClass)) getName], @"; failed to set access: ", [se getMessage]));
    }
  }
}

IOSClass *ComFasterxmlJacksonDatabindUtilClassUtil_findEnumTypeWithJavaUtilEnumSet_(JavaUtilEnumSet *s) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if (![((JavaUtilEnumSet *) nil_chk(s)) isEmpty]) {
    return ComFasterxmlJacksonDatabindUtilClassUtil_findEnumTypeWithJavaLangEnum_([((id<JavaUtilIterator>) nil_chk([s iterator])) next]);
  }
  return [((ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator *) nil_chk(JreLoadStatic(ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator, instance))) enumTypeForWithJavaUtilEnumSet:s];
}

IOSClass *ComFasterxmlJacksonDatabindUtilClassUtil_findEnumTypeWithJavaUtilEnumMap_(JavaUtilEnumMap *m) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if (![((JavaUtilEnumMap *) nil_chk(m)) isEmpty]) {
    return ComFasterxmlJacksonDatabindUtilClassUtil_findEnumTypeWithJavaLangEnum_([((id<JavaUtilIterator>) nil_chk([((id<JavaUtilSet>) nil_chk([m keySet])) iterator])) next]);
  }
  return [((ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator *) nil_chk(JreLoadStatic(ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator, instance))) enumTypeForWithJavaUtilEnumMap:m];
}

IOSClass *ComFasterxmlJacksonDatabindUtilClassUtil_findEnumTypeWithJavaLangEnum_(JavaLangEnum *en) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  IOSClass *ec = [((JavaLangEnum *) nil_chk(en)) java_getClass];
  if ([ec getSuperclass] != JavaLangEnum_class_()) {
    ec = [ec getSuperclass];
  }
  return ec;
}

IOSClass *ComFasterxmlJacksonDatabindUtilClassUtil_findEnumTypeWithIOSClass_(IOSClass *cls) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if ([((IOSClass *) nil_chk(cls)) getSuperclass] != JavaLangEnum_class_()) {
    cls = [cls getSuperclass];
  }
  return cls;
}

JavaLangEnum *ComFasterxmlJacksonDatabindUtilClassUtil_findFirstAnnotatedEnumValueWithIOSClass_withIOSClass_(IOSClass *enumClass, IOSClass *annotationClass) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  IOSObjectArray *fields = ComFasterxmlJacksonDatabindUtilClassUtil_getDeclaredFieldsWithIOSClass_(enumClass);
  {
    IOSObjectArray *a__ = fields;
    JavaLangReflectField * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    JavaLangReflectField * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaLangReflectField *field = *b__++;
      if ([((JavaLangReflectField *) nil_chk(field)) isEnumConstant]) {
        id<JavaLangAnnotationAnnotation> defaultValueAnnotation = [field getAnnotationWithIOSClass:annotationClass];
        if (defaultValueAnnotation != nil) {
          NSString *name = [field getName];
          {
            IOSObjectArray *a__ = [((IOSClass *) nil_chk(enumClass)) getEnumConstants];
            JavaLangEnum * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
            JavaLangEnum * const *e__ = b__ + a__->size_;
            while (b__ < e__) {
              JavaLangEnum *enumValue = *b__++;
              if ([((NSString *) nil_chk(name)) isEqual:[((JavaLangEnum *) nil_chk(enumValue)) name]]) {
                return enumValue;
              }
            }
          }
        }
      }
    }
  }
  return nil;
}

jboolean ComFasterxmlJacksonDatabindUtilClassUtil_isJacksonStdImplWithId_(id impl) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  return (impl == nil) || ComFasterxmlJacksonDatabindUtilClassUtil_isJacksonStdImplWithIOSClass_([nil_chk(impl) java_getClass]);
}

jboolean ComFasterxmlJacksonDatabindUtilClassUtil_isJacksonStdImplWithIOSClass_(IOSClass *implClass) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  return ([((IOSClass *) nil_chk(implClass)) getAnnotationWithIOSClass:ComFasterxmlJacksonDatabindAnnotationJacksonStdImpl_class_()] != nil);
}

NSString *ComFasterxmlJacksonDatabindUtilClassUtil_getPackageNameWithIOSClass_(IOSClass *cls) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  JavaLangPackage *pkg = [((IOSClass *) nil_chk(cls)) getPackage];
  return (pkg == nil) ? nil : [((JavaLangPackage *) nil_chk(pkg)) getName];
}

jboolean ComFasterxmlJacksonDatabindUtilClassUtil_hasEnclosingMethodWithIOSClass_(IOSClass *cls) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  return !ComFasterxmlJacksonDatabindUtilClassUtil_isObjectOrPrimitiveWithIOSClass_(cls) && ([((IOSClass *) nil_chk(cls)) getEnclosingMethod] != nil);
}

IOSObjectArray *ComFasterxmlJacksonDatabindUtilClassUtil_getDeclaredFieldsWithIOSClass_(IOSClass *cls) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  return [((IOSClass *) nil_chk(cls)) getDeclaredFields];
}

IOSObjectArray *ComFasterxmlJacksonDatabindUtilClassUtil_getDeclaredMethodsWithIOSClass_(IOSClass *cls) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  return [((IOSClass *) nil_chk(cls)) getDeclaredMethods];
}

IOSObjectArray *ComFasterxmlJacksonDatabindUtilClassUtil_findClassAnnotationsWithIOSClass_(IOSClass *cls) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if (ComFasterxmlJacksonDatabindUtilClassUtil_isObjectOrPrimitiveWithIOSClass_(cls)) {
    return ComFasterxmlJacksonDatabindUtilClassUtil_NO_ANNOTATIONS;
  }
  return [((IOSClass *) nil_chk(cls)) getDeclaredAnnotations];
}

IOSObjectArray *ComFasterxmlJacksonDatabindUtilClassUtil_getClassMethodsWithIOSClass_(IOSClass *cls) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  @try {
    return ComFasterxmlJacksonDatabindUtilClassUtil_getDeclaredMethodsWithIOSClass_(cls);
  }
  @catch (JavaLangNoClassDefFoundError *ex) {
    JavaLangClassLoader *loader = [((JavaLangThread *) nil_chk(JavaLangThread_currentThread())) getContextClassLoader];
    if (loader == nil) {
      @throw ex;
    }
    IOSClass *contextClass;
    @try {
      contextClass = [loader loadClassWithNSString:[((IOSClass *) nil_chk(cls)) getName]];
    }
    @catch (JavaLangClassNotFoundException *e) {
      [ex addSuppressedWithJavaLangThrowable:e];
      @throw ex;
    }
    return [((IOSClass *) nil_chk(contextClass)) getDeclaredMethods];
  }
}

IOSObjectArray *ComFasterxmlJacksonDatabindUtilClassUtil_getConstructorsWithIOSClass_(IOSClass *cls) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  if ([((IOSClass *) nil_chk(cls)) isInterface] || ComFasterxmlJacksonDatabindUtilClassUtil_isObjectOrPrimitiveWithIOSClass_(cls)) {
    return ComFasterxmlJacksonDatabindUtilClassUtil_NO_CTORS;
  }
  IOSObjectArray *rawCtors = [cls getDeclaredConstructors];
  jint len = ((IOSObjectArray *) nil_chk(rawCtors))->size_;
  IOSObjectArray *result = [IOSObjectArray arrayWithLength:len type:ComFasterxmlJacksonDatabindUtilClassUtil_Ctor_class_()];
  for (jint i = 0; i < len; ++i) {
    IOSObjectArray_SetAndConsume(result, i, new_ComFasterxmlJacksonDatabindUtilClassUtil_Ctor_initWithJavaLangReflectConstructor_(IOSObjectArray_Get(rawCtors, i)));
  }
  return result;
}

IOSClass *ComFasterxmlJacksonDatabindUtilClassUtil_getDeclaringClassWithIOSClass_(IOSClass *cls) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  return ComFasterxmlJacksonDatabindUtilClassUtil_isObjectOrPrimitiveWithIOSClass_(cls) ? nil : [((IOSClass *) nil_chk(cls)) getDeclaringClass];
}

id<JavaLangReflectType> ComFasterxmlJacksonDatabindUtilClassUtil_getGenericSuperclassWithIOSClass_(IOSClass *cls) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  return [((IOSClass *) nil_chk(cls)) getGenericSuperclass];
}

IOSObjectArray *ComFasterxmlJacksonDatabindUtilClassUtil_getGenericInterfacesWithIOSClass_(IOSClass *cls) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  return [((IOSClass *) nil_chk(cls)) getGenericInterfaces];
}

IOSClass *ComFasterxmlJacksonDatabindUtilClassUtil_getEnclosingClassWithIOSClass_(IOSClass *cls) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  return ComFasterxmlJacksonDatabindUtilClassUtil_isObjectOrPrimitiveWithIOSClass_(cls) ? nil : [((IOSClass *) nil_chk(cls)) getEnclosingClass];
}

IOSObjectArray *ComFasterxmlJacksonDatabindUtilClassUtil__interfacesWithIOSClass_(IOSClass *cls) {
  ComFasterxmlJacksonDatabindUtilClassUtil_initialize();
  return [((IOSClass *) nil_chk(cls)) getInterfaces];
}

IOSObjectArray *ComFasterxmlJacksonDatabindUtilClassUtil__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindUtilClassUtil__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindUtilClassUtil__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindUtilClassUtil__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindUtilClassUtil)

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator)

@implementation ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (IOSClass *)enumTypeForWithJavaUtilEnumSet:(JavaUtilEnumSet *)set {
  if (enumSetTypeField_ != nil) {
    return (IOSClass *) cast_chk(ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator_getWithId_withJavaLangReflectField_(self, set, enumSetTypeField_), [IOSClass class]);
  }
  @throw create_JavaLangIllegalStateException_initWithNSString_(@"Cannot figure out type for EnumSet (odd JDK platform?)");
}

- (IOSClass *)enumTypeForWithJavaUtilEnumMap:(JavaUtilEnumMap *)set {
  if (enumMapTypeField_ != nil) {
    return (IOSClass *) cast_chk(ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator_getWithId_withJavaLangReflectField_(self, set, enumMapTypeField_), [IOSClass class]);
  }
  @throw create_JavaLangIllegalStateException_initWithNSString_(@"Cannot figure out type for EnumMap (odd JDK platform?)");
}

- (id)getWithId:(id)bean
withJavaLangReflectField:(JavaLangReflectField *)field {
  return ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator_getWithId_withJavaLangReflectField_(self, bean, field);
}

+ (JavaLangReflectField *)locateFieldWithIOSClass:(IOSClass *)fromClass
                                     withNSString:(NSString *)expectedName
                                     withIOSClass:(IOSClass *)type {
  return ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator_locateFieldWithIOSClass_withNSString_withIOSClass_(fromClass, expectedName, type);
}

- (void)dealloc {
  RELEASE_(enumSetTypeField_);
  RELEASE_(enumMapTypeField_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LIOSClass;", 0x1, 0, 3, -1, 4, -1, -1 },
    { NULL, "LNSObject;", 0x2, 5, 6, -1, -1, -1, -1 },
    { NULL, "LJavaLangReflectField;", 0xa, 7, 8, -1, 9, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(enumTypeForWithJavaUtilEnumSet:);
  methods[2].selector = @selector(enumTypeForWithJavaUtilEnumMap:);
  methods[3].selector = @selector(getWithId:withJavaLangReflectField:);
  methods[4].selector = @selector(locateFieldWithIOSClass:withNSString:withIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "instance", "LComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator;", .constantValue.asLong = 0, 0x18, -1, 10, -1, -1 },
    { "enumSetTypeField_", "LJavaLangReflectField;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "enumMapTypeField_", "LJavaLangReflectField;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "enumTypeFor", "LJavaUtilEnumSet;", "(Ljava/util/EnumSet<*>;)Ljava/lang/Class<+Ljava/lang/Enum<*>;>;", "LJavaUtilEnumMap;", "(Ljava/util/EnumMap<**>;)Ljava/lang/Class<+Ljava/lang/Enum<*>;>;", "get", "LNSObject;LJavaLangReflectField;", "locateField", "LIOSClass;LNSString;LIOSClass;", "(Ljava/lang/Class<*>;Ljava/lang/String;Ljava/lang/Class<*>;)Ljava/lang/reflect/Field;", &ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator_instance, "LComFasterxmlJacksonDatabindUtilClassUtil;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator = { "EnumTypeLocator", "com.fasterxml.jackson.databind.util", ptrTable, methods, fields, 7, 0xa, 5, 3, 11, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator class]) {
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator_instance, new_ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator_init());
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator)
  }
}

@end

void ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator_init(ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator *self) {
  NSObject_init(self);
  JreStrongAssign(&self->enumSetTypeField_, ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator_locateFieldWithIOSClass_withNSString_withIOSClass_(JavaUtilEnumSet_class_(), @"elementType", IOSClass_class_()));
  JreStrongAssign(&self->enumMapTypeField_, ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator_locateFieldWithIOSClass_withNSString_withIOSClass_(JavaUtilEnumMap_class_(), @"elementType", IOSClass_class_()));
}

ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator *new_ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator, init)
}

ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator *create_ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator, init)
}

id ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator_getWithId_withJavaLangReflectField_(ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator *self, id bean, JavaLangReflectField *field) {
  @try {
    return [((JavaLangReflectField *) nil_chk(field)) getWithId:bean];
  }
  @catch (JavaLangException *e) {
    @throw create_JavaLangIllegalArgumentException_initWithJavaLangThrowable_(e);
  }
}

JavaLangReflectField *ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator_locateFieldWithIOSClass_withNSString_withIOSClass_(IOSClass *fromClass, NSString *expectedName, IOSClass *type) {
  ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator_initialize();
  JavaLangReflectField *found = nil;
  IOSObjectArray *fields = ComFasterxmlJacksonDatabindUtilClassUtil_getDeclaredFieldsWithIOSClass_(fromClass);
  {
    IOSObjectArray *a__ = fields;
    JavaLangReflectField * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    JavaLangReflectField * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaLangReflectField *f = *b__++;
      if ([((NSString *) nil_chk(expectedName)) isEqual:[((JavaLangReflectField *) nil_chk(f)) getName]] && [f getType] == type) {
        found = f;
        break;
      }
    }
  }
  if (found == nil) {
    {
      IOSObjectArray *a__ = fields;
      JavaLangReflectField * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
      JavaLangReflectField * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        JavaLangReflectField *f = *b__++;
        if ([((JavaLangReflectField *) nil_chk(f)) getType] == type) {
          if (found != nil) return nil;
          found = f;
        }
      }
    }
  }
  if (found != nil) {
    @try {
      [found setAccessibleWithBoolean:true];
    }
    @catch (JavaLangThrowable *t) {
    }
  }
  return found;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindUtilClassUtil_EnumTypeLocator)

@implementation ComFasterxmlJacksonDatabindUtilClassUtil_Ctor

- (instancetype __nonnull)initWithJavaLangReflectConstructor:(JavaLangReflectConstructor *)ctor {
  ComFasterxmlJacksonDatabindUtilClassUtil_Ctor_initWithJavaLangReflectConstructor_(self, ctor);
  return self;
}

- (JavaLangReflectConstructor *)getConstructor {
  return _ctor_;
}

- (jint)getParamCount {
  jint c = _paramCount_;
  if (c < 0) {
    c = ((IOSObjectArray *) nil_chk([((JavaLangReflectConstructor *) nil_chk(_ctor_)) getParameterTypes]))->size_;
    _paramCount_ = c;
  }
  return c;
}

- (IOSClass *)getDeclaringClass {
  return [((JavaLangReflectConstructor *) nil_chk(_ctor_)) getDeclaringClass];
}

- (IOSObjectArray *)getDeclaredAnnotations {
  IOSObjectArray *result = _annotations_;
  if (result == nil) {
    result = [((JavaLangReflectConstructor *) nil_chk(_ctor_)) getDeclaredAnnotations];
    JreStrongAssign(&_annotations_, result);
  }
  return result;
}

- (IOSObjectArray *)getParameterAnnotations {
  IOSObjectArray *result = _paramAnnotations_;
  if (result == nil) {
    result = [((JavaLangReflectConstructor *) nil_chk(_ctor_)) getParameterAnnotations];
    JreStrongAssign(&_paramAnnotations_, result);
  }
  return result;
}

- (void)dealloc {
  RELEASE_(_ctor_);
  RELEASE_(_annotations_);
  RELEASE_(_paramAnnotations_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LJavaLangReflectConstructor;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 3, -1, -1 },
    { NULL, "[LJavaLangAnnotationAnnotation;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[[LJavaLangAnnotationAnnotation;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaLangReflectConstructor:);
  methods[1].selector = @selector(getConstructor);
  methods[2].selector = @selector(getParamCount);
  methods[3].selector = @selector(getDeclaringClass);
  methods[4].selector = @selector(getDeclaredAnnotations);
  methods[5].selector = @selector(getParameterAnnotations);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_ctor_", "LJavaLangReflectConstructor;", .constantValue.asLong = 0, 0x11, -1, -1, 4, -1 },
    { "_annotations_", "[LJavaLangAnnotationAnnotation;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_paramAnnotations_", "[[LJavaLangAnnotationAnnotation;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_paramCount_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaLangReflectConstructor;", "(Ljava/lang/reflect/Constructor<*>;)V", "()Ljava/lang/reflect/Constructor<*>;", "()Ljava/lang/Class<*>;", "Ljava/lang/reflect/Constructor<*>;", "LComFasterxmlJacksonDatabindUtilClassUtil;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindUtilClassUtil_Ctor = { "Ctor", "com.fasterxml.jackson.databind.util", ptrTable, methods, fields, 7, 0x19, 6, 4, 5, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindUtilClassUtil_Ctor;
}

@end

void ComFasterxmlJacksonDatabindUtilClassUtil_Ctor_initWithJavaLangReflectConstructor_(ComFasterxmlJacksonDatabindUtilClassUtil_Ctor *self, JavaLangReflectConstructor *ctor) {
  NSObject_init(self);
  self->_paramCount_ = -1;
  JreStrongAssign(&self->_ctor_, ctor);
}

ComFasterxmlJacksonDatabindUtilClassUtil_Ctor *new_ComFasterxmlJacksonDatabindUtilClassUtil_Ctor_initWithJavaLangReflectConstructor_(JavaLangReflectConstructor *ctor) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindUtilClassUtil_Ctor, initWithJavaLangReflectConstructor_, ctor)
}

ComFasterxmlJacksonDatabindUtilClassUtil_Ctor *create_ComFasterxmlJacksonDatabindUtilClassUtil_Ctor_initWithJavaLangReflectConstructor_(JavaLangReflectConstructor *ctor) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindUtilClassUtil_Ctor, initWithJavaLangReflectConstructor_, ctor)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindUtilClassUtil_Ctor)
