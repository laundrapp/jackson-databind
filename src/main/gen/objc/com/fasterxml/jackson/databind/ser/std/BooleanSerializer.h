//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/std/BooleanSerializer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdBooleanSerializer")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindSerStdBooleanSerializer
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdBooleanSerializer 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdBooleanSerializer 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindSerStdBooleanSerializer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindSerStdBooleanSerializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdBooleanSerializer || defined(INCLUDE_ComFasterxmlJacksonDatabindSerStdBooleanSerializer))
#define ComFasterxmlJacksonDatabindSerStdBooleanSerializer_

#define RESTRICT_ComFasterxmlJacksonDatabindSerStdStdScalarSerializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerStdStdScalarSerializer 1
#include "com/fasterxml/jackson/databind/ser/std/StdScalarSerializer.h"

#define RESTRICT_ComFasterxmlJacksonDatabindSerContextualSerializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerContextualSerializer 1
#include "com/fasterxml/jackson/databind/ser/ContextualSerializer.h"

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsonNode;
@class ComFasterxmlJacksonDatabindJsonSerializer;
@class ComFasterxmlJacksonDatabindJsontypeTypeSerializer;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSClass;
@protocol ComFasterxmlJacksonDatabindBeanProperty;
@protocol ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;
@protocol JavaLangReflectType;

/*!
 @brief Serializer used for primitive boolean, as well as java.util.Boolean
  wrapper type.
 <p>
  Since this is one of "natural" (aka "native") types, no type information is ever
  included on serialization (unlike for most other scalar types)
 */
@interface ComFasterxmlJacksonDatabindSerStdBooleanSerializer : ComFasterxmlJacksonDatabindSerStdStdScalarSerializer < ComFasterxmlJacksonDatabindSerContextualSerializer > {
 @public
  /*!
   @brief Whether type serialized is primitive (boolean) or wrapper
  (java.lang.Boolean); if true, former, if false, latter.
   */
  jboolean _forPrimitive_;
}

#pragma mark Public

- (instancetype __nonnull)initWithBoolean:(jboolean)forPrimitive;

- (void)acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint;

- (ComFasterxmlJacksonDatabindJsonSerializer *)createContextualWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)serializers
                                                                     withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property;

- (ComFasterxmlJacksonDatabindJsonNode *)getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                            withJavaLangReflectType:(id<JavaLangReflectType>)typeHint;

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

- (void)serializeWithTypeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0
                               withBoolean:(jboolean)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindSerStdBooleanSerializer)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdBooleanSerializer_initWithBoolean_(ComFasterxmlJacksonDatabindSerStdBooleanSerializer *self, jboolean forPrimitive);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdBooleanSerializer *new_ComFasterxmlJacksonDatabindSerStdBooleanSerializer_initWithBoolean_(jboolean forPrimitive) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdBooleanSerializer *create_ComFasterxmlJacksonDatabindSerStdBooleanSerializer_initWithBoolean_(jboolean forPrimitive);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerStdBooleanSerializer)

#endif

#if !defined (ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdBooleanSerializer || defined(INCLUDE_ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber))
#define ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber_

#define RESTRICT_ComFasterxmlJacksonDatabindSerStdStdScalarSerializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerStdStdScalarSerializer 1
#include "com/fasterxml/jackson/databind/ser/std/StdScalarSerializer.h"

#define RESTRICT_ComFasterxmlJacksonDatabindSerContextualSerializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerContextualSerializer 1
#include "com/fasterxml/jackson/databind/ser/ContextualSerializer.h"

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsonSerializer;
@class ComFasterxmlJacksonDatabindJsontypeTypeSerializer;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSClass;
@protocol ComFasterxmlJacksonDatabindBeanProperty;
@protocol ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;

/*!
 @brief Alternate implementation that is used when values are to be serialized
  as numbers <code>0</code> (false) or <code>1</code> (true).
 @since 2.9
 */
@interface ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber : ComFasterxmlJacksonDatabindSerStdStdScalarSerializer < ComFasterxmlJacksonDatabindSerContextualSerializer > {
 @public
  /*!
   @brief Whether type serialized is primitive (boolean) or wrapper
  (java.lang.Boolean); if true, former, if false, latter.
   */
  jboolean _forPrimitive_;
}

#pragma mark Public

- (instancetype __nonnull)initWithBoolean:(jboolean)forPrimitive;

- (void)acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint;

- (ComFasterxmlJacksonDatabindJsonSerializer *)createContextualWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)serializers
                                                                     withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property;

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

- (void)serializeWithTypeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0
                               withBoolean:(jboolean)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber_initWithBoolean_(ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber *self, jboolean forPrimitive);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber *new_ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber_initWithBoolean_(jboolean forPrimitive) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber *create_ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber_initWithBoolean_(jboolean forPrimitive);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdBooleanSerializer")
