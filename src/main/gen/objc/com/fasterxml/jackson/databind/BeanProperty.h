//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/BeanProperty.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindBeanProperty")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindBeanProperty
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindBeanProperty 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindBeanProperty 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindBeanProperty
#ifdef INCLUDE_ComFasterxmlJacksonDatabindBeanProperty_Bogus
#define INCLUDE_ComFasterxmlJacksonDatabindBeanProperty 1
#endif
#ifdef INCLUDE_ComFasterxmlJacksonDatabindBeanProperty_Std
#define INCLUDE_ComFasterxmlJacksonDatabindBeanProperty 1
#endif

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindBeanProperty_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindBeanProperty || defined(INCLUDE_ComFasterxmlJacksonDatabindBeanProperty))
#define ComFasterxmlJacksonDatabindBeanProperty_

#define RESTRICT_ComFasterxmlJacksonDatabindUtilNamed 1
#define INCLUDE_ComFasterxmlJacksonDatabindUtilNamed 1
#include "com/fasterxml/jackson/databind/util/Named.h"

@class ComFasterxmlJacksonAnnotationJsonFormat_Value;
@class ComFasterxmlJacksonAnnotationJsonInclude_Value;
@class ComFasterxmlJacksonDatabindAnnotationIntrospector;
@class ComFasterxmlJacksonDatabindCfgMapperConfig;
@class ComFasterxmlJacksonDatabindIntrospectAnnotatedMember;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindPropertyMetadata;
@class ComFasterxmlJacksonDatabindPropertyName;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSClass;
@protocol ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonObjectFormatVisitor;
@protocol JavaLangAnnotationAnnotation;
@protocol JavaUtilList;

/*!
 @brief Bean properties are logical entities that represent data
  that Java objects (POJOs (Plain Old Java Objects), sometimes also called "beans")
  contain; and that are accessed using accessors (methods like getters
  and setters, fields, constructor parameters).
 Instances allow access to annotations directly associated
  to property (via field or method), as well as contextual
  annotations (annotations for class that contains properties).
 <p>
  Instances are not typically passed when constructing serializers
  and deserializers, but rather only passed when context
  is known when 
 <code>com.fasterxml.jackson.databind.ser.ContextualSerializer</code> and 
 <code>com.fasterxml.jackson.databind.deser.ContextualDeserializer</code>
  resolution occurs (<code>createContextual(...)</code> method is called).
  References may (need to) be retained by serializers and deserializers,
  especially when further resolving dependent handlers like value
  serializers/deserializers or structured types.
 */
@protocol ComFasterxmlJacksonDatabindBeanProperty < ComFasterxmlJacksonDatabindUtilNamed, JavaObject >

/*!
 @brief Method to get logical name of the property
 */
- (NSString *)getName;

/*!
 @brief Method for getting full name definition, including possible
  format-specific additional properties (such as namespace when
  using XML backend).
 @since 2.3
 */
- (ComFasterxmlJacksonDatabindPropertyName *)getFullName;

/*!
 @brief Method to get declared type of the property.
 */
- (ComFasterxmlJacksonDatabindJavaType *)getType;

/*!
 @brief If property is indicated to be wrapped, name of
  wrapper element to use.
 @since 2.2
 */
- (ComFasterxmlJacksonDatabindPropertyName *)getWrapperName;

/*!
 @brief Accessor for additional optional information about property.
 @since 2.3
 @return Metadata about property; never null.
 */
- (ComFasterxmlJacksonDatabindPropertyMetadata *)getMetadata;

/*!
 @brief Whether value for property is marked as required using
  annotations or associated schema.
 Equivalent to:
 <code>
   getMetadata().isRequired()
 </code>
 @since 2.2
 */
- (jboolean)isRequired;

/*!
 @brief Accessor for checking whether there is an actual physical property
  behind this property abstraction or not.
 @since 2.7
 */
- (jboolean)isVirtual;

/*!
 @brief Method for finding annotation associated with this property;
  meaning annotation associated with one of entities used to
  access property.
 <p>
  Note that this method should only be called for custom annotations;
  access to standard Jackson annotations (or ones supported by
  alternate <code>AnnotationIntrospector</code>s) should be accessed
  through <code>AnnotationIntrospector</code>.
 */
- (id<JavaLangAnnotationAnnotation>)getAnnotationWithIOSClass:(IOSClass *)acls;

/*!
 @brief Method for finding annotation associated with context of
  this property; usually class in which member is declared
  (or its subtype if processing subtype).
 <p>
  Note that this method should only be called for custom annotations;
  access to standard Jackson annotations (or ones supported by
  alternate <code>AnnotationIntrospector</code>s) should be accessed
  through <code>AnnotationIntrospector</code>.
 */
- (id<JavaLangAnnotationAnnotation>)getContextAnnotationWithIOSClass:(IOSClass *)acls;

/*!
 @brief Method for accessing primary physical entity that represents the property;
  annotated field, method or constructor property.
 */
- (ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *)getMember;

/*!
 @brief Convenience method that is roughly equivalent to
 @code

    return intr.findFormat(getMember());
 
@endcode
  and specifically does NOT try to find per-type format defaults to merge;
  use <code>findPropertyFormat</code> if such defaults would be useful.
 @since 2.6
 */
- (ComFasterxmlJacksonAnnotationJsonFormat_Value *)findFormatOverridesWithComFasterxmlJacksonDatabindAnnotationIntrospector:(ComFasterxmlJacksonDatabindAnnotationIntrospector *)intr;

/*!
 @brief Helper method used to look up format settings applicable to this property,
  considering both possible per-type configuration settings
 @since 2.7
 */
- (ComFasterxmlJacksonAnnotationJsonFormat_Value *)findPropertyFormatWithComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)config
                                                                                                       withIOSClass:(IOSClass *)baseType;

/*!
 @brief Convenience method that is roughly equivalent to
 @code

    return config.getAnnotationIntrospector().findPropertyInclusion(getMember());
 
@endcode
  but also considers global default settings for inclusion
 @since 2.7
 */
- (ComFasterxmlJacksonAnnotationJsonInclude_Value *)findPropertyInclusionWithComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)config
                                                                                                           withIOSClass:(IOSClass *)baseType;

/*!
 @brief Method for accessing set of possible alternate names that are accepted
  during deserialization.
 @return List (possibly empty) of alternate names; never null
 @since 2.9
 */
- (id<JavaUtilList>)findAliasesWithComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)config;

/*!
 @brief Method that can be called to visit the type structure that this
  property is part of.
 Note that not all implementations support traversal with this
  method; those that do not should throw 
 <code>UnsupportedOperationException</code>.
 <p>
  NOTE: Starting with 2.7, takes explicit <code>SerializerProvider</code>
  argument to reduce the need to rely on provider visitor may or may not
  have assigned.
 @param objectVisitor Visitor to used as the callback handler
 @since 2.2 (although signature did change in 2.7)
 */
- (void)depositSchemaPropertyWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonObjectFormatVisitor:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonObjectFormatVisitor>)objectVisitor
                                                    withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

@end

@interface ComFasterxmlJacksonDatabindBeanProperty : NSObject

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonDatabindBeanProperty)

inline ComFasterxmlJacksonAnnotationJsonFormat_Value *ComFasterxmlJacksonDatabindBeanProperty_get_EMPTY_FORMAT(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonFormat_Value *ComFasterxmlJacksonDatabindBeanProperty_EMPTY_FORMAT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindBeanProperty, EMPTY_FORMAT, ComFasterxmlJacksonAnnotationJsonFormat_Value *)

inline ComFasterxmlJacksonAnnotationJsonInclude_Value *ComFasterxmlJacksonDatabindBeanProperty_get_EMPTY_INCLUDE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComFasterxmlJacksonAnnotationJsonInclude_Value *ComFasterxmlJacksonDatabindBeanProperty_EMPTY_INCLUDE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindBeanProperty, EMPTY_INCLUDE, ComFasterxmlJacksonAnnotationJsonInclude_Value *)

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindBeanProperty)

#endif

#if !defined (ComFasterxmlJacksonDatabindBeanProperty_Std_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindBeanProperty || defined(INCLUDE_ComFasterxmlJacksonDatabindBeanProperty_Std))
#define ComFasterxmlJacksonDatabindBeanProperty_Std_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class ComFasterxmlJacksonAnnotationJsonFormat_Value;
@class ComFasterxmlJacksonAnnotationJsonInclude_Value;
@class ComFasterxmlJacksonDatabindAnnotationIntrospector;
@class ComFasterxmlJacksonDatabindCfgMapperConfig;
@class ComFasterxmlJacksonDatabindIntrospectAnnotatedMember;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindPropertyMetadata;
@class ComFasterxmlJacksonDatabindPropertyName;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSClass;
@protocol ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonObjectFormatVisitor;
@protocol ComFasterxmlJacksonDatabindUtilAnnotations;
@protocol JavaLangAnnotationAnnotation;
@protocol JavaUtilList;

/*!
 @brief Simple stand-alone implementation, useful as a placeholder
  or base class for more complex implementations.
 */
@interface ComFasterxmlJacksonDatabindBeanProperty_Std : NSObject < ComFasterxmlJacksonDatabindBeanProperty, JavaIoSerializable > {
 @public
  ComFasterxmlJacksonDatabindPropertyName *_name_;
  ComFasterxmlJacksonDatabindJavaType *_type_;
  ComFasterxmlJacksonDatabindPropertyName *_wrapperName_;
  ComFasterxmlJacksonDatabindPropertyMetadata *_metadata_;
  /*!
   @brief Physical entity (field, method or constructor argument) that
  is used to access value of property (or in case of constructor
  property, just placeholder)
   */
  ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *_member_;
}

#pragma mark Public

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindPropertyName:(ComFasterxmlJacksonDatabindPropertyName *)name
                                  withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                              withComFasterxmlJacksonDatabindPropertyName:(ComFasterxmlJacksonDatabindPropertyName *)wrapperName
                 withComFasterxmlJacksonDatabindIntrospectAnnotatedMember:(ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *)member
                          withComFasterxmlJacksonDatabindPropertyMetadata:(ComFasterxmlJacksonDatabindPropertyMetadata *)metadata;

/*!
 */
- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindPropertyName:(ComFasterxmlJacksonDatabindPropertyName *)name
                                  withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                              withComFasterxmlJacksonDatabindPropertyName:(ComFasterxmlJacksonDatabindPropertyName *)wrapperName
                           withComFasterxmlJacksonDatabindUtilAnnotations:(id<ComFasterxmlJacksonDatabindUtilAnnotations>)contextAnnotations
                 withComFasterxmlJacksonDatabindIntrospectAnnotatedMember:(ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *)member
                          withComFasterxmlJacksonDatabindPropertyMetadata:(ComFasterxmlJacksonDatabindPropertyMetadata *)metadata;

/*!
 @since 2.6
 */
- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindBeanProperty_Std:(ComFasterxmlJacksonDatabindBeanProperty_Std *)base
                                      withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)newType;

/*!
 @brief Implementation of this method throws 
 <code>UnsupportedOperationException</code>, since instances of this
  implementation should not be used as part of actual structure
  visited.Rather, other implementations should handle it.
 */
- (void)depositSchemaPropertyWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonObjectFormatVisitor:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonObjectFormatVisitor>)objectVisitor
                                                    withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

- (id<JavaUtilList>)findAliasesWithComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)config;

- (ComFasterxmlJacksonAnnotationJsonFormat_Value *)findFormatOverridesWithComFasterxmlJacksonDatabindAnnotationIntrospector:(ComFasterxmlJacksonDatabindAnnotationIntrospector *)intr;

- (ComFasterxmlJacksonAnnotationJsonFormat_Value *)findPropertyFormatWithComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)config
                                                                                                       withIOSClass:(IOSClass *)baseType;

- (ComFasterxmlJacksonAnnotationJsonInclude_Value *)findPropertyInclusionWithComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)config
                                                                                                           withIOSClass:(IOSClass *)baseType;

- (id<JavaLangAnnotationAnnotation>)getAnnotationWithIOSClass:(IOSClass *)acls;

- (id<JavaLangAnnotationAnnotation>)getContextAnnotationWithIOSClass:(IOSClass *)acls;

- (ComFasterxmlJacksonDatabindPropertyName *)getFullName;

- (ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *)getMember;

- (ComFasterxmlJacksonDatabindPropertyMetadata *)getMetadata;

- (NSString *)getName;

- (ComFasterxmlJacksonDatabindJavaType *)getType;

- (ComFasterxmlJacksonDatabindPropertyName *)getWrapperName;

- (jboolean)isRequired;

- (jboolean)isVirtual;

- (ComFasterxmlJacksonDatabindBeanProperty_Std *)withTypeWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindBeanProperty_Std)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindBeanProperty_Std, _name_, ComFasterxmlJacksonDatabindPropertyName *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindBeanProperty_Std, _type_, ComFasterxmlJacksonDatabindJavaType *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindBeanProperty_Std, _wrapperName_, ComFasterxmlJacksonDatabindPropertyName *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindBeanProperty_Std, _metadata_, ComFasterxmlJacksonDatabindPropertyMetadata *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindBeanProperty_Std, _member_, ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindBeanProperty_Std_initWithComFasterxmlJacksonDatabindPropertyName_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindPropertyName_withComFasterxmlJacksonDatabindIntrospectAnnotatedMember_withComFasterxmlJacksonDatabindPropertyMetadata_(ComFasterxmlJacksonDatabindBeanProperty_Std *self, ComFasterxmlJacksonDatabindPropertyName *name, ComFasterxmlJacksonDatabindJavaType *type, ComFasterxmlJacksonDatabindPropertyName *wrapperName, ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *member, ComFasterxmlJacksonDatabindPropertyMetadata *metadata);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindBeanProperty_Std *new_ComFasterxmlJacksonDatabindBeanProperty_Std_initWithComFasterxmlJacksonDatabindPropertyName_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindPropertyName_withComFasterxmlJacksonDatabindIntrospectAnnotatedMember_withComFasterxmlJacksonDatabindPropertyMetadata_(ComFasterxmlJacksonDatabindPropertyName *name, ComFasterxmlJacksonDatabindJavaType *type, ComFasterxmlJacksonDatabindPropertyName *wrapperName, ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *member, ComFasterxmlJacksonDatabindPropertyMetadata *metadata) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindBeanProperty_Std *create_ComFasterxmlJacksonDatabindBeanProperty_Std_initWithComFasterxmlJacksonDatabindPropertyName_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindPropertyName_withComFasterxmlJacksonDatabindIntrospectAnnotatedMember_withComFasterxmlJacksonDatabindPropertyMetadata_(ComFasterxmlJacksonDatabindPropertyName *name, ComFasterxmlJacksonDatabindJavaType *type, ComFasterxmlJacksonDatabindPropertyName *wrapperName, ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *member, ComFasterxmlJacksonDatabindPropertyMetadata *metadata);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindBeanProperty_Std_initWithComFasterxmlJacksonDatabindPropertyName_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindPropertyName_withComFasterxmlJacksonDatabindUtilAnnotations_withComFasterxmlJacksonDatabindIntrospectAnnotatedMember_withComFasterxmlJacksonDatabindPropertyMetadata_(ComFasterxmlJacksonDatabindBeanProperty_Std *self, ComFasterxmlJacksonDatabindPropertyName *name, ComFasterxmlJacksonDatabindJavaType *type, ComFasterxmlJacksonDatabindPropertyName *wrapperName, id<ComFasterxmlJacksonDatabindUtilAnnotations> contextAnnotations, ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *member, ComFasterxmlJacksonDatabindPropertyMetadata *metadata);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindBeanProperty_Std *new_ComFasterxmlJacksonDatabindBeanProperty_Std_initWithComFasterxmlJacksonDatabindPropertyName_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindPropertyName_withComFasterxmlJacksonDatabindUtilAnnotations_withComFasterxmlJacksonDatabindIntrospectAnnotatedMember_withComFasterxmlJacksonDatabindPropertyMetadata_(ComFasterxmlJacksonDatabindPropertyName *name, ComFasterxmlJacksonDatabindJavaType *type, ComFasterxmlJacksonDatabindPropertyName *wrapperName, id<ComFasterxmlJacksonDatabindUtilAnnotations> contextAnnotations, ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *member, ComFasterxmlJacksonDatabindPropertyMetadata *metadata) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindBeanProperty_Std *create_ComFasterxmlJacksonDatabindBeanProperty_Std_initWithComFasterxmlJacksonDatabindPropertyName_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindPropertyName_withComFasterxmlJacksonDatabindUtilAnnotations_withComFasterxmlJacksonDatabindIntrospectAnnotatedMember_withComFasterxmlJacksonDatabindPropertyMetadata_(ComFasterxmlJacksonDatabindPropertyName *name, ComFasterxmlJacksonDatabindJavaType *type, ComFasterxmlJacksonDatabindPropertyName *wrapperName, id<ComFasterxmlJacksonDatabindUtilAnnotations> contextAnnotations, ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *member, ComFasterxmlJacksonDatabindPropertyMetadata *metadata);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindBeanProperty_Std_initWithComFasterxmlJacksonDatabindBeanProperty_Std_withComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindBeanProperty_Std *self, ComFasterxmlJacksonDatabindBeanProperty_Std *base, ComFasterxmlJacksonDatabindJavaType *newType);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindBeanProperty_Std *new_ComFasterxmlJacksonDatabindBeanProperty_Std_initWithComFasterxmlJacksonDatabindBeanProperty_Std_withComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindBeanProperty_Std *base, ComFasterxmlJacksonDatabindJavaType *newType) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindBeanProperty_Std *create_ComFasterxmlJacksonDatabindBeanProperty_Std_initWithComFasterxmlJacksonDatabindBeanProperty_Std_withComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindBeanProperty_Std *base, ComFasterxmlJacksonDatabindJavaType *newType);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindBeanProperty_Std)

#endif

#if !defined (ComFasterxmlJacksonDatabindBeanProperty_Bogus_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindBeanProperty || defined(INCLUDE_ComFasterxmlJacksonDatabindBeanProperty_Bogus))
#define ComFasterxmlJacksonDatabindBeanProperty_Bogus_

@class ComFasterxmlJacksonAnnotationJsonFormat_Value;
@class ComFasterxmlJacksonAnnotationJsonInclude_Value;
@class ComFasterxmlJacksonDatabindAnnotationIntrospector;
@class ComFasterxmlJacksonDatabindCfgMapperConfig;
@class ComFasterxmlJacksonDatabindIntrospectAnnotatedMember;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindPropertyMetadata;
@class ComFasterxmlJacksonDatabindPropertyName;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSClass;
@protocol ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonObjectFormatVisitor;
@protocol JavaLangAnnotationAnnotation;
@protocol JavaUtilList;

/*!
 @brief Alternative "Null" implementation that can be used in cases where a non-null 
 <code>BeanProperty</code> is needed
 @since 2.9
 */
@interface ComFasterxmlJacksonDatabindBeanProperty_Bogus : NSObject < ComFasterxmlJacksonDatabindBeanProperty >

#pragma mark Public

- (instancetype __nonnull)init;

- (void)depositSchemaPropertyWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonObjectFormatVisitor:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonObjectFormatVisitor>)objectVisitor
                                                    withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

- (id<JavaUtilList>)findAliasesWithComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)config;

- (ComFasterxmlJacksonAnnotationJsonFormat_Value *)findFormatOverridesWithComFasterxmlJacksonDatabindAnnotationIntrospector:(ComFasterxmlJacksonDatabindAnnotationIntrospector *)intr;

- (ComFasterxmlJacksonAnnotationJsonFormat_Value *)findPropertyFormatWithComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)config
                                                                                                       withIOSClass:(IOSClass *)baseType;

- (ComFasterxmlJacksonAnnotationJsonInclude_Value *)findPropertyInclusionWithComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)config
                                                                                                           withIOSClass:(IOSClass *)baseType;

- (id<JavaLangAnnotationAnnotation>)getAnnotationWithIOSClass:(IOSClass *)acls;

- (id<JavaLangAnnotationAnnotation>)getContextAnnotationWithIOSClass:(IOSClass *)acls;

- (ComFasterxmlJacksonDatabindPropertyName *)getFullName;

- (ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *)getMember;

- (ComFasterxmlJacksonDatabindPropertyMetadata *)getMetadata;

- (NSString *)getName;

- (ComFasterxmlJacksonDatabindJavaType *)getType;

- (ComFasterxmlJacksonDatabindPropertyName *)getWrapperName;

- (jboolean)isRequired;

- (jboolean)isVirtual;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindBeanProperty_Bogus)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindBeanProperty_Bogus_init(ComFasterxmlJacksonDatabindBeanProperty_Bogus *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindBeanProperty_Bogus *new_ComFasterxmlJacksonDatabindBeanProperty_Bogus_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindBeanProperty_Bogus *create_ComFasterxmlJacksonDatabindBeanProperty_Bogus_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindBeanProperty_Bogus)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindBeanProperty")
