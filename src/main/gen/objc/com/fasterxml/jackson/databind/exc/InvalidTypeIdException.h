//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/exc/InvalidTypeIdException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindExcInvalidTypeIdException")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindExcInvalidTypeIdException
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindExcInvalidTypeIdException 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindExcInvalidTypeIdException 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindExcInvalidTypeIdException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindExcInvalidTypeIdException_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindExcInvalidTypeIdException || defined(INCLUDE_ComFasterxmlJacksonDatabindExcInvalidTypeIdException))
#define ComFasterxmlJacksonDatabindExcInvalidTypeIdException_

#define RESTRICT_ComFasterxmlJacksonDatabindExcMismatchedInputException 1
#define INCLUDE_ComFasterxmlJacksonDatabindExcMismatchedInputException 1
#include "com/fasterxml/jackson/databind/exc/MismatchedInputException.h"

@class ComFasterxmlJacksonCoreJsonLocation;
@class ComFasterxmlJacksonCoreJsonParser;
@class ComFasterxmlJacksonDatabindJavaType;
@class IOSClass;

/*!
 @brief Exception thrown when resolution of a type id fails.
 @since 2.8
 */
@interface ComFasterxmlJacksonDatabindExcInvalidTypeIdException : ComFasterxmlJacksonDatabindExcMismatchedInputException {
 @public
  /*!
   @brief Basetype for which subtype was to be resolved
   */
  ComFasterxmlJacksonDatabindJavaType *_baseType_;
  /*!
   @brief Type id that failed to be resolved to a subtype; `null` in cases
  where no type id was located (since 2.9).
   */
  NSString *_typeId_;
}

#pragma mark Public

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                                                       withNSString:(NSString *)msg
                            withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)baseType
                                                       withNSString:(NSString *)typeId;

+ (ComFasterxmlJacksonDatabindExcInvalidTypeIdException *)fromWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                                                                                       withNSString:(NSString *)msg
                                                            withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)baseType
                                                                                       withNSString:(NSString *)typeId;

- (ComFasterxmlJacksonDatabindJavaType *)getBaseType;

- (NSString *)getTypeId;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)arg0
                                                       withNSString:(NSString *)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)arg0
                                                       withNSString:(NSString *)arg1
                            withComFasterxmlJacksonCoreJsonLocation:(ComFasterxmlJacksonCoreJsonLocation *)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)arg0
                                                       withNSString:(NSString *)arg1
                            withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)arg0
                                                       withNSString:(NSString *)arg1
                                                       withIOSClass:(IOSClass *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindExcInvalidTypeIdException)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindExcInvalidTypeIdException, _baseType_, ComFasterxmlJacksonDatabindJavaType *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindExcInvalidTypeIdException, _typeId_, NSString *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindExcInvalidTypeIdException_initWithComFasterxmlJacksonCoreJsonParser_withNSString_withComFasterxmlJacksonDatabindJavaType_withNSString_(ComFasterxmlJacksonDatabindExcInvalidTypeIdException *self, ComFasterxmlJacksonCoreJsonParser *p, NSString *msg, ComFasterxmlJacksonDatabindJavaType *baseType, NSString *typeId);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindExcInvalidTypeIdException *new_ComFasterxmlJacksonDatabindExcInvalidTypeIdException_initWithComFasterxmlJacksonCoreJsonParser_withNSString_withComFasterxmlJacksonDatabindJavaType_withNSString_(ComFasterxmlJacksonCoreJsonParser *p, NSString *msg, ComFasterxmlJacksonDatabindJavaType *baseType, NSString *typeId) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindExcInvalidTypeIdException *create_ComFasterxmlJacksonDatabindExcInvalidTypeIdException_initWithComFasterxmlJacksonCoreJsonParser_withNSString_withComFasterxmlJacksonDatabindJavaType_withNSString_(ComFasterxmlJacksonCoreJsonParser *p, NSString *msg, ComFasterxmlJacksonDatabindJavaType *baseType, NSString *typeId);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindExcInvalidTypeIdException *ComFasterxmlJacksonDatabindExcInvalidTypeIdException_fromWithComFasterxmlJacksonCoreJsonParser_withNSString_withComFasterxmlJacksonDatabindJavaType_withNSString_(ComFasterxmlJacksonCoreJsonParser *p, NSString *msg, ComFasterxmlJacksonDatabindJavaType *baseType, NSString *typeId);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindExcInvalidTypeIdException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindExcInvalidTypeIdException")
