//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/impl/ObjectIdWriter.java
//

#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/annotation/ObjectIdGenerator.h"
#include "com/fasterxml/jackson/core/SerializableString.h"
#include "com/fasterxml/jackson/core/io/SerializedString.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/JsonSerializer.h"
#include "com/fasterxml/jackson/databind/PropertyName.h"
#include "com/fasterxml/jackson/databind/ser/impl/ObjectIdWriter.h"

@implementation ComFasterxmlJacksonDatabindSerImplObjectIdWriter

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)t
                        withComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>)propName
                   withComFasterxmlJacksonAnnotationObjectIdGenerator:(ComFasterxmlJacksonAnnotationObjectIdGenerator *)gen
                        withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)ser
                                                          withBoolean:(jboolean)alwaysAsId {
  ComFasterxmlJacksonDatabindSerImplObjectIdWriter_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonCoreSerializableString_withComFasterxmlJacksonAnnotationObjectIdGenerator_withComFasterxmlJacksonDatabindJsonSerializer_withBoolean_(self, t, propName, gen, ser, alwaysAsId);
  return self;
}

+ (ComFasterxmlJacksonDatabindSerImplObjectIdWriter *)constructWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)idType
                                                           withComFasterxmlJacksonDatabindPropertyName:(ComFasterxmlJacksonDatabindPropertyName *)propName
                                                    withComFasterxmlJacksonAnnotationObjectIdGenerator:(ComFasterxmlJacksonAnnotationObjectIdGenerator *)generator
                                                                                           withBoolean:(jboolean)alwaysAsId {
  return ComFasterxmlJacksonDatabindSerImplObjectIdWriter_constructWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindPropertyName_withComFasterxmlJacksonAnnotationObjectIdGenerator_withBoolean_(idType, propName, generator, alwaysAsId);
}

- (ComFasterxmlJacksonDatabindSerImplObjectIdWriter *)withSerializerWithComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)ser {
  return create_ComFasterxmlJacksonDatabindSerImplObjectIdWriter_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonCoreSerializableString_withComFasterxmlJacksonAnnotationObjectIdGenerator_withComFasterxmlJacksonDatabindJsonSerializer_withBoolean_(idType_, propertyName_, generator_, ser, alwaysAsId_);
}

- (ComFasterxmlJacksonDatabindSerImplObjectIdWriter *)withAlwaysAsIdWithBoolean:(jboolean)newState {
  if (newState == alwaysAsId_) {
    return self;
  }
  return create_ComFasterxmlJacksonDatabindSerImplObjectIdWriter_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonCoreSerializableString_withComFasterxmlJacksonAnnotationObjectIdGenerator_withComFasterxmlJacksonDatabindJsonSerializer_withBoolean_(idType_, propertyName_, generator_, serializer_, newState);
}

- (void)dealloc {
  RELEASE_(idType_);
  RELEASE_(propertyName_);
  RELEASE_(generator_);
  RELEASE_(serializer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerImplObjectIdWriter;", 0x9, 2, 3, -1, 4, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerImplObjectIdWriter;", 0x1, 5, 6, -1, 7, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerImplObjectIdWriter;", 0x1, 8, 9, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonCoreSerializableString:withComFasterxmlJacksonAnnotationObjectIdGenerator:withComFasterxmlJacksonDatabindJsonSerializer:withBoolean:);
  methods[1].selector = @selector(constructWithComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindPropertyName:withComFasterxmlJacksonAnnotationObjectIdGenerator:withBoolean:);
  methods[2].selector = @selector(withSerializerWithComFasterxmlJacksonDatabindJsonSerializer:);
  methods[3].selector = @selector(withAlwaysAsIdWithBoolean:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "idType_", "LComFasterxmlJacksonDatabindJavaType;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "propertyName_", "LComFasterxmlJacksonCoreSerializableString;", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
    { "generator_", "LComFasterxmlJacksonAnnotationObjectIdGenerator;", .constantValue.asLong = 0, 0x11, -1, -1, 10, -1 },
    { "serializer_", "LComFasterxmlJacksonDatabindJsonSerializer;", .constantValue.asLong = 0, 0x11, -1, -1, 11, -1 },
    { "alwaysAsId_", "Z", .constantValue.asLong = 0, 0x11, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindJavaType;LComFasterxmlJacksonCoreSerializableString;LComFasterxmlJacksonAnnotationObjectIdGenerator;LComFasterxmlJacksonDatabindJsonSerializer;Z", "(Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/core/SerializableString;Lcom/fasterxml/jackson/annotation/ObjectIdGenerator<*>;Lcom/fasterxml/jackson/databind/JsonSerializer<*>;Z)V", "construct", "LComFasterxmlJacksonDatabindJavaType;LComFasterxmlJacksonDatabindPropertyName;LComFasterxmlJacksonAnnotationObjectIdGenerator;Z", "(Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/PropertyName;Lcom/fasterxml/jackson/annotation/ObjectIdGenerator<*>;Z)Lcom/fasterxml/jackson/databind/ser/impl/ObjectIdWriter;", "withSerializer", "LComFasterxmlJacksonDatabindJsonSerializer;", "(Lcom/fasterxml/jackson/databind/JsonSerializer<*>;)Lcom/fasterxml/jackson/databind/ser/impl/ObjectIdWriter;", "withAlwaysAsId", "Z", "Lcom/fasterxml/jackson/annotation/ObjectIdGenerator<*>;", "Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerImplObjectIdWriter = { "ObjectIdWriter", "com.fasterxml.jackson.databind.ser.impl", ptrTable, methods, fields, 7, 0x11, 4, 5, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindSerImplObjectIdWriter;
}

@end

void ComFasterxmlJacksonDatabindSerImplObjectIdWriter_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonCoreSerializableString_withComFasterxmlJacksonAnnotationObjectIdGenerator_withComFasterxmlJacksonDatabindJsonSerializer_withBoolean_(ComFasterxmlJacksonDatabindSerImplObjectIdWriter *self, ComFasterxmlJacksonDatabindJavaType *t, id<ComFasterxmlJacksonCoreSerializableString> propName, ComFasterxmlJacksonAnnotationObjectIdGenerator *gen, ComFasterxmlJacksonDatabindJsonSerializer *ser, jboolean alwaysAsId) {
  NSObject_init(self);
  JreStrongAssign(&self->idType_, t);
  JreStrongAssign(&self->propertyName_, propName);
  JreStrongAssign(&self->generator_, gen);
  JreStrongAssign(&self->serializer_, ser);
  self->alwaysAsId_ = alwaysAsId;
}

ComFasterxmlJacksonDatabindSerImplObjectIdWriter *new_ComFasterxmlJacksonDatabindSerImplObjectIdWriter_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonCoreSerializableString_withComFasterxmlJacksonAnnotationObjectIdGenerator_withComFasterxmlJacksonDatabindJsonSerializer_withBoolean_(ComFasterxmlJacksonDatabindJavaType *t, id<ComFasterxmlJacksonCoreSerializableString> propName, ComFasterxmlJacksonAnnotationObjectIdGenerator *gen, ComFasterxmlJacksonDatabindJsonSerializer *ser, jboolean alwaysAsId) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerImplObjectIdWriter, initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonCoreSerializableString_withComFasterxmlJacksonAnnotationObjectIdGenerator_withComFasterxmlJacksonDatabindJsonSerializer_withBoolean_, t, propName, gen, ser, alwaysAsId)
}

ComFasterxmlJacksonDatabindSerImplObjectIdWriter *create_ComFasterxmlJacksonDatabindSerImplObjectIdWriter_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonCoreSerializableString_withComFasterxmlJacksonAnnotationObjectIdGenerator_withComFasterxmlJacksonDatabindJsonSerializer_withBoolean_(ComFasterxmlJacksonDatabindJavaType *t, id<ComFasterxmlJacksonCoreSerializableString> propName, ComFasterxmlJacksonAnnotationObjectIdGenerator *gen, ComFasterxmlJacksonDatabindJsonSerializer *ser, jboolean alwaysAsId) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerImplObjectIdWriter, initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonCoreSerializableString_withComFasterxmlJacksonAnnotationObjectIdGenerator_withComFasterxmlJacksonDatabindJsonSerializer_withBoolean_, t, propName, gen, ser, alwaysAsId)
}

ComFasterxmlJacksonDatabindSerImplObjectIdWriter *ComFasterxmlJacksonDatabindSerImplObjectIdWriter_constructWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindPropertyName_withComFasterxmlJacksonAnnotationObjectIdGenerator_withBoolean_(ComFasterxmlJacksonDatabindJavaType *idType, ComFasterxmlJacksonDatabindPropertyName *propName, ComFasterxmlJacksonAnnotationObjectIdGenerator *generator, jboolean alwaysAsId) {
  ComFasterxmlJacksonDatabindSerImplObjectIdWriter_initialize();
  NSString *simpleName = (propName == nil) ? nil : [((ComFasterxmlJacksonDatabindPropertyName *) nil_chk(propName)) getSimpleName];
  id<ComFasterxmlJacksonCoreSerializableString> serName = (simpleName == nil) ? nil : create_ComFasterxmlJacksonCoreIoSerializedString_initWithNSString_(simpleName);
  return create_ComFasterxmlJacksonDatabindSerImplObjectIdWriter_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonCoreSerializableString_withComFasterxmlJacksonAnnotationObjectIdGenerator_withComFasterxmlJacksonDatabindJsonSerializer_withBoolean_(idType, serName, generator, nil, alwaysAsId);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerImplObjectIdWriter)
