//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ext/OptionalHandlerFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindExtOptionalHandlerFactory")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindExtOptionalHandlerFactory
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindExtOptionalHandlerFactory 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindExtOptionalHandlerFactory 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindExtOptionalHandlerFactory

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindExtOptionalHandlerFactory_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindExtOptionalHandlerFactory || defined(INCLUDE_ComFasterxmlJacksonDatabindExtOptionalHandlerFactory))
#define ComFasterxmlJacksonDatabindExtOptionalHandlerFactory_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class ComFasterxmlJacksonDatabindBeanDescription;
@class ComFasterxmlJacksonDatabindDeserializationConfig;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsonDeserializer;
@class ComFasterxmlJacksonDatabindJsonSerializer;
@class ComFasterxmlJacksonDatabindSerializationConfig;

/*!
 @brief Helper class used for isolating details of handling optional+external types
  (javax.xml classes) from standard factories that offer them.
 <p>
  Note that 2.7 changed handling to slightly less dynamic, to avoid having to
  traverse class hierarchy, which turned to be a performance issue in
  certain cases. Since DOM classes are assumed to exist on all Java 1.6
  environments (yes, even on Android/GAE), this part could be simplified by
  slightly less dynamic lookups.
 <p>
  Also with 2.7 we are supporting JDK 1.7/Java 7 type(s).
 */
@interface ComFasterxmlJacksonDatabindExtOptionalHandlerFactory : NSObject < JavaIoSerializable >

#pragma mark Public

- (ComFasterxmlJacksonDatabindJsonDeserializer *)findDeserializerWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                    withComFasterxmlJacksonDatabindDeserializationConfig:(ComFasterxmlJacksonDatabindDeserializationConfig *)config
                                                          withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc;

- (ComFasterxmlJacksonDatabindJsonSerializer *)findSerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                        withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                                 withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc;

#pragma mark Protected

- (instancetype __nonnull)init;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonDatabindExtOptionalHandlerFactory)

inline ComFasterxmlJacksonDatabindExtOptionalHandlerFactory *ComFasterxmlJacksonDatabindExtOptionalHandlerFactory_get_instance(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComFasterxmlJacksonDatabindExtOptionalHandlerFactory *ComFasterxmlJacksonDatabindExtOptionalHandlerFactory_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindExtOptionalHandlerFactory, instance, ComFasterxmlJacksonDatabindExtOptionalHandlerFactory *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindExtOptionalHandlerFactory_init(ComFasterxmlJacksonDatabindExtOptionalHandlerFactory *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindExtOptionalHandlerFactory *new_ComFasterxmlJacksonDatabindExtOptionalHandlerFactory_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindExtOptionalHandlerFactory *create_ComFasterxmlJacksonDatabindExtOptionalHandlerFactory_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindExtOptionalHandlerFactory)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindExtOptionalHandlerFactory")
