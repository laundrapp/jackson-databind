//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/std/StdDelegatingSerializer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer || defined(INCLUDE_ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer))
#define ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer_

#define RESTRICT_ComFasterxmlJacksonDatabindSerStdStdSerializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerStdStdSerializer 1
#include "com/fasterxml/jackson/databind/ser/std/StdSerializer.h"

#define RESTRICT_ComFasterxmlJacksonDatabindSerContextualSerializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerContextualSerializer 1
#include "com/fasterxml/jackson/databind/ser/ContextualSerializer.h"

#define RESTRICT_ComFasterxmlJacksonDatabindSerResolvableSerializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerResolvableSerializer 1
#include "com/fasterxml/jackson/databind/ser/ResolvableSerializer.h"

#define RESTRICT_ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitable 1
#define INCLUDE_ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitable 1
#include "com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitable.h"

#define RESTRICT_ComFasterxmlJacksonDatabindJsonschemaSchemaAware 1
#define INCLUDE_ComFasterxmlJacksonDatabindJsonschemaSchemaAware 1
#include "com/fasterxml/jackson/databind/jsonschema/SchemaAware.h"

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsonNode;
@class ComFasterxmlJacksonDatabindJsonSerializer;
@class ComFasterxmlJacksonDatabindJsontypeTypeSerializer;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSClass;
@protocol ComFasterxmlJacksonDatabindBeanProperty;
@protocol ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;
@protocol ComFasterxmlJacksonDatabindUtilConverter;
@protocol JavaLangReflectType;

/*!
 @brief Serializer implementation where given Java type is first converted
  to an intermediate "delegate type" (using a configured 
 <code>Converter</code>, and then this delegate value is serialized by Jackson.
 <p>
  Note that although types may be related, they must not be same; trying
  to do this will result in an exception.
 @since 2.1
 */
@interface ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer : ComFasterxmlJacksonDatabindSerStdStdSerializer < ComFasterxmlJacksonDatabindSerContextualSerializer, ComFasterxmlJacksonDatabindSerResolvableSerializer, ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitable, ComFasterxmlJacksonDatabindJsonschemaSchemaAware > {
 @public
  id<ComFasterxmlJacksonDatabindUtilConverter> _converter_;
  /*!
   @brief Fully resolved delegate type, with generic information if any available.
   */
  ComFasterxmlJacksonDatabindJavaType *_delegateType_;
  /*!
   @brief Underlying serializer for type <code>T</code>.
   */
  ComFasterxmlJacksonDatabindJsonSerializer *_delegateSerializer_;
}

#pragma mark Public

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)cls
withComFasterxmlJacksonDatabindUtilConverter:(id<ComFasterxmlJacksonDatabindUtilConverter>)converter;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindUtilConverter:(id<ComFasterxmlJacksonDatabindUtilConverter>)converter;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindUtilConverter:(id<ComFasterxmlJacksonDatabindUtilConverter>)converter
                                   withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)delegateType
                             withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)delegateSerializer;

- (void)acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint;

- (ComFasterxmlJacksonDatabindJsonSerializer *)createContextualWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                     withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property;

- (ComFasterxmlJacksonDatabindJsonSerializer *)getDelegatee;

- (ComFasterxmlJacksonDatabindJsonNode *)getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                            withJavaLangReflectType:(id<JavaLangReflectType>)typeHint;

- (ComFasterxmlJacksonDatabindJsonNode *)getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                            withJavaLangReflectType:(id<JavaLangReflectType>)typeHint
                                                                                        withBoolean:(jboolean)isOptional;

- (jboolean)isEmptyWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                              withId:(id)value;

- (void)resolveWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

- (void)serializeWithTypeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer;

#pragma mark Protected

/*!
 @brief Helper method used for locating serializer to use in dynamic use case, where
  actual type value gets converted to is not specified beyond basic 
 <code>java.lang.Object</code>, and where serializer needs to be located dynamically
  based on actual value type.
 @since 2.6
 */
- (ComFasterxmlJacksonDatabindJsonSerializer *)_findSerializerWithId:(id)value
                   withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)serializers;

/*!
 @brief Method called to convert from source Java value into delegate
  value (which will be serialized using standard Jackson serializer for delegate type)
 <P>
  The default implementation uses configured <code>Converter</code> to do
  conversion.
 @param value Value to convert
 @return Result of conversion
 */
- (id)convertValueWithId:(id)value;

- (id<ComFasterxmlJacksonDatabindUtilConverter>)getConverter;

/*!
 @brief Method used for creating resolved contextual instances.Must be
  overridden when sub-classing.
 */
- (ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer *)withDelegateWithComFasterxmlJacksonDatabindUtilConverter:(id<ComFasterxmlJacksonDatabindUtilConverter>)converter
                                                                               withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)delegateType
                                                                         withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)delegateSerializer;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindSerStdStdSerializer:(ComFasterxmlJacksonDatabindSerStdStdSerializer *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0
                               withBoolean:(jboolean)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer, _converter_, id<ComFasterxmlJacksonDatabindUtilConverter>)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer, _delegateType_, ComFasterxmlJacksonDatabindJavaType *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer, _delegateSerializer_, ComFasterxmlJacksonDatabindJsonSerializer *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer_initWithComFasterxmlJacksonDatabindUtilConverter_(ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer *self, id<ComFasterxmlJacksonDatabindUtilConverter> converter);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer *new_ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer_initWithComFasterxmlJacksonDatabindUtilConverter_(id<ComFasterxmlJacksonDatabindUtilConverter> converter) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer *create_ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer_initWithComFasterxmlJacksonDatabindUtilConverter_(id<ComFasterxmlJacksonDatabindUtilConverter> converter);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer_initWithIOSClass_withComFasterxmlJacksonDatabindUtilConverter_(ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer *self, IOSClass *cls, id<ComFasterxmlJacksonDatabindUtilConverter> converter);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer *new_ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer_initWithIOSClass_withComFasterxmlJacksonDatabindUtilConverter_(IOSClass *cls, id<ComFasterxmlJacksonDatabindUtilConverter> converter) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer *create_ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer_initWithIOSClass_withComFasterxmlJacksonDatabindUtilConverter_(IOSClass *cls, id<ComFasterxmlJacksonDatabindUtilConverter> converter);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer_initWithComFasterxmlJacksonDatabindUtilConverter_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJsonSerializer_(ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer *self, id<ComFasterxmlJacksonDatabindUtilConverter> converter, ComFasterxmlJacksonDatabindJavaType *delegateType, ComFasterxmlJacksonDatabindJsonSerializer *delegateSerializer);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer *new_ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer_initWithComFasterxmlJacksonDatabindUtilConverter_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJsonSerializer_(id<ComFasterxmlJacksonDatabindUtilConverter> converter, ComFasterxmlJacksonDatabindJavaType *delegateType, ComFasterxmlJacksonDatabindJsonSerializer *delegateSerializer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer *create_ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer_initWithComFasterxmlJacksonDatabindUtilConverter_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJsonSerializer_(id<ComFasterxmlJacksonDatabindUtilConverter> converter, ComFasterxmlJacksonDatabindJavaType *delegateType, ComFasterxmlJacksonDatabindJsonSerializer *delegateSerializer);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer")
