//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/PropertyNamingStrategy.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/databind/PropertyNamingStrategy.h"
#include "com/fasterxml/jackson/databind/cfg/MapperConfig.h"
#include "com/fasterxml/jackson/databind/introspect/AnnotatedField.h"
#include "com/fasterxml/jackson/databind/introspect/AnnotatedMethod.h"
#include "com/fasterxml/jackson/databind/introspect/AnnotatedParameter.h"
#include "java/lang/Character.h"
#include "java/lang/Deprecated.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/annotation/Annotation.h"

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindPropertyNamingStrategy__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindPropertyNamingStrategy__Annotations$1(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseWithUnderscoresStrategy__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindPropertyNamingStrategy_PascalCaseStrategy__Annotations$0(void);

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindPropertyNamingStrategy)

ComFasterxmlJacksonDatabindPropertyNamingStrategy *ComFasterxmlJacksonDatabindPropertyNamingStrategy_SNAKE_CASE;
ComFasterxmlJacksonDatabindPropertyNamingStrategy *ComFasterxmlJacksonDatabindPropertyNamingStrategy_UPPER_CAMEL_CASE;
ComFasterxmlJacksonDatabindPropertyNamingStrategy *ComFasterxmlJacksonDatabindPropertyNamingStrategy_LOWER_CAMEL_CASE;
ComFasterxmlJacksonDatabindPropertyNamingStrategy *ComFasterxmlJacksonDatabindPropertyNamingStrategy_LOWER_CASE;
ComFasterxmlJacksonDatabindPropertyNamingStrategy *ComFasterxmlJacksonDatabindPropertyNamingStrategy_KEBAB_CASE;
ComFasterxmlJacksonDatabindPropertyNamingStrategy *ComFasterxmlJacksonDatabindPropertyNamingStrategy_CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES;
ComFasterxmlJacksonDatabindPropertyNamingStrategy *ComFasterxmlJacksonDatabindPropertyNamingStrategy_PASCAL_CASE_TO_CAMEL_CASE;

@implementation ComFasterxmlJacksonDatabindPropertyNamingStrategy

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindPropertyNamingStrategy_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)nameForFieldWithComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)config
                 withComFasterxmlJacksonDatabindIntrospectAnnotatedField:(ComFasterxmlJacksonDatabindIntrospectAnnotatedField *)field
                                                            withNSString:(NSString *)defaultName {
  return defaultName;
}

- (NSString *)nameForGetterMethodWithComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)config
                       withComFasterxmlJacksonDatabindIntrospectAnnotatedMethod:(ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *)method
                                                                   withNSString:(NSString *)defaultName {
  return defaultName;
}

- (NSString *)nameForSetterMethodWithComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)config
                       withComFasterxmlJacksonDatabindIntrospectAnnotatedMethod:(ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *)method
                                                                   withNSString:(NSString *)defaultName {
  return defaultName;
}

- (NSString *)nameForConstructorParameterWithComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)config
                            withComFasterxmlJacksonDatabindIntrospectAnnotatedParameter:(ComFasterxmlJacksonDatabindIntrospectAnnotatedParameter *)ctorParam
                                                                           withNSString:(NSString *)defaultName {
  return defaultName;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, "LNSString;", 0x1, 6, 4, -1, 5, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, 8, -1, 9, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(nameForFieldWithComFasterxmlJacksonDatabindCfgMapperConfig:withComFasterxmlJacksonDatabindIntrospectAnnotatedField:withNSString:);
  methods[2].selector = @selector(nameForGetterMethodWithComFasterxmlJacksonDatabindCfgMapperConfig:withComFasterxmlJacksonDatabindIntrospectAnnotatedMethod:withNSString:);
  methods[3].selector = @selector(nameForSetterMethodWithComFasterxmlJacksonDatabindCfgMapperConfig:withComFasterxmlJacksonDatabindIntrospectAnnotatedMethod:withNSString:);
  methods[4].selector = @selector(nameForConstructorParameterWithComFasterxmlJacksonDatabindCfgMapperConfig:withComFasterxmlJacksonDatabindIntrospectAnnotatedParameter:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "SNAKE_CASE", "LComFasterxmlJacksonDatabindPropertyNamingStrategy;", .constantValue.asLong = 0, 0x19, -1, 10, -1, -1 },
    { "UPPER_CAMEL_CASE", "LComFasterxmlJacksonDatabindPropertyNamingStrategy;", .constantValue.asLong = 0, 0x19, -1, 11, -1, -1 },
    { "LOWER_CAMEL_CASE", "LComFasterxmlJacksonDatabindPropertyNamingStrategy;", .constantValue.asLong = 0, 0x19, -1, 12, -1, -1 },
    { "LOWER_CASE", "LComFasterxmlJacksonDatabindPropertyNamingStrategy;", .constantValue.asLong = 0, 0x19, -1, 13, -1, -1 },
    { "KEBAB_CASE", "LComFasterxmlJacksonDatabindPropertyNamingStrategy;", .constantValue.asLong = 0, 0x19, -1, 14, -1, -1 },
    { "CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES", "LComFasterxmlJacksonDatabindPropertyNamingStrategy;", .constantValue.asLong = 0, 0x19, -1, 15, -1, 16 },
    { "PASCAL_CASE_TO_CAMEL_CASE", "LComFasterxmlJacksonDatabindPropertyNamingStrategy;", .constantValue.asLong = 0, 0x19, -1, 17, -1, 18 },
  };
  static const void *ptrTable[] = { "nameForField", "LComFasterxmlJacksonDatabindCfgMapperConfig;LComFasterxmlJacksonDatabindIntrospectAnnotatedField;LNSString;", "(Lcom/fasterxml/jackson/databind/cfg/MapperConfig<*>;Lcom/fasterxml/jackson/databind/introspect/AnnotatedField;Ljava/lang/String;)Ljava/lang/String;", "nameForGetterMethod", "LComFasterxmlJacksonDatabindCfgMapperConfig;LComFasterxmlJacksonDatabindIntrospectAnnotatedMethod;LNSString;", "(Lcom/fasterxml/jackson/databind/cfg/MapperConfig<*>;Lcom/fasterxml/jackson/databind/introspect/AnnotatedMethod;Ljava/lang/String;)Ljava/lang/String;", "nameForSetterMethod", "nameForConstructorParameter", "LComFasterxmlJacksonDatabindCfgMapperConfig;LComFasterxmlJacksonDatabindIntrospectAnnotatedParameter;LNSString;", "(Lcom/fasterxml/jackson/databind/cfg/MapperConfig<*>;Lcom/fasterxml/jackson/databind/introspect/AnnotatedParameter;Ljava/lang/String;)Ljava/lang/String;", &ComFasterxmlJacksonDatabindPropertyNamingStrategy_SNAKE_CASE, &ComFasterxmlJacksonDatabindPropertyNamingStrategy_UPPER_CAMEL_CASE, &ComFasterxmlJacksonDatabindPropertyNamingStrategy_LOWER_CAMEL_CASE, &ComFasterxmlJacksonDatabindPropertyNamingStrategy_LOWER_CASE, &ComFasterxmlJacksonDatabindPropertyNamingStrategy_KEBAB_CASE, &ComFasterxmlJacksonDatabindPropertyNamingStrategy_CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES, (void *)&ComFasterxmlJacksonDatabindPropertyNamingStrategy__Annotations$0, &ComFasterxmlJacksonDatabindPropertyNamingStrategy_PASCAL_CASE_TO_CAMEL_CASE, (void *)&ComFasterxmlJacksonDatabindPropertyNamingStrategy__Annotations$1, "LComFasterxmlJacksonDatabindPropertyNamingStrategy_PropertyNamingStrategyBase;LComFasterxmlJacksonDatabindPropertyNamingStrategy_SnakeCaseStrategy;LComFasterxmlJacksonDatabindPropertyNamingStrategy_UpperCamelCaseStrategy;LComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseStrategy;LComFasterxmlJacksonDatabindPropertyNamingStrategy_KebabCaseStrategy;LComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseWithUnderscoresStrategy;LComFasterxmlJacksonDatabindPropertyNamingStrategy_PascalCaseStrategy;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindPropertyNamingStrategy = { "PropertyNamingStrategy", "com.fasterxml.jackson.databind", ptrTable, methods, fields, 7, 0x1, 5, 7, -1, 19, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindPropertyNamingStrategy;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindPropertyNamingStrategy class]) {
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindPropertyNamingStrategy_SNAKE_CASE, new_ComFasterxmlJacksonDatabindPropertyNamingStrategy_SnakeCaseStrategy_init());
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindPropertyNamingStrategy_UPPER_CAMEL_CASE, new_ComFasterxmlJacksonDatabindPropertyNamingStrategy_UpperCamelCaseStrategy_init());
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindPropertyNamingStrategy_LOWER_CAMEL_CASE, new_ComFasterxmlJacksonDatabindPropertyNamingStrategy_init());
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindPropertyNamingStrategy_LOWER_CASE, new_ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseStrategy_init());
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindPropertyNamingStrategy_KEBAB_CASE, new_ComFasterxmlJacksonDatabindPropertyNamingStrategy_KebabCaseStrategy_init());
    JreStrongAssign(&ComFasterxmlJacksonDatabindPropertyNamingStrategy_CAMEL_CASE_TO_LOWER_CASE_WITH_UNDERSCORES, ComFasterxmlJacksonDatabindPropertyNamingStrategy_SNAKE_CASE);
    JreStrongAssign(&ComFasterxmlJacksonDatabindPropertyNamingStrategy_PASCAL_CASE_TO_CAMEL_CASE, ComFasterxmlJacksonDatabindPropertyNamingStrategy_UPPER_CAMEL_CASE);
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindPropertyNamingStrategy)
  }
}

@end

void ComFasterxmlJacksonDatabindPropertyNamingStrategy_init(ComFasterxmlJacksonDatabindPropertyNamingStrategy *self) {
  NSObject_init(self);
}

ComFasterxmlJacksonDatabindPropertyNamingStrategy *new_ComFasterxmlJacksonDatabindPropertyNamingStrategy_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindPropertyNamingStrategy, init)
}

ComFasterxmlJacksonDatabindPropertyNamingStrategy *create_ComFasterxmlJacksonDatabindPropertyNamingStrategy_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindPropertyNamingStrategy, init)
}

IOSObjectArray *ComFasterxmlJacksonDatabindPropertyNamingStrategy__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindPropertyNamingStrategy__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindPropertyNamingStrategy)

@implementation ComFasterxmlJacksonDatabindPropertyNamingStrategy_PropertyNamingStrategyBase

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindPropertyNamingStrategy_PropertyNamingStrategyBase_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)nameForFieldWithComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)config
                 withComFasterxmlJacksonDatabindIntrospectAnnotatedField:(ComFasterxmlJacksonDatabindIntrospectAnnotatedField *)field
                                                            withNSString:(NSString *)defaultName {
  return [self translateWithNSString:defaultName];
}

- (NSString *)nameForGetterMethodWithComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)config
                       withComFasterxmlJacksonDatabindIntrospectAnnotatedMethod:(ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *)method
                                                                   withNSString:(NSString *)defaultName {
  return [self translateWithNSString:defaultName];
}

- (NSString *)nameForSetterMethodWithComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)config
                       withComFasterxmlJacksonDatabindIntrospectAnnotatedMethod:(ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *)method
                                                                   withNSString:(NSString *)defaultName {
  return [self translateWithNSString:defaultName];
}

- (NSString *)nameForConstructorParameterWithComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)config
                            withComFasterxmlJacksonDatabindIntrospectAnnotatedParameter:(ComFasterxmlJacksonDatabindIntrospectAnnotatedParameter *)ctorParam
                                                                           withNSString:(NSString *)defaultName {
  return [self translateWithNSString:defaultName];
}

- (NSString *)translateWithNSString:(NSString *)propertyName {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LNSString;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, "LNSString;", 0x1, 6, 4, -1, 5, -1, -1 },
    { NULL, "LNSString;", 0x1, 7, 8, -1, 9, -1, -1 },
    { NULL, "LNSString;", 0x401, 10, 11, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(nameForFieldWithComFasterxmlJacksonDatabindCfgMapperConfig:withComFasterxmlJacksonDatabindIntrospectAnnotatedField:withNSString:);
  methods[2].selector = @selector(nameForGetterMethodWithComFasterxmlJacksonDatabindCfgMapperConfig:withComFasterxmlJacksonDatabindIntrospectAnnotatedMethod:withNSString:);
  methods[3].selector = @selector(nameForSetterMethodWithComFasterxmlJacksonDatabindCfgMapperConfig:withComFasterxmlJacksonDatabindIntrospectAnnotatedMethod:withNSString:);
  methods[4].selector = @selector(nameForConstructorParameterWithComFasterxmlJacksonDatabindCfgMapperConfig:withComFasterxmlJacksonDatabindIntrospectAnnotatedParameter:withNSString:);
  methods[5].selector = @selector(translateWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "nameForField", "LComFasterxmlJacksonDatabindCfgMapperConfig;LComFasterxmlJacksonDatabindIntrospectAnnotatedField;LNSString;", "(Lcom/fasterxml/jackson/databind/cfg/MapperConfig<*>;Lcom/fasterxml/jackson/databind/introspect/AnnotatedField;Ljava/lang/String;)Ljava/lang/String;", "nameForGetterMethod", "LComFasterxmlJacksonDatabindCfgMapperConfig;LComFasterxmlJacksonDatabindIntrospectAnnotatedMethod;LNSString;", "(Lcom/fasterxml/jackson/databind/cfg/MapperConfig<*>;Lcom/fasterxml/jackson/databind/introspect/AnnotatedMethod;Ljava/lang/String;)Ljava/lang/String;", "nameForSetterMethod", "nameForConstructorParameter", "LComFasterxmlJacksonDatabindCfgMapperConfig;LComFasterxmlJacksonDatabindIntrospectAnnotatedParameter;LNSString;", "(Lcom/fasterxml/jackson/databind/cfg/MapperConfig<*>;Lcom/fasterxml/jackson/databind/introspect/AnnotatedParameter;Ljava/lang/String;)Ljava/lang/String;", "translate", "LNSString;", "LComFasterxmlJacksonDatabindPropertyNamingStrategy;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindPropertyNamingStrategy_PropertyNamingStrategyBase = { "PropertyNamingStrategyBase", "com.fasterxml.jackson.databind", ptrTable, methods, NULL, 7, 0x409, 6, 0, 12, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindPropertyNamingStrategy_PropertyNamingStrategyBase;
}

@end

void ComFasterxmlJacksonDatabindPropertyNamingStrategy_PropertyNamingStrategyBase_init(ComFasterxmlJacksonDatabindPropertyNamingStrategy_PropertyNamingStrategyBase *self) {
  ComFasterxmlJacksonDatabindPropertyNamingStrategy_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindPropertyNamingStrategy_PropertyNamingStrategyBase)

@implementation ComFasterxmlJacksonDatabindPropertyNamingStrategy_SnakeCaseStrategy

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindPropertyNamingStrategy_SnakeCaseStrategy_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)translateWithNSString:(NSString *)input {
  if (input == nil) return input;
  jint length = [input java_length];
  JavaLangStringBuilder *result = create_JavaLangStringBuilder_initWithInt_(length * 2);
  jint resultLength = 0;
  jboolean wasPrevTranslated = false;
  for (jint i = 0; i < length; i++) {
    jchar c = [input charAtWithInt:i];
    if (i > 0 || c != '_') {
      if (JavaLangCharacter_isUpperCaseWithChar_(c)) {
        if (!wasPrevTranslated && resultLength > 0 && [result charAtWithInt:resultLength - 1] != '_') {
          [result appendWithChar:'_'];
          resultLength++;
        }
        c = JavaLangCharacter_toLowerCaseWithChar_(c);
        wasPrevTranslated = true;
      }
      else {
        wasPrevTranslated = false;
      }
      [result appendWithChar:c];
      resultLength++;
    }
  }
  return resultLength > 0 ? [result description] : input;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(translateWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "translate", "LNSString;", "LComFasterxmlJacksonDatabindPropertyNamingStrategy;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindPropertyNamingStrategy_SnakeCaseStrategy = { "SnakeCaseStrategy", "com.fasterxml.jackson.databind", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindPropertyNamingStrategy_SnakeCaseStrategy;
}

@end

void ComFasterxmlJacksonDatabindPropertyNamingStrategy_SnakeCaseStrategy_init(ComFasterxmlJacksonDatabindPropertyNamingStrategy_SnakeCaseStrategy *self) {
  ComFasterxmlJacksonDatabindPropertyNamingStrategy_PropertyNamingStrategyBase_init(self);
}

ComFasterxmlJacksonDatabindPropertyNamingStrategy_SnakeCaseStrategy *new_ComFasterxmlJacksonDatabindPropertyNamingStrategy_SnakeCaseStrategy_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindPropertyNamingStrategy_SnakeCaseStrategy, init)
}

ComFasterxmlJacksonDatabindPropertyNamingStrategy_SnakeCaseStrategy *create_ComFasterxmlJacksonDatabindPropertyNamingStrategy_SnakeCaseStrategy_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindPropertyNamingStrategy_SnakeCaseStrategy, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindPropertyNamingStrategy_SnakeCaseStrategy)

@implementation ComFasterxmlJacksonDatabindPropertyNamingStrategy_UpperCamelCaseStrategy

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindPropertyNamingStrategy_UpperCamelCaseStrategy_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)translateWithNSString:(NSString *)input {
  if (input == nil || [input java_length] == 0) {
    return input;
  }
  jchar c = [input charAtWithInt:0];
  jchar uc = JavaLangCharacter_toUpperCaseWithChar_(c);
  if (c == uc) {
    return input;
  }
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_initWithNSString_(input);
  [sb setCharAtWithInt:0 withChar:uc];
  return [sb description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(translateWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "translate", "LNSString;", "LComFasterxmlJacksonDatabindPropertyNamingStrategy;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindPropertyNamingStrategy_UpperCamelCaseStrategy = { "UpperCamelCaseStrategy", "com.fasterxml.jackson.databind", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindPropertyNamingStrategy_UpperCamelCaseStrategy;
}

@end

void ComFasterxmlJacksonDatabindPropertyNamingStrategy_UpperCamelCaseStrategy_init(ComFasterxmlJacksonDatabindPropertyNamingStrategy_UpperCamelCaseStrategy *self) {
  ComFasterxmlJacksonDatabindPropertyNamingStrategy_PropertyNamingStrategyBase_init(self);
}

ComFasterxmlJacksonDatabindPropertyNamingStrategy_UpperCamelCaseStrategy *new_ComFasterxmlJacksonDatabindPropertyNamingStrategy_UpperCamelCaseStrategy_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindPropertyNamingStrategy_UpperCamelCaseStrategy, init)
}

ComFasterxmlJacksonDatabindPropertyNamingStrategy_UpperCamelCaseStrategy *create_ComFasterxmlJacksonDatabindPropertyNamingStrategy_UpperCamelCaseStrategy_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindPropertyNamingStrategy_UpperCamelCaseStrategy, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindPropertyNamingStrategy_UpperCamelCaseStrategy)

@implementation ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseStrategy

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseStrategy_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)translateWithNSString:(NSString *)input {
  return [((NSString *) nil_chk(input)) lowercaseString];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(translateWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "translate", "LNSString;", "LComFasterxmlJacksonDatabindPropertyNamingStrategy;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseStrategy = { "LowerCaseStrategy", "com.fasterxml.jackson.databind", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseStrategy;
}

@end

void ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseStrategy_init(ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseStrategy *self) {
  ComFasterxmlJacksonDatabindPropertyNamingStrategy_PropertyNamingStrategyBase_init(self);
}

ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseStrategy *new_ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseStrategy_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseStrategy, init)
}

ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseStrategy *create_ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseStrategy_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseStrategy, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseStrategy)

@implementation ComFasterxmlJacksonDatabindPropertyNamingStrategy_KebabCaseStrategy

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindPropertyNamingStrategy_KebabCaseStrategy_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (NSString *)translateWithNSString:(NSString *)input {
  if (input == nil) return input;
  jint length = [input java_length];
  if (length == 0) {
    return input;
  }
  JavaLangStringBuilder *result = create_JavaLangStringBuilder_initWithInt_(length + (JreRShift32(length, 1)));
  jint upperCount = 0;
  for (jint i = 0; i < length; ++i) {
    jchar ch = [input charAtWithInt:i];
    jchar lc = JavaLangCharacter_toLowerCaseWithChar_(ch);
    if (lc == ch) {
      if (upperCount > 1) {
        [result insertWithInt:[result java_length] - 1 withChar:'-'];
      }
      upperCount = 0;
    }
    else {
      if ((upperCount == 0) && (i > 0)) {
        [result appendWithChar:'-'];
      }
      ++upperCount;
    }
    [result appendWithChar:lc];
  }
  return [result description];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(translateWithNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "translate", "LNSString;", "LComFasterxmlJacksonDatabindPropertyNamingStrategy;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindPropertyNamingStrategy_KebabCaseStrategy = { "KebabCaseStrategy", "com.fasterxml.jackson.databind", ptrTable, methods, NULL, 7, 0x9, 2, 0, 2, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindPropertyNamingStrategy_KebabCaseStrategy;
}

@end

void ComFasterxmlJacksonDatabindPropertyNamingStrategy_KebabCaseStrategy_init(ComFasterxmlJacksonDatabindPropertyNamingStrategy_KebabCaseStrategy *self) {
  ComFasterxmlJacksonDatabindPropertyNamingStrategy_PropertyNamingStrategyBase_init(self);
}

ComFasterxmlJacksonDatabindPropertyNamingStrategy_KebabCaseStrategy *new_ComFasterxmlJacksonDatabindPropertyNamingStrategy_KebabCaseStrategy_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindPropertyNamingStrategy_KebabCaseStrategy, init)
}

ComFasterxmlJacksonDatabindPropertyNamingStrategy_KebabCaseStrategy *create_ComFasterxmlJacksonDatabindPropertyNamingStrategy_KebabCaseStrategy_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindPropertyNamingStrategy_KebabCaseStrategy, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindPropertyNamingStrategy_KebabCaseStrategy)

@implementation ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseWithUnderscoresStrategy

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseWithUnderscoresStrategy_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindPropertyNamingStrategy;", (void *)&ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseWithUnderscoresStrategy__Annotations$0 };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseWithUnderscoresStrategy = { "LowerCaseWithUnderscoresStrategy", "com.fasterxml.jackson.databind", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, 1 };
  return &_ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseWithUnderscoresStrategy;
}

@end

void ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseWithUnderscoresStrategy_init(ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseWithUnderscoresStrategy *self) {
  ComFasterxmlJacksonDatabindPropertyNamingStrategy_SnakeCaseStrategy_init(self);
}

ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseWithUnderscoresStrategy *new_ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseWithUnderscoresStrategy_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseWithUnderscoresStrategy, init)
}

ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseWithUnderscoresStrategy *create_ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseWithUnderscoresStrategy_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseWithUnderscoresStrategy, init)
}

IOSObjectArray *ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseWithUnderscoresStrategy__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindPropertyNamingStrategy_LowerCaseWithUnderscoresStrategy)

@implementation ComFasterxmlJacksonDatabindPropertyNamingStrategy_PascalCaseStrategy

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindPropertyNamingStrategy_PascalCaseStrategy_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindPropertyNamingStrategy;", (void *)&ComFasterxmlJacksonDatabindPropertyNamingStrategy_PascalCaseStrategy__Annotations$0 };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindPropertyNamingStrategy_PascalCaseStrategy = { "PascalCaseStrategy", "com.fasterxml.jackson.databind", ptrTable, methods, NULL, 7, 0x9, 1, 0, 0, -1, -1, -1, 1 };
  return &_ComFasterxmlJacksonDatabindPropertyNamingStrategy_PascalCaseStrategy;
}

@end

void ComFasterxmlJacksonDatabindPropertyNamingStrategy_PascalCaseStrategy_init(ComFasterxmlJacksonDatabindPropertyNamingStrategy_PascalCaseStrategy *self) {
  ComFasterxmlJacksonDatabindPropertyNamingStrategy_UpperCamelCaseStrategy_init(self);
}

ComFasterxmlJacksonDatabindPropertyNamingStrategy_PascalCaseStrategy *new_ComFasterxmlJacksonDatabindPropertyNamingStrategy_PascalCaseStrategy_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindPropertyNamingStrategy_PascalCaseStrategy, init)
}

ComFasterxmlJacksonDatabindPropertyNamingStrategy_PascalCaseStrategy *create_ComFasterxmlJacksonDatabindPropertyNamingStrategy_PascalCaseStrategy_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindPropertyNamingStrategy_PascalCaseStrategy, init)
}

IOSObjectArray *ComFasterxmlJacksonDatabindPropertyNamingStrategy_PascalCaseStrategy__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindPropertyNamingStrategy_PascalCaseStrategy)
