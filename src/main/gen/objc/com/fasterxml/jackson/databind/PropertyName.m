//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/PropertyName.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/SerializableString.h"
#include "com/fasterxml/jackson/core/io/SerializedString.h"
#include "com/fasterxml/jackson/core/util/InternCache.h"
#include "com/fasterxml/jackson/databind/PropertyName.h"
#include "com/fasterxml/jackson/databind/cfg/MapperConfig.h"
#include "com/fasterxml/jackson/databind/util/ClassUtil.h"

inline jlong ComFasterxmlJacksonDatabindPropertyName_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindPropertyName_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindPropertyName, serialVersionUID, jlong)

inline NSString *ComFasterxmlJacksonDatabindPropertyName_get__USE_DEFAULT(void);
static NSString *ComFasterxmlJacksonDatabindPropertyName__USE_DEFAULT = @"";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindPropertyName, _USE_DEFAULT, NSString *)

inline NSString *ComFasterxmlJacksonDatabindPropertyName_get__NO_NAME(void);
static NSString *ComFasterxmlJacksonDatabindPropertyName__NO_NAME = @"";
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindPropertyName, _NO_NAME, NSString *)

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindPropertyName)

ComFasterxmlJacksonDatabindPropertyName *ComFasterxmlJacksonDatabindPropertyName_USE_DEFAULT;
ComFasterxmlJacksonDatabindPropertyName *ComFasterxmlJacksonDatabindPropertyName_NO_NAME;

@implementation ComFasterxmlJacksonDatabindPropertyName

- (instancetype __nonnull)initWithNSString:(NSString *)simpleName {
  ComFasterxmlJacksonDatabindPropertyName_initWithNSString_(self, simpleName);
  return self;
}

- (instancetype __nonnull)initWithNSString:(NSString *)simpleName
                              withNSString:(NSString *)namespace_ {
  ComFasterxmlJacksonDatabindPropertyName_initWithNSString_withNSString_(self, simpleName, namespace_);
  return self;
}

- (id)readResolve {
  if (_namespace_ == nil) {
    if (_simpleName_ == nil || [((NSString *) nil_chk(ComFasterxmlJacksonDatabindPropertyName__USE_DEFAULT)) isEqual:_simpleName_]) {
      return ComFasterxmlJacksonDatabindPropertyName_USE_DEFAULT;
    }
  }
  return self;
}

+ (ComFasterxmlJacksonDatabindPropertyName *)constructWithNSString:(NSString *)simpleName {
  return ComFasterxmlJacksonDatabindPropertyName_constructWithNSString_(simpleName);
}

+ (ComFasterxmlJacksonDatabindPropertyName *)constructWithNSString:(NSString *)simpleName
                                                      withNSString:(NSString *)ns {
  return ComFasterxmlJacksonDatabindPropertyName_constructWithNSString_withNSString_(simpleName, ns);
}

- (ComFasterxmlJacksonDatabindPropertyName *)internSimpleName {
  if ([((NSString *) nil_chk(_simpleName_)) java_length] == 0) {
    return self;
  }
  NSString *interned = [((ComFasterxmlJacksonCoreUtilInternCache *) nil_chk(JreLoadStatic(ComFasterxmlJacksonCoreUtilInternCache, instance))) internWithNSString:_simpleName_];
  if (interned == _simpleName_) {
    return self;
  }
  return create_ComFasterxmlJacksonDatabindPropertyName_initWithNSString_withNSString_(interned, _namespace_);
}

- (ComFasterxmlJacksonDatabindPropertyName *)withSimpleNameWithNSString:(NSString *)simpleName {
  if (simpleName == nil) {
    simpleName = @"";
  }
  if ([simpleName isEqual:_simpleName_]) {
    return self;
  }
  return create_ComFasterxmlJacksonDatabindPropertyName_initWithNSString_withNSString_(simpleName, _namespace_);
}

- (ComFasterxmlJacksonDatabindPropertyName *)withNamespaceWithNSString:(NSString *)ns {
  if (ns == nil) {
    if (_namespace_ == nil) {
      return self;
    }
  }
  else if ([ns isEqual:_namespace_]) {
    return self;
  }
  return create_ComFasterxmlJacksonDatabindPropertyName_initWithNSString_withNSString_(_simpleName_, ns);
}

- (NSString *)getSimpleName {
  return _simpleName_;
}

- (id<ComFasterxmlJacksonCoreSerializableString>)simpleAsEncodedWithComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)config {
  id<ComFasterxmlJacksonCoreSerializableString> sstr = _encodedSimple_;
  if (sstr == nil) {
    if (config == nil) {
      sstr = create_ComFasterxmlJacksonCoreIoSerializedString_initWithNSString_(_simpleName_);
    }
    else {
      sstr = [config compileStringWithNSString:_simpleName_];
    }
    JreStrongAssign(&_encodedSimple_, sstr);
  }
  return sstr;
}

- (NSString *)getNamespace {
  return _namespace_;
}

- (jboolean)hasSimpleName {
  return [((NSString *) nil_chk(_simpleName_)) java_length] > 0;
}

- (jboolean)hasSimpleNameWithNSString:(NSString *)str {
  return [((NSString *) nil_chk(_simpleName_)) isEqual:str];
}

- (jboolean)hasNamespace {
  return _namespace_ != nil;
}

- (jboolean)isEmpty {
  return (_namespace_ == nil) && ([((NSString *) nil_chk(_simpleName_)) java_isEmpty]);
}

- (jboolean)isEqual:(id)o {
  if (o == self) return true;
  if (o == nil) return false;
  if ([o java_getClass] != [self java_getClass]) return false;
  ComFasterxmlJacksonDatabindPropertyName *other = (ComFasterxmlJacksonDatabindPropertyName *) cast_chk(o, [ComFasterxmlJacksonDatabindPropertyName class]);
  if (_simpleName_ == nil) {
    if (other->_simpleName_ != nil) return false;
  }
  else if (![_simpleName_ isEqual:other->_simpleName_]) {
    return false;
  }
  if (_namespace_ == nil) {
    return nil == other->_namespace_;
  }
  return [_namespace_ isEqual:other->_namespace_];
}

- (NSUInteger)hash {
  if (_namespace_ == nil) {
    return ((jint) [((NSString *) nil_chk(_simpleName_)) hash]);
  }
  return ((jint) [_namespace_ hash]) ^ ((jint) [((NSString *) nil_chk(_simpleName_)) hash]);
}

- (NSString *)description {
  if (_namespace_ == nil) {
    return _simpleName_;
  }
  return JreStrcat("C$C$", '{', _namespace_, '}', _simpleName_);
}

- (void)dealloc {
  RELEASE_(_simpleName_);
  RELEASE_(_namespace_);
  RELEASE_(_encodedSimple_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindPropertyName;", 0x9, 2, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindPropertyName;", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindPropertyName;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindPropertyName;", 0x1, 3, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindPropertyName;", 0x1, 4, 0, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreSerializableString;", 0x1, 5, 6, -1, 7, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 8, 0, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 11, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 12, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithNSString:withNSString:);
  methods[2].selector = @selector(readResolve);
  methods[3].selector = @selector(constructWithNSString:);
  methods[4].selector = @selector(constructWithNSString:withNSString:);
  methods[5].selector = @selector(internSimpleName);
  methods[6].selector = @selector(withSimpleNameWithNSString:);
  methods[7].selector = @selector(withNamespaceWithNSString:);
  methods[8].selector = @selector(getSimpleName);
  methods[9].selector = @selector(simpleAsEncodedWithComFasterxmlJacksonDatabindCfgMapperConfig:);
  methods[10].selector = @selector(getNamespace);
  methods[11].selector = @selector(hasSimpleName);
  methods[12].selector = @selector(hasSimpleNameWithNSString:);
  methods[13].selector = @selector(hasNamespace);
  methods[14].selector = @selector(isEmpty);
  methods[15].selector = @selector(isEqual:);
  methods[16].selector = @selector(hash);
  methods[17].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindPropertyName_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "_USE_DEFAULT", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 13, -1, -1 },
    { "_NO_NAME", "LNSString;", .constantValue.asLong = 0, 0x1a, -1, 14, -1, -1 },
    { "USE_DEFAULT", "LComFasterxmlJacksonDatabindPropertyName;", .constantValue.asLong = 0, 0x19, -1, 15, -1, -1 },
    { "NO_NAME", "LComFasterxmlJacksonDatabindPropertyName;", .constantValue.asLong = 0, 0x19, -1, 16, -1, -1 },
    { "_simpleName_", "LNSString;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_namespace_", "LNSString;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_encodedSimple_", "LComFasterxmlJacksonCoreSerializableString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "LNSString;LNSString;", "construct", "withSimpleName", "withNamespace", "simpleAsEncoded", "LComFasterxmlJacksonDatabindCfgMapperConfig;", "(Lcom/fasterxml/jackson/databind/cfg/MapperConfig<*>;)Lcom/fasterxml/jackson/core/SerializableString;", "hasSimpleName", "equals", "LNSObject;", "hashCode", "toString", &ComFasterxmlJacksonDatabindPropertyName__USE_DEFAULT, &ComFasterxmlJacksonDatabindPropertyName__NO_NAME, &ComFasterxmlJacksonDatabindPropertyName_USE_DEFAULT, &ComFasterxmlJacksonDatabindPropertyName_NO_NAME };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindPropertyName = { "PropertyName", "com.fasterxml.jackson.databind", ptrTable, methods, fields, 7, 0x1, 18, 8, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindPropertyName;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindPropertyName class]) {
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindPropertyName_USE_DEFAULT, new_ComFasterxmlJacksonDatabindPropertyName_initWithNSString_withNSString_(ComFasterxmlJacksonDatabindPropertyName__USE_DEFAULT, nil));
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindPropertyName_NO_NAME, new_ComFasterxmlJacksonDatabindPropertyName_initWithNSString_withNSString_([NSString stringWithString:ComFasterxmlJacksonDatabindPropertyName__NO_NAME], nil));
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindPropertyName)
  }
}

@end

void ComFasterxmlJacksonDatabindPropertyName_initWithNSString_(ComFasterxmlJacksonDatabindPropertyName *self, NSString *simpleName) {
  ComFasterxmlJacksonDatabindPropertyName_initWithNSString_withNSString_(self, simpleName, nil);
}

ComFasterxmlJacksonDatabindPropertyName *new_ComFasterxmlJacksonDatabindPropertyName_initWithNSString_(NSString *simpleName) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindPropertyName, initWithNSString_, simpleName)
}

ComFasterxmlJacksonDatabindPropertyName *create_ComFasterxmlJacksonDatabindPropertyName_initWithNSString_(NSString *simpleName) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindPropertyName, initWithNSString_, simpleName)
}

void ComFasterxmlJacksonDatabindPropertyName_initWithNSString_withNSString_(ComFasterxmlJacksonDatabindPropertyName *self, NSString *simpleName, NSString *namespace_) {
  NSObject_init(self);
  JreStrongAssign(&self->_simpleName_, ComFasterxmlJacksonDatabindUtilClassUtil_nonNullStringWithNSString_(simpleName));
  JreStrongAssign(&self->_namespace_, namespace_);
}

ComFasterxmlJacksonDatabindPropertyName *new_ComFasterxmlJacksonDatabindPropertyName_initWithNSString_withNSString_(NSString *simpleName, NSString *namespace_) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindPropertyName, initWithNSString_withNSString_, simpleName, namespace_)
}

ComFasterxmlJacksonDatabindPropertyName *create_ComFasterxmlJacksonDatabindPropertyName_initWithNSString_withNSString_(NSString *simpleName, NSString *namespace_) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindPropertyName, initWithNSString_withNSString_, simpleName, namespace_)
}

ComFasterxmlJacksonDatabindPropertyName *ComFasterxmlJacksonDatabindPropertyName_constructWithNSString_(NSString *simpleName) {
  ComFasterxmlJacksonDatabindPropertyName_initialize();
  if (simpleName == nil || [simpleName java_length] == 0) {
    return ComFasterxmlJacksonDatabindPropertyName_USE_DEFAULT;
  }
  return create_ComFasterxmlJacksonDatabindPropertyName_initWithNSString_withNSString_([((ComFasterxmlJacksonCoreUtilInternCache *) nil_chk(JreLoadStatic(ComFasterxmlJacksonCoreUtilInternCache, instance))) internWithNSString:simpleName], nil);
}

ComFasterxmlJacksonDatabindPropertyName *ComFasterxmlJacksonDatabindPropertyName_constructWithNSString_withNSString_(NSString *simpleName, NSString *ns) {
  ComFasterxmlJacksonDatabindPropertyName_initialize();
  if (simpleName == nil) {
    simpleName = @"";
  }
  if (ns == nil && [simpleName java_length] == 0) {
    return ComFasterxmlJacksonDatabindPropertyName_USE_DEFAULT;
  }
  return create_ComFasterxmlJacksonDatabindPropertyName_initWithNSString_withNSString_([((ComFasterxmlJacksonCoreUtilInternCache *) nil_chk(JreLoadStatic(ComFasterxmlJacksonCoreUtilInternCache, instance))) internWithNSString:simpleName], ns);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindPropertyName)
