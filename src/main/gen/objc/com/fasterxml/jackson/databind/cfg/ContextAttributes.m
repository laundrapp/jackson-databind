//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/cfg/ContextAttributes.java
//

#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/databind/cfg/ContextAttributes.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"

@interface ComFasterxmlJacksonDatabindCfgContextAttributes_Impl ()

- (id<JavaUtilMap>)_copyWithJavaUtilMap:(id<JavaUtilMap>)src OBJC_METHOD_FAMILY_NONE;

@end

inline jlong ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindCfgContextAttributes_Impl, serialVersionUID, jlong)

__attribute__((unused)) static id<JavaUtilMap> ComFasterxmlJacksonDatabindCfgContextAttributes_Impl__copyWithJavaUtilMap_(ComFasterxmlJacksonDatabindCfgContextAttributes_Impl *self, id<JavaUtilMap> src);

@implementation ComFasterxmlJacksonDatabindCfgContextAttributes

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindCfgContextAttributes_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (ComFasterxmlJacksonDatabindCfgContextAttributes *)getEmpty {
  return ComFasterxmlJacksonDatabindCfgContextAttributes_getEmpty();
}

- (ComFasterxmlJacksonDatabindCfgContextAttributes *)withSharedAttributeWithId:(id)key
                                                                        withId:(id)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindCfgContextAttributes *)withSharedAttributesWithJavaUtilMap:(id<JavaUtilMap>)attributes {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindCfgContextAttributes *)withoutSharedAttributeWithId:(id)key {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)getAttributeWithId:(id)key {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindCfgContextAttributes *)withPerCallAttributeWithId:(id)key
                                                                         withId:(id)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgContextAttributes;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgContextAttributes;", 0x401, 0, 1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgContextAttributes;", 0x401, 2, 3, -1, 4, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgContextAttributes;", 0x401, 5, 6, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x401, 7, 6, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgContextAttributes;", 0x401, 8, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getEmpty);
  methods[2].selector = @selector(withSharedAttributeWithId:withId:);
  methods[3].selector = @selector(withSharedAttributesWithJavaUtilMap:);
  methods[4].selector = @selector(withoutSharedAttributeWithId:);
  methods[5].selector = @selector(getAttributeWithId:);
  methods[6].selector = @selector(withPerCallAttributeWithId:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "withSharedAttribute", "LNSObject;LNSObject;", "withSharedAttributes", "LJavaUtilMap;", "(Ljava/util/Map<**>;)Lcom/fasterxml/jackson/databind/cfg/ContextAttributes;", "withoutSharedAttribute", "LNSObject;", "getAttribute", "withPerCallAttribute", "LComFasterxmlJacksonDatabindCfgContextAttributes_Impl;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindCfgContextAttributes = { "ContextAttributes", "com.fasterxml.jackson.databind.cfg", ptrTable, methods, NULL, 7, 0x401, 7, 0, -1, 9, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindCfgContextAttributes;
}

@end

void ComFasterxmlJacksonDatabindCfgContextAttributes_init(ComFasterxmlJacksonDatabindCfgContextAttributes *self) {
  NSObject_init(self);
}

ComFasterxmlJacksonDatabindCfgContextAttributes *ComFasterxmlJacksonDatabindCfgContextAttributes_getEmpty() {
  ComFasterxmlJacksonDatabindCfgContextAttributes_initialize();
  return ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_getEmpty();
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindCfgContextAttributes)

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindCfgContextAttributes_Impl)

ComFasterxmlJacksonDatabindCfgContextAttributes_Impl *ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_EMPTY;
id ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_NULL_SURROGATE;

@implementation ComFasterxmlJacksonDatabindCfgContextAttributes_Impl

- (instancetype __nonnull)initWithJavaUtilMap:(id<JavaUtilMap>)shared {
  ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_initWithJavaUtilMap_(self, shared);
  return self;
}

- (instancetype __nonnull)initWithJavaUtilMap:(id<JavaUtilMap>)shared
                              withJavaUtilMap:(id<JavaUtilMap>)nonShared {
  ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_initWithJavaUtilMap_withJavaUtilMap_(self, shared, nonShared);
  return self;
}

+ (ComFasterxmlJacksonDatabindCfgContextAttributes *)getEmpty {
  return ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_getEmpty();
}

- (ComFasterxmlJacksonDatabindCfgContextAttributes *)withSharedAttributeWithId:(id)key
                                                                        withId:(id)value {
  id<JavaUtilMap> m;
  if (self == ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_EMPTY) {
    m = create_JavaUtilHashMap_initWithInt_(8);
  }
  else {
    m = ComFasterxmlJacksonDatabindCfgContextAttributes_Impl__copyWithJavaUtilMap_(self, _shared_);
  }
  [((id<JavaUtilMap>) nil_chk(m)) putWithId:key withId:value];
  return create_ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_initWithJavaUtilMap_(m);
}

- (ComFasterxmlJacksonDatabindCfgContextAttributes *)withSharedAttributesWithJavaUtilMap:(id<JavaUtilMap>)shared {
  return create_ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_initWithJavaUtilMap_(shared);
}

- (ComFasterxmlJacksonDatabindCfgContextAttributes *)withoutSharedAttributeWithId:(id)key {
  if ([((id<JavaUtilMap>) nil_chk(_shared_)) isEmpty]) {
    return self;
  }
  if ([_shared_ containsKeyWithId:key]) {
    if ([_shared_ size] == 1) {
      return ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_EMPTY;
    }
  }
  else {
    return self;
  }
  id<JavaUtilMap> m = ComFasterxmlJacksonDatabindCfgContextAttributes_Impl__copyWithJavaUtilMap_(self, _shared_);
  [((id<JavaUtilMap>) nil_chk(m)) removeWithId:key];
  return create_ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_initWithJavaUtilMap_(m);
}

- (id)getAttributeWithId:(id)key {
  if (_nonShared_ != nil) {
    id ob = [_nonShared_ getWithId:key];
    if (ob != nil) {
      if (ob == ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_NULL_SURROGATE) {
        return nil;
      }
      return ob;
    }
  }
  return [((id<JavaUtilMap>) nil_chk(_shared_)) getWithId:key];
}

- (ComFasterxmlJacksonDatabindCfgContextAttributes *)withPerCallAttributeWithId:(id)key
                                                                         withId:(id)value {
  if (value == nil) {
    if ([((id<JavaUtilMap>) nil_chk(_shared_)) containsKeyWithId:key]) {
      value = ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_NULL_SURROGATE;
    }
    else if ((_nonShared_ == nil) || ![((id<JavaUtilMap>) nil_chk(_nonShared_)) containsKeyWithId:key]) {
      return self;
    }
    else {
      [((id<JavaUtilMap>) nil_chk(_nonShared_)) removeWithId:key];
      return self;
    }
  }
  if (_nonShared_ == nil) {
    return [self nonSharedInstanceWithId:key withId:value];
  }
  [_nonShared_ putWithId:key withId:value];
  return self;
}

- (ComFasterxmlJacksonDatabindCfgContextAttributes *)nonSharedInstanceWithId:(id)key
                                                                      withId:(id)value {
  id<JavaUtilMap> m = create_JavaUtilHashMap_init();
  if (value == nil) {
    value = ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_NULL_SURROGATE;
  }
  [m putWithId:key withId:value];
  return create_ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_initWithJavaUtilMap_withJavaUtilMap_(_shared_, m);
}

- (id<JavaUtilMap>)_copyWithJavaUtilMap:(id<JavaUtilMap>)src {
  return ComFasterxmlJacksonDatabindCfgContextAttributes_Impl__copyWithJavaUtilMap_(self, src);
}

- (void)dealloc {
  RELEASE_(_shared_);
  RELEASE_(_nonShared_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x4, -1, 2, -1, 3, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgContextAttributes;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgContextAttributes;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgContextAttributes;", 0x1, 6, 0, -1, 7, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgContextAttributes;", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 10, 9, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgContextAttributes;", 0x1, 11, 5, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgContextAttributes;", 0x4, 12, 5, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x2, 13, 0, -1, 14, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilMap:);
  methods[1].selector = @selector(initWithJavaUtilMap:withJavaUtilMap:);
  methods[2].selector = @selector(getEmpty);
  methods[3].selector = @selector(withSharedAttributeWithId:withId:);
  methods[4].selector = @selector(withSharedAttributesWithJavaUtilMap:);
  methods[5].selector = @selector(withoutSharedAttributeWithId:);
  methods[6].selector = @selector(getAttributeWithId:);
  methods[7].selector = @selector(withPerCallAttributeWithId:withId:);
  methods[8].selector = @selector(nonSharedInstanceWithId:withId:);
  methods[9].selector = @selector(_copyWithJavaUtilMap:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "EMPTY", "LComFasterxmlJacksonDatabindCfgContextAttributes_Impl;", .constantValue.asLong = 0, 0x1c, -1, 15, -1, -1 },
    { "NULL_SURROGATE", "LNSObject;", .constantValue.asLong = 0, 0x1c, -1, 16, -1, -1 },
    { "_shared_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x14, -1, -1, 17, -1 },
    { "_nonShared_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x84, -1, -1, 18, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilMap;", "(Ljava/util/Map<**>;)V", "LJavaUtilMap;LJavaUtilMap;", "(Ljava/util/Map<**>;Ljava/util/Map<Ljava/lang/Object;Ljava/lang/Object;>;)V", "withSharedAttribute", "LNSObject;LNSObject;", "withSharedAttributes", "(Ljava/util/Map<**>;)Lcom/fasterxml/jackson/databind/cfg/ContextAttributes;", "withoutSharedAttribute", "LNSObject;", "getAttribute", "withPerCallAttribute", "nonSharedInstance", "_copy", "(Ljava/util/Map<**>;)Ljava/util/Map<Ljava/lang/Object;Ljava/lang/Object;>;", &ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_EMPTY, &ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_NULL_SURROGATE, "Ljava/util/Map<**>;", "Ljava/util/Map<Ljava/lang/Object;Ljava/lang/Object;>;", "LComFasterxmlJacksonDatabindCfgContextAttributes;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindCfgContextAttributes_Impl = { "Impl", "com.fasterxml.jackson.databind.cfg", ptrTable, methods, fields, 7, 0x9, 10, 5, 19, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindCfgContextAttributes_Impl;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindCfgContextAttributes_Impl class]) {
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_EMPTY, new_ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_initWithJavaUtilMap_(JavaUtilCollections_emptyMap()));
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_NULL_SURROGATE, new_NSObject_init());
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindCfgContextAttributes_Impl)
  }
}

@end

void ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_initWithJavaUtilMap_(ComFasterxmlJacksonDatabindCfgContextAttributes_Impl *self, id<JavaUtilMap> shared) {
  ComFasterxmlJacksonDatabindCfgContextAttributes_init(self);
  JreStrongAssign(&self->_shared_, shared);
  JreStrongAssign(&self->_nonShared_, nil);
}

ComFasterxmlJacksonDatabindCfgContextAttributes_Impl *new_ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_initWithJavaUtilMap_(id<JavaUtilMap> shared) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindCfgContextAttributes_Impl, initWithJavaUtilMap_, shared)
}

ComFasterxmlJacksonDatabindCfgContextAttributes_Impl *create_ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_initWithJavaUtilMap_(id<JavaUtilMap> shared) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindCfgContextAttributes_Impl, initWithJavaUtilMap_, shared)
}

void ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_initWithJavaUtilMap_withJavaUtilMap_(ComFasterxmlJacksonDatabindCfgContextAttributes_Impl *self, id<JavaUtilMap> shared, id<JavaUtilMap> nonShared) {
  ComFasterxmlJacksonDatabindCfgContextAttributes_init(self);
  JreStrongAssign(&self->_shared_, shared);
  JreStrongAssign(&self->_nonShared_, nonShared);
}

ComFasterxmlJacksonDatabindCfgContextAttributes_Impl *new_ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_initWithJavaUtilMap_withJavaUtilMap_(id<JavaUtilMap> shared, id<JavaUtilMap> nonShared) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindCfgContextAttributes_Impl, initWithJavaUtilMap_withJavaUtilMap_, shared, nonShared)
}

ComFasterxmlJacksonDatabindCfgContextAttributes_Impl *create_ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_initWithJavaUtilMap_withJavaUtilMap_(id<JavaUtilMap> shared, id<JavaUtilMap> nonShared) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindCfgContextAttributes_Impl, initWithJavaUtilMap_withJavaUtilMap_, shared, nonShared)
}

ComFasterxmlJacksonDatabindCfgContextAttributes *ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_getEmpty() {
  ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_initialize();
  return ComFasterxmlJacksonDatabindCfgContextAttributes_Impl_EMPTY;
}

id<JavaUtilMap> ComFasterxmlJacksonDatabindCfgContextAttributes_Impl__copyWithJavaUtilMap_(ComFasterxmlJacksonDatabindCfgContextAttributes_Impl *self, id<JavaUtilMap> src) {
  return create_JavaUtilHashMap_initWithJavaUtilMap_(src);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindCfgContextAttributes_Impl)
