//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/deser/impl/ObjectIdReader.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserImplObjectIdReader")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindDeserImplObjectIdReader
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserImplObjectIdReader 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserImplObjectIdReader 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindDeserImplObjectIdReader

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindDeserImplObjectIdReader_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserImplObjectIdReader || defined(INCLUDE_ComFasterxmlJacksonDatabindDeserImplObjectIdReader))
#define ComFasterxmlJacksonDatabindDeserImplObjectIdReader_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class ComFasterxmlJacksonAnnotationObjectIdGenerator;
@class ComFasterxmlJacksonCoreJsonParser;
@class ComFasterxmlJacksonDatabindDeserSettableBeanProperty;
@class ComFasterxmlJacksonDatabindDeserializationContext;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsonDeserializer;
@class ComFasterxmlJacksonDatabindPropertyName;
@protocol ComFasterxmlJacksonAnnotationObjectIdResolver;

/*!
 @brief Object that knows how to deserialize Object Ids.
 */
@interface ComFasterxmlJacksonDatabindDeserImplObjectIdReader : NSObject < JavaIoSerializable > {
 @public
  ComFasterxmlJacksonDatabindJavaType *_idType_;
  ComFasterxmlJacksonDatabindPropertyName *propertyName_;
  /*!
   @brief Blueprint generator instance: actual instance will be
  fetched from <code>SerializerProvider</code> using this as
  the key.
   */
  ComFasterxmlJacksonAnnotationObjectIdGenerator *generator_;
  id<ComFasterxmlJacksonAnnotationObjectIdResolver> resolver_;
  /*!
   @brief Deserializer used for deserializing id values.
   */
  ComFasterxmlJacksonDatabindJsonDeserializer *_deserializer_;
  ComFasterxmlJacksonDatabindDeserSettableBeanProperty *idProperty_;
}

#pragma mark Public

/*!
 @brief Factory method called by <code>com.fasterxml.jackson.databind.ser.std.BeanSerializerBase</code>
  with the initial information based on standard settings for the type
  for which serializer is being built.
 */
+ (ComFasterxmlJacksonDatabindDeserImplObjectIdReader *)constructWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)idType
                                                             withComFasterxmlJacksonDatabindPropertyName:(ComFasterxmlJacksonDatabindPropertyName *)propName
                                                      withComFasterxmlJacksonAnnotationObjectIdGenerator:(ComFasterxmlJacksonAnnotationObjectIdGenerator *)generator
                                                         withComFasterxmlJacksonDatabindJsonDeserializer:(ComFasterxmlJacksonDatabindJsonDeserializer *)deser
                                                withComFasterxmlJacksonDatabindDeserSettableBeanProperty:(ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)idProp
                                                       withComFasterxmlJacksonAnnotationObjectIdResolver:(id<ComFasterxmlJacksonAnnotationObjectIdResolver>)resolver;

- (ComFasterxmlJacksonDatabindJsonDeserializer *)getDeserializer;

- (ComFasterxmlJacksonDatabindJavaType *)getIdType;

/*!
 @brief Convenience method, equivalent to calling:
 <code>
   readerInstance.generator.isValidReferencePropertyName(name, parser);
 </code>
  and used to determine whether Object Ids handled by the underlying
  generator may be in form of (JSON) Objects.
 Used for optimizing handling in cases where method returns false.
 @since 2.5
 */
- (jboolean)isValidReferencePropertyNameWithNSString:(NSString *)name
               withComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)parser;

/*!
 @brief Convenience method, equivalent to calling:
 <code>
   readerInstance.generator.maySerializeAsObject();
 </code>
  and used to determine whether Object Ids handled by the underlying
  generator may be in form of (JSON) Objects.
 Used for optimizing handling in cases where method returns false.
 @since 2.5
 */
- (jboolean)maySerializeAsObject;

/*!
 @brief Method called to read value that is expected to be an Object Reference
  (that is, value of an Object Id used to refer to another object).
 @since 2.3
 */
- (id)readObjectReferenceWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)jp
         withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt;

#pragma mark Protected

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)t
                          withComFasterxmlJacksonDatabindPropertyName:(ComFasterxmlJacksonDatabindPropertyName *)propName
                   withComFasterxmlJacksonAnnotationObjectIdGenerator:(ComFasterxmlJacksonAnnotationObjectIdGenerator *)gen
                      withComFasterxmlJacksonDatabindJsonDeserializer:(ComFasterxmlJacksonDatabindJsonDeserializer *)deser
             withComFasterxmlJacksonDatabindDeserSettableBeanProperty:(ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)idProp
                    withComFasterxmlJacksonAnnotationObjectIdResolver:(id<ComFasterxmlJacksonAnnotationObjectIdResolver>)resolver;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindDeserImplObjectIdReader)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserImplObjectIdReader, _idType_, ComFasterxmlJacksonDatabindJavaType *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserImplObjectIdReader, propertyName_, ComFasterxmlJacksonDatabindPropertyName *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserImplObjectIdReader, generator_, ComFasterxmlJacksonAnnotationObjectIdGenerator *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserImplObjectIdReader, resolver_, id<ComFasterxmlJacksonAnnotationObjectIdResolver>)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserImplObjectIdReader, _deserializer_, ComFasterxmlJacksonDatabindJsonDeserializer *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserImplObjectIdReader, idProperty_, ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindDeserImplObjectIdReader_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindPropertyName_withComFasterxmlJacksonAnnotationObjectIdGenerator_withComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindDeserSettableBeanProperty_withComFasterxmlJacksonAnnotationObjectIdResolver_(ComFasterxmlJacksonDatabindDeserImplObjectIdReader *self, ComFasterxmlJacksonDatabindJavaType *t, ComFasterxmlJacksonDatabindPropertyName *propName, ComFasterxmlJacksonAnnotationObjectIdGenerator *gen, ComFasterxmlJacksonDatabindJsonDeserializer *deser, ComFasterxmlJacksonDatabindDeserSettableBeanProperty *idProp, id<ComFasterxmlJacksonAnnotationObjectIdResolver> resolver);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserImplObjectIdReader *new_ComFasterxmlJacksonDatabindDeserImplObjectIdReader_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindPropertyName_withComFasterxmlJacksonAnnotationObjectIdGenerator_withComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindDeserSettableBeanProperty_withComFasterxmlJacksonAnnotationObjectIdResolver_(ComFasterxmlJacksonDatabindJavaType *t, ComFasterxmlJacksonDatabindPropertyName *propName, ComFasterxmlJacksonAnnotationObjectIdGenerator *gen, ComFasterxmlJacksonDatabindJsonDeserializer *deser, ComFasterxmlJacksonDatabindDeserSettableBeanProperty *idProp, id<ComFasterxmlJacksonAnnotationObjectIdResolver> resolver) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserImplObjectIdReader *create_ComFasterxmlJacksonDatabindDeserImplObjectIdReader_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindPropertyName_withComFasterxmlJacksonAnnotationObjectIdGenerator_withComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindDeserSettableBeanProperty_withComFasterxmlJacksonAnnotationObjectIdResolver_(ComFasterxmlJacksonDatabindJavaType *t, ComFasterxmlJacksonDatabindPropertyName *propName, ComFasterxmlJacksonAnnotationObjectIdGenerator *gen, ComFasterxmlJacksonDatabindJsonDeserializer *deser, ComFasterxmlJacksonDatabindDeserSettableBeanProperty *idProp, id<ComFasterxmlJacksonAnnotationObjectIdResolver> resolver);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserImplObjectIdReader *ComFasterxmlJacksonDatabindDeserImplObjectIdReader_constructWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindPropertyName_withComFasterxmlJacksonAnnotationObjectIdGenerator_withComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindDeserSettableBeanProperty_withComFasterxmlJacksonAnnotationObjectIdResolver_(ComFasterxmlJacksonDatabindJavaType *idType, ComFasterxmlJacksonDatabindPropertyName *propName, ComFasterxmlJacksonAnnotationObjectIdGenerator *generator, ComFasterxmlJacksonDatabindJsonDeserializer *deser, ComFasterxmlJacksonDatabindDeserSettableBeanProperty *idProp, id<ComFasterxmlJacksonAnnotationObjectIdResolver> resolver);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindDeserImplObjectIdReader)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserImplObjectIdReader")
