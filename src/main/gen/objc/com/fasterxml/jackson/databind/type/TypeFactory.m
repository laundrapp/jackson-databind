//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/TypeFactory.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/type/TypeReference.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/type/ArrayType.h"
#include "com/fasterxml/jackson/databind/type/ClassStack.h"
#include "com/fasterxml/jackson/databind/type/CollectionLikeType.h"
#include "com/fasterxml/jackson/databind/type/CollectionType.h"
#include "com/fasterxml/jackson/databind/type/MapLikeType.h"
#include "com/fasterxml/jackson/databind/type/MapType.h"
#include "com/fasterxml/jackson/databind/type/PlaceholderForType.h"
#include "com/fasterxml/jackson/databind/type/ReferenceType.h"
#include "com/fasterxml/jackson/databind/type/ResolvedRecursiveType.h"
#include "com/fasterxml/jackson/databind/type/SimpleType.h"
#include "com/fasterxml/jackson/databind/type/TypeBindings.h"
#include "com/fasterxml/jackson/databind/type/TypeFactory.h"
#include "com/fasterxml/jackson/databind/type/TypeModifier.h"
#include "com/fasterxml/jackson/databind/type/TypeParser.h"
#include "com/fasterxml/jackson/databind/util/ArrayBuilders.h"
#include "com/fasterxml/jackson/databind/util/ClassUtil.h"
#include "com/fasterxml/jackson/databind/util/LRUMap.h"
#include "java/lang/Boolean.h"
#include "java/lang/Byte.h"
#include "java/lang/Character.h"
#include "java/lang/ClassLoader.h"
#include "java/lang/ClassNotFoundException.h"
#include "java/lang/Comparable.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Double.h"
#include "java/lang/Enum.h"
#include "java/lang/Error.h"
#include "java/lang/Exception.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Short.h"
#include "java/lang/Thread.h"
#include "java/lang/Throwable.h"
#include "java/lang/Void.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/reflect/GenericArrayType.h"
#include "java/lang/reflect/ParameterizedType.h"
#include "java/lang/reflect/Type.h"
#include "java/lang/reflect/TypeVariable.h"
#include "java/lang/reflect/WildcardType.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/EnumMap.h"
#include "java/util/EnumSet.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/Properties.h"
#include "java/util/TreeMap.h"
#include "java/util/TreeSet.h"
#include "java/util/concurrent/atomic/AtomicReference.h"

@interface ComFasterxmlJacksonDatabindTypeTypeFactory ()

- (instancetype __nonnull)init;

- (ComFasterxmlJacksonDatabindTypeTypeBindings *)_bindingsForSubtypeWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)baseType
                                                                                                    withInt:(jint)typeParamCount
                                                                                               withIOSClass:(IOSClass *)subclass;

- (NSString *)_resolveTypePlaceholdersWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)sourceType
                                      withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)actualType;

- (jboolean)_verifyAndResolvePlaceholdersWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)exp
                                         withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)act;

- (ComFasterxmlJacksonDatabindJavaType *)_mapTypeWithIOSClass:(IOSClass *)rawClass
              withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)bindings
                      withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)superClass
                 withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)superInterfaces;

- (ComFasterxmlJacksonDatabindJavaType *)_collectionTypeWithIOSClass:(IOSClass *)rawClass
                     withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)bindings
                             withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)superClass
                        withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)superInterfaces;

- (ComFasterxmlJacksonDatabindJavaType *)_referenceTypeWithIOSClass:(IOSClass *)rawClass
                    withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)bindings
                            withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)superClass
                       withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)superInterfaces;

@end

inline jlong ComFasterxmlJacksonDatabindTypeTypeFactory_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindTypeTypeFactory_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindTypeTypeFactory, serialVersionUID, jlong)

inline IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeFactory_get_NO_TYPES(void);
static IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeFactory_NO_TYPES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindTypeTypeFactory, NO_TYPES, IOSObjectArray *)

inline IOSClass *ComFasterxmlJacksonDatabindTypeTypeFactory_get_CLS_STRING(void);
static IOSClass *ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_STRING;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindTypeTypeFactory, CLS_STRING, IOSClass *)

inline IOSClass *ComFasterxmlJacksonDatabindTypeTypeFactory_get_CLS_OBJECT(void);
static IOSClass *ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_OBJECT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindTypeTypeFactory, CLS_OBJECT, IOSClass *)

inline IOSClass *ComFasterxmlJacksonDatabindTypeTypeFactory_get_CLS_COMPARABLE(void);
static IOSClass *ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_COMPARABLE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindTypeTypeFactory, CLS_COMPARABLE, IOSClass *)

inline IOSClass *ComFasterxmlJacksonDatabindTypeTypeFactory_get_CLS_CLASS(void);
static IOSClass *ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_CLASS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindTypeTypeFactory, CLS_CLASS, IOSClass *)

inline IOSClass *ComFasterxmlJacksonDatabindTypeTypeFactory_get_CLS_ENUM(void);
static IOSClass *ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_ENUM;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindTypeTypeFactory, CLS_ENUM, IOSClass *)

inline IOSClass *ComFasterxmlJacksonDatabindTypeTypeFactory_get_CLS_BOOL(void);
static IOSClass *ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_BOOL;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindTypeTypeFactory, CLS_BOOL, IOSClass *)

inline IOSClass *ComFasterxmlJacksonDatabindTypeTypeFactory_get_CLS_INT(void);
static IOSClass *ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_INT;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindTypeTypeFactory, CLS_INT, IOSClass *)

inline IOSClass *ComFasterxmlJacksonDatabindTypeTypeFactory_get_CLS_LONG(void);
static IOSClass *ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_LONG;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindTypeTypeFactory, CLS_LONG, IOSClass *)

__attribute__((unused)) static void ComFasterxmlJacksonDatabindTypeTypeFactory_init(ComFasterxmlJacksonDatabindTypeTypeFactory *self);

__attribute__((unused)) static ComFasterxmlJacksonDatabindTypeTypeFactory *new_ComFasterxmlJacksonDatabindTypeTypeFactory_init(void) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComFasterxmlJacksonDatabindTypeTypeFactory *create_ComFasterxmlJacksonDatabindTypeTypeFactory_init(void);

__attribute__((unused)) static ComFasterxmlJacksonDatabindTypeTypeBindings *ComFasterxmlJacksonDatabindTypeTypeFactory__bindingsForSubtypeWithComFasterxmlJacksonDatabindJavaType_withInt_withIOSClass_(ComFasterxmlJacksonDatabindTypeTypeFactory *self, ComFasterxmlJacksonDatabindJavaType *baseType, jint typeParamCount, IOSClass *subclass);

__attribute__((unused)) static NSString *ComFasterxmlJacksonDatabindTypeTypeFactory__resolveTypePlaceholdersWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindTypeTypeFactory *self, ComFasterxmlJacksonDatabindJavaType *sourceType, ComFasterxmlJacksonDatabindJavaType *actualType);

__attribute__((unused)) static jboolean ComFasterxmlJacksonDatabindTypeTypeFactory__verifyAndResolvePlaceholdersWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindTypeTypeFactory *self, ComFasterxmlJacksonDatabindJavaType *exp, ComFasterxmlJacksonDatabindJavaType *act);

__attribute__((unused)) static ComFasterxmlJacksonDatabindJavaType *ComFasterxmlJacksonDatabindTypeTypeFactory__mapTypeWithIOSClass_withComFasterxmlJacksonDatabindTypeTypeBindings_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaTypeArray_(ComFasterxmlJacksonDatabindTypeTypeFactory *self, IOSClass *rawClass, ComFasterxmlJacksonDatabindTypeTypeBindings *bindings, ComFasterxmlJacksonDatabindJavaType *superClass, IOSObjectArray *superInterfaces);

__attribute__((unused)) static ComFasterxmlJacksonDatabindJavaType *ComFasterxmlJacksonDatabindTypeTypeFactory__collectionTypeWithIOSClass_withComFasterxmlJacksonDatabindTypeTypeBindings_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaTypeArray_(ComFasterxmlJacksonDatabindTypeTypeFactory *self, IOSClass *rawClass, ComFasterxmlJacksonDatabindTypeTypeBindings *bindings, ComFasterxmlJacksonDatabindJavaType *superClass, IOSObjectArray *superInterfaces);

__attribute__((unused)) static ComFasterxmlJacksonDatabindJavaType *ComFasterxmlJacksonDatabindTypeTypeFactory__referenceTypeWithIOSClass_withComFasterxmlJacksonDatabindTypeTypeBindings_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaTypeArray_(ComFasterxmlJacksonDatabindTypeTypeFactory *self, IOSClass *rawClass, ComFasterxmlJacksonDatabindTypeTypeBindings *bindings, ComFasterxmlJacksonDatabindJavaType *superClass, IOSObjectArray *superInterfaces);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeFactory__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeFactory__Annotations$1(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeFactory__Annotations$2(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeFactory__Annotations$3(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeFactory__Annotations$4(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeFactory__Annotations$5(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeFactory__Annotations$6(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeFactory__Annotations$7(void);

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindTypeTypeFactory)

ComFasterxmlJacksonDatabindTypeTypeFactory *ComFasterxmlJacksonDatabindTypeTypeFactory_instance;
ComFasterxmlJacksonDatabindTypeTypeBindings *ComFasterxmlJacksonDatabindTypeTypeFactory_EMPTY_BINDINGS;
ComFasterxmlJacksonDatabindTypeSimpleType *ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_BOOL;
ComFasterxmlJacksonDatabindTypeSimpleType *ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_INT;
ComFasterxmlJacksonDatabindTypeSimpleType *ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_LONG;
ComFasterxmlJacksonDatabindTypeSimpleType *ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_STRING;
ComFasterxmlJacksonDatabindTypeSimpleType *ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_OBJECT;
ComFasterxmlJacksonDatabindTypeSimpleType *ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_COMPARABLE;
ComFasterxmlJacksonDatabindTypeSimpleType *ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_ENUM;
ComFasterxmlJacksonDatabindTypeSimpleType *ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_CLASS;

@implementation ComFasterxmlJacksonDatabindTypeTypeFactory

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindTypeTypeFactory_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindUtilLRUMap:(ComFasterxmlJacksonDatabindUtilLRUMap *)typeCache {
  ComFasterxmlJacksonDatabindTypeTypeFactory_initWithComFasterxmlJacksonDatabindUtilLRUMap_(self, typeCache);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindUtilLRUMap:(ComFasterxmlJacksonDatabindUtilLRUMap *)typeCache
                          withComFasterxmlJacksonDatabindTypeTypeParser:(ComFasterxmlJacksonDatabindTypeTypeParser *)p
                   withComFasterxmlJacksonDatabindTypeTypeModifierArray:(IOSObjectArray *)mods
                                                withJavaLangClassLoader:(JavaLangClassLoader *)classLoader {
  ComFasterxmlJacksonDatabindTypeTypeFactory_initWithComFasterxmlJacksonDatabindUtilLRUMap_withComFasterxmlJacksonDatabindTypeTypeParser_withComFasterxmlJacksonDatabindTypeTypeModifierArray_withJavaLangClassLoader_(self, typeCache, p, mods, classLoader);
  return self;
}

- (ComFasterxmlJacksonDatabindTypeTypeFactory *)withModifierWithComFasterxmlJacksonDatabindTypeTypeModifier:(ComFasterxmlJacksonDatabindTypeTypeModifier *)mod {
  ComFasterxmlJacksonDatabindUtilLRUMap *typeCache = _typeCache_;
  IOSObjectArray *mods;
  if (mod == nil) {
    mods = nil;
    typeCache = nil;
  }
  else if (_modifiers_ == nil) {
    mods = [IOSObjectArray arrayWithObjects:(id[]){ mod } count:1 type:ComFasterxmlJacksonDatabindTypeTypeModifier_class_()];
  }
  else {
    mods = ComFasterxmlJacksonDatabindUtilArrayBuilders_insertInListNoDupWithNSObjectArray_withId_(_modifiers_, mod);
  }
  return create_ComFasterxmlJacksonDatabindTypeTypeFactory_initWithComFasterxmlJacksonDatabindUtilLRUMap_withComFasterxmlJacksonDatabindTypeTypeParser_withComFasterxmlJacksonDatabindTypeTypeModifierArray_withJavaLangClassLoader_(typeCache, _parser_, mods, _classLoader_);
}

- (ComFasterxmlJacksonDatabindTypeTypeFactory *)withClassLoaderWithJavaLangClassLoader:(JavaLangClassLoader *)classLoader {
  return create_ComFasterxmlJacksonDatabindTypeTypeFactory_initWithComFasterxmlJacksonDatabindUtilLRUMap_withComFasterxmlJacksonDatabindTypeTypeParser_withComFasterxmlJacksonDatabindTypeTypeModifierArray_withJavaLangClassLoader_(_typeCache_, _parser_, _modifiers_, classLoader);
}

- (ComFasterxmlJacksonDatabindTypeTypeFactory *)withCacheWithComFasterxmlJacksonDatabindUtilLRUMap:(ComFasterxmlJacksonDatabindUtilLRUMap *)cache {
  return create_ComFasterxmlJacksonDatabindTypeTypeFactory_initWithComFasterxmlJacksonDatabindUtilLRUMap_withComFasterxmlJacksonDatabindTypeTypeParser_withComFasterxmlJacksonDatabindTypeTypeModifierArray_withJavaLangClassLoader_(cache, _parser_, _modifiers_, _classLoader_);
}

+ (ComFasterxmlJacksonDatabindTypeTypeFactory *)defaultInstance {
  return ComFasterxmlJacksonDatabindTypeTypeFactory_defaultInstance();
}

- (void)clearCache {
  [((ComFasterxmlJacksonDatabindUtilLRUMap *) nil_chk(_typeCache_)) clear];
}

- (JavaLangClassLoader *)getClassLoader {
  return _classLoader_;
}

+ (ComFasterxmlJacksonDatabindJavaType *)unknownType {
  return ComFasterxmlJacksonDatabindTypeTypeFactory_unknownType();
}

+ (IOSClass *)rawClassWithJavaLangReflectType:(id<JavaLangReflectType>)t {
  return ComFasterxmlJacksonDatabindTypeTypeFactory_rawClassWithJavaLangReflectType_(t);
}

- (IOSClass *)findClassWithNSString:(NSString *)className_ {
  if ([((NSString *) nil_chk(className_)) java_indexOf:'.'] < 0) {
    IOSClass *prim = [self _findPrimitiveWithNSString:className_];
    if (prim != nil) {
      return prim;
    }
  }
  JavaLangThrowable *prob = nil;
  JavaLangClassLoader *loader = [self getClassLoader];
  if (loader == nil) {
    loader = [((JavaLangThread *) nil_chk(JavaLangThread_currentThread())) getContextClassLoader];
  }
  if (loader != nil) {
    @try {
      return [self classForNameWithNSString:className_ withBoolean:true withJavaLangClassLoader:loader];
    }
    @catch (JavaLangException *e) {
      prob = ComFasterxmlJacksonDatabindUtilClassUtil_getRootCauseWithJavaLangThrowable_(e);
    }
  }
  @try {
    return [self classForNameWithNSString:className_];
  }
  @catch (JavaLangException *e) {
    if (prob == nil) {
      prob = ComFasterxmlJacksonDatabindUtilClassUtil_getRootCauseWithJavaLangThrowable_(e);
    }
  }
  ComFasterxmlJacksonDatabindUtilClassUtil_throwIfRTEWithJavaLangThrowable_(prob);
  @throw create_JavaLangClassNotFoundException_initWithNSString_withJavaLangThrowable_([((JavaLangThrowable *) nil_chk(prob)) getMessage], prob);
}

- (IOSClass *)classForNameWithNSString:(NSString *)name
                           withBoolean:(jboolean)initialize_
               withJavaLangClassLoader:(JavaLangClassLoader *)loader {
  return IOSClass_forName_initialize_classLoader_(name, true, loader);
}

- (IOSClass *)classForNameWithNSString:(NSString *)name {
  return IOSClass_forName_(name);
}

- (IOSClass *)_findPrimitiveWithNSString:(NSString *)className_ {
  if ([@"int" isEqual:className_]) return JreLoadStatic(JavaLangInteger, TYPE);
  if ([@"long" isEqual:className_]) return JreLoadStatic(JavaLangLong, TYPE);
  if ([@"float" isEqual:className_]) return JreLoadStatic(JavaLangFloat, TYPE);
  if ([@"double" isEqual:className_]) return JreLoadStatic(JavaLangDouble, TYPE);
  if ([@"boolean" isEqual:className_]) return JreLoadStatic(JavaLangBoolean, TYPE);
  if ([@"byte" isEqual:className_]) return JreLoadStatic(JavaLangByte, TYPE);
  if ([@"char" isEqual:className_]) return JreLoadStatic(JavaLangCharacter, TYPE);
  if ([@"short" isEqual:className_]) return JreLoadStatic(JavaLangShort, TYPE);
  if ([@"void" isEqual:className_]) return JreLoadStatic(JavaLangVoid, TYPE);
  return nil;
}

- (ComFasterxmlJacksonDatabindJavaType *)constructSpecializedTypeWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)baseType
                                                                                            withIOSClass:(IOSClass *)subclass {
  IOSClass *rawBase = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(baseType)) getRawClass];
  if (rawBase == subclass) {
    return baseType;
  }
  ComFasterxmlJacksonDatabindJavaType *newType;
  do {
    if (rawBase == NSObject_class_()) {
      newType = [self _fromClassWithComFasterxmlJacksonDatabindTypeClassStack:nil withIOSClass:subclass withComFasterxmlJacksonDatabindTypeTypeBindings:ComFasterxmlJacksonDatabindTypeTypeFactory_EMPTY_BINDINGS];
      break;
    }
    if (![((IOSClass *) nil_chk(rawBase)) isAssignableFrom:subclass]) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(NSString_java_formatWithNSString_withNSObjectArray_(@"Class %s not subtype of %s", [IOSObjectArray arrayWithObjects:(id[]){ [((IOSClass *) nil_chk(subclass)) getName], baseType } count:2 type:NSObject_class_()]));
    }
    if ([((ComFasterxmlJacksonDatabindTypeTypeBindings *) nil_chk([baseType getBindings])) isEmpty]) {
      newType = [self _fromClassWithComFasterxmlJacksonDatabindTypeClassStack:nil withIOSClass:subclass withComFasterxmlJacksonDatabindTypeTypeBindings:ComFasterxmlJacksonDatabindTypeTypeFactory_EMPTY_BINDINGS];
      break;
    }
    if ([baseType isContainerType]) {
      if ([baseType isMapLikeType]) {
        if ((subclass == JavaUtilHashMap_class_()) || (subclass == JavaUtilLinkedHashMap_class_()) || (subclass == JavaUtilEnumMap_class_()) || (subclass == JavaUtilTreeMap_class_())) {
          newType = [self _fromClassWithComFasterxmlJacksonDatabindTypeClassStack:nil withIOSClass:subclass withComFasterxmlJacksonDatabindTypeTypeBindings:ComFasterxmlJacksonDatabindTypeTypeBindings_createWithIOSClass_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_(subclass, [baseType getKeyType], [baseType getContentType])];
          break;
        }
      }
      else if ([baseType isCollectionLikeType]) {
        if ((subclass == JavaUtilArrayList_class_()) || (subclass == JavaUtilLinkedList_class_()) || (subclass == JavaUtilHashSet_class_()) || (subclass == JavaUtilTreeSet_class_())) {
          newType = [self _fromClassWithComFasterxmlJacksonDatabindTypeClassStack:nil withIOSClass:subclass withComFasterxmlJacksonDatabindTypeTypeBindings:ComFasterxmlJacksonDatabindTypeTypeBindings_createWithIOSClass_withComFasterxmlJacksonDatabindJavaType_(subclass, [baseType getContentType])];
          break;
        }
        if (rawBase == JavaUtilEnumSet_class_()) {
          return baseType;
        }
      }
    }
    jint typeParamCount = ((IOSObjectArray *) nil_chk([((IOSClass *) nil_chk(subclass)) getTypeParameters]))->size_;
    if (typeParamCount == 0) {
      newType = [self _fromClassWithComFasterxmlJacksonDatabindTypeClassStack:nil withIOSClass:subclass withComFasterxmlJacksonDatabindTypeTypeBindings:ComFasterxmlJacksonDatabindTypeTypeFactory_EMPTY_BINDINGS];
      break;
    }
    ComFasterxmlJacksonDatabindTypeTypeBindings *tb = ComFasterxmlJacksonDatabindTypeTypeFactory__bindingsForSubtypeWithComFasterxmlJacksonDatabindJavaType_withInt_withIOSClass_(self, baseType, typeParamCount, subclass);
    newType = [self _fromClassWithComFasterxmlJacksonDatabindTypeClassStack:nil withIOSClass:subclass withComFasterxmlJacksonDatabindTypeTypeBindings:tb];
  }
  while (false);
  newType = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(newType)) withHandlersFromWithComFasterxmlJacksonDatabindJavaType:baseType];
  return newType;
}

- (ComFasterxmlJacksonDatabindTypeTypeBindings *)_bindingsForSubtypeWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)baseType
                                                                                                    withInt:(jint)typeParamCount
                                                                                               withIOSClass:(IOSClass *)subclass {
  return ComFasterxmlJacksonDatabindTypeTypeFactory__bindingsForSubtypeWithComFasterxmlJacksonDatabindJavaType_withInt_withIOSClass_(self, baseType, typeParamCount, subclass);
}

- (NSString *)_resolveTypePlaceholdersWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)sourceType
                                      withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)actualType {
  return ComFasterxmlJacksonDatabindTypeTypeFactory__resolveTypePlaceholdersWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_(self, sourceType, actualType);
}

- (jboolean)_verifyAndResolvePlaceholdersWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)exp
                                         withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)act {
  return ComFasterxmlJacksonDatabindTypeTypeFactory__verifyAndResolvePlaceholdersWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_(self, exp, act);
}

- (ComFasterxmlJacksonDatabindJavaType *)constructGeneralizedTypeWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)baseType
                                                                                            withIOSClass:(IOSClass *)superClass {
  IOSClass *rawBase = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(baseType)) getRawClass];
  if (rawBase == superClass) {
    return baseType;
  }
  ComFasterxmlJacksonDatabindJavaType *superType = [baseType findSuperTypeWithIOSClass:superClass];
  if (superType == nil) {
    if (![((IOSClass *) nil_chk(superClass)) isAssignableFrom:rawBase]) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(NSString_java_formatWithNSString_withNSObjectArray_(@"Class %s not a super-type of %s", [IOSObjectArray arrayWithObjects:(id[]){ [superClass getName], baseType } count:2 type:NSObject_class_()]));
    }
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(NSString_java_formatWithNSString_withNSObjectArray_(@"Internal error: class %s not included as super-type for %s", [IOSObjectArray arrayWithObjects:(id[]){ [superClass getName], baseType } count:2 type:NSObject_class_()]));
  }
  return superType;
}

- (ComFasterxmlJacksonDatabindJavaType *)constructFromCanonicalWithNSString:(NSString *)canonical {
  return [((ComFasterxmlJacksonDatabindTypeTypeParser *) nil_chk(_parser_)) parseWithNSString:canonical];
}

- (IOSObjectArray *)findTypeParametersWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                                 withIOSClass:(IOSClass *)expType {
  ComFasterxmlJacksonDatabindJavaType *match = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(type)) findSuperTypeWithIOSClass:expType];
  if (match == nil) {
    return ComFasterxmlJacksonDatabindTypeTypeFactory_NO_TYPES;
  }
  return [((ComFasterxmlJacksonDatabindTypeTypeBindings *) nil_chk([match getBindings])) typeParameterArray];
}

- (IOSObjectArray *)findTypeParametersWithIOSClass:(IOSClass *)clz
                                      withIOSClass:(IOSClass *)expType
   withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)bindings {
  return [self findTypeParametersWithComFasterxmlJacksonDatabindJavaType:[self constructTypeWithJavaLangReflectType:clz withComFasterxmlJacksonDatabindTypeTypeBindings:bindings] withIOSClass:expType];
}

- (IOSObjectArray *)findTypeParametersWithIOSClass:(IOSClass *)clz
                                      withIOSClass:(IOSClass *)expType {
  return [self findTypeParametersWithComFasterxmlJacksonDatabindJavaType:[self constructTypeWithJavaLangReflectType:clz] withIOSClass:expType];
}

- (ComFasterxmlJacksonDatabindJavaType *)moreSpecificTypeWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type1
                                                         withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type2 {
  if (type1 == nil) {
    return type2;
  }
  if (type2 == nil) {
    return type1;
  }
  IOSClass *raw1 = [type1 getRawClass];
  IOSClass *raw2 = [type2 getRawClass];
  if (raw1 == raw2) {
    return type1;
  }
  if ([((IOSClass *) nil_chk(raw1)) isAssignableFrom:raw2]) {
    return type2;
  }
  return type1;
}

- (ComFasterxmlJacksonDatabindJavaType *)constructTypeWithJavaLangReflectType:(id<JavaLangReflectType>)type {
  return [self _fromAnyWithComFasterxmlJacksonDatabindTypeClassStack:nil withJavaLangReflectType:type withComFasterxmlJacksonDatabindTypeTypeBindings:ComFasterxmlJacksonDatabindTypeTypeFactory_EMPTY_BINDINGS];
}

- (ComFasterxmlJacksonDatabindJavaType *)constructTypeWithJavaLangReflectType:(id<JavaLangReflectType>)type
                              withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)bindings {
  return [self _fromAnyWithComFasterxmlJacksonDatabindTypeClassStack:nil withJavaLangReflectType:type withComFasterxmlJacksonDatabindTypeTypeBindings:bindings];
}

- (ComFasterxmlJacksonDatabindJavaType *)constructTypeWithComFasterxmlJacksonCoreTypeTypeReference:(ComFasterxmlJacksonCoreTypeTypeReference *)typeRef {
  return [self _fromAnyWithComFasterxmlJacksonDatabindTypeClassStack:nil withJavaLangReflectType:[((ComFasterxmlJacksonCoreTypeTypeReference *) nil_chk(typeRef)) getType] withComFasterxmlJacksonDatabindTypeTypeBindings:ComFasterxmlJacksonDatabindTypeTypeFactory_EMPTY_BINDINGS];
}

- (ComFasterxmlJacksonDatabindJavaType *)constructTypeWithJavaLangReflectType:(id<JavaLangReflectType>)type
                                                                 withIOSClass:(IOSClass *)contextClass {
  ComFasterxmlJacksonDatabindJavaType *contextType = (contextClass == nil) ? nil : [self constructTypeWithJavaLangReflectType:contextClass];
  return [self constructTypeWithJavaLangReflectType:type withComFasterxmlJacksonDatabindJavaType:contextType];
}

- (ComFasterxmlJacksonDatabindJavaType *)constructTypeWithJavaLangReflectType:(id<JavaLangReflectType>)type
                                      withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)contextType {
  ComFasterxmlJacksonDatabindTypeTypeBindings *bindings;
  if (contextType == nil) {
    bindings = ComFasterxmlJacksonDatabindTypeTypeFactory_EMPTY_BINDINGS;
  }
  else {
    bindings = [contextType getBindings];
    if ([((id<JavaLangReflectType>) nil_chk(type)) java_getClass] != IOSClass_class_()) {
      while ([((ComFasterxmlJacksonDatabindTypeTypeBindings *) nil_chk(bindings)) isEmpty]) {
        contextType = [contextType getSuperClass];
        if (contextType == nil) {
          break;
        }
        bindings = [contextType getBindings];
      }
    }
  }
  return [self _fromAnyWithComFasterxmlJacksonDatabindTypeClassStack:nil withJavaLangReflectType:type withComFasterxmlJacksonDatabindTypeTypeBindings:bindings];
}

- (ComFasterxmlJacksonDatabindTypeArrayType *)constructArrayTypeWithIOSClass:(IOSClass *)elementType {
  return ComFasterxmlJacksonDatabindTypeArrayType_constructWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindTypeTypeBindings_([self _fromAnyWithComFasterxmlJacksonDatabindTypeClassStack:nil withJavaLangReflectType:elementType withComFasterxmlJacksonDatabindTypeTypeBindings:nil], nil);
}

- (ComFasterxmlJacksonDatabindTypeArrayType *)constructArrayTypeWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)elementType {
  return ComFasterxmlJacksonDatabindTypeArrayType_constructWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindTypeTypeBindings_(elementType, nil);
}

- (ComFasterxmlJacksonDatabindTypeCollectionType *)constructCollectionTypeWithIOSClass:(IOSClass *)collectionClass
                                                                          withIOSClass:(IOSClass *)elementClass {
  return [self constructCollectionTypeWithIOSClass:collectionClass withComFasterxmlJacksonDatabindJavaType:[self _fromClassWithComFasterxmlJacksonDatabindTypeClassStack:nil withIOSClass:elementClass withComFasterxmlJacksonDatabindTypeTypeBindings:ComFasterxmlJacksonDatabindTypeTypeFactory_EMPTY_BINDINGS]];
}

- (ComFasterxmlJacksonDatabindTypeCollectionType *)constructCollectionTypeWithIOSClass:(IOSClass *)collectionClass
                                               withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)elementType {
  ComFasterxmlJacksonDatabindTypeTypeBindings *bindings = ComFasterxmlJacksonDatabindTypeTypeBindings_createIfNeededWithIOSClass_withComFasterxmlJacksonDatabindJavaType_(collectionClass, elementType);
  ComFasterxmlJacksonDatabindTypeCollectionType *result = (ComFasterxmlJacksonDatabindTypeCollectionType *) cast_chk([self _fromClassWithComFasterxmlJacksonDatabindTypeClassStack:nil withIOSClass:collectionClass withComFasterxmlJacksonDatabindTypeTypeBindings:bindings], [ComFasterxmlJacksonDatabindTypeCollectionType class]);
  if ([((ComFasterxmlJacksonDatabindTypeTypeBindings *) nil_chk(bindings)) isEmpty] && (elementType != nil)) {
    ComFasterxmlJacksonDatabindJavaType *t = [((ComFasterxmlJacksonDatabindTypeCollectionType *) nil_chk(result)) findSuperTypeWithIOSClass:JavaUtilCollection_class_()];
    ComFasterxmlJacksonDatabindJavaType *realET = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(t)) getContentType];
    if (![((ComFasterxmlJacksonDatabindJavaType *) nil_chk(realET)) isEqual:elementType]) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(NSString_java_formatWithNSString_withNSObjectArray_(@"Non-generic Collection class %s did not resolve to something with element type %s but %s ", [IOSObjectArray arrayWithObjects:(id[]){ ComFasterxmlJacksonDatabindUtilClassUtil_nameOfWithIOSClass_(collectionClass), elementType, realET } count:3 type:NSObject_class_()]));
    }
  }
  return result;
}

- (ComFasterxmlJacksonDatabindTypeCollectionLikeType *)constructCollectionLikeTypeWithIOSClass:(IOSClass *)collectionClass
                                                                                  withIOSClass:(IOSClass *)elementClass {
  return [self constructCollectionLikeTypeWithIOSClass:collectionClass withComFasterxmlJacksonDatabindJavaType:[self _fromClassWithComFasterxmlJacksonDatabindTypeClassStack:nil withIOSClass:elementClass withComFasterxmlJacksonDatabindTypeTypeBindings:ComFasterxmlJacksonDatabindTypeTypeFactory_EMPTY_BINDINGS]];
}

- (ComFasterxmlJacksonDatabindTypeCollectionLikeType *)constructCollectionLikeTypeWithIOSClass:(IOSClass *)collectionClass
                                                       withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)elementType {
  ComFasterxmlJacksonDatabindJavaType *type = [self _fromClassWithComFasterxmlJacksonDatabindTypeClassStack:nil withIOSClass:collectionClass withComFasterxmlJacksonDatabindTypeTypeBindings:ComFasterxmlJacksonDatabindTypeTypeBindings_createIfNeededWithIOSClass_withComFasterxmlJacksonDatabindJavaType_(collectionClass, elementType)];
  if ([type isKindOfClass:[ComFasterxmlJacksonDatabindTypeCollectionLikeType class]]) {
    return (ComFasterxmlJacksonDatabindTypeCollectionLikeType *) cast_chk(type, [ComFasterxmlJacksonDatabindTypeCollectionLikeType class]);
  }
  return ComFasterxmlJacksonDatabindTypeCollectionLikeType_upgradeFromWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_(type, elementType);
}

- (ComFasterxmlJacksonDatabindTypeMapType *)constructMapTypeWithIOSClass:(IOSClass *)mapClass
                                                            withIOSClass:(IOSClass *)keyClass
                                                            withIOSClass:(IOSClass *)valueClass {
  ComFasterxmlJacksonDatabindJavaType *kt;
  ComFasterxmlJacksonDatabindJavaType *vt;
  if (mapClass == JavaUtilProperties_class_()) {
    kt = vt = ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_STRING;
  }
  else {
    kt = [self _fromClassWithComFasterxmlJacksonDatabindTypeClassStack:nil withIOSClass:keyClass withComFasterxmlJacksonDatabindTypeTypeBindings:ComFasterxmlJacksonDatabindTypeTypeFactory_EMPTY_BINDINGS];
    vt = [self _fromClassWithComFasterxmlJacksonDatabindTypeClassStack:nil withIOSClass:valueClass withComFasterxmlJacksonDatabindTypeTypeBindings:ComFasterxmlJacksonDatabindTypeTypeFactory_EMPTY_BINDINGS];
  }
  return [self constructMapTypeWithIOSClass:mapClass withComFasterxmlJacksonDatabindJavaType:kt withComFasterxmlJacksonDatabindJavaType:vt];
}

- (ComFasterxmlJacksonDatabindTypeMapType *)constructMapTypeWithIOSClass:(IOSClass *)mapClass
                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)keyType
                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)valueType {
  ComFasterxmlJacksonDatabindTypeTypeBindings *bindings = ComFasterxmlJacksonDatabindTypeTypeBindings_createIfNeededWithIOSClass_withComFasterxmlJacksonDatabindJavaTypeArray_(mapClass, [IOSObjectArray arrayWithObjects:(id[]){ keyType, valueType } count:2 type:ComFasterxmlJacksonDatabindJavaType_class_()]);
  ComFasterxmlJacksonDatabindTypeMapType *result = (ComFasterxmlJacksonDatabindTypeMapType *) cast_chk([self _fromClassWithComFasterxmlJacksonDatabindTypeClassStack:nil withIOSClass:mapClass withComFasterxmlJacksonDatabindTypeTypeBindings:bindings], [ComFasterxmlJacksonDatabindTypeMapType class]);
  if ([((ComFasterxmlJacksonDatabindTypeTypeBindings *) nil_chk(bindings)) isEmpty]) {
    ComFasterxmlJacksonDatabindJavaType *t = [((ComFasterxmlJacksonDatabindTypeMapType *) nil_chk(result)) findSuperTypeWithIOSClass:JavaUtilMap_class_()];
    ComFasterxmlJacksonDatabindJavaType *realKT = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(t)) getKeyType];
    if (![((ComFasterxmlJacksonDatabindJavaType *) nil_chk(realKT)) isEqual:keyType]) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(NSString_java_formatWithNSString_withNSObjectArray_(@"Non-generic Map class %s did not resolve to something with key type %s but %s ", [IOSObjectArray arrayWithObjects:(id[]){ ComFasterxmlJacksonDatabindUtilClassUtil_nameOfWithIOSClass_(mapClass), keyType, realKT } count:3 type:NSObject_class_()]));
    }
    ComFasterxmlJacksonDatabindJavaType *realVT = [t getContentType];
    if (![((ComFasterxmlJacksonDatabindJavaType *) nil_chk(realVT)) isEqual:valueType]) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(NSString_java_formatWithNSString_withNSObjectArray_(@"Non-generic Map class %s did not resolve to something with value type %s but %s ", [IOSObjectArray arrayWithObjects:(id[]){ ComFasterxmlJacksonDatabindUtilClassUtil_nameOfWithIOSClass_(mapClass), valueType, realVT } count:3 type:NSObject_class_()]));
    }
  }
  return result;
}

- (ComFasterxmlJacksonDatabindTypeMapLikeType *)constructMapLikeTypeWithIOSClass:(IOSClass *)mapClass
                                                                    withIOSClass:(IOSClass *)keyClass
                                                                    withIOSClass:(IOSClass *)valueClass {
  return [self constructMapLikeTypeWithIOSClass:mapClass withComFasterxmlJacksonDatabindJavaType:[self _fromClassWithComFasterxmlJacksonDatabindTypeClassStack:nil withIOSClass:keyClass withComFasterxmlJacksonDatabindTypeTypeBindings:ComFasterxmlJacksonDatabindTypeTypeFactory_EMPTY_BINDINGS] withComFasterxmlJacksonDatabindJavaType:[self _fromClassWithComFasterxmlJacksonDatabindTypeClassStack:nil withIOSClass:valueClass withComFasterxmlJacksonDatabindTypeTypeBindings:ComFasterxmlJacksonDatabindTypeTypeFactory_EMPTY_BINDINGS]];
}

- (ComFasterxmlJacksonDatabindTypeMapLikeType *)constructMapLikeTypeWithIOSClass:(IOSClass *)mapClass
                                         withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)keyType
                                         withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)valueType {
  ComFasterxmlJacksonDatabindJavaType *type = [self _fromClassWithComFasterxmlJacksonDatabindTypeClassStack:nil withIOSClass:mapClass withComFasterxmlJacksonDatabindTypeTypeBindings:ComFasterxmlJacksonDatabindTypeTypeBindings_createIfNeededWithIOSClass_withComFasterxmlJacksonDatabindJavaTypeArray_(mapClass, [IOSObjectArray arrayWithObjects:(id[]){ keyType, valueType } count:2 type:ComFasterxmlJacksonDatabindJavaType_class_()])];
  if ([type isKindOfClass:[ComFasterxmlJacksonDatabindTypeMapLikeType class]]) {
    return (ComFasterxmlJacksonDatabindTypeMapLikeType *) cast_chk(type, [ComFasterxmlJacksonDatabindTypeMapLikeType class]);
  }
  return ComFasterxmlJacksonDatabindTypeMapLikeType_upgradeFromWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_(type, keyType, valueType);
}

- (ComFasterxmlJacksonDatabindJavaType *)constructSimpleTypeWithIOSClass:(IOSClass *)rawType
                            withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)parameterTypes {
  return [self _fromClassWithComFasterxmlJacksonDatabindTypeClassStack:nil withIOSClass:rawType withComFasterxmlJacksonDatabindTypeTypeBindings:ComFasterxmlJacksonDatabindTypeTypeBindings_createWithIOSClass_withComFasterxmlJacksonDatabindJavaTypeArray_(rawType, parameterTypes)];
}

- (ComFasterxmlJacksonDatabindJavaType *)constructSimpleTypeWithIOSClass:(IOSClass *)rawType
                                                            withIOSClass:(IOSClass *)parameterTarget
                            withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)parameterTypes {
  return [self constructSimpleTypeWithIOSClass:rawType withComFasterxmlJacksonDatabindJavaTypeArray:parameterTypes];
}

- (ComFasterxmlJacksonDatabindJavaType *)constructReferenceTypeWithIOSClass:(IOSClass *)rawType
                                    withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)referredType {
  return ComFasterxmlJacksonDatabindTypeReferenceType_constructWithIOSClass_withComFasterxmlJacksonDatabindTypeTypeBindings_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaTypeArray_withComFasterxmlJacksonDatabindJavaType_(rawType, nil, nil, nil, referredType);
}

- (ComFasterxmlJacksonDatabindJavaType *)uncheckedSimpleTypeWithIOSClass:(IOSClass *)cls {
  return [self _constructSimpleWithIOSClass:cls withComFasterxmlJacksonDatabindTypeTypeBindings:ComFasterxmlJacksonDatabindTypeTypeFactory_EMPTY_BINDINGS withComFasterxmlJacksonDatabindJavaType:nil withComFasterxmlJacksonDatabindJavaTypeArray:nil];
}

- (ComFasterxmlJacksonDatabindJavaType *)constructParametricTypeWithIOSClass:(IOSClass *)parametrized
                                                           withIOSClassArray:(IOSObjectArray *)parameterClasses {
  jint len = ((IOSObjectArray *) nil_chk(parameterClasses))->size_;
  IOSObjectArray *pt = [IOSObjectArray arrayWithLength:len type:ComFasterxmlJacksonDatabindJavaType_class_()];
  for (jint i = 0; i < len; ++i) {
    IOSObjectArray_Set(pt, i, [self _fromClassWithComFasterxmlJacksonDatabindTypeClassStack:nil withIOSClass:IOSObjectArray_Get(parameterClasses, i) withComFasterxmlJacksonDatabindTypeTypeBindings:ComFasterxmlJacksonDatabindTypeTypeFactory_EMPTY_BINDINGS]);
  }
  return [self constructParametricTypeWithIOSClass:parametrized withComFasterxmlJacksonDatabindJavaTypeArray:pt];
}

- (ComFasterxmlJacksonDatabindJavaType *)constructParametricTypeWithIOSClass:(IOSClass *)rawType
                                withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)parameterTypes {
  return [self _fromClassWithComFasterxmlJacksonDatabindTypeClassStack:nil withIOSClass:rawType withComFasterxmlJacksonDatabindTypeTypeBindings:ComFasterxmlJacksonDatabindTypeTypeBindings_createWithIOSClass_withComFasterxmlJacksonDatabindJavaTypeArray_(rawType, parameterTypes)];
}

- (ComFasterxmlJacksonDatabindJavaType *)constructParametrizedTypeWithIOSClass:(IOSClass *)parametrized
                                                                  withIOSClass:(IOSClass *)parametersFor
                                  withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)parameterTypes {
  return [self constructParametricTypeWithIOSClass:parametrized withComFasterxmlJacksonDatabindJavaTypeArray:parameterTypes];
}

- (ComFasterxmlJacksonDatabindJavaType *)constructParametrizedTypeWithIOSClass:(IOSClass *)parametrized
                                                                  withIOSClass:(IOSClass *)parametersFor
                                                             withIOSClassArray:(IOSObjectArray *)parameterClasses {
  return [self constructParametricTypeWithIOSClass:parametrized withIOSClassArray:parameterClasses];
}

- (ComFasterxmlJacksonDatabindTypeCollectionType *)constructRawCollectionTypeWithIOSClass:(IOSClass *)collectionClass {
  return [self constructCollectionTypeWithIOSClass:collectionClass withComFasterxmlJacksonDatabindJavaType:ComFasterxmlJacksonDatabindTypeTypeFactory_unknownType()];
}

- (ComFasterxmlJacksonDatabindTypeCollectionLikeType *)constructRawCollectionLikeTypeWithIOSClass:(IOSClass *)collectionClass {
  return [self constructCollectionLikeTypeWithIOSClass:collectionClass withComFasterxmlJacksonDatabindJavaType:ComFasterxmlJacksonDatabindTypeTypeFactory_unknownType()];
}

- (ComFasterxmlJacksonDatabindTypeMapType *)constructRawMapTypeWithIOSClass:(IOSClass *)mapClass {
  return [self constructMapTypeWithIOSClass:mapClass withComFasterxmlJacksonDatabindJavaType:ComFasterxmlJacksonDatabindTypeTypeFactory_unknownType() withComFasterxmlJacksonDatabindJavaType:ComFasterxmlJacksonDatabindTypeTypeFactory_unknownType()];
}

- (ComFasterxmlJacksonDatabindTypeMapLikeType *)constructRawMapLikeTypeWithIOSClass:(IOSClass *)mapClass {
  return [self constructMapLikeTypeWithIOSClass:mapClass withComFasterxmlJacksonDatabindJavaType:ComFasterxmlJacksonDatabindTypeTypeFactory_unknownType() withComFasterxmlJacksonDatabindJavaType:ComFasterxmlJacksonDatabindTypeTypeFactory_unknownType()];
}

- (ComFasterxmlJacksonDatabindJavaType *)_mapTypeWithIOSClass:(IOSClass *)rawClass
              withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)bindings
                      withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)superClass
                 withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)superInterfaces {
  return ComFasterxmlJacksonDatabindTypeTypeFactory__mapTypeWithIOSClass_withComFasterxmlJacksonDatabindTypeTypeBindings_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaTypeArray_(self, rawClass, bindings, superClass, superInterfaces);
}

- (ComFasterxmlJacksonDatabindJavaType *)_collectionTypeWithIOSClass:(IOSClass *)rawClass
                     withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)bindings
                             withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)superClass
                        withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)superInterfaces {
  return ComFasterxmlJacksonDatabindTypeTypeFactory__collectionTypeWithIOSClass_withComFasterxmlJacksonDatabindTypeTypeBindings_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaTypeArray_(self, rawClass, bindings, superClass, superInterfaces);
}

- (ComFasterxmlJacksonDatabindJavaType *)_referenceTypeWithIOSClass:(IOSClass *)rawClass
                    withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)bindings
                            withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)superClass
                       withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)superInterfaces {
  return ComFasterxmlJacksonDatabindTypeTypeFactory__referenceTypeWithIOSClass_withComFasterxmlJacksonDatabindTypeTypeBindings_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaTypeArray_(self, rawClass, bindings, superClass, superInterfaces);
}

- (ComFasterxmlJacksonDatabindJavaType *)_constructSimpleWithIOSClass:(IOSClass *)raw
                      withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)bindings
                              withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)superClass
                         withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)superInterfaces {
  if ([((ComFasterxmlJacksonDatabindTypeTypeBindings *) nil_chk(bindings)) isEmpty]) {
    ComFasterxmlJacksonDatabindJavaType *result = [self _findWellKnownSimpleWithIOSClass:raw];
    if (result != nil) {
      return result;
    }
  }
  return [self _newSimpleTypeWithIOSClass:raw withComFasterxmlJacksonDatabindTypeTypeBindings:bindings withComFasterxmlJacksonDatabindJavaType:superClass withComFasterxmlJacksonDatabindJavaTypeArray:superInterfaces];
}

- (ComFasterxmlJacksonDatabindJavaType *)_newSimpleTypeWithIOSClass:(IOSClass *)raw
                    withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)bindings
                            withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)superClass
                       withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)superInterfaces {
  return create_ComFasterxmlJacksonDatabindTypeSimpleType_initWithIOSClass_withComFasterxmlJacksonDatabindTypeTypeBindings_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaTypeArray_(raw, bindings, superClass, superInterfaces);
}

- (ComFasterxmlJacksonDatabindJavaType *)_unknownType {
  return ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_OBJECT;
}

- (ComFasterxmlJacksonDatabindJavaType *)_findWellKnownSimpleWithIOSClass:(IOSClass *)clz {
  if ([((IOSClass *) nil_chk(clz)) isPrimitive]) {
    if (clz == ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_BOOL) return ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_BOOL;
    if (clz == ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_INT) return ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_INT;
    if (clz == ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_LONG) return ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_LONG;
  }
  else {
    if (clz == ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_STRING) return ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_STRING;
    if (clz == ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_OBJECT) return ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_OBJECT;
  }
  return nil;
}

- (ComFasterxmlJacksonDatabindJavaType *)_fromAnyWithComFasterxmlJacksonDatabindTypeClassStack:(ComFasterxmlJacksonDatabindTypeClassStack *)context
                                                                       withJavaLangReflectType:(id<JavaLangReflectType>)type
                                               withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)bindings {
  ComFasterxmlJacksonDatabindJavaType *resultType;
  if ([type isKindOfClass:[IOSClass class]]) {
    resultType = [self _fromClassWithComFasterxmlJacksonDatabindTypeClassStack:context withIOSClass:(IOSClass *) cast_chk(type, [IOSClass class]) withComFasterxmlJacksonDatabindTypeTypeBindings:ComFasterxmlJacksonDatabindTypeTypeFactory_EMPTY_BINDINGS];
  }
  else if ([JavaLangReflectParameterizedType_class_() isInstance:type]) {
    resultType = [self _fromParamTypeWithComFasterxmlJacksonDatabindTypeClassStack:context withJavaLangReflectParameterizedType:(id<JavaLangReflectParameterizedType>) cast_check(type, JavaLangReflectParameterizedType_class_()) withComFasterxmlJacksonDatabindTypeTypeBindings:bindings];
  }
  else if ([type isKindOfClass:[ComFasterxmlJacksonDatabindJavaType class]]) {
    return (ComFasterxmlJacksonDatabindJavaType *) cast_chk(type, [ComFasterxmlJacksonDatabindJavaType class]);
  }
  else if ([JavaLangReflectGenericArrayType_class_() isInstance:type]) {
    resultType = [self _fromArrayTypeWithComFasterxmlJacksonDatabindTypeClassStack:context withJavaLangReflectGenericArrayType:(id<JavaLangReflectGenericArrayType>) cast_check(type, JavaLangReflectGenericArrayType_class_()) withComFasterxmlJacksonDatabindTypeTypeBindings:bindings];
  }
  else if ([JavaLangReflectTypeVariable_class_() isInstance:type]) {
    resultType = [self _fromVariableWithComFasterxmlJacksonDatabindTypeClassStack:context withJavaLangReflectTypeVariable:(id<JavaLangReflectTypeVariable>) cast_check(type, JavaLangReflectTypeVariable_class_()) withComFasterxmlJacksonDatabindTypeTypeBindings:bindings];
  }
  else if ([JavaLangReflectWildcardType_class_() isInstance:type]) {
    resultType = [self _fromWildcardWithComFasterxmlJacksonDatabindTypeClassStack:context withJavaLangReflectWildcardType:(id<JavaLangReflectWildcardType>) cast_check(type, JavaLangReflectWildcardType_class_()) withComFasterxmlJacksonDatabindTypeTypeBindings:bindings];
  }
  else {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"Unrecognized Type: ", ((type == nil) ? @"[null]" : [((id<JavaLangReflectType>) nil_chk(type)) description])));
  }
  if (_modifiers_ != nil) {
    ComFasterxmlJacksonDatabindTypeTypeBindings *b = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(resultType)) getBindings];
    if (b == nil) {
      b = ComFasterxmlJacksonDatabindTypeTypeFactory_EMPTY_BINDINGS;
    }
    {
      IOSObjectArray *a__ = _modifiers_;
      ComFasterxmlJacksonDatabindTypeTypeModifier * const *b__ = a__->buffer_;
      ComFasterxmlJacksonDatabindTypeTypeModifier * const *e__ = b__ + a__->size_;
      while (b__ < e__) {
        ComFasterxmlJacksonDatabindTypeTypeModifier *mod = *b__++;
        ComFasterxmlJacksonDatabindJavaType *t = [((ComFasterxmlJacksonDatabindTypeTypeModifier *) nil_chk(mod)) modifyTypeWithComFasterxmlJacksonDatabindJavaType:resultType withJavaLangReflectType:type withComFasterxmlJacksonDatabindTypeTypeBindings:b withComFasterxmlJacksonDatabindTypeTypeFactory:self];
        if (t == nil) {
          @throw create_JavaLangIllegalStateException_initWithNSString_(NSString_java_formatWithNSString_withNSObjectArray_(@"TypeModifier %s (of type %s) return null for type %s", [IOSObjectArray arrayWithObjects:(id[]){ mod, [[mod java_getClass] getName], resultType } count:3 type:NSObject_class_()]));
        }
        resultType = t;
      }
    }
  }
  return resultType;
}

- (ComFasterxmlJacksonDatabindJavaType *)_fromClassWithComFasterxmlJacksonDatabindTypeClassStack:(ComFasterxmlJacksonDatabindTypeClassStack *)context
                                                                                    withIOSClass:(IOSClass *)rawType
                                                 withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)bindings {
  ComFasterxmlJacksonDatabindJavaType *result = [self _findWellKnownSimpleWithIOSClass:rawType];
  if (result != nil) {
    return result;
  }
  id key;
  if ((bindings == nil) || [((ComFasterxmlJacksonDatabindTypeTypeBindings *) nil_chk(bindings)) isEmpty]) {
    key = rawType;
  }
  else {
    key = [((ComFasterxmlJacksonDatabindTypeTypeBindings *) nil_chk(bindings)) asKeyWithIOSClass:rawType];
  }
  result = [((ComFasterxmlJacksonDatabindUtilLRUMap *) nil_chk(_typeCache_)) getWithId:key];
  if (result != nil) {
    return result;
  }
  if (context == nil) {
    context = create_ComFasterxmlJacksonDatabindTypeClassStack_initWithIOSClass_(rawType);
  }
  else {
    ComFasterxmlJacksonDatabindTypeClassStack *prev = [context findWithIOSClass:rawType];
    if (prev != nil) {
      ComFasterxmlJacksonDatabindTypeResolvedRecursiveType *selfRef = create_ComFasterxmlJacksonDatabindTypeResolvedRecursiveType_initWithIOSClass_withComFasterxmlJacksonDatabindTypeTypeBindings_(rawType, ComFasterxmlJacksonDatabindTypeTypeFactory_EMPTY_BINDINGS);
      [prev addSelfReferenceWithComFasterxmlJacksonDatabindTypeResolvedRecursiveType:selfRef];
      return selfRef;
    }
    context = [context childWithIOSClass:rawType];
  }
  if ([((IOSClass *) nil_chk(rawType)) isArray]) {
    result = ComFasterxmlJacksonDatabindTypeArrayType_constructWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindTypeTypeBindings_([self _fromAnyWithComFasterxmlJacksonDatabindTypeClassStack:context withJavaLangReflectType:[rawType getComponentType] withComFasterxmlJacksonDatabindTypeTypeBindings:bindings], bindings);
  }
  else {
    ComFasterxmlJacksonDatabindJavaType *superClass;
    IOSObjectArray *superInterfaces;
    if ([rawType isInterface]) {
      superClass = nil;
      superInterfaces = [self _resolveSuperInterfacesWithComFasterxmlJacksonDatabindTypeClassStack:context withIOSClass:rawType withComFasterxmlJacksonDatabindTypeTypeBindings:bindings];
    }
    else {
      superClass = [self _resolveSuperClassWithComFasterxmlJacksonDatabindTypeClassStack:context withIOSClass:rawType withComFasterxmlJacksonDatabindTypeTypeBindings:bindings];
      superInterfaces = [self _resolveSuperInterfacesWithComFasterxmlJacksonDatabindTypeClassStack:context withIOSClass:rawType withComFasterxmlJacksonDatabindTypeTypeBindings:bindings];
    }
    if (rawType == JavaUtilProperties_class_()) {
      result = ComFasterxmlJacksonDatabindTypeMapType_constructWithIOSClass_withComFasterxmlJacksonDatabindTypeTypeBindings_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaTypeArray_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_(rawType, bindings, superClass, superInterfaces, ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_STRING, ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_STRING);
    }
    else if (superClass != nil) {
      result = [superClass refineWithIOSClass:rawType withComFasterxmlJacksonDatabindTypeTypeBindings:bindings withComFasterxmlJacksonDatabindJavaType:superClass withComFasterxmlJacksonDatabindJavaTypeArray:superInterfaces];
    }
    if (result == nil) {
      result = [self _fromWellKnownClassWithComFasterxmlJacksonDatabindTypeClassStack:context withIOSClass:rawType withComFasterxmlJacksonDatabindTypeTypeBindings:bindings withComFasterxmlJacksonDatabindJavaType:superClass withComFasterxmlJacksonDatabindJavaTypeArray:superInterfaces];
      if (result == nil) {
        result = [self _fromWellKnownInterfaceWithComFasterxmlJacksonDatabindTypeClassStack:context withIOSClass:rawType withComFasterxmlJacksonDatabindTypeTypeBindings:bindings withComFasterxmlJacksonDatabindJavaType:superClass withComFasterxmlJacksonDatabindJavaTypeArray:superInterfaces];
        if (result == nil) {
          result = [self _newSimpleTypeWithIOSClass:rawType withComFasterxmlJacksonDatabindTypeTypeBindings:bindings withComFasterxmlJacksonDatabindJavaType:superClass withComFasterxmlJacksonDatabindJavaTypeArray:superInterfaces];
        }
      }
    }
  }
  [((ComFasterxmlJacksonDatabindTypeClassStack *) nil_chk(context)) resolveSelfReferencesWithComFasterxmlJacksonDatabindJavaType:result];
  if (![((ComFasterxmlJacksonDatabindJavaType *) nil_chk(result)) hasHandlers]) {
    [_typeCache_ putIfAbsentWithId:key withId:result];
  }
  return result;
}

- (ComFasterxmlJacksonDatabindJavaType *)_resolveSuperClassWithComFasterxmlJacksonDatabindTypeClassStack:(ComFasterxmlJacksonDatabindTypeClassStack *)context
                                                                                            withIOSClass:(IOSClass *)rawType
                                                         withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)parentBindings {
  id<JavaLangReflectType> parent = ComFasterxmlJacksonDatabindUtilClassUtil_getGenericSuperclassWithIOSClass_(rawType);
  if (parent == nil) {
    return nil;
  }
  return [self _fromAnyWithComFasterxmlJacksonDatabindTypeClassStack:context withJavaLangReflectType:parent withComFasterxmlJacksonDatabindTypeTypeBindings:parentBindings];
}

- (IOSObjectArray *)_resolveSuperInterfacesWithComFasterxmlJacksonDatabindTypeClassStack:(ComFasterxmlJacksonDatabindTypeClassStack *)context
                                                                            withIOSClass:(IOSClass *)rawType
                                         withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)parentBindings {
  IOSObjectArray *types = ComFasterxmlJacksonDatabindUtilClassUtil_getGenericInterfacesWithIOSClass_(rawType);
  if (types == nil || types->size_ == 0) {
    return ComFasterxmlJacksonDatabindTypeTypeFactory_NO_TYPES;
  }
  jint len = types->size_;
  IOSObjectArray *resolved = [IOSObjectArray arrayWithLength:len type:ComFasterxmlJacksonDatabindJavaType_class_()];
  for (jint i = 0; i < len; ++i) {
    id<JavaLangReflectType> type = IOSObjectArray_Get(types, i);
    IOSObjectArray_Set(resolved, i, [self _fromAnyWithComFasterxmlJacksonDatabindTypeClassStack:context withJavaLangReflectType:type withComFasterxmlJacksonDatabindTypeTypeBindings:parentBindings]);
  }
  return resolved;
}

- (ComFasterxmlJacksonDatabindJavaType *)_fromWellKnownClassWithComFasterxmlJacksonDatabindTypeClassStack:(ComFasterxmlJacksonDatabindTypeClassStack *)context
                                                                                             withIOSClass:(IOSClass *)rawType
                                                          withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)bindings
                                                                  withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)superClass
                                                             withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)superInterfaces {
  if (bindings == nil) {
    bindings = ComFasterxmlJacksonDatabindTypeTypeFactory_EMPTY_BINDINGS;
  }
  if (rawType == JavaUtilMap_class_()) {
    return ComFasterxmlJacksonDatabindTypeTypeFactory__mapTypeWithIOSClass_withComFasterxmlJacksonDatabindTypeTypeBindings_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaTypeArray_(self, rawType, bindings, superClass, superInterfaces);
  }
  if (rawType == JavaUtilCollection_class_()) {
    return ComFasterxmlJacksonDatabindTypeTypeFactory__collectionTypeWithIOSClass_withComFasterxmlJacksonDatabindTypeTypeBindings_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaTypeArray_(self, rawType, bindings, superClass, superInterfaces);
  }
  if (rawType == JavaUtilConcurrentAtomicAtomicReference_class_()) {
    return ComFasterxmlJacksonDatabindTypeTypeFactory__referenceTypeWithIOSClass_withComFasterxmlJacksonDatabindTypeTypeBindings_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaTypeArray_(self, rawType, bindings, superClass, superInterfaces);
  }
  return nil;
}

- (ComFasterxmlJacksonDatabindJavaType *)_fromWellKnownInterfaceWithComFasterxmlJacksonDatabindTypeClassStack:(ComFasterxmlJacksonDatabindTypeClassStack *)context
                                                                                                 withIOSClass:(IOSClass *)rawType
                                                              withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)bindings
                                                                      withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)superClass
                                                                 withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)superInterfaces {
  jint intCount = ((IOSObjectArray *) nil_chk(superInterfaces))->size_;
  for (jint i = 0; i < intCount; ++i) {
    ComFasterxmlJacksonDatabindJavaType *result = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(IOSObjectArray_Get(superInterfaces, i))) refineWithIOSClass:rawType withComFasterxmlJacksonDatabindTypeTypeBindings:bindings withComFasterxmlJacksonDatabindJavaType:superClass withComFasterxmlJacksonDatabindJavaTypeArray:superInterfaces];
    if (result != nil) {
      return result;
    }
  }
  return nil;
}

- (ComFasterxmlJacksonDatabindJavaType *)_fromParamTypeWithComFasterxmlJacksonDatabindTypeClassStack:(ComFasterxmlJacksonDatabindTypeClassStack *)context
                                                                withJavaLangReflectParameterizedType:(id<JavaLangReflectParameterizedType>)ptype
                                                     withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)parentBindings {
  IOSClass *rawType = (IOSClass *) cast_chk([((id<JavaLangReflectParameterizedType>) nil_chk(ptype)) getRawType], [IOSClass class]);
  if (rawType == ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_ENUM) {
    return ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_ENUM;
  }
  if (rawType == ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_COMPARABLE) {
    return ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_COMPARABLE;
  }
  if (rawType == ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_CLASS) {
    return ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_CLASS;
  }
  IOSObjectArray *args = [ptype getActualTypeArguments];
  jint paramCount = (args == nil) ? 0 : ((IOSObjectArray *) nil_chk(args))->size_;
  ComFasterxmlJacksonDatabindTypeTypeBindings *newBindings;
  if (paramCount == 0) {
    newBindings = ComFasterxmlJacksonDatabindTypeTypeFactory_EMPTY_BINDINGS;
  }
  else {
    IOSObjectArray *pt = [IOSObjectArray arrayWithLength:paramCount type:ComFasterxmlJacksonDatabindJavaType_class_()];
    for (jint i = 0; i < paramCount; ++i) {
      IOSObjectArray_Set(pt, i, [self _fromAnyWithComFasterxmlJacksonDatabindTypeClassStack:context withJavaLangReflectType:IOSObjectArray_Get(nil_chk(args), i) withComFasterxmlJacksonDatabindTypeTypeBindings:parentBindings]);
    }
    newBindings = ComFasterxmlJacksonDatabindTypeTypeBindings_createWithIOSClass_withComFasterxmlJacksonDatabindJavaTypeArray_(rawType, pt);
  }
  return [self _fromClassWithComFasterxmlJacksonDatabindTypeClassStack:context withIOSClass:rawType withComFasterxmlJacksonDatabindTypeTypeBindings:newBindings];
}

- (ComFasterxmlJacksonDatabindJavaType *)_fromArrayTypeWithComFasterxmlJacksonDatabindTypeClassStack:(ComFasterxmlJacksonDatabindTypeClassStack *)context
                                                                 withJavaLangReflectGenericArrayType:(id<JavaLangReflectGenericArrayType>)type
                                                     withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)bindings {
  ComFasterxmlJacksonDatabindJavaType *elementType = [self _fromAnyWithComFasterxmlJacksonDatabindTypeClassStack:context withJavaLangReflectType:[((id<JavaLangReflectGenericArrayType>) nil_chk(type)) getGenericComponentType] withComFasterxmlJacksonDatabindTypeTypeBindings:bindings];
  return ComFasterxmlJacksonDatabindTypeArrayType_constructWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindTypeTypeBindings_(elementType, bindings);
}

- (ComFasterxmlJacksonDatabindJavaType *)_fromVariableWithComFasterxmlJacksonDatabindTypeClassStack:(ComFasterxmlJacksonDatabindTypeClassStack *)context
                                                                    withJavaLangReflectTypeVariable:(id<JavaLangReflectTypeVariable>)var
                                                    withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)bindings {
  NSString *name = [((id<JavaLangReflectTypeVariable>) nil_chk(var)) getName];
  if (bindings == nil) @throw create_JavaLangError_initWithNSString_(@"No Bindings!");
  ComFasterxmlJacksonDatabindJavaType *type = [bindings findBoundTypeWithNSString:name];
  if (type != nil) {
    return type;
  }
  if ([bindings hasUnboundWithNSString:name]) {
    return ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_OBJECT;
  }
  bindings = [bindings withUnboundVariableWithNSString:name];
  IOSObjectArray *bounds = [var getBounds];
  return [self _fromAnyWithComFasterxmlJacksonDatabindTypeClassStack:context withJavaLangReflectType:IOSObjectArray_Get(nil_chk(bounds), 0) withComFasterxmlJacksonDatabindTypeTypeBindings:bindings];
}

- (ComFasterxmlJacksonDatabindJavaType *)_fromWildcardWithComFasterxmlJacksonDatabindTypeClassStack:(ComFasterxmlJacksonDatabindTypeClassStack *)context
                                                                    withJavaLangReflectWildcardType:(id<JavaLangReflectWildcardType>)type
                                                    withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)bindings {
  return [self _fromAnyWithComFasterxmlJacksonDatabindTypeClassStack:context withJavaLangReflectType:IOSObjectArray_Get(nil_chk([((id<JavaLangReflectWildcardType>) nil_chk(type)) getUpperBounds]), 0) withComFasterxmlJacksonDatabindTypeTypeBindings:bindings];
}

- (void)dealloc {
  RELEASE_(_typeCache_);
  RELEASE_(_modifiers_);
  RELEASE_(_parser_);
  RELEASE_(_classLoader_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x4, -1, 2, -1, 3, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeTypeFactory;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeTypeFactory;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeTypeFactory;", 0x1, 8, 0, -1, 9, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeTypeFactory;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangClassLoader;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x9, 10, 11, -1, 12, -1, -1 },
    { NULL, "LIOSClass;", 0x1, 13, 14, 15, 16, -1, -1 },
    { NULL, "LIOSClass;", 0x4, 17, 18, 15, 19, -1, -1 },
    { NULL, "LIOSClass;", 0x4, 17, 14, 15, 16, -1, -1 },
    { NULL, "LIOSClass;", 0x4, 20, 14, -1, 16, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, 21, 22, -1, 23, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeTypeBindings;", 0x2, 24, 25, -1, 26, -1, -1 },
    { NULL, "LNSString;", 0x2, 27, 28, 29, -1, -1, -1 },
    { NULL, "Z", 0x2, 30, 28, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, 31, 22, -1, 23, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, 32, 14, 29, -1, -1, -1 },
    { NULL, "[LComFasterxmlJacksonDatabindJavaType;", 0x1, 33, 22, -1, 34, -1, -1 },
    { NULL, "[LComFasterxmlJacksonDatabindJavaType;", 0x1, 33, 35, -1, 36, 37, -1 },
    { NULL, "[LComFasterxmlJacksonDatabindJavaType;", 0x1, 33, 38, -1, 39, 40, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, 41, 28, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, 42, 11, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, 42, 43, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, 42, 44, -1, 45, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, 42, 46, -1, 47, 48, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, 42, 49, -1, -1, 50, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeArrayType;", 0x1, 51, 52, -1, 53, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeArrayType;", 0x1, 51, 54, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeCollectionType;", 0x1, 55, 38, -1, 56, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeCollectionType;", 0x1, 55, 57, -1, 58, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeCollectionLikeType;", 0x1, 59, 38, -1, 60, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeCollectionLikeType;", 0x1, 59, 57, -1, 61, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeMapType;", 0x1, 62, 63, -1, 64, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeMapType;", 0x1, 62, 65, -1, 66, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeMapLikeType;", 0x1, 67, 63, -1, 68, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeMapLikeType;", 0x1, 67, 65, -1, 69, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, 70, 71, -1, 72, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, 70, 73, -1, 74, 75, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, 76, 57, -1, 77, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, 78, 52, -1, 79, 80, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x81, 81, 82, -1, 83, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x81, 81, 71, -1, 72, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x81, 84, 73, -1, 74, 85, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x81, 84, 86, -1, 87, 88, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeCollectionType;", 0x1, 89, 52, -1, 90, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeCollectionLikeType;", 0x1, 91, 52, -1, 92, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeMapType;", 0x1, 93, 52, -1, 94, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeMapLikeType;", 0x1, 95, 52, -1, 96, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x2, 97, 98, -1, 99, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x2, 100, 98, -1, 99, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x2, 101, 98, -1, 99, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x4, 102, 98, -1, 99, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x4, 103, 98, -1, 99, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x4, 104, 52, -1, 79, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x4, 105, 106, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x4, 107, 108, -1, 109, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x4, 110, 108, -1, 109, -1, -1 },
    { NULL, "[LComFasterxmlJacksonDatabindJavaType;", 0x4, 111, 108, -1, 112, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x4, 113, 114, -1, 115, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x4, 116, 114, -1, 115, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x4, 117, 118, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x4, 119, 120, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x4, 121, 122, -1, 123, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x4, 124, 125, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithComFasterxmlJacksonDatabindUtilLRUMap:);
  methods[2].selector = @selector(initWithComFasterxmlJacksonDatabindUtilLRUMap:withComFasterxmlJacksonDatabindTypeTypeParser:withComFasterxmlJacksonDatabindTypeTypeModifierArray:withJavaLangClassLoader:);
  methods[3].selector = @selector(withModifierWithComFasterxmlJacksonDatabindTypeTypeModifier:);
  methods[4].selector = @selector(withClassLoaderWithJavaLangClassLoader:);
  methods[5].selector = @selector(withCacheWithComFasterxmlJacksonDatabindUtilLRUMap:);
  methods[6].selector = @selector(defaultInstance);
  methods[7].selector = @selector(clearCache);
  methods[8].selector = @selector(getClassLoader);
  methods[9].selector = @selector(unknownType);
  methods[10].selector = @selector(rawClassWithJavaLangReflectType:);
  methods[11].selector = @selector(findClassWithNSString:);
  methods[12].selector = @selector(classForNameWithNSString:withBoolean:withJavaLangClassLoader:);
  methods[13].selector = @selector(classForNameWithNSString:);
  methods[14].selector = @selector(_findPrimitiveWithNSString:);
  methods[15].selector = @selector(constructSpecializedTypeWithComFasterxmlJacksonDatabindJavaType:withIOSClass:);
  methods[16].selector = @selector(_bindingsForSubtypeWithComFasterxmlJacksonDatabindJavaType:withInt:withIOSClass:);
  methods[17].selector = @selector(_resolveTypePlaceholdersWithComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindJavaType:);
  methods[18].selector = @selector(_verifyAndResolvePlaceholdersWithComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindJavaType:);
  methods[19].selector = @selector(constructGeneralizedTypeWithComFasterxmlJacksonDatabindJavaType:withIOSClass:);
  methods[20].selector = @selector(constructFromCanonicalWithNSString:);
  methods[21].selector = @selector(findTypeParametersWithComFasterxmlJacksonDatabindJavaType:withIOSClass:);
  methods[22].selector = @selector(findTypeParametersWithIOSClass:withIOSClass:withComFasterxmlJacksonDatabindTypeTypeBindings:);
  methods[23].selector = @selector(findTypeParametersWithIOSClass:withIOSClass:);
  methods[24].selector = @selector(moreSpecificTypeWithComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindJavaType:);
  methods[25].selector = @selector(constructTypeWithJavaLangReflectType:);
  methods[26].selector = @selector(constructTypeWithJavaLangReflectType:withComFasterxmlJacksonDatabindTypeTypeBindings:);
  methods[27].selector = @selector(constructTypeWithComFasterxmlJacksonCoreTypeTypeReference:);
  methods[28].selector = @selector(constructTypeWithJavaLangReflectType:withIOSClass:);
  methods[29].selector = @selector(constructTypeWithJavaLangReflectType:withComFasterxmlJacksonDatabindJavaType:);
  methods[30].selector = @selector(constructArrayTypeWithIOSClass:);
  methods[31].selector = @selector(constructArrayTypeWithComFasterxmlJacksonDatabindJavaType:);
  methods[32].selector = @selector(constructCollectionTypeWithIOSClass:withIOSClass:);
  methods[33].selector = @selector(constructCollectionTypeWithIOSClass:withComFasterxmlJacksonDatabindJavaType:);
  methods[34].selector = @selector(constructCollectionLikeTypeWithIOSClass:withIOSClass:);
  methods[35].selector = @selector(constructCollectionLikeTypeWithIOSClass:withComFasterxmlJacksonDatabindJavaType:);
  methods[36].selector = @selector(constructMapTypeWithIOSClass:withIOSClass:withIOSClass:);
  methods[37].selector = @selector(constructMapTypeWithIOSClass:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindJavaType:);
  methods[38].selector = @selector(constructMapLikeTypeWithIOSClass:withIOSClass:withIOSClass:);
  methods[39].selector = @selector(constructMapLikeTypeWithIOSClass:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindJavaType:);
  methods[40].selector = @selector(constructSimpleTypeWithIOSClass:withComFasterxmlJacksonDatabindJavaTypeArray:);
  methods[41].selector = @selector(constructSimpleTypeWithIOSClass:withIOSClass:withComFasterxmlJacksonDatabindJavaTypeArray:);
  methods[42].selector = @selector(constructReferenceTypeWithIOSClass:withComFasterxmlJacksonDatabindJavaType:);
  methods[43].selector = @selector(uncheckedSimpleTypeWithIOSClass:);
  methods[44].selector = @selector(constructParametricTypeWithIOSClass:withIOSClassArray:);
  methods[45].selector = @selector(constructParametricTypeWithIOSClass:withComFasterxmlJacksonDatabindJavaTypeArray:);
  methods[46].selector = @selector(constructParametrizedTypeWithIOSClass:withIOSClass:withComFasterxmlJacksonDatabindJavaTypeArray:);
  methods[47].selector = @selector(constructParametrizedTypeWithIOSClass:withIOSClass:withIOSClassArray:);
  methods[48].selector = @selector(constructRawCollectionTypeWithIOSClass:);
  methods[49].selector = @selector(constructRawCollectionLikeTypeWithIOSClass:);
  methods[50].selector = @selector(constructRawMapTypeWithIOSClass:);
  methods[51].selector = @selector(constructRawMapLikeTypeWithIOSClass:);
  methods[52].selector = @selector(_mapTypeWithIOSClass:withComFasterxmlJacksonDatabindTypeTypeBindings:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindJavaTypeArray:);
  methods[53].selector = @selector(_collectionTypeWithIOSClass:withComFasterxmlJacksonDatabindTypeTypeBindings:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindJavaTypeArray:);
  methods[54].selector = @selector(_referenceTypeWithIOSClass:withComFasterxmlJacksonDatabindTypeTypeBindings:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindJavaTypeArray:);
  methods[55].selector = @selector(_constructSimpleWithIOSClass:withComFasterxmlJacksonDatabindTypeTypeBindings:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindJavaTypeArray:);
  methods[56].selector = @selector(_newSimpleTypeWithIOSClass:withComFasterxmlJacksonDatabindTypeTypeBindings:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindJavaTypeArray:);
  methods[57].selector = @selector(_unknownType);
  methods[58].selector = @selector(_findWellKnownSimpleWithIOSClass:);
  methods[59].selector = @selector(_fromAnyWithComFasterxmlJacksonDatabindTypeClassStack:withJavaLangReflectType:withComFasterxmlJacksonDatabindTypeTypeBindings:);
  methods[60].selector = @selector(_fromClassWithComFasterxmlJacksonDatabindTypeClassStack:withIOSClass:withComFasterxmlJacksonDatabindTypeTypeBindings:);
  methods[61].selector = @selector(_resolveSuperClassWithComFasterxmlJacksonDatabindTypeClassStack:withIOSClass:withComFasterxmlJacksonDatabindTypeTypeBindings:);
  methods[62].selector = @selector(_resolveSuperInterfacesWithComFasterxmlJacksonDatabindTypeClassStack:withIOSClass:withComFasterxmlJacksonDatabindTypeTypeBindings:);
  methods[63].selector = @selector(_fromWellKnownClassWithComFasterxmlJacksonDatabindTypeClassStack:withIOSClass:withComFasterxmlJacksonDatabindTypeTypeBindings:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindJavaTypeArray:);
  methods[64].selector = @selector(_fromWellKnownInterfaceWithComFasterxmlJacksonDatabindTypeClassStack:withIOSClass:withComFasterxmlJacksonDatabindTypeTypeBindings:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindJavaTypeArray:);
  methods[65].selector = @selector(_fromParamTypeWithComFasterxmlJacksonDatabindTypeClassStack:withJavaLangReflectParameterizedType:withComFasterxmlJacksonDatabindTypeTypeBindings:);
  methods[66].selector = @selector(_fromArrayTypeWithComFasterxmlJacksonDatabindTypeClassStack:withJavaLangReflectGenericArrayType:withComFasterxmlJacksonDatabindTypeTypeBindings:);
  methods[67].selector = @selector(_fromVariableWithComFasterxmlJacksonDatabindTypeClassStack:withJavaLangReflectTypeVariable:withComFasterxmlJacksonDatabindTypeTypeBindings:);
  methods[68].selector = @selector(_fromWildcardWithComFasterxmlJacksonDatabindTypeClassStack:withJavaLangReflectWildcardType:withComFasterxmlJacksonDatabindTypeTypeBindings:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindTypeTypeFactory_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "NO_TYPES", "[LComFasterxmlJacksonDatabindJavaType;", .constantValue.asLong = 0, 0x1a, -1, 126, -1, -1 },
    { "instance", "LComFasterxmlJacksonDatabindTypeTypeFactory;", .constantValue.asLong = 0, 0x1c, -1, 127, -1, -1 },
    { "EMPTY_BINDINGS", "LComFasterxmlJacksonDatabindTypeTypeBindings;", .constantValue.asLong = 0, 0x1c, -1, 128, -1, -1 },
    { "CLS_STRING", "LIOSClass;", .constantValue.asLong = 0, 0x1a, -1, 129, 130, -1 },
    { "CLS_OBJECT", "LIOSClass;", .constantValue.asLong = 0, 0x1a, -1, 131, 130, -1 },
    { "CLS_COMPARABLE", "LIOSClass;", .constantValue.asLong = 0, 0x1a, -1, 132, 130, -1 },
    { "CLS_CLASS", "LIOSClass;", .constantValue.asLong = 0, 0x1a, -1, 133, 130, -1 },
    { "CLS_ENUM", "LIOSClass;", .constantValue.asLong = 0, 0x1a, -1, 134, 130, -1 },
    { "CLS_BOOL", "LIOSClass;", .constantValue.asLong = 0, 0x1a, -1, 135, 130, -1 },
    { "CLS_INT", "LIOSClass;", .constantValue.asLong = 0, 0x1a, -1, 136, 130, -1 },
    { "CLS_LONG", "LIOSClass;", .constantValue.asLong = 0, 0x1a, -1, 137, 130, -1 },
    { "CORE_TYPE_BOOL", "LComFasterxmlJacksonDatabindTypeSimpleType;", .constantValue.asLong = 0, 0x1c, -1, 138, -1, -1 },
    { "CORE_TYPE_INT", "LComFasterxmlJacksonDatabindTypeSimpleType;", .constantValue.asLong = 0, 0x1c, -1, 139, -1, -1 },
    { "CORE_TYPE_LONG", "LComFasterxmlJacksonDatabindTypeSimpleType;", .constantValue.asLong = 0, 0x1c, -1, 140, -1, -1 },
    { "CORE_TYPE_STRING", "LComFasterxmlJacksonDatabindTypeSimpleType;", .constantValue.asLong = 0, 0x1c, -1, 141, -1, -1 },
    { "CORE_TYPE_OBJECT", "LComFasterxmlJacksonDatabindTypeSimpleType;", .constantValue.asLong = 0, 0x1c, -1, 142, -1, -1 },
    { "CORE_TYPE_COMPARABLE", "LComFasterxmlJacksonDatabindTypeSimpleType;", .constantValue.asLong = 0, 0x1c, -1, 143, -1, -1 },
    { "CORE_TYPE_ENUM", "LComFasterxmlJacksonDatabindTypeSimpleType;", .constantValue.asLong = 0, 0x1c, -1, 144, -1, -1 },
    { "CORE_TYPE_CLASS", "LComFasterxmlJacksonDatabindTypeSimpleType;", .constantValue.asLong = 0, 0x1c, -1, 145, -1, -1 },
    { "_typeCache_", "LComFasterxmlJacksonDatabindUtilLRUMap;", .constantValue.asLong = 0, 0x14, -1, -1, 146, -1 },
    { "_modifiers_", "[LComFasterxmlJacksonDatabindTypeTypeModifier;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_parser_", "LComFasterxmlJacksonDatabindTypeTypeParser;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_classLoader_", "LJavaLangClassLoader;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindUtilLRUMap;", "(Lcom/fasterxml/jackson/databind/util/LRUMap<Ljava/lang/Object;Lcom/fasterxml/jackson/databind/JavaType;>;)V", "LComFasterxmlJacksonDatabindUtilLRUMap;LComFasterxmlJacksonDatabindTypeTypeParser;[LComFasterxmlJacksonDatabindTypeTypeModifier;LJavaLangClassLoader;", "(Lcom/fasterxml/jackson/databind/util/LRUMap<Ljava/lang/Object;Lcom/fasterxml/jackson/databind/JavaType;>;Lcom/fasterxml/jackson/databind/type/TypeParser;[Lcom/fasterxml/jackson/databind/type/TypeModifier;Ljava/lang/ClassLoader;)V", "withModifier", "LComFasterxmlJacksonDatabindTypeTypeModifier;", "withClassLoader", "LJavaLangClassLoader;", "withCache", "(Lcom/fasterxml/jackson/databind/util/LRUMap<Ljava/lang/Object;Lcom/fasterxml/jackson/databind/JavaType;>;)Lcom/fasterxml/jackson/databind/type/TypeFactory;", "rawClass", "LJavaLangReflectType;", "(Ljava/lang/reflect/Type;)Ljava/lang/Class<*>;", "findClass", "LNSString;", "LJavaLangClassNotFoundException;", "(Ljava/lang/String;)Ljava/lang/Class<*>;", "classForName", "LNSString;ZLJavaLangClassLoader;", "(Ljava/lang/String;ZLjava/lang/ClassLoader;)Ljava/lang/Class<*>;", "_findPrimitive", "constructSpecializedType", "LComFasterxmlJacksonDatabindJavaType;LIOSClass;", "(Lcom/fasterxml/jackson/databind/JavaType;Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/JavaType;", "_bindingsForSubtype", "LComFasterxmlJacksonDatabindJavaType;ILIOSClass;", "(Lcom/fasterxml/jackson/databind/JavaType;ILjava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/type/TypeBindings;", "_resolveTypePlaceholders", "LComFasterxmlJacksonDatabindJavaType;LComFasterxmlJacksonDatabindJavaType;", "LJavaLangIllegalArgumentException;", "_verifyAndResolvePlaceholders", "constructGeneralizedType", "constructFromCanonical", "findTypeParameters", "(Lcom/fasterxml/jackson/databind/JavaType;Ljava/lang/Class<*>;)[Lcom/fasterxml/jackson/databind/JavaType;", "LIOSClass;LIOSClass;LComFasterxmlJacksonDatabindTypeTypeBindings;", "(Ljava/lang/Class<*>;Ljava/lang/Class<*>;Lcom/fasterxml/jackson/databind/type/TypeBindings;)[Lcom/fasterxml/jackson/databind/JavaType;", (void *)&ComFasterxmlJacksonDatabindTypeTypeFactory__Annotations$0, "LIOSClass;LIOSClass;", "(Ljava/lang/Class<*>;Ljava/lang/Class<*>;)[Lcom/fasterxml/jackson/databind/JavaType;", (void *)&ComFasterxmlJacksonDatabindTypeTypeFactory__Annotations$1, "moreSpecificType", "constructType", "LJavaLangReflectType;LComFasterxmlJacksonDatabindTypeTypeBindings;", "LComFasterxmlJacksonCoreTypeTypeReference;", "(Lcom/fasterxml/jackson/core/type/TypeReference<*>;)Lcom/fasterxml/jackson/databind/JavaType;", "LJavaLangReflectType;LIOSClass;", "(Ljava/lang/reflect/Type;Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/JavaType;", (void *)&ComFasterxmlJacksonDatabindTypeTypeFactory__Annotations$2, "LJavaLangReflectType;LComFasterxmlJacksonDatabindJavaType;", (void *)&ComFasterxmlJacksonDatabindTypeTypeFactory__Annotations$3, "constructArrayType", "LIOSClass;", "(Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/type/ArrayType;", "LComFasterxmlJacksonDatabindJavaType;", "constructCollectionType", "(Ljava/lang/Class<+Ljava/util/Collection;>;Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/type/CollectionType;", "LIOSClass;LComFasterxmlJacksonDatabindJavaType;", "(Ljava/lang/Class<+Ljava/util/Collection;>;Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/type/CollectionType;", "constructCollectionLikeType", "(Ljava/lang/Class<*>;Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/type/CollectionLikeType;", "(Ljava/lang/Class<*>;Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/type/CollectionLikeType;", "constructMapType", "LIOSClass;LIOSClass;LIOSClass;", "(Ljava/lang/Class<+Ljava/util/Map;>;Ljava/lang/Class<*>;Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/type/MapType;", "LIOSClass;LComFasterxmlJacksonDatabindJavaType;LComFasterxmlJacksonDatabindJavaType;", "(Ljava/lang/Class<+Ljava/util/Map;>;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/type/MapType;", "constructMapLikeType", "(Ljava/lang/Class<*>;Ljava/lang/Class<*>;Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/type/MapLikeType;", "(Ljava/lang/Class<*>;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/type/MapLikeType;", "constructSimpleType", "LIOSClass;[LComFasterxmlJacksonDatabindJavaType;", "(Ljava/lang/Class<*>;[Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/JavaType;", "LIOSClass;LIOSClass;[LComFasterxmlJacksonDatabindJavaType;", "(Ljava/lang/Class<*>;Ljava/lang/Class<*>;[Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/JavaType;", (void *)&ComFasterxmlJacksonDatabindTypeTypeFactory__Annotations$4, "constructReferenceType", "(Ljava/lang/Class<*>;Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/JavaType;", "uncheckedSimpleType", "(Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/JavaType;", (void *)&ComFasterxmlJacksonDatabindTypeTypeFactory__Annotations$5, "constructParametricType", "LIOSClass;[LIOSClass;", "(Ljava/lang/Class<*>;[Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/JavaType;", "constructParametrizedType", (void *)&ComFasterxmlJacksonDatabindTypeTypeFactory__Annotations$6, "LIOSClass;LIOSClass;[LIOSClass;", "(Ljava/lang/Class<*>;Ljava/lang/Class<*>;[Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/JavaType;", (void *)&ComFasterxmlJacksonDatabindTypeTypeFactory__Annotations$7, "constructRawCollectionType", "(Ljava/lang/Class<+Ljava/util/Collection;>;)Lcom/fasterxml/jackson/databind/type/CollectionType;", "constructRawCollectionLikeType", "(Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/type/CollectionLikeType;", "constructRawMapType", "(Ljava/lang/Class<+Ljava/util/Map;>;)Lcom/fasterxml/jackson/databind/type/MapType;", "constructRawMapLikeType", "(Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/type/MapLikeType;", "_mapType", "LIOSClass;LComFasterxmlJacksonDatabindTypeTypeBindings;LComFasterxmlJacksonDatabindJavaType;[LComFasterxmlJacksonDatabindJavaType;", "(Ljava/lang/Class<*>;Lcom/fasterxml/jackson/databind/type/TypeBindings;Lcom/fasterxml/jackson/databind/JavaType;[Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/JavaType;", "_collectionType", "_referenceType", "_constructSimple", "_newSimpleType", "_findWellKnownSimple", "_fromAny", "LComFasterxmlJacksonDatabindTypeClassStack;LJavaLangReflectType;LComFasterxmlJacksonDatabindTypeTypeBindings;", "_fromClass", "LComFasterxmlJacksonDatabindTypeClassStack;LIOSClass;LComFasterxmlJacksonDatabindTypeTypeBindings;", "(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class<*>;Lcom/fasterxml/jackson/databind/type/TypeBindings;)Lcom/fasterxml/jackson/databind/JavaType;", "_resolveSuperClass", "_resolveSuperInterfaces", "(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class<*>;Lcom/fasterxml/jackson/databind/type/TypeBindings;)[Lcom/fasterxml/jackson/databind/JavaType;", "_fromWellKnownClass", "LComFasterxmlJacksonDatabindTypeClassStack;LIOSClass;LComFasterxmlJacksonDatabindTypeTypeBindings;LComFasterxmlJacksonDatabindJavaType;[LComFasterxmlJacksonDatabindJavaType;", "(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/Class<*>;Lcom/fasterxml/jackson/databind/type/TypeBindings;Lcom/fasterxml/jackson/databind/JavaType;[Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/JavaType;", "_fromWellKnownInterface", "_fromParamType", "LComFasterxmlJacksonDatabindTypeClassStack;LJavaLangReflectParameterizedType;LComFasterxmlJacksonDatabindTypeTypeBindings;", "_fromArrayType", "LComFasterxmlJacksonDatabindTypeClassStack;LJavaLangReflectGenericArrayType;LComFasterxmlJacksonDatabindTypeTypeBindings;", "_fromVariable", "LComFasterxmlJacksonDatabindTypeClassStack;LJavaLangReflectTypeVariable;LComFasterxmlJacksonDatabindTypeTypeBindings;", "(Lcom/fasterxml/jackson/databind/type/ClassStack;Ljava/lang/reflect/TypeVariable<*>;Lcom/fasterxml/jackson/databind/type/TypeBindings;)Lcom/fasterxml/jackson/databind/JavaType;", "_fromWildcard", "LComFasterxmlJacksonDatabindTypeClassStack;LJavaLangReflectWildcardType;LComFasterxmlJacksonDatabindTypeTypeBindings;", &ComFasterxmlJacksonDatabindTypeTypeFactory_NO_TYPES, &ComFasterxmlJacksonDatabindTypeTypeFactory_instance, &ComFasterxmlJacksonDatabindTypeTypeFactory_EMPTY_BINDINGS, &ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_STRING, "Ljava/lang/Class<*>;", &ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_OBJECT, &ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_COMPARABLE, &ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_CLASS, &ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_ENUM, &ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_BOOL, &ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_INT, &ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_LONG, &ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_BOOL, &ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_INT, &ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_LONG, &ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_STRING, &ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_OBJECT, &ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_COMPARABLE, &ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_ENUM, &ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_CLASS, "Lcom/fasterxml/jackson/databind/util/LRUMap<Ljava/lang/Object;Lcom/fasterxml/jackson/databind/JavaType;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindTypeTypeFactory = { "TypeFactory", "com.fasterxml.jackson.databind.type", ptrTable, methods, fields, 7, 0x11, 69, 24, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindTypeTypeFactory;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindTypeTypeFactory class]) {
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindTypeTypeFactory_NO_TYPES, [IOSObjectArray newArrayWithLength:0 type:ComFasterxmlJacksonDatabindJavaType_class_()]);
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindTypeTypeFactory_instance, new_ComFasterxmlJacksonDatabindTypeTypeFactory_init());
    JreStrongAssign(&ComFasterxmlJacksonDatabindTypeTypeFactory_EMPTY_BINDINGS, ComFasterxmlJacksonDatabindTypeTypeBindings_emptyBindings());
    JreStrongAssign(&ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_STRING, NSString_class_());
    JreStrongAssign(&ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_OBJECT, NSObject_class_());
    JreStrongAssign(&ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_COMPARABLE, JavaLangComparable_class_());
    JreStrongAssign(&ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_CLASS, IOSClass_class_());
    JreStrongAssign(&ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_ENUM, JavaLangEnum_class_());
    JreStrongAssign(&ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_BOOL, JreLoadStatic(JavaLangBoolean, TYPE));
    JreStrongAssign(&ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_INT, JreLoadStatic(JavaLangInteger, TYPE));
    JreStrongAssign(&ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_LONG, JreLoadStatic(JavaLangLong, TYPE));
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_BOOL, new_ComFasterxmlJacksonDatabindTypeSimpleType_initWithIOSClass_(ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_BOOL));
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_INT, new_ComFasterxmlJacksonDatabindTypeSimpleType_initWithIOSClass_(ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_INT));
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_LONG, new_ComFasterxmlJacksonDatabindTypeSimpleType_initWithIOSClass_(ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_LONG));
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_STRING, new_ComFasterxmlJacksonDatabindTypeSimpleType_initWithIOSClass_(ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_STRING));
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_OBJECT, new_ComFasterxmlJacksonDatabindTypeSimpleType_initWithIOSClass_(ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_OBJECT));
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_COMPARABLE, new_ComFasterxmlJacksonDatabindTypeSimpleType_initWithIOSClass_(ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_COMPARABLE));
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_ENUM, new_ComFasterxmlJacksonDatabindTypeSimpleType_initWithIOSClass_(ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_ENUM));
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_CLASS, new_ComFasterxmlJacksonDatabindTypeSimpleType_initWithIOSClass_(ComFasterxmlJacksonDatabindTypeTypeFactory_CLS_CLASS));
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindTypeTypeFactory)
  }
}

@end

void ComFasterxmlJacksonDatabindTypeTypeFactory_init(ComFasterxmlJacksonDatabindTypeTypeFactory *self) {
  ComFasterxmlJacksonDatabindTypeTypeFactory_initWithComFasterxmlJacksonDatabindUtilLRUMap_(self, nil);
}

ComFasterxmlJacksonDatabindTypeTypeFactory *new_ComFasterxmlJacksonDatabindTypeTypeFactory_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindTypeTypeFactory, init)
}

ComFasterxmlJacksonDatabindTypeTypeFactory *create_ComFasterxmlJacksonDatabindTypeTypeFactory_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindTypeTypeFactory, init)
}

void ComFasterxmlJacksonDatabindTypeTypeFactory_initWithComFasterxmlJacksonDatabindUtilLRUMap_(ComFasterxmlJacksonDatabindTypeTypeFactory *self, ComFasterxmlJacksonDatabindUtilLRUMap *typeCache) {
  NSObject_init(self);
  if (typeCache == nil) {
    typeCache = create_ComFasterxmlJacksonDatabindUtilLRUMap_initWithInt_withInt_(16, 200);
  }
  JreStrongAssign(&self->_typeCache_, typeCache);
  JreStrongAssignAndConsume(&self->_parser_, new_ComFasterxmlJacksonDatabindTypeTypeParser_initWithComFasterxmlJacksonDatabindTypeTypeFactory_(self));
  JreStrongAssign(&self->_modifiers_, nil);
  JreStrongAssign(&self->_classLoader_, nil);
}

ComFasterxmlJacksonDatabindTypeTypeFactory *new_ComFasterxmlJacksonDatabindTypeTypeFactory_initWithComFasterxmlJacksonDatabindUtilLRUMap_(ComFasterxmlJacksonDatabindUtilLRUMap *typeCache) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindTypeTypeFactory, initWithComFasterxmlJacksonDatabindUtilLRUMap_, typeCache)
}

ComFasterxmlJacksonDatabindTypeTypeFactory *create_ComFasterxmlJacksonDatabindTypeTypeFactory_initWithComFasterxmlJacksonDatabindUtilLRUMap_(ComFasterxmlJacksonDatabindUtilLRUMap *typeCache) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindTypeTypeFactory, initWithComFasterxmlJacksonDatabindUtilLRUMap_, typeCache)
}

void ComFasterxmlJacksonDatabindTypeTypeFactory_initWithComFasterxmlJacksonDatabindUtilLRUMap_withComFasterxmlJacksonDatabindTypeTypeParser_withComFasterxmlJacksonDatabindTypeTypeModifierArray_withJavaLangClassLoader_(ComFasterxmlJacksonDatabindTypeTypeFactory *self, ComFasterxmlJacksonDatabindUtilLRUMap *typeCache, ComFasterxmlJacksonDatabindTypeTypeParser *p, IOSObjectArray *mods, JavaLangClassLoader *classLoader) {
  NSObject_init(self);
  if (typeCache == nil) {
    typeCache = create_ComFasterxmlJacksonDatabindUtilLRUMap_initWithInt_withInt_(16, 200);
  }
  JreStrongAssign(&self->_typeCache_, typeCache);
  JreStrongAssign(&self->_parser_, [((ComFasterxmlJacksonDatabindTypeTypeParser *) nil_chk(p)) withFactoryWithComFasterxmlJacksonDatabindTypeTypeFactory:self]);
  JreStrongAssign(&self->_modifiers_, mods);
  JreStrongAssign(&self->_classLoader_, classLoader);
}

ComFasterxmlJacksonDatabindTypeTypeFactory *new_ComFasterxmlJacksonDatabindTypeTypeFactory_initWithComFasterxmlJacksonDatabindUtilLRUMap_withComFasterxmlJacksonDatabindTypeTypeParser_withComFasterxmlJacksonDatabindTypeTypeModifierArray_withJavaLangClassLoader_(ComFasterxmlJacksonDatabindUtilLRUMap *typeCache, ComFasterxmlJacksonDatabindTypeTypeParser *p, IOSObjectArray *mods, JavaLangClassLoader *classLoader) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindTypeTypeFactory, initWithComFasterxmlJacksonDatabindUtilLRUMap_withComFasterxmlJacksonDatabindTypeTypeParser_withComFasterxmlJacksonDatabindTypeTypeModifierArray_withJavaLangClassLoader_, typeCache, p, mods, classLoader)
}

ComFasterxmlJacksonDatabindTypeTypeFactory *create_ComFasterxmlJacksonDatabindTypeTypeFactory_initWithComFasterxmlJacksonDatabindUtilLRUMap_withComFasterxmlJacksonDatabindTypeTypeParser_withComFasterxmlJacksonDatabindTypeTypeModifierArray_withJavaLangClassLoader_(ComFasterxmlJacksonDatabindUtilLRUMap *typeCache, ComFasterxmlJacksonDatabindTypeTypeParser *p, IOSObjectArray *mods, JavaLangClassLoader *classLoader) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindTypeTypeFactory, initWithComFasterxmlJacksonDatabindUtilLRUMap_withComFasterxmlJacksonDatabindTypeTypeParser_withComFasterxmlJacksonDatabindTypeTypeModifierArray_withJavaLangClassLoader_, typeCache, p, mods, classLoader)
}

ComFasterxmlJacksonDatabindTypeTypeFactory *ComFasterxmlJacksonDatabindTypeTypeFactory_defaultInstance() {
  ComFasterxmlJacksonDatabindTypeTypeFactory_initialize();
  return ComFasterxmlJacksonDatabindTypeTypeFactory_instance;
}

ComFasterxmlJacksonDatabindJavaType *ComFasterxmlJacksonDatabindTypeTypeFactory_unknownType() {
  ComFasterxmlJacksonDatabindTypeTypeFactory_initialize();
  return [((ComFasterxmlJacksonDatabindTypeTypeFactory *) nil_chk(ComFasterxmlJacksonDatabindTypeTypeFactory_defaultInstance())) _unknownType];
}

IOSClass *ComFasterxmlJacksonDatabindTypeTypeFactory_rawClassWithJavaLangReflectType_(id<JavaLangReflectType> t) {
  ComFasterxmlJacksonDatabindTypeTypeFactory_initialize();
  if ([t isKindOfClass:[IOSClass class]]) {
    return (IOSClass *) cast_chk(t, [IOSClass class]);
  }
  return [((ComFasterxmlJacksonDatabindJavaType *) nil_chk([((ComFasterxmlJacksonDatabindTypeTypeFactory *) nil_chk(ComFasterxmlJacksonDatabindTypeTypeFactory_defaultInstance())) constructTypeWithJavaLangReflectType:t])) getRawClass];
}

ComFasterxmlJacksonDatabindTypeTypeBindings *ComFasterxmlJacksonDatabindTypeTypeFactory__bindingsForSubtypeWithComFasterxmlJacksonDatabindJavaType_withInt_withIOSClass_(ComFasterxmlJacksonDatabindTypeTypeFactory *self, ComFasterxmlJacksonDatabindJavaType *baseType, jint typeParamCount, IOSClass *subclass) {
  IOSObjectArray *placeholders = [IOSObjectArray arrayWithLength:typeParamCount type:ComFasterxmlJacksonDatabindTypePlaceholderForType_class_()];
  for (jint i = 0; i < typeParamCount; ++i) {
    IOSObjectArray_SetAndConsume(placeholders, i, new_ComFasterxmlJacksonDatabindTypePlaceholderForType_initWithInt_(i));
  }
  ComFasterxmlJacksonDatabindTypeTypeBindings *b = ComFasterxmlJacksonDatabindTypeTypeBindings_createWithIOSClass_withComFasterxmlJacksonDatabindJavaTypeArray_(subclass, placeholders);
  ComFasterxmlJacksonDatabindJavaType *tmpSub = [self _fromClassWithComFasterxmlJacksonDatabindTypeClassStack:nil withIOSClass:subclass withComFasterxmlJacksonDatabindTypeTypeBindings:b];
  ComFasterxmlJacksonDatabindJavaType *baseWithPlaceholders = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(tmpSub)) findSuperTypeWithIOSClass:[((ComFasterxmlJacksonDatabindJavaType *) nil_chk(baseType)) getRawClass]];
  if (baseWithPlaceholders == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(NSString_java_formatWithNSString_withNSObjectArray_(@"Internal error: unable to locate supertype (%s) from resolved subtype %s", [IOSObjectArray arrayWithObjects:(id[]){ [((IOSClass *) nil_chk([baseType getRawClass])) getName], [((IOSClass *) nil_chk(subclass)) getName] } count:2 type:NSObject_class_()]));
  }
  NSString *error = ComFasterxmlJacksonDatabindTypeTypeFactory__resolveTypePlaceholdersWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_(self, baseType, baseWithPlaceholders);
  if (error != nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$$$$", @"Failed to specialize base type ", [baseType toCanonical], @" as ", [((IOSClass *) nil_chk(subclass)) getName], @", problem: ", error));
  }
  IOSObjectArray *typeParams = [IOSObjectArray arrayWithLength:typeParamCount type:ComFasterxmlJacksonDatabindJavaType_class_()];
  for (jint i = 0; i < typeParamCount; ++i) {
    ComFasterxmlJacksonDatabindJavaType *t = [((ComFasterxmlJacksonDatabindTypePlaceholderForType *) nil_chk(IOSObjectArray_Get(placeholders, i))) actualType];
    if (t == nil) {
      t = ComFasterxmlJacksonDatabindTypeTypeFactory_unknownType();
    }
    IOSObjectArray_Set(typeParams, i, t);
  }
  return ComFasterxmlJacksonDatabindTypeTypeBindings_createWithIOSClass_withComFasterxmlJacksonDatabindJavaTypeArray_(subclass, typeParams);
}

NSString *ComFasterxmlJacksonDatabindTypeTypeFactory__resolveTypePlaceholdersWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindTypeTypeFactory *self, ComFasterxmlJacksonDatabindJavaType *sourceType, ComFasterxmlJacksonDatabindJavaType *actualType) {
  id<JavaUtilList> expectedTypes = [((ComFasterxmlJacksonDatabindTypeTypeBindings *) nil_chk([((ComFasterxmlJacksonDatabindJavaType *) nil_chk(sourceType)) getBindings])) getTypeParameters];
  id<JavaUtilList> actualTypes = [((ComFasterxmlJacksonDatabindTypeTypeBindings *) nil_chk([((ComFasterxmlJacksonDatabindJavaType *) nil_chk(actualType)) getBindings])) getTypeParameters];
  for (jint i = 0, len = [((id<JavaUtilList>) nil_chk(expectedTypes)) size]; i < len; ++i) {
    ComFasterxmlJacksonDatabindJavaType *exp = [expectedTypes getWithInt:i];
    ComFasterxmlJacksonDatabindJavaType *act = [((id<JavaUtilList>) nil_chk(actualTypes)) getWithInt:i];
    if (!ComFasterxmlJacksonDatabindTypeTypeFactory__verifyAndResolvePlaceholdersWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_(self, exp, act)) {
      return NSString_java_formatWithNSString_withNSObjectArray_(@"Type parameter #%d/%d differs; can not specialize %s with %s", [IOSObjectArray arrayWithObjects:(id[]){ JavaLangInteger_valueOfWithInt_((i + 1)), JavaLangInteger_valueOfWithInt_(len), [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(exp)) toCanonical], [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(act)) toCanonical] } count:4 type:NSObject_class_()]);
    }
  }
  return nil;
}

jboolean ComFasterxmlJacksonDatabindTypeTypeFactory__verifyAndResolvePlaceholdersWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindTypeTypeFactory *self, ComFasterxmlJacksonDatabindJavaType *exp, ComFasterxmlJacksonDatabindJavaType *act) {
  if ([act isKindOfClass:[ComFasterxmlJacksonDatabindTypePlaceholderForType class]]) {
    [((ComFasterxmlJacksonDatabindTypePlaceholderForType *) nil_chk(((ComFasterxmlJacksonDatabindTypePlaceholderForType *) cast_chk(act, [ComFasterxmlJacksonDatabindTypePlaceholderForType class])))) actualTypeWithComFasterxmlJacksonDatabindJavaType:exp];
    return true;
  }
  if ([((ComFasterxmlJacksonDatabindJavaType *) nil_chk(exp)) getRawClass] != [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(act)) getRawClass]) {
    return false;
  }
  id<JavaUtilList> expectedTypes = [((ComFasterxmlJacksonDatabindTypeTypeBindings *) nil_chk([exp getBindings])) getTypeParameters];
  id<JavaUtilList> actualTypes = [((ComFasterxmlJacksonDatabindTypeTypeBindings *) nil_chk([act getBindings])) getTypeParameters];
  for (jint i = 0, len = [((id<JavaUtilList>) nil_chk(expectedTypes)) size]; i < len; ++i) {
    ComFasterxmlJacksonDatabindJavaType *exp2 = [expectedTypes getWithInt:i];
    ComFasterxmlJacksonDatabindJavaType *act2 = [((id<JavaUtilList>) nil_chk(actualTypes)) getWithInt:i];
    if (!ComFasterxmlJacksonDatabindTypeTypeFactory__verifyAndResolvePlaceholdersWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_(self, exp2, act2)) {
      return false;
    }
  }
  return true;
}

ComFasterxmlJacksonDatabindJavaType *ComFasterxmlJacksonDatabindTypeTypeFactory__mapTypeWithIOSClass_withComFasterxmlJacksonDatabindTypeTypeBindings_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaTypeArray_(ComFasterxmlJacksonDatabindTypeTypeFactory *self, IOSClass *rawClass, ComFasterxmlJacksonDatabindTypeTypeBindings *bindings, ComFasterxmlJacksonDatabindJavaType *superClass, IOSObjectArray *superInterfaces) {
  ComFasterxmlJacksonDatabindJavaType *kt;
  ComFasterxmlJacksonDatabindJavaType *vt;
  if (rawClass == JavaUtilProperties_class_()) {
    kt = vt = ComFasterxmlJacksonDatabindTypeTypeFactory_CORE_TYPE_STRING;
  }
  else {
    id<JavaUtilList> typeParams = [((ComFasterxmlJacksonDatabindTypeTypeBindings *) nil_chk(bindings)) getTypeParameters];
    switch ([((id<JavaUtilList>) nil_chk(typeParams)) size]) {
      case 0:
      kt = vt = [self _unknownType];
      break;
      case 2:
      kt = [typeParams getWithInt:0];
      vt = [typeParams getWithInt:1];
      break;
      default:
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"Strange Map type ", [((IOSClass *) nil_chk(rawClass)) getName], @": cannot determine type parameters"));
    }
  }
  return ComFasterxmlJacksonDatabindTypeMapType_constructWithIOSClass_withComFasterxmlJacksonDatabindTypeTypeBindings_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaTypeArray_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_(rawClass, bindings, superClass, superInterfaces, kt, vt);
}

ComFasterxmlJacksonDatabindJavaType *ComFasterxmlJacksonDatabindTypeTypeFactory__collectionTypeWithIOSClass_withComFasterxmlJacksonDatabindTypeTypeBindings_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaTypeArray_(ComFasterxmlJacksonDatabindTypeTypeFactory *self, IOSClass *rawClass, ComFasterxmlJacksonDatabindTypeTypeBindings *bindings, ComFasterxmlJacksonDatabindJavaType *superClass, IOSObjectArray *superInterfaces) {
  id<JavaUtilList> typeParams = [((ComFasterxmlJacksonDatabindTypeTypeBindings *) nil_chk(bindings)) getTypeParameters];
  ComFasterxmlJacksonDatabindJavaType *ct;
  if ([((id<JavaUtilList>) nil_chk(typeParams)) isEmpty]) {
    ct = [self _unknownType];
  }
  else if ([typeParams size] == 1) {
    ct = [typeParams getWithInt:0];
  }
  else {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"Strange Collection type ", [((IOSClass *) nil_chk(rawClass)) getName], @": cannot determine type parameters"));
  }
  return ComFasterxmlJacksonDatabindTypeCollectionType_constructWithIOSClass_withComFasterxmlJacksonDatabindTypeTypeBindings_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaTypeArray_withComFasterxmlJacksonDatabindJavaType_(rawClass, bindings, superClass, superInterfaces, ct);
}

ComFasterxmlJacksonDatabindJavaType *ComFasterxmlJacksonDatabindTypeTypeFactory__referenceTypeWithIOSClass_withComFasterxmlJacksonDatabindTypeTypeBindings_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaTypeArray_(ComFasterxmlJacksonDatabindTypeTypeFactory *self, IOSClass *rawClass, ComFasterxmlJacksonDatabindTypeTypeBindings *bindings, ComFasterxmlJacksonDatabindJavaType *superClass, IOSObjectArray *superInterfaces) {
  id<JavaUtilList> typeParams = [((ComFasterxmlJacksonDatabindTypeTypeBindings *) nil_chk(bindings)) getTypeParameters];
  ComFasterxmlJacksonDatabindJavaType *ct;
  if ([((id<JavaUtilList>) nil_chk(typeParams)) isEmpty]) {
    ct = [self _unknownType];
  }
  else if ([typeParams size] == 1) {
    ct = [typeParams getWithInt:0];
  }
  else {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$", @"Strange Reference type ", [((IOSClass *) nil_chk(rawClass)) getName], @": cannot determine type parameters"));
  }
  return ComFasterxmlJacksonDatabindTypeReferenceType_constructWithIOSClass_withComFasterxmlJacksonDatabindTypeTypeBindings_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaTypeArray_withComFasterxmlJacksonDatabindJavaType_(rawClass, bindings, superClass, superInterfaces, ct);
}

IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeFactory__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeFactory__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeFactory__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeFactory__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeFactory__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeFactory__Annotations$5() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeFactory__Annotations$6() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeFactory__Annotations$7() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindTypeTypeFactory)
