//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/deser/std/DateDeserializers.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/annotation/JsonFormat.h"
#include "com/fasterxml/jackson/core/JsonParser.h"
#include "com/fasterxml/jackson/core/JsonToken.h"
#include "com/fasterxml/jackson/databind/BeanProperty.h"
#include "com/fasterxml/jackson/databind/DeserializationConfig.h"
#include "com/fasterxml/jackson/databind/DeserializationContext.h"
#include "com/fasterxml/jackson/databind/JsonDeserializer.h"
#include "com/fasterxml/jackson/databind/annotation/JacksonStdImpl.h"
#include "com/fasterxml/jackson/databind/deser/std/DateDeserializers.h"
#include "com/fasterxml/jackson/databind/deser/std/StdScalarDeserializer.h"
#include "com/fasterxml/jackson/databind/util/ClassUtil.h"
#include "com/fasterxml/jackson/databind/util/StdDateFormat.h"
#include "java/lang/Boolean.h"
#include "java/lang/Exception.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/reflect/Constructor.h"
#include "java/sql/Date.h"
#include "java/sql/Timestamp.h"
#include "java/text/DateFormat.h"
#include "java/text/ParseException.h"
#include "java/text/SimpleDateFormat.h"
#include "java/util/Calendar.h"
#include "java/util/Date.h"
#include "java/util/GregorianCalendar.h"
#include "java/util/HashSet.h"
#include "java/util/Locale.h"
#include "java/util/TimeZone.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

inline JavaUtilHashSet *ComFasterxmlJacksonDatabindDeserStdDateDeserializers_get__classNames(void);
static JavaUtilHashSet *ComFasterxmlJacksonDatabindDeserStdDateDeserializers__classNames;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindDeserStdDateDeserializers, _classNames, JavaUtilHashSet *)

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer__Annotations$0(void);

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindDeserStdDateDeserializers)

@implementation ComFasterxmlJacksonDatabindDeserStdDateDeserializers

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindDeserStdDateDeserializers_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (ComFasterxmlJacksonDatabindJsonDeserializer *)findWithIOSClass:(IOSClass *)rawType
                                                     withNSString:(NSString *)clsName {
  return ComFasterxmlJacksonDatabindDeserStdDateDeserializers_findWithIOSClass_withNSString_(rawType, clsName);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonDeserializer;", 0x9, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(findWithIOSClass:withNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_classNames", "LJavaUtilHashSet;", .constantValue.asLong = 0, 0x1a, -1, 3, 4, -1 },
  };
  static const void *ptrTable[] = { "find", "LIOSClass;LNSString;", "(Ljava/lang/Class<*>;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/JsonDeserializer<*>;", &ComFasterxmlJacksonDatabindDeserStdDateDeserializers__classNames, "Ljava/util/HashSet<Ljava/lang/String;>;", "LComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer;LComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer;LComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer;LComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer;LComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindDeserStdDateDeserializers = { "DateDeserializers", "com.fasterxml.jackson.databind.deser.std", ptrTable, methods, fields, 7, 0x1, 2, 1, -1, 5, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindDeserStdDateDeserializers;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindDeserStdDateDeserializers class]) {
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindDeserStdDateDeserializers__classNames, new_JavaUtilHashSet_init());
    {
      IOSObjectArray *numberTypes = [IOSObjectArray arrayWithObjects:(id[]){ JavaUtilCalendar_class_(), JavaUtilGregorianCalendar_class_(), JavaSqlDate_class_(), JavaUtilDate_class_(), JavaSqlTimestamp_class_() } count:5 type:IOSClass_class_()];
      {
        IOSObjectArray *a__ = numberTypes;
        IOSClass * const *b__ = a__->buffer_;
        IOSClass * const *e__ = b__ + a__->size_;
        while (b__ < e__) {
          IOSClass *cls = *b__++;
          [ComFasterxmlJacksonDatabindDeserStdDateDeserializers__classNames addWithId:[((IOSClass *) nil_chk(cls)) getName]];
        }
      }
    }
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindDeserStdDateDeserializers)
  }
}

@end

void ComFasterxmlJacksonDatabindDeserStdDateDeserializers_init(ComFasterxmlJacksonDatabindDeserStdDateDeserializers *self) {
  NSObject_init(self);
}

ComFasterxmlJacksonDatabindDeserStdDateDeserializers *new_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindDeserStdDateDeserializers, init)
}

ComFasterxmlJacksonDatabindDeserStdDateDeserializers *create_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindDeserStdDateDeserializers, init)
}

ComFasterxmlJacksonDatabindJsonDeserializer *ComFasterxmlJacksonDatabindDeserStdDateDeserializers_findWithIOSClass_withNSString_(IOSClass *rawType, NSString *clsName) {
  ComFasterxmlJacksonDatabindDeserStdDateDeserializers_initialize();
  if ([((JavaUtilHashSet *) nil_chk(ComFasterxmlJacksonDatabindDeserStdDateDeserializers__classNames)) containsWithId:clsName]) {
    if (rawType == JavaUtilCalendar_class_()) {
      return create_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer_init();
    }
    if (rawType == JavaUtilDate_class_()) {
      return JreLoadStatic(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer, instance);
    }
    if (rawType == JavaSqlDate_class_()) {
      return create_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer_init();
    }
    if (rawType == JavaSqlTimestamp_class_()) {
      return create_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer_init();
    }
    if (rawType == JavaUtilGregorianCalendar_class_()) {
      return create_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer_initWithIOSClass_(JavaUtilGregorianCalendar_class_());
    }
  }
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindDeserStdDateDeserializers)

@implementation ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)clz {
  ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer_initWithIOSClass_(self, clz);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer:(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer *)base
                                                                                      withJavaTextDateFormat:(JavaTextDateFormat *)format
                                                                                                withNSString:(NSString *)formatStr {
  ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer_initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer_withJavaTextDateFormat_withNSString_(self, base, format, formatStr);
  return self;
}

- (ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer *)withDateFormatWithJavaTextDateFormat:(JavaTextDateFormat *)df
                                                                                                        withNSString:(NSString *)formatStr {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindJsonDeserializer *)createContextualWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                           withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property {
  ComFasterxmlJacksonAnnotationJsonFormat_Value *format = [self findFormatOverridesWithComFasterxmlJacksonDatabindDeserializationContext:ctxt withComFasterxmlJacksonDatabindBeanProperty:property withIOSClass:[self handledType]];
  if (format != nil) {
    JavaUtilTimeZone *tz = [format getTimeZone];
    JavaLangBoolean *lenient = [format getLenient];
    if ([format hasPattern]) {
      NSString *pattern = [format getPattern];
      JavaUtilLocale *loc = [format hasLocale] ? [format getLocale] : [((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) getLocale];
      JavaTextSimpleDateFormat *df = create_JavaTextSimpleDateFormat_initWithNSString_withJavaUtilLocale_(pattern, loc);
      if (tz == nil) {
        tz = [((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) getTimeZone];
      }
      [df setTimeZoneWithJavaUtilTimeZone:tz];
      if (lenient != nil) {
        [df setLenientWithBoolean:[lenient booleanValue]];
      }
      return [self withDateFormatWithJavaTextDateFormat:df withNSString:pattern];
    }
    if (tz != nil) {
      JavaTextDateFormat *df = [((ComFasterxmlJacksonDatabindDeserializationConfig *) nil_chk([((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) getConfig])) getDateFormat];
      if ([((JavaTextDateFormat *) nil_chk(df)) java_getClass] == ComFasterxmlJacksonDatabindUtilStdDateFormat_class_()) {
        JavaUtilLocale *loc = [format hasLocale] ? [format getLocale] : [ctxt getLocale];
        ComFasterxmlJacksonDatabindUtilStdDateFormat *std = (ComFasterxmlJacksonDatabindUtilStdDateFormat *) cast_chk(df, [ComFasterxmlJacksonDatabindUtilStdDateFormat class]);
        std = [std withTimeZoneWithJavaUtilTimeZone:tz];
        std = [((ComFasterxmlJacksonDatabindUtilStdDateFormat *) nil_chk(std)) withLocaleWithJavaUtilLocale:loc];
        if (lenient != nil) {
          std = [((ComFasterxmlJacksonDatabindUtilStdDateFormat *) nil_chk(std)) withLenientWithJavaLangBoolean:lenient];
        }
        df = std;
      }
      else {
        df = (JavaTextDateFormat *) cast_chk([df java_clone], [JavaTextDateFormat class]);
        [((JavaTextDateFormat *) nil_chk(df)) setTimeZoneWithJavaUtilTimeZone:tz];
        if (lenient != nil) {
          [df setLenientWithBoolean:[lenient booleanValue]];
        }
      }
      return [self withDateFormatWithJavaTextDateFormat:df withNSString:_formatString_];
    }
    if (lenient != nil) {
      JavaTextDateFormat *df = [((ComFasterxmlJacksonDatabindDeserializationConfig *) nil_chk([((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) getConfig])) getDateFormat];
      NSString *pattern = _formatString_;
      if ([((JavaTextDateFormat *) nil_chk(df)) java_getClass] == ComFasterxmlJacksonDatabindUtilStdDateFormat_class_()) {
        ComFasterxmlJacksonDatabindUtilStdDateFormat *std = (ComFasterxmlJacksonDatabindUtilStdDateFormat *) cast_chk(df, [ComFasterxmlJacksonDatabindUtilStdDateFormat class]);
        std = [std withLenientWithJavaLangBoolean:lenient];
        df = std;
        pattern = [((ComFasterxmlJacksonDatabindUtilStdDateFormat *) nil_chk(std)) toPattern];
      }
      else {
        df = (JavaTextDateFormat *) cast_chk([df java_clone], [JavaTextDateFormat class]);
        [((JavaTextDateFormat *) nil_chk(df)) setLenientWithBoolean:[lenient booleanValue]];
        if ([df isKindOfClass:[JavaTextSimpleDateFormat class]]) {
          [((JavaTextSimpleDateFormat *) cast_chk(df, [JavaTextSimpleDateFormat class])) toPattern];
        }
      }
      if (pattern == nil) {
        pattern = @"[unknown]";
      }
      return [self withDateFormatWithJavaTextDateFormat:df withNSString:pattern];
    }
  }
  return self;
}

- (JavaUtilDate *)_parseDateWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
            withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt {
  if (_customFormat_ != nil) {
    if ([((ComFasterxmlJacksonCoreJsonParser *) nil_chk(p)) hasTokenWithComFasterxmlJacksonCoreJsonToken:JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_STRING)]) {
      NSString *str = [((NSString *) nil_chk([p getText])) java_trim];
      if ([((NSString *) nil_chk(str)) java_length] == 0) {
        return (JavaUtilDate *) cast_chk([self getEmptyValueWithComFasterxmlJacksonDatabindDeserializationContext:ctxt], [JavaUtilDate class]);
      }
      @synchronized(_customFormat_) {
        @try {
          return JreRetainedLocalValue([_customFormat_ parseWithNSString:str]);
        }
        @catch (JavaTextParseException *e) {
          return JreRetainedLocalValue((JavaUtilDate *) cast_chk([((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) handleWeirdStringValueWithIOSClass:[self handledType] withNSString:str withNSString:@"expected format \"%s\"" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ _formatString_ } count:1 type:NSObject_class_()]], [JavaUtilDate class]));
        }
      }
    }
  }
  return [super _parseDateWithComFasterxmlJacksonCoreJsonParser:p withComFasterxmlJacksonDatabindDeserializationContext:ctxt];
}

- (void)dealloc {
  RELEASE_(_customFormat_);
  RELEASE_(_formatString_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x4, -1, 2, -1, 3, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer;", 0x404, 4, 5, -1, 6, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonDeserializer;", 0x1, 7, 8, 9, 10, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x4, 11, 12, 13, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:);
  methods[1].selector = @selector(initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer:withJavaTextDateFormat:withNSString:);
  methods[2].selector = @selector(withDateFormatWithJavaTextDateFormat:withNSString:);
  methods[3].selector = @selector(createContextualWithComFasterxmlJacksonDatabindDeserializationContext:withComFasterxmlJacksonDatabindBeanProperty:);
  methods[4].selector = @selector(_parseDateWithComFasterxmlJacksonCoreJsonParser:withComFasterxmlJacksonDatabindDeserializationContext:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_customFormat_", "LJavaTextDateFormat;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_formatString_", "LNSString;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;", "(Ljava/lang/Class<*>;)V", "LComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer;LJavaTextDateFormat;LNSString;", "(Lcom/fasterxml/jackson/databind/deser/std/DateDeserializers$DateBasedDeserializer<TT;>;Ljava/text/DateFormat;Ljava/lang/String;)V", "withDateFormat", "LJavaTextDateFormat;LNSString;", "(Ljava/text/DateFormat;Ljava/lang/String;)Lcom/fasterxml/jackson/databind/deser/std/DateDeserializers$DateBasedDeserializer<TT;>;", "createContextual", "LComFasterxmlJacksonDatabindDeserializationContext;LComFasterxmlJacksonDatabindBeanProperty;", "LComFasterxmlJacksonDatabindJsonMappingException;", "(Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonDeserializer<*>;", "_parseDate", "LComFasterxmlJacksonCoreJsonParser;LComFasterxmlJacksonDatabindDeserializationContext;", "LJavaIoIOException;", "LComFasterxmlJacksonDatabindDeserStdDateDeserializers;", "<T:Ljava/lang/Object;>Lcom/fasterxml/jackson/databind/deser/std/StdScalarDeserializer<TT;>;Lcom/fasterxml/jackson/databind/deser/ContextualDeserializer;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer = { "DateBasedDeserializer", "com.fasterxml.jackson.databind.deser.std", ptrTable, methods, fields, 7, 0x40c, 5, 2, 14, -1, -1, 15, -1 };
  return &_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer;
}

@end

void ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer_initWithIOSClass_(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer *self, IOSClass *clz) {
  ComFasterxmlJacksonDatabindDeserStdStdScalarDeserializer_initWithIOSClass_(self, clz);
  JreStrongAssign(&self->_customFormat_, nil);
  JreStrongAssign(&self->_formatString_, nil);
}

void ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer_initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer_withJavaTextDateFormat_withNSString_(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer *self, ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer *base, JavaTextDateFormat *format, NSString *formatStr) {
  ComFasterxmlJacksonDatabindDeserStdStdScalarDeserializer_initWithIOSClass_(self, ((ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer *) nil_chk(base))->_valueClass_);
  JreStrongAssign(&self->_customFormat_, format);
  JreStrongAssign(&self->_formatString_, formatStr);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer)

@implementation ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)cc {
  ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer_initWithIOSClass_(self, cc);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer:(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer *)src
                                                                                     withJavaTextDateFormat:(JavaTextDateFormat *)df
                                                                                               withNSString:(NSString *)formatString {
  ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer_initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer_withJavaTextDateFormat_withNSString_(self, src, df, formatString);
  return self;
}

- (ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer *)withDateFormatWithJavaTextDateFormat:(JavaTextDateFormat *)df
                                                                                                       withNSString:(NSString *)formatString {
  return create_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer_initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer_withJavaTextDateFormat_withNSString_(self, df, formatString);
}

- (JavaUtilCalendar *)deserializeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                 withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt {
  JavaUtilDate *d = [self _parseDateWithComFasterxmlJacksonCoreJsonParser:p withComFasterxmlJacksonDatabindDeserializationContext:ctxt];
  if (d == nil) {
    return nil;
  }
  if (_defaultCtor_ == nil) {
    return [((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) constructCalendarWithJavaUtilDate:d];
  }
  @try {
    JavaUtilCalendar *c = [_defaultCtor_ newInstanceWithNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]];
    [((JavaUtilCalendar *) nil_chk(c)) setTimeInMillisWithLong:[d getTime]];
    JavaUtilTimeZone *tz = [((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) getTimeZone];
    if (tz != nil) {
      [c setTimeZoneWithJavaUtilTimeZone:tz];
    }
    return c;
  }
  @catch (JavaLangException *e) {
    return (JavaUtilCalendar *) cast_chk([((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) handleInstantiationProblemWithIOSClass:[self handledType] withId:d withJavaLangThrowable:e], [JavaUtilCalendar class]);
  }
}

- (void)dealloc {
  RELEASE_(_defaultCtor_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer;", 0x4, 3, 4, -1, -1, -1, -1 },
    { NULL, "LJavaUtilCalendar;", 0x1, 5, 6, 7, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithIOSClass:);
  methods[2].selector = @selector(initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer:withJavaTextDateFormat:withNSString:);
  methods[3].selector = @selector(withDateFormatWithJavaTextDateFormat:withNSString:);
  methods[4].selector = @selector(deserializeWithComFasterxmlJacksonCoreJsonParser:withComFasterxmlJacksonDatabindDeserializationContext:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_defaultCtor_", "LJavaLangReflectConstructor;", .constantValue.asLong = 0, 0x14, -1, -1, 8, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;", "(Ljava/lang/Class<+Ljava/util/Calendar;>;)V", "LComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer;LJavaTextDateFormat;LNSString;", "withDateFormat", "LJavaTextDateFormat;LNSString;", "deserialize", "LComFasterxmlJacksonCoreJsonParser;LComFasterxmlJacksonDatabindDeserializationContext;", "LJavaIoIOException;", "Ljava/lang/reflect/Constructor<Ljava/util/Calendar;>;", "LComFasterxmlJacksonDatabindDeserStdDateDeserializers;", "Lcom/fasterxml/jackson/databind/deser/std/DateDeserializers$DateBasedDeserializer<Ljava/util/Calendar;>;", (void *)&ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer__Annotations$0 };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer = { "CalendarDeserializer", "com.fasterxml.jackson.databind.deser.std", ptrTable, methods, fields, 7, 0x9, 5, 1, 9, -1, -1, 10, 11 };
  return &_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer;
}

@end

void ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer_init(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer *self) {
  ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer_initWithIOSClass_(self, JavaUtilCalendar_class_());
  JreStrongAssign(&self->_defaultCtor_, nil);
}

ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer *new_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer, init)
}

ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer *create_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer, init)
}

void ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer_initWithIOSClass_(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer *self, IOSClass *cc) {
  ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer_initWithIOSClass_(self, cc);
  JreStrongAssign(&self->_defaultCtor_, ComFasterxmlJacksonDatabindUtilClassUtil_findConstructorWithIOSClass_withBoolean_(cc, false));
}

ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer *new_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer_initWithIOSClass_(IOSClass *cc) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer, initWithIOSClass_, cc)
}

ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer *create_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer_initWithIOSClass_(IOSClass *cc) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer, initWithIOSClass_, cc)
}

void ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer_initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer_withJavaTextDateFormat_withNSString_(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer *self, ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer *src, JavaTextDateFormat *df, NSString *formatString) {
  ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer_initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer_withJavaTextDateFormat_withNSString_(self, src, df, formatString);
  JreStrongAssign(&self->_defaultCtor_, ((ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer *) nil_chk(src))->_defaultCtor_);
}

ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer *new_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer_initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer_withJavaTextDateFormat_withNSString_(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer *src, JavaTextDateFormat *df, NSString *formatString) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer, initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer_withJavaTextDateFormat_withNSString_, src, df, formatString)
}

ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer *create_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer_initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer_withJavaTextDateFormat_withNSString_(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer *src, JavaTextDateFormat *df, NSString *formatString) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer, initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer_withJavaTextDateFormat_withNSString_, src, df, formatString)
}

IOSObjectArray *ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_ComFasterxmlJacksonDatabindAnnotationJacksonStdImpl() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_CalendarDeserializer)

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer)

ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer *ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer_instance;

@implementation ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer:(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer *)base
                                                                                 withJavaTextDateFormat:(JavaTextDateFormat *)df
                                                                                           withNSString:(NSString *)formatString {
  ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer_initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer_withJavaTextDateFormat_withNSString_(self, base, df, formatString);
  return self;
}

- (ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer *)withDateFormatWithJavaTextDateFormat:(JavaTextDateFormat *)df
                                                                                                   withNSString:(NSString *)formatString {
  return create_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer_initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer_withJavaTextDateFormat_withNSString_(self, df, formatString);
}

- (JavaUtilDate *)deserializeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
             withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt {
  return [self _parseDateWithComFasterxmlJacksonCoreJsonParser:p withComFasterxmlJacksonDatabindDeserializationContext:ctxt];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer;", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x1, 3, 4, 5, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer:withJavaTextDateFormat:withNSString:);
  methods[2].selector = @selector(withDateFormatWithJavaTextDateFormat:withNSString:);
  methods[3].selector = @selector(deserializeWithComFasterxmlJacksonCoreJsonParser:withComFasterxmlJacksonDatabindDeserializationContext:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "instance", "LComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer;", .constantValue.asLong = 0, 0x19, -1, 6, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer;LJavaTextDateFormat;LNSString;", "withDateFormat", "LJavaTextDateFormat;LNSString;", "deserialize", "LComFasterxmlJacksonCoreJsonParser;LComFasterxmlJacksonDatabindDeserializationContext;", "LJavaIoIOException;", &ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer_instance, "LComFasterxmlJacksonDatabindDeserStdDateDeserializers;", "Lcom/fasterxml/jackson/databind/deser/std/DateDeserializers$DateBasedDeserializer<Ljava/util/Date;>;", (void *)&ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer__Annotations$0 };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer = { "DateDeserializer", "com.fasterxml.jackson.databind.deser.std", ptrTable, methods, fields, 7, 0x9, 4, 1, 7, -1, -1, 8, 9 };
  return &_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer class]) {
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer_instance, new_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer_init());
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer)
  }
}

@end

void ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer_init(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer *self) {
  ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer_initWithIOSClass_(self, JavaUtilDate_class_());
}

ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer *new_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer, init)
}

ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer *create_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer, init)
}

void ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer_initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer_withJavaTextDateFormat_withNSString_(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer *self, ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer *base, JavaTextDateFormat *df, NSString *formatString) {
  ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer_initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer_withJavaTextDateFormat_withNSString_(self, base, df, formatString);
}

ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer *new_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer_initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer_withJavaTextDateFormat_withNSString_(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer *base, JavaTextDateFormat *df, NSString *formatString) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer, initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer_withJavaTextDateFormat_withNSString_, base, df, formatString)
}

ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer *create_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer_initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer_withJavaTextDateFormat_withNSString_(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer *base, JavaTextDateFormat *df, NSString *formatString) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer, initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer_withJavaTextDateFormat_withNSString_, base, df, formatString)
}

IOSObjectArray *ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_ComFasterxmlJacksonDatabindAnnotationJacksonStdImpl() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateDeserializer)

@implementation ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer:(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer *)src
                                                                                    withJavaTextDateFormat:(JavaTextDateFormat *)df
                                                                                              withNSString:(NSString *)formatString {
  ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer_initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer_withJavaTextDateFormat_withNSString_(self, src, df, formatString);
  return self;
}

- (ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer *)withDateFormatWithJavaTextDateFormat:(JavaTextDateFormat *)df
                                                                                                      withNSString:(NSString *)formatString {
  return create_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer_initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer_withJavaTextDateFormat_withNSString_(self, df, formatString);
}

- (JavaSqlDate *)deserializeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
            withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt {
  JavaUtilDate *d = [self _parseDateWithComFasterxmlJacksonCoreJsonParser:p withComFasterxmlJacksonDatabindDeserializationContext:ctxt];
  return (d == nil) ? nil : create_JavaSqlDate_initWithLong_([((JavaUtilDate *) nil_chk(d)) getTime]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer;", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "LJavaSqlDate;", 0x1, 3, 4, 5, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer:withJavaTextDateFormat:withNSString:);
  methods[2].selector = @selector(withDateFormatWithJavaTextDateFormat:withNSString:);
  methods[3].selector = @selector(deserializeWithComFasterxmlJacksonCoreJsonParser:withComFasterxmlJacksonDatabindDeserializationContext:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer;LJavaTextDateFormat;LNSString;", "withDateFormat", "LJavaTextDateFormat;LNSString;", "deserialize", "LComFasterxmlJacksonCoreJsonParser;LComFasterxmlJacksonDatabindDeserializationContext;", "LJavaIoIOException;", "LComFasterxmlJacksonDatabindDeserStdDateDeserializers;", "Lcom/fasterxml/jackson/databind/deser/std/DateDeserializers$DateBasedDeserializer<Ljava/sql/Date;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer = { "SqlDateDeserializer", "com.fasterxml.jackson.databind.deser.std", ptrTable, methods, NULL, 7, 0x9, 4, 0, 6, -1, -1, 7, -1 };
  return &_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer;
}

@end

void ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer_init(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer *self) {
  ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer_initWithIOSClass_(self, JavaSqlDate_class_());
}

ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer *new_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer, init)
}

ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer *create_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer, init)
}

void ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer_initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer_withJavaTextDateFormat_withNSString_(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer *self, ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer *src, JavaTextDateFormat *df, NSString *formatString) {
  ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer_initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer_withJavaTextDateFormat_withNSString_(self, src, df, formatString);
}

ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer *new_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer_initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer_withJavaTextDateFormat_withNSString_(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer *src, JavaTextDateFormat *df, NSString *formatString) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer, initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer_withJavaTextDateFormat_withNSString_, src, df, formatString)
}

ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer *create_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer_initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer_withJavaTextDateFormat_withNSString_(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer *src, JavaTextDateFormat *df, NSString *formatString) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer, initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer_withJavaTextDateFormat_withNSString_, src, df, formatString)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_SqlDateDeserializer)

@implementation ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer:(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer *)src
                                                                                      withJavaTextDateFormat:(JavaTextDateFormat *)df
                                                                                                withNSString:(NSString *)formatString {
  ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer_initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer_withJavaTextDateFormat_withNSString_(self, src, df, formatString);
  return self;
}

- (ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer *)withDateFormatWithJavaTextDateFormat:(JavaTextDateFormat *)df
                                                                                                        withNSString:(NSString *)formatString {
  return create_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer_initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer_withJavaTextDateFormat_withNSString_(self, df, formatString);
}

- (JavaSqlTimestamp *)deserializeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                 withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt {
  JavaUtilDate *d = [self _parseDateWithComFasterxmlJacksonCoreJsonParser:p withComFasterxmlJacksonDatabindDeserializationContext:ctxt];
  return (d == nil) ? nil : create_JavaSqlTimestamp_initWithLong_([((JavaUtilDate *) nil_chk(d)) getTime]);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer;", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "LJavaSqlTimestamp;", 0x1, 3, 4, 5, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer:withJavaTextDateFormat:withNSString:);
  methods[2].selector = @selector(withDateFormatWithJavaTextDateFormat:withNSString:);
  methods[3].selector = @selector(deserializeWithComFasterxmlJacksonCoreJsonParser:withComFasterxmlJacksonDatabindDeserializationContext:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer;LJavaTextDateFormat;LNSString;", "withDateFormat", "LJavaTextDateFormat;LNSString;", "deserialize", "LComFasterxmlJacksonCoreJsonParser;LComFasterxmlJacksonDatabindDeserializationContext;", "LJavaIoIOException;", "LComFasterxmlJacksonDatabindDeserStdDateDeserializers;", "Lcom/fasterxml/jackson/databind/deser/std/DateDeserializers$DateBasedDeserializer<Ljava/sql/Timestamp;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer = { "TimestampDeserializer", "com.fasterxml.jackson.databind.deser.std", ptrTable, methods, NULL, 7, 0x9, 4, 0, 6, -1, -1, 7, -1 };
  return &_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer;
}

@end

void ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer_init(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer *self) {
  ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer_initWithIOSClass_(self, JavaSqlTimestamp_class_());
}

ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer *new_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer, init)
}

ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer *create_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer, init)
}

void ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer_initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer_withJavaTextDateFormat_withNSString_(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer *self, ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer *src, JavaTextDateFormat *df, NSString *formatString) {
  ComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer_initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_DateBasedDeserializer_withJavaTextDateFormat_withNSString_(self, src, df, formatString);
}

ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer *new_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer_initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer_withJavaTextDateFormat_withNSString_(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer *src, JavaTextDateFormat *df, NSString *formatString) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer, initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer_withJavaTextDateFormat_withNSString_, src, df, formatString)
}

ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer *create_ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer_initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer_withJavaTextDateFormat_withNSString_(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer *src, JavaTextDateFormat *df, NSString *formatString) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer, initWithComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer_withJavaTextDateFormat_withNSString_, src, df, formatString)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindDeserStdDateDeserializers_TimestampDeserializer)
