//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/SerializerProvider.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/annotation/JsonFormat.h"
#include "com/fasterxml/jackson/annotation/JsonInclude.h"
#include "com/fasterxml/jackson/annotation/ObjectIdGenerator.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/databind/AnnotationIntrospector.h"
#include "com/fasterxml/jackson/databind/BeanDescription.h"
#include "com/fasterxml/jackson/databind/BeanProperty.h"
#include "com/fasterxml/jackson/databind/DatabindContext.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/JsonMappingException.h"
#include "com/fasterxml/jackson/databind/JsonSerializer.h"
#include "com/fasterxml/jackson/databind/MapperFeature.h"
#include "com/fasterxml/jackson/databind/SerializationConfig.h"
#include "com/fasterxml/jackson/databind/SerializationFeature.h"
#include "com/fasterxml/jackson/databind/SerializerProvider.h"
#include "com/fasterxml/jackson/databind/cfg/ContextAttributes.h"
#include "com/fasterxml/jackson/databind/exc/InvalidDefinitionException.h"
#include "com/fasterxml/jackson/databind/exc/InvalidTypeIdException.h"
#include "com/fasterxml/jackson/databind/introspect/Annotated.h"
#include "com/fasterxml/jackson/databind/introspect/BeanPropertyDefinition.h"
#include "com/fasterxml/jackson/databind/jsontype/TypeSerializer.h"
#include "com/fasterxml/jackson/databind/ser/ContextualSerializer.h"
#include "com/fasterxml/jackson/databind/ser/FilterProvider.h"
#include "com/fasterxml/jackson/databind/ser/ResolvableSerializer.h"
#include "com/fasterxml/jackson/databind/ser/SerializerCache.h"
#include "com/fasterxml/jackson/databind/ser/SerializerFactory.h"
#include "com/fasterxml/jackson/databind/ser/impl/FailingSerializer.h"
#include "com/fasterxml/jackson/databind/ser/impl/ReadOnlyClassToSerializerMap.h"
#include "com/fasterxml/jackson/databind/ser/impl/TypeWrappedSerializer.h"
#include "com/fasterxml/jackson/databind/ser/impl/UnknownSerializer.h"
#include "com/fasterxml/jackson/databind/ser/impl/WritableObjectId.h"
#include "com/fasterxml/jackson/databind/ser/std/NullSerializer.h"
#include "com/fasterxml/jackson/databind/type/TypeFactory.h"
#include "com/fasterxml/jackson/databind/util/ClassUtil.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Throwable.h"
#include "java/lang/annotation/Annotation.h"
#include "java/text/DateFormat.h"
#include "java/util/Date.h"
#include "java/util/Locale.h"
#include "java/util/TimeZone.h"

__attribute__((unused)) static jboolean ComFasterxmlJacksonDatabindSerializerProvider_isEnabledWithComFasterxmlJacksonDatabindSerializationFeature_(ComFasterxmlJacksonDatabindSerializerProvider *self, ComFasterxmlJacksonDatabindSerializationFeature *feature);

__attribute__((unused)) static JavaTextDateFormat *ComFasterxmlJacksonDatabindSerializerProvider__dateFormat(ComFasterxmlJacksonDatabindSerializerProvider *self);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindSerializerProvider__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindSerializerProvider__Annotations$1(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindSerializerProvider__Annotations$2(void);

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindSerializerProvider)

ComFasterxmlJacksonDatabindJsonSerializer *ComFasterxmlJacksonDatabindSerializerProvider_DEFAULT_NULL_KEY_SERIALIZER;
ComFasterxmlJacksonDatabindJsonSerializer *ComFasterxmlJacksonDatabindSerializerProvider_DEFAULT_UNKNOWN_SERIALIZER;

@implementation ComFasterxmlJacksonDatabindSerializerProvider

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindSerializerProvider_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)src
                             withComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                            withComFasterxmlJacksonDatabindSerSerializerFactory:(ComFasterxmlJacksonDatabindSerSerializerFactory *)f {
  ComFasterxmlJacksonDatabindSerializerProvider_initWithComFasterxmlJacksonDatabindSerializerProvider_withComFasterxmlJacksonDatabindSerializationConfig_withComFasterxmlJacksonDatabindSerSerializerFactory_(self, src, config, f);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)src {
  ComFasterxmlJacksonDatabindSerializerProvider_initWithComFasterxmlJacksonDatabindSerializerProvider_(self, src);
  return self;
}

- (void)setDefaultKeySerializerWithComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)ks {
  if (ks == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Cannot pass null JsonSerializer");
  }
  JreStrongAssign(&_keySerializer_, ks);
}

- (void)setNullValueSerializerWithComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)nvs {
  if (nvs == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Cannot pass null JsonSerializer");
  }
  JreStrongAssign(&_nullValueSerializer_, nvs);
}

- (void)setNullKeySerializerWithComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)nks {
  if (nks == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Cannot pass null JsonSerializer");
  }
  JreStrongAssign(&_nullKeySerializer_, nks);
}

- (ComFasterxmlJacksonDatabindSerializationConfig *)getConfig {
  return _config_;
}

- (ComFasterxmlJacksonDatabindAnnotationIntrospector *)getAnnotationIntrospector {
  return [((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(_config_)) getAnnotationIntrospector];
}

- (ComFasterxmlJacksonDatabindTypeTypeFactory *)getTypeFactory {
  return [((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(_config_)) getTypeFactory];
}

- (IOSClass *)getActiveView {
  return _serializationView_;
}

- (IOSClass *)getSerializationView {
  return _serializationView_;
}

- (jboolean)canOverrideAccessModifiers {
  return [((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(_config_)) canOverrideAccessModifiers];
}

- (jboolean)isEnabledWithComFasterxmlJacksonDatabindMapperFeature:(ComFasterxmlJacksonDatabindMapperFeature *)feature {
  return [((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(_config_)) isEnabledWithComFasterxmlJacksonDatabindMapperFeature:feature];
}

- (ComFasterxmlJacksonAnnotationJsonFormat_Value *)getDefaultPropertyFormatWithIOSClass:(IOSClass *)baseType {
  return [((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(_config_)) getDefaultPropertyFormatWithIOSClass:baseType];
}

- (ComFasterxmlJacksonAnnotationJsonInclude_Value *)getDefaultPropertyInclusionWithIOSClass:(IOSClass *)baseType {
  return [((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(_config_)) getDefaultPropertyInclusion];
}

- (JavaUtilLocale *)getLocale {
  return [((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(_config_)) getLocale];
}

- (JavaUtilTimeZone *)getTimeZone {
  return [((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(_config_)) getTimeZone];
}

- (id)getAttributeWithId:(id)key {
  return [((ComFasterxmlJacksonDatabindCfgContextAttributes *) nil_chk(_attributes_)) getAttributeWithId:key];
}

- (ComFasterxmlJacksonDatabindSerializerProvider *)setAttributeWithId:(id)key
                                                               withId:(id)value {
  JreStrongAssign(&_attributes_, [((ComFasterxmlJacksonDatabindCfgContextAttributes *) nil_chk(_attributes_)) withPerCallAttributeWithId:key withId:value]);
  return self;
}

- (jboolean)isEnabledWithComFasterxmlJacksonDatabindSerializationFeature:(ComFasterxmlJacksonDatabindSerializationFeature *)feature {
  return ComFasterxmlJacksonDatabindSerializerProvider_isEnabledWithComFasterxmlJacksonDatabindSerializationFeature_(self, feature);
}

- (jboolean)hasSerializationFeaturesWithInt:(jint)featureMask {
  return [((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(_config_)) hasSerializationFeaturesWithInt:featureMask];
}

- (ComFasterxmlJacksonDatabindSerFilterProvider *)getFilterProvider {
  return [((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(_config_)) getFilterProvider];
}

- (ComFasterxmlJacksonCoreJsonGenerator *)getGenerator {
  return nil;
}

- (ComFasterxmlJacksonDatabindSerImplWritableObjectId *)findObjectIdWithId:(id)forPojo
                        withComFasterxmlJacksonAnnotationObjectIdGenerator:(ComFasterxmlJacksonAnnotationObjectIdGenerator *)generatorType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)findValueSerializerWithIOSClass:(IOSClass *)valueType
                                   withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property {
  ComFasterxmlJacksonDatabindJsonSerializer *ser = [((ComFasterxmlJacksonDatabindSerImplReadOnlyClassToSerializerMap *) nil_chk(_knownSerializers_)) untypedValueSerializerWithIOSClass:valueType];
  if (ser == nil) {
    ser = [((ComFasterxmlJacksonDatabindSerSerializerCache *) nil_chk(_serializerCache_)) untypedValueSerializerWithIOSClass:valueType];
    if (ser == nil) {
      ser = [_serializerCache_ untypedValueSerializerWithComFasterxmlJacksonDatabindJavaType:[((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(_config_)) constructTypeWithIOSClass:valueType]];
      if (ser == nil) {
        ser = [self _createAndCacheUntypedSerializerWithIOSClass:valueType];
        if (ser == nil) {
          ser = [self getUnknownTypeSerializerWithIOSClass:valueType];
          return ser;
        }
      }
    }
  }
  return [self handleSecondaryContextualizationWithComFasterxmlJacksonDatabindJsonSerializer:ser withComFasterxmlJacksonDatabindBeanProperty:property];
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)findValueSerializerWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)valueType
                                                              withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property {
  if (valueType == nil) {
    [self reportMappingProblemWithNSString:@"Null passed for `valueType` of `findValueSerializer()`" withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]];
  }
  ComFasterxmlJacksonDatabindJsonSerializer *ser = [((ComFasterxmlJacksonDatabindSerImplReadOnlyClassToSerializerMap *) nil_chk(_knownSerializers_)) untypedValueSerializerWithComFasterxmlJacksonDatabindJavaType:valueType];
  if (ser == nil) {
    ser = [((ComFasterxmlJacksonDatabindSerSerializerCache *) nil_chk(_serializerCache_)) untypedValueSerializerWithComFasterxmlJacksonDatabindJavaType:valueType];
    if (ser == nil) {
      ser = [self _createAndCacheUntypedSerializerWithComFasterxmlJacksonDatabindJavaType:valueType];
      if (ser == nil) {
        ser = [self getUnknownTypeSerializerWithIOSClass:[((ComFasterxmlJacksonDatabindJavaType *) nil_chk(valueType)) getRawClass]];
        return ser;
      }
    }
  }
  return [self handleSecondaryContextualizationWithComFasterxmlJacksonDatabindJsonSerializer:ser withComFasterxmlJacksonDatabindBeanProperty:property];
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)findValueSerializerWithIOSClass:(IOSClass *)valueType {
  ComFasterxmlJacksonDatabindJsonSerializer *ser = [((ComFasterxmlJacksonDatabindSerImplReadOnlyClassToSerializerMap *) nil_chk(_knownSerializers_)) untypedValueSerializerWithIOSClass:valueType];
  if (ser == nil) {
    ser = [((ComFasterxmlJacksonDatabindSerSerializerCache *) nil_chk(_serializerCache_)) untypedValueSerializerWithIOSClass:valueType];
    if (ser == nil) {
      ser = [_serializerCache_ untypedValueSerializerWithComFasterxmlJacksonDatabindJavaType:[((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(_config_)) constructTypeWithIOSClass:valueType]];
      if (ser == nil) {
        ser = [self _createAndCacheUntypedSerializerWithIOSClass:valueType];
        if (ser == nil) {
          ser = [self getUnknownTypeSerializerWithIOSClass:valueType];
        }
      }
    }
  }
  return ser;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)findValueSerializerWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)valueType {
  ComFasterxmlJacksonDatabindJsonSerializer *ser = [((ComFasterxmlJacksonDatabindSerImplReadOnlyClassToSerializerMap *) nil_chk(_knownSerializers_)) untypedValueSerializerWithComFasterxmlJacksonDatabindJavaType:valueType];
  if (ser == nil) {
    ser = [((ComFasterxmlJacksonDatabindSerSerializerCache *) nil_chk(_serializerCache_)) untypedValueSerializerWithComFasterxmlJacksonDatabindJavaType:valueType];
    if (ser == nil) {
      ser = [self _createAndCacheUntypedSerializerWithComFasterxmlJacksonDatabindJavaType:valueType];
      if (ser == nil) {
        ser = [self getUnknownTypeSerializerWithIOSClass:[((ComFasterxmlJacksonDatabindJavaType *) nil_chk(valueType)) getRawClass]];
      }
    }
  }
  return ser;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)findPrimaryPropertySerializerWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)valueType
                                                                        withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property {
  ComFasterxmlJacksonDatabindJsonSerializer *ser = [((ComFasterxmlJacksonDatabindSerImplReadOnlyClassToSerializerMap *) nil_chk(_knownSerializers_)) untypedValueSerializerWithComFasterxmlJacksonDatabindJavaType:valueType];
  if (ser == nil) {
    ser = [((ComFasterxmlJacksonDatabindSerSerializerCache *) nil_chk(_serializerCache_)) untypedValueSerializerWithComFasterxmlJacksonDatabindJavaType:valueType];
    if (ser == nil) {
      ser = [self _createAndCacheUntypedSerializerWithComFasterxmlJacksonDatabindJavaType:valueType];
      if (ser == nil) {
        ser = [self getUnknownTypeSerializerWithIOSClass:[((ComFasterxmlJacksonDatabindJavaType *) nil_chk(valueType)) getRawClass]];
        return ser;
      }
    }
  }
  return [self handlePrimaryContextualizationWithComFasterxmlJacksonDatabindJsonSerializer:ser withComFasterxmlJacksonDatabindBeanProperty:property];
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)findPrimaryPropertySerializerWithIOSClass:(IOSClass *)valueType
                                             withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property {
  ComFasterxmlJacksonDatabindJsonSerializer *ser = [((ComFasterxmlJacksonDatabindSerImplReadOnlyClassToSerializerMap *) nil_chk(_knownSerializers_)) untypedValueSerializerWithIOSClass:valueType];
  if (ser == nil) {
    ser = [((ComFasterxmlJacksonDatabindSerSerializerCache *) nil_chk(_serializerCache_)) untypedValueSerializerWithIOSClass:valueType];
    if (ser == nil) {
      ser = [_serializerCache_ untypedValueSerializerWithComFasterxmlJacksonDatabindJavaType:[((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(_config_)) constructTypeWithIOSClass:valueType]];
      if (ser == nil) {
        ser = [self _createAndCacheUntypedSerializerWithIOSClass:valueType];
        if (ser == nil) {
          ser = [self getUnknownTypeSerializerWithIOSClass:valueType];
          return ser;
        }
      }
    }
  }
  return [self handlePrimaryContextualizationWithComFasterxmlJacksonDatabindJsonSerializer:ser withComFasterxmlJacksonDatabindBeanProperty:property];
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)findTypedValueSerializerWithIOSClass:(IOSClass *)valueType
                                                                        withBoolean:(jboolean)cache
                                        withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property {
  ComFasterxmlJacksonDatabindJsonSerializer *ser = [((ComFasterxmlJacksonDatabindSerImplReadOnlyClassToSerializerMap *) nil_chk(_knownSerializers_)) typedValueSerializerWithIOSClass:valueType];
  if (ser != nil) {
    return ser;
  }
  ser = [((ComFasterxmlJacksonDatabindSerSerializerCache *) nil_chk(_serializerCache_)) typedValueSerializerWithIOSClass:valueType];
  if (ser != nil) {
    return ser;
  }
  ser = [self findValueSerializerWithIOSClass:valueType withComFasterxmlJacksonDatabindBeanProperty:property];
  ComFasterxmlJacksonDatabindJsontypeTypeSerializer *typeSer = [((ComFasterxmlJacksonDatabindSerSerializerFactory *) nil_chk(_serializerFactory_)) createTypeSerializerWithComFasterxmlJacksonDatabindSerializationConfig:_config_ withComFasterxmlJacksonDatabindJavaType:[((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(_config_)) constructTypeWithIOSClass:valueType]];
  if (typeSer != nil) {
    typeSer = [typeSer forPropertyWithComFasterxmlJacksonDatabindBeanProperty:property];
    ser = create_ComFasterxmlJacksonDatabindSerImplTypeWrappedSerializer_initWithComFasterxmlJacksonDatabindJsontypeTypeSerializer_withComFasterxmlJacksonDatabindJsonSerializer_(typeSer, ser);
  }
  if (cache) {
    [_serializerCache_ addTypedSerializerWithIOSClass:valueType withComFasterxmlJacksonDatabindJsonSerializer:ser];
  }
  return ser;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)findTypedValueSerializerWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)valueType
                                                                                                   withBoolean:(jboolean)cache
                                                                   withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property {
  ComFasterxmlJacksonDatabindJsonSerializer *ser = [((ComFasterxmlJacksonDatabindSerImplReadOnlyClassToSerializerMap *) nil_chk(_knownSerializers_)) typedValueSerializerWithComFasterxmlJacksonDatabindJavaType:valueType];
  if (ser != nil) {
    return ser;
  }
  ser = [((ComFasterxmlJacksonDatabindSerSerializerCache *) nil_chk(_serializerCache_)) typedValueSerializerWithComFasterxmlJacksonDatabindJavaType:valueType];
  if (ser != nil) {
    return ser;
  }
  ser = [self findValueSerializerWithComFasterxmlJacksonDatabindJavaType:valueType withComFasterxmlJacksonDatabindBeanProperty:property];
  ComFasterxmlJacksonDatabindJsontypeTypeSerializer *typeSer = [((ComFasterxmlJacksonDatabindSerSerializerFactory *) nil_chk(_serializerFactory_)) createTypeSerializerWithComFasterxmlJacksonDatabindSerializationConfig:_config_ withComFasterxmlJacksonDatabindJavaType:valueType];
  if (typeSer != nil) {
    typeSer = [typeSer forPropertyWithComFasterxmlJacksonDatabindBeanProperty:property];
    ser = create_ComFasterxmlJacksonDatabindSerImplTypeWrappedSerializer_initWithComFasterxmlJacksonDatabindJsontypeTypeSerializer_withComFasterxmlJacksonDatabindJsonSerializer_(typeSer, ser);
  }
  if (cache) {
    [_serializerCache_ addTypedSerializerWithComFasterxmlJacksonDatabindJavaType:valueType withComFasterxmlJacksonDatabindJsonSerializer:ser];
  }
  return ser;
}

- (ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)findTypeSerializerWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)javaType {
  return [((ComFasterxmlJacksonDatabindSerSerializerFactory *) nil_chk(_serializerFactory_)) createTypeSerializerWithComFasterxmlJacksonDatabindSerializationConfig:_config_ withComFasterxmlJacksonDatabindJavaType:javaType];
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)findKeySerializerWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)keyType
                                                            withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property {
  ComFasterxmlJacksonDatabindJsonSerializer *ser = [((ComFasterxmlJacksonDatabindSerSerializerFactory *) nil_chk(_serializerFactory_)) createKeySerializerWithComFasterxmlJacksonDatabindSerializationConfig:_config_ withComFasterxmlJacksonDatabindJavaType:keyType withComFasterxmlJacksonDatabindJsonSerializer:_keySerializer_];
  return [self _handleContextualResolvableWithComFasterxmlJacksonDatabindJsonSerializer:ser withComFasterxmlJacksonDatabindBeanProperty:property];
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)findKeySerializerWithIOSClass:(IOSClass *)rawKeyType
                                 withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property {
  return [self findKeySerializerWithComFasterxmlJacksonDatabindJavaType:[((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(_config_)) constructTypeWithIOSClass:rawKeyType] withComFasterxmlJacksonDatabindBeanProperty:property];
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)getDefaultNullKeySerializer {
  return _nullKeySerializer_;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)getDefaultNullValueSerializer {
  return _nullValueSerializer_;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)findNullKeySerializerWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)serializationType
                                                                withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property {
  return _nullKeySerializer_;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)findNullValueSerializerWithComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property {
  return _nullValueSerializer_;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)getUnknownTypeSerializerWithIOSClass:(IOSClass *)unknownType {
  if (unknownType == NSObject_class_()) {
    return _unknownTypeSerializer_;
  }
  return create_ComFasterxmlJacksonDatabindSerImplUnknownSerializer_initWithIOSClass_(unknownType);
}

- (jboolean)isUnknownTypeSerializerWithComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)ser {
  if ((ser == _unknownTypeSerializer_) || (ser == nil)) {
    return true;
  }
  if (ComFasterxmlJacksonDatabindSerializerProvider_isEnabledWithComFasterxmlJacksonDatabindSerializationFeature_(self, JreLoadEnum(ComFasterxmlJacksonDatabindSerializationFeature, FAIL_ON_EMPTY_BEANS))) {
    if ([((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk(ser)) java_getClass] == ComFasterxmlJacksonDatabindSerImplUnknownSerializer_class_()) {
      return true;
    }
  }
  return false;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)serializerInstanceWithComFasterxmlJacksonDatabindIntrospectAnnotated:(ComFasterxmlJacksonDatabindIntrospectAnnotated *)annotated
                                                                                                             withId:(id)serDef {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)includeFilterInstanceWithComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition:(ComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition *)forProperty
                                                                              withIOSClass:(IOSClass *)filterClass {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)includeFilterSuppressNullsWithId:(id)filter {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)handlePrimaryContextualizationWithComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)ser
                                                                               withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property {
  if (ser != nil) {
    if ([ComFasterxmlJacksonDatabindSerContextualSerializer_class_() isInstance:ser]) {
      ser = [((id<ComFasterxmlJacksonDatabindSerContextualSerializer>) cast_check(ser, ComFasterxmlJacksonDatabindSerContextualSerializer_class_())) createContextualWithComFasterxmlJacksonDatabindSerializerProvider:self withComFasterxmlJacksonDatabindBeanProperty:property];
    }
  }
  return ser;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)handleSecondaryContextualizationWithComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)ser
                                                                                 withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property {
  if (ser != nil) {
    if ([ComFasterxmlJacksonDatabindSerContextualSerializer_class_() isInstance:ser]) {
      ser = [((id<ComFasterxmlJacksonDatabindSerContextualSerializer>) cast_check(ser, ComFasterxmlJacksonDatabindSerContextualSerializer_class_())) createContextualWithComFasterxmlJacksonDatabindSerializerProvider:self withComFasterxmlJacksonDatabindBeanProperty:property];
    }
  }
  return ser;
}

- (void)defaultSerializeValueWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen {
  if (value == nil) {
    if (_stdNullValueSerializer_) {
      [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeNull];
    }
    else {
      [((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk(_nullValueSerializer_)) serializeWithId:nil withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:self];
    }
  }
  else {
    IOSClass *cls = [value java_getClass];
    [((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk([self findTypedValueSerializerWithIOSClass:cls withBoolean:true withComFasterxmlJacksonDatabindBeanProperty:nil])) serializeWithId:value withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:self];
  }
}

- (void)defaultSerializeFieldWithNSString:(NSString *)fieldName
                                   withId:(id)value
 withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen {
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeFieldNameWithNSString:fieldName];
  if (value == nil) {
    if (_stdNullValueSerializer_) {
      [gen writeNull];
    }
    else {
      [((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk(_nullValueSerializer_)) serializeWithId:nil withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:self];
    }
  }
  else {
    IOSClass *cls = [value java_getClass];
    [((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk([self findTypedValueSerializerWithIOSClass:cls withBoolean:true withComFasterxmlJacksonDatabindBeanProperty:nil])) serializeWithId:value withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:self];
  }
}

- (void)defaultSerializeDateValueWithLong:(jlong)timestamp
 withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen {
  if (ComFasterxmlJacksonDatabindSerializerProvider_isEnabledWithComFasterxmlJacksonDatabindSerializationFeature_(self, JreLoadEnum(ComFasterxmlJacksonDatabindSerializationFeature, WRITE_DATES_AS_TIMESTAMPS))) {
    [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeNumberWithLong:timestamp];
  }
  else {
    [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeStringWithNSString:[((JavaTextDateFormat *) nil_chk(ComFasterxmlJacksonDatabindSerializerProvider__dateFormat(self))) formatWithJavaUtilDate:create_JavaUtilDate_initWithLong_(timestamp)]];
  }
}

- (void)defaultSerializeDateValueWithJavaUtilDate:(JavaUtilDate *)date
         withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen {
  if (ComFasterxmlJacksonDatabindSerializerProvider_isEnabledWithComFasterxmlJacksonDatabindSerializationFeature_(self, JreLoadEnum(ComFasterxmlJacksonDatabindSerializationFeature, WRITE_DATES_AS_TIMESTAMPS))) {
    [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeNumberWithLong:[((JavaUtilDate *) nil_chk(date)) getTime]];
  }
  else {
    [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeStringWithNSString:[((JavaTextDateFormat *) nil_chk(ComFasterxmlJacksonDatabindSerializerProvider__dateFormat(self))) formatWithJavaUtilDate:date]];
  }
}

- (void)defaultSerializeDateKeyWithLong:(jlong)timestamp
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen {
  if (ComFasterxmlJacksonDatabindSerializerProvider_isEnabledWithComFasterxmlJacksonDatabindSerializationFeature_(self, JreLoadEnum(ComFasterxmlJacksonDatabindSerializationFeature, WRITE_DATE_KEYS_AS_TIMESTAMPS))) {
    [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeFieldNameWithNSString:NSString_java_valueOfLong_(timestamp)];
  }
  else {
    [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeFieldNameWithNSString:[((JavaTextDateFormat *) nil_chk(ComFasterxmlJacksonDatabindSerializerProvider__dateFormat(self))) formatWithJavaUtilDate:create_JavaUtilDate_initWithLong_(timestamp)]];
  }
}

- (void)defaultSerializeDateKeyWithJavaUtilDate:(JavaUtilDate *)date
       withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen {
  if (ComFasterxmlJacksonDatabindSerializerProvider_isEnabledWithComFasterxmlJacksonDatabindSerializationFeature_(self, JreLoadEnum(ComFasterxmlJacksonDatabindSerializationFeature, WRITE_DATE_KEYS_AS_TIMESTAMPS))) {
    [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeFieldNameWithNSString:NSString_java_valueOfLong_([((JavaUtilDate *) nil_chk(date)) getTime])];
  }
  else {
    [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeFieldNameWithNSString:[((JavaTextDateFormat *) nil_chk(ComFasterxmlJacksonDatabindSerializerProvider__dateFormat(self))) formatWithJavaUtilDate:date]];
  }
}

- (void)defaultSerializeNullWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen {
  if (_stdNullValueSerializer_) {
    [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeNull];
  }
  else {
    [((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk(_nullValueSerializer_)) serializeWithId:nil withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:self];
  }
}

- (void)reportMappingProblemWithNSString:(NSString *)message
                       withNSObjectArray:(IOSObjectArray *)args {
  @throw nil_chk([self mappingExceptionWithNSString:message withNSObjectArray:args]);
}

- (id)reportBadTypeDefinitionWithComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)bean
                                                               withNSString:(NSString *)msg
                                                          withNSObjectArray:(IOSObjectArray *)msgArgs {
  NSString *beanDesc = @"N/A";
  if (bean != nil) {
    beanDesc = ComFasterxmlJacksonDatabindUtilClassUtil_nameOfWithIOSClass_([bean getBeanClass]);
  }
  msg = NSString_java_formatWithNSString_withNSObjectArray_(@"Invalid type definition for type %s: %s", [IOSObjectArray arrayWithObjects:(id[]){ beanDesc, [self _formatWithNSString:msg withNSObjectArray:msgArgs] } count:2 type:NSObject_class_()]);
  @throw nil_chk(ComFasterxmlJacksonDatabindExcInvalidDefinitionException_fromWithComFasterxmlJacksonCoreJsonGenerator_withNSString_withComFasterxmlJacksonDatabindBeanDescription_withComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition_([self getGenerator], msg, bean, nil));
}

- (id)reportBadPropertyDefinitionWithComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)bean
                withComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition:(ComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition *)prop
                                                                   withNSString:(NSString *)message
                                                              withNSObjectArray:(IOSObjectArray *)msgArgs {
  message = [self _formatWithNSString:message withNSObjectArray:msgArgs];
  NSString *propName = @"N/A";
  if (prop != nil) {
    propName = [self _quotedStringWithNSString:[prop getName]];
  }
  NSString *beanDesc = @"N/A";
  if (bean != nil) {
    beanDesc = ComFasterxmlJacksonDatabindUtilClassUtil_nameOfWithIOSClass_([bean getBeanClass]);
  }
  message = NSString_java_formatWithNSString_withNSObjectArray_(@"Invalid definition for property %s (of type %s): %s", [IOSObjectArray arrayWithObjects:(id[]){ propName, beanDesc, message } count:3 type:NSObject_class_()]);
  @throw nil_chk(ComFasterxmlJacksonDatabindExcInvalidDefinitionException_fromWithComFasterxmlJacksonCoreJsonGenerator_withNSString_withComFasterxmlJacksonDatabindBeanDescription_withComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition_([self getGenerator], message, bean, prop));
}

- (id)reportBadDefinitionWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                    withNSString:(NSString *)msg {
  @throw nil_chk(ComFasterxmlJacksonDatabindExcInvalidDefinitionException_fromWithComFasterxmlJacksonCoreJsonGenerator_withNSString_withComFasterxmlJacksonDatabindJavaType_([self getGenerator], msg, type));
}

- (id)reportBadDefinitionWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                    withNSString:(NSString *)msg
                                           withJavaLangThrowable:(JavaLangThrowable *)cause {
  ComFasterxmlJacksonDatabindExcInvalidDefinitionException *e = ComFasterxmlJacksonDatabindExcInvalidDefinitionException_fromWithComFasterxmlJacksonCoreJsonGenerator_withNSString_withComFasterxmlJacksonDatabindJavaType_([self getGenerator], msg, type);
  [((ComFasterxmlJacksonDatabindExcInvalidDefinitionException *) nil_chk(e)) initCauseWithJavaLangThrowable:cause];
  @throw e;
}

- (id)reportBadDefinitionWithIOSClass:(IOSClass *)raw
                         withNSString:(NSString *)msg
                withJavaLangThrowable:(JavaLangThrowable *)cause {
  ComFasterxmlJacksonDatabindExcInvalidDefinitionException *e = ComFasterxmlJacksonDatabindExcInvalidDefinitionException_fromWithComFasterxmlJacksonCoreJsonGenerator_withNSString_withComFasterxmlJacksonDatabindJavaType_([self getGenerator], msg, [self constructTypeWithJavaLangReflectType:raw]);
  [((ComFasterxmlJacksonDatabindExcInvalidDefinitionException *) nil_chk(e)) initCauseWithJavaLangThrowable:cause];
  @throw e;
}

- (void)reportMappingProblemWithJavaLangThrowable:(JavaLangThrowable *)t
                                     withNSString:(NSString *)message
                                withNSObjectArray:(IOSObjectArray *)msgArgs {
  message = [self _formatWithNSString:message withNSObjectArray:msgArgs];
  @throw nil_chk(ComFasterxmlJacksonDatabindJsonMappingException_fromWithComFasterxmlJacksonCoreJsonGenerator_withNSString_withJavaLangThrowable_([self getGenerator], message, t));
}

- (ComFasterxmlJacksonDatabindJsonMappingException *)invalidTypeIdExceptionWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)baseType
                                                                                                      withNSString:(NSString *)typeId
                                                                                                      withNSString:(NSString *)extraDesc {
  NSString *msg = NSString_java_formatWithNSString_withNSObjectArray_(@"Could not resolve type id '%s' as a subtype of %s", [IOSObjectArray arrayWithObjects:(id[]){ typeId, baseType } count:2 type:NSObject_class_()]);
  return ComFasterxmlJacksonDatabindExcInvalidTypeIdException_fromWithComFasterxmlJacksonCoreJsonParser_withNSString_withComFasterxmlJacksonDatabindJavaType_withNSString_(nil, [self _colonConcatWithNSString:msg withNSString:extraDesc], baseType, typeId);
}

- (ComFasterxmlJacksonDatabindJsonMappingException *)mappingExceptionWithNSString:(NSString *)message
                                                                withNSObjectArray:(IOSObjectArray *)msgArgs {
  return ComFasterxmlJacksonDatabindJsonMappingException_fromWithComFasterxmlJacksonCoreJsonGenerator_withNSString_([self getGenerator], [self _formatWithNSString:message withNSObjectArray:msgArgs]);
}

- (ComFasterxmlJacksonDatabindJsonMappingException *)mappingExceptionWithJavaLangThrowable:(JavaLangThrowable *)t
                                                                              withNSString:(NSString *)message
                                                                         withNSObjectArray:(IOSObjectArray *)msgArgs {
  return ComFasterxmlJacksonDatabindJsonMappingException_fromWithComFasterxmlJacksonCoreJsonGenerator_withNSString_withJavaLangThrowable_([self getGenerator], [self _formatWithNSString:message withNSObjectArray:msgArgs], t);
}

- (void)_reportIncompatibleRootTypeWithId:(id)value
  withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)rootType {
  if ([((ComFasterxmlJacksonDatabindJavaType *) nil_chk(rootType)) isPrimitive]) {
    IOSClass *wrapperType = ComFasterxmlJacksonDatabindUtilClassUtil_wrapperTypeWithIOSClass_([rootType getRawClass]);
    if ([((IOSClass *) nil_chk(wrapperType)) isAssignableFrom:[nil_chk(value) java_getClass]]) {
      return;
    }
  }
  [self reportBadDefinitionWithComFasterxmlJacksonDatabindJavaType:rootType withNSString:NSString_java_formatWithNSString_withNSObjectArray_(@"Incompatible types: declared root type (%s) vs %s", [IOSObjectArray arrayWithObjects:(id[]){ rootType, ComFasterxmlJacksonDatabindUtilClassUtil_classNameOfWithId_(value) } count:2 type:NSObject_class_()])];
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)_findExplicitUntypedSerializerWithIOSClass:(IOSClass *)runtimeType {
  ComFasterxmlJacksonDatabindJsonSerializer *ser = [((ComFasterxmlJacksonDatabindSerImplReadOnlyClassToSerializerMap *) nil_chk(_knownSerializers_)) untypedValueSerializerWithIOSClass:runtimeType];
  if (ser == nil) {
    ser = [((ComFasterxmlJacksonDatabindSerSerializerCache *) nil_chk(_serializerCache_)) untypedValueSerializerWithIOSClass:runtimeType];
    if (ser == nil) {
      ser = [self _createAndCacheUntypedSerializerWithIOSClass:runtimeType];
    }
  }
  if ([self isUnknownTypeSerializerWithComFasterxmlJacksonDatabindJsonSerializer:ser]) {
    return nil;
  }
  return ser;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)_createAndCacheUntypedSerializerWithIOSClass:(IOSClass *)rawType {
  ComFasterxmlJacksonDatabindJavaType *fullType = [((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(_config_)) constructTypeWithIOSClass:rawType];
  ComFasterxmlJacksonDatabindJsonSerializer *ser;
  @try {
    ser = [self _createUntypedSerializerWithComFasterxmlJacksonDatabindJavaType:fullType];
  }
  @catch (JavaLangIllegalArgumentException *iae) {
    ser = nil;
    [self reportMappingProblemWithJavaLangThrowable:iae withNSString:[iae getMessage] withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]];
  }
  if (ser != nil) {
    [((ComFasterxmlJacksonDatabindSerSerializerCache *) nil_chk(_serializerCache_)) addAndResolveNonTypedSerializerWithIOSClass:rawType withComFasterxmlJacksonDatabindJavaType:fullType withComFasterxmlJacksonDatabindJsonSerializer:ser withComFasterxmlJacksonDatabindSerializerProvider:self];
  }
  return ser;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)_createAndCacheUntypedSerializerWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type {
  ComFasterxmlJacksonDatabindJsonSerializer *ser;
  @try {
    ser = [self _createUntypedSerializerWithComFasterxmlJacksonDatabindJavaType:type];
  }
  @catch (JavaLangIllegalArgumentException *iae) {
    ser = nil;
    [self reportMappingProblemWithJavaLangThrowable:iae withNSString:[iae getMessage] withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]];
  }
  if (ser != nil) {
    [((ComFasterxmlJacksonDatabindSerSerializerCache *) nil_chk(_serializerCache_)) addAndResolveNonTypedSerializerWithComFasterxmlJacksonDatabindJavaType:type withComFasterxmlJacksonDatabindJsonSerializer:ser withComFasterxmlJacksonDatabindSerializerProvider:self];
  }
  return ser;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)_createUntypedSerializerWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type {
  @synchronized(_serializerCache_) {
    return JreRetainedLocalValue([((ComFasterxmlJacksonDatabindSerSerializerFactory *) nil_chk(_serializerFactory_)) createSerializerWithComFasterxmlJacksonDatabindSerializerProvider:self withComFasterxmlJacksonDatabindJavaType:type]);
  }
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)_handleContextualResolvableWithComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)ser
                                                                            withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property {
  if ([ComFasterxmlJacksonDatabindSerResolvableSerializer_class_() isInstance:ser]) {
    [((id<ComFasterxmlJacksonDatabindSerResolvableSerializer>) nil_chk(((id<ComFasterxmlJacksonDatabindSerResolvableSerializer>) cast_check(ser, ComFasterxmlJacksonDatabindSerResolvableSerializer_class_())))) resolveWithComFasterxmlJacksonDatabindSerializerProvider:self];
  }
  return [self handleSecondaryContextualizationWithComFasterxmlJacksonDatabindJsonSerializer:ser withComFasterxmlJacksonDatabindBeanProperty:property];
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)_handleResolvableWithComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)ser {
  if ([ComFasterxmlJacksonDatabindSerResolvableSerializer_class_() isInstance:ser]) {
    [((id<ComFasterxmlJacksonDatabindSerResolvableSerializer>) nil_chk(((id<ComFasterxmlJacksonDatabindSerResolvableSerializer>) cast_check(ser, ComFasterxmlJacksonDatabindSerResolvableSerializer_class_())))) resolveWithComFasterxmlJacksonDatabindSerializerProvider:self];
  }
  return ser;
}

- (JavaTextDateFormat *)_dateFormat {
  return ComFasterxmlJacksonDatabindSerializerProvider__dateFormat(self);
}

- (void)dealloc {
  RELEASE_(_config_);
  RELEASE_(_serializationView_);
  RELEASE_(_serializerFactory_);
  RELEASE_(_serializerCache_);
  RELEASE_(_attributes_);
  RELEASE_(_unknownTypeSerializer_);
  RELEASE_(_keySerializer_);
  RELEASE_(_nullValueSerializer_);
  RELEASE_(_nullKeySerializer_);
  RELEASE_(_knownSerializers_);
  RELEASE_(_dateFormat_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x1, 5, 3, -1, 4, -1, -1 },
    { NULL, "V", 0x1, 6, 3, -1, 4, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerializationConfig;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindAnnotationIntrospector;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeTypeFactory;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x11, -1, -1, -1, 7, -1, -1 },
    { NULL, "LIOSClass;", 0x11, -1, -1, -1, 7, 8, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, 9, 10, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonFormat_Value;", 0x11, 11, 12, -1, 13, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonInclude_Value;", 0x11, 14, 12, -1, 15, -1, -1 },
    { NULL, "LJavaUtilLocale;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilTimeZone;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 16, 17, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerializerProvider;", 0x1, 18, 19, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, 9, 20, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, 21, 22, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerFilterProvider;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonGenerator;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerImplWritableObjectId;", 0x401, 23, 24, -1, 25, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 26, 27, 28, 29, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 26, 30, 28, 31, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 26, 12, 28, 32, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 26, 33, 28, 34, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 35, 30, 28, 31, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 35, 27, 28, 29, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 36, 37, 28, 38, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 36, 39, 28, 40, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsontypeTypeSerializer;", 0x1, 41, 33, 28, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 42, 30, 28, 31, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 42, 27, 28, 29, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, -1, -1, -1, 43, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, -1, -1, -1, 43, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 44, 30, 28, 31, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 45, 46, 28, 47, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 48, 12, -1, 32, -1, -1 },
    { NULL, "Z", 0x1, 49, 3, -1, 50, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x401, 51, 52, 28, 53, -1, -1 },
    { NULL, "LNSObject;", 0x401, 54, 55, 28, 56, -1, -1 },
    { NULL, "Z", 0x401, 57, 17, 28, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 58, 59, 28, 60, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 61, 59, 28, 60, -1, -1 },
    { NULL, "V", 0x11, 62, 63, 64, -1, -1, -1 },
    { NULL, "V", 0x11, 65, 66, 64, -1, -1, -1 },
    { NULL, "V", 0x11, 67, 68, 64, -1, -1, -1 },
    { NULL, "V", 0x11, 67, 69, 64, -1, -1, -1 },
    { NULL, "V", 0x1, 70, 68, 64, -1, -1, -1 },
    { NULL, "V", 0x1, 70, 69, 64, -1, -1, -1 },
    { NULL, "V", 0x11, 71, 72, 64, -1, -1, -1 },
    { NULL, "V", 0x81, 73, 74, 28, -1, -1, -1 },
    { NULL, "LNSObject;", 0x81, 75, 76, 28, 77, -1, -1 },
    { NULL, "LNSObject;", 0x81, 78, 79, 28, 80, -1, -1 },
    { NULL, "LNSObject;", 0x1, 81, 82, 28, 83, -1, -1 },
    { NULL, "LNSObject;", 0x1, 81, 84, 28, 85, -1, -1 },
    { NULL, "LNSObject;", 0x1, 81, 86, 28, 87, -1, -1 },
    { NULL, "V", 0x81, 73, 88, 28, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonMappingException;", 0x1, 89, 90, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonMappingException;", 0x81, 91, 74, -1, -1, 92, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonMappingException;", 0x84, 91, 88, -1, -1, 93, -1 },
    { NULL, "V", 0x4, 94, 95, 64, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x4, 96, 12, 28, 32, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x4, 97, 12, 28, 32, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x4, 97, 33, 28, 34, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x4, 98, 33, 28, 34, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x4, 99, 59, 28, 100, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x4, 101, 3, 28, 102, -1, -1 },
    { NULL, "LJavaTextDateFormat;", 0x14, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindSerializationConfig:withComFasterxmlJacksonDatabindSerSerializerFactory:);
  methods[2].selector = @selector(initWithComFasterxmlJacksonDatabindSerializerProvider:);
  methods[3].selector = @selector(setDefaultKeySerializerWithComFasterxmlJacksonDatabindJsonSerializer:);
  methods[4].selector = @selector(setNullValueSerializerWithComFasterxmlJacksonDatabindJsonSerializer:);
  methods[5].selector = @selector(setNullKeySerializerWithComFasterxmlJacksonDatabindJsonSerializer:);
  methods[6].selector = @selector(getConfig);
  methods[7].selector = @selector(getAnnotationIntrospector);
  methods[8].selector = @selector(getTypeFactory);
  methods[9].selector = @selector(getActiveView);
  methods[10].selector = @selector(getSerializationView);
  methods[11].selector = @selector(canOverrideAccessModifiers);
  methods[12].selector = @selector(isEnabledWithComFasterxmlJacksonDatabindMapperFeature:);
  methods[13].selector = @selector(getDefaultPropertyFormatWithIOSClass:);
  methods[14].selector = @selector(getDefaultPropertyInclusionWithIOSClass:);
  methods[15].selector = @selector(getLocale);
  methods[16].selector = @selector(getTimeZone);
  methods[17].selector = @selector(getAttributeWithId:);
  methods[18].selector = @selector(setAttributeWithId:withId:);
  methods[19].selector = @selector(isEnabledWithComFasterxmlJacksonDatabindSerializationFeature:);
  methods[20].selector = @selector(hasSerializationFeaturesWithInt:);
  methods[21].selector = @selector(getFilterProvider);
  methods[22].selector = @selector(getGenerator);
  methods[23].selector = @selector(findObjectIdWithId:withComFasterxmlJacksonAnnotationObjectIdGenerator:);
  methods[24].selector = @selector(findValueSerializerWithIOSClass:withComFasterxmlJacksonDatabindBeanProperty:);
  methods[25].selector = @selector(findValueSerializerWithComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindBeanProperty:);
  methods[26].selector = @selector(findValueSerializerWithIOSClass:);
  methods[27].selector = @selector(findValueSerializerWithComFasterxmlJacksonDatabindJavaType:);
  methods[28].selector = @selector(findPrimaryPropertySerializerWithComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindBeanProperty:);
  methods[29].selector = @selector(findPrimaryPropertySerializerWithIOSClass:withComFasterxmlJacksonDatabindBeanProperty:);
  methods[30].selector = @selector(findTypedValueSerializerWithIOSClass:withBoolean:withComFasterxmlJacksonDatabindBeanProperty:);
  methods[31].selector = @selector(findTypedValueSerializerWithComFasterxmlJacksonDatabindJavaType:withBoolean:withComFasterxmlJacksonDatabindBeanProperty:);
  methods[32].selector = @selector(findTypeSerializerWithComFasterxmlJacksonDatabindJavaType:);
  methods[33].selector = @selector(findKeySerializerWithComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindBeanProperty:);
  methods[34].selector = @selector(findKeySerializerWithIOSClass:withComFasterxmlJacksonDatabindBeanProperty:);
  methods[35].selector = @selector(getDefaultNullKeySerializer);
  methods[36].selector = @selector(getDefaultNullValueSerializer);
  methods[37].selector = @selector(findNullKeySerializerWithComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindBeanProperty:);
  methods[38].selector = @selector(findNullValueSerializerWithComFasterxmlJacksonDatabindBeanProperty:);
  methods[39].selector = @selector(getUnknownTypeSerializerWithIOSClass:);
  methods[40].selector = @selector(isUnknownTypeSerializerWithComFasterxmlJacksonDatabindJsonSerializer:);
  methods[41].selector = @selector(serializerInstanceWithComFasterxmlJacksonDatabindIntrospectAnnotated:withId:);
  methods[42].selector = @selector(includeFilterInstanceWithComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition:withIOSClass:);
  methods[43].selector = @selector(includeFilterSuppressNullsWithId:);
  methods[44].selector = @selector(handlePrimaryContextualizationWithComFasterxmlJacksonDatabindJsonSerializer:withComFasterxmlJacksonDatabindBeanProperty:);
  methods[45].selector = @selector(handleSecondaryContextualizationWithComFasterxmlJacksonDatabindJsonSerializer:withComFasterxmlJacksonDatabindBeanProperty:);
  methods[46].selector = @selector(defaultSerializeValueWithId:withComFasterxmlJacksonCoreJsonGenerator:);
  methods[47].selector = @selector(defaultSerializeFieldWithNSString:withId:withComFasterxmlJacksonCoreJsonGenerator:);
  methods[48].selector = @selector(defaultSerializeDateValueWithLong:withComFasterxmlJacksonCoreJsonGenerator:);
  methods[49].selector = @selector(defaultSerializeDateValueWithJavaUtilDate:withComFasterxmlJacksonCoreJsonGenerator:);
  methods[50].selector = @selector(defaultSerializeDateKeyWithLong:withComFasterxmlJacksonCoreJsonGenerator:);
  methods[51].selector = @selector(defaultSerializeDateKeyWithJavaUtilDate:withComFasterxmlJacksonCoreJsonGenerator:);
  methods[52].selector = @selector(defaultSerializeNullWithComFasterxmlJacksonCoreJsonGenerator:);
  methods[53].selector = @selector(reportMappingProblemWithNSString:withNSObjectArray:);
  methods[54].selector = @selector(reportBadTypeDefinitionWithComFasterxmlJacksonDatabindBeanDescription:withNSString:withNSObjectArray:);
  methods[55].selector = @selector(reportBadPropertyDefinitionWithComFasterxmlJacksonDatabindBeanDescription:withComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition:withNSString:withNSObjectArray:);
  methods[56].selector = @selector(reportBadDefinitionWithComFasterxmlJacksonDatabindJavaType:withNSString:);
  methods[57].selector = @selector(reportBadDefinitionWithComFasterxmlJacksonDatabindJavaType:withNSString:withJavaLangThrowable:);
  methods[58].selector = @selector(reportBadDefinitionWithIOSClass:withNSString:withJavaLangThrowable:);
  methods[59].selector = @selector(reportMappingProblemWithJavaLangThrowable:withNSString:withNSObjectArray:);
  methods[60].selector = @selector(invalidTypeIdExceptionWithComFasterxmlJacksonDatabindJavaType:withNSString:withNSString:);
  methods[61].selector = @selector(mappingExceptionWithNSString:withNSObjectArray:);
  methods[62].selector = @selector(mappingExceptionWithJavaLangThrowable:withNSString:withNSObjectArray:);
  methods[63].selector = @selector(_reportIncompatibleRootTypeWithId:withComFasterxmlJacksonDatabindJavaType:);
  methods[64].selector = @selector(_findExplicitUntypedSerializerWithIOSClass:);
  methods[65].selector = @selector(_createAndCacheUntypedSerializerWithIOSClass:);
  methods[66].selector = @selector(_createAndCacheUntypedSerializerWithComFasterxmlJacksonDatabindJavaType:);
  methods[67].selector = @selector(_createUntypedSerializerWithComFasterxmlJacksonDatabindJavaType:);
  methods[68].selector = @selector(_handleContextualResolvableWithComFasterxmlJacksonDatabindJsonSerializer:withComFasterxmlJacksonDatabindBeanProperty:);
  methods[69].selector = @selector(_handleResolvableWithComFasterxmlJacksonDatabindJsonSerializer:);
  methods[70].selector = @selector(_dateFormat);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "CACHE_UNKNOWN_MAPPINGS", "Z", .constantValue.asBOOL = ComFasterxmlJacksonDatabindSerializerProvider_CACHE_UNKNOWN_MAPPINGS, 0x1c, -1, -1, -1, -1 },
    { "DEFAULT_NULL_KEY_SERIALIZER", "LComFasterxmlJacksonDatabindJsonSerializer;", .constantValue.asLong = 0, 0x19, -1, 103, 104, -1 },
    { "DEFAULT_UNKNOWN_SERIALIZER", "LComFasterxmlJacksonDatabindJsonSerializer;", .constantValue.asLong = 0, 0x1c, -1, 105, 104, -1 },
    { "_config_", "LComFasterxmlJacksonDatabindSerializationConfig;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_serializationView_", "LIOSClass;", .constantValue.asLong = 0, 0x14, -1, -1, 106, -1 },
    { "_serializerFactory_", "LComFasterxmlJacksonDatabindSerSerializerFactory;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_serializerCache_", "LComFasterxmlJacksonDatabindSerSerializerCache;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_attributes_", "LComFasterxmlJacksonDatabindCfgContextAttributes;", .constantValue.asLong = 0, 0x84, -1, -1, -1, -1 },
    { "_unknownTypeSerializer_", "LComFasterxmlJacksonDatabindJsonSerializer;", .constantValue.asLong = 0, 0x4, -1, -1, 104, -1 },
    { "_keySerializer_", "LComFasterxmlJacksonDatabindJsonSerializer;", .constantValue.asLong = 0, 0x4, -1, -1, 104, -1 },
    { "_nullValueSerializer_", "LComFasterxmlJacksonDatabindJsonSerializer;", .constantValue.asLong = 0, 0x4, -1, -1, 104, -1 },
    { "_nullKeySerializer_", "LComFasterxmlJacksonDatabindJsonSerializer;", .constantValue.asLong = 0, 0x4, -1, -1, 104, -1 },
    { "_knownSerializers_", "LComFasterxmlJacksonDatabindSerImplReadOnlyClassToSerializerMap;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_dateFormat_", "LJavaTextDateFormat;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_stdNullValueSerializer_", "Z", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindSerializationConfig;LComFasterxmlJacksonDatabindSerSerializerFactory;", "LComFasterxmlJacksonDatabindSerializerProvider;", "setDefaultKeySerializer", "LComFasterxmlJacksonDatabindJsonSerializer;", "(Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;)V", "setNullValueSerializer", "setNullKeySerializer", "()Ljava/lang/Class<*>;", (void *)&ComFasterxmlJacksonDatabindSerializerProvider__Annotations$0, "isEnabled", "LComFasterxmlJacksonDatabindMapperFeature;", "getDefaultPropertyFormat", "LIOSClass;", "(Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/annotation/JsonFormat$Value;", "getDefaultPropertyInclusion", "(Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/annotation/JsonInclude$Value;", "getAttribute", "LNSObject;", "setAttribute", "LNSObject;LNSObject;", "LComFasterxmlJacksonDatabindSerializationFeature;", "hasSerializationFeatures", "I", "findObjectId", "LNSObject;LComFasterxmlJacksonAnnotationObjectIdGenerator;", "(Ljava/lang/Object;Lcom/fasterxml/jackson/annotation/ObjectIdGenerator<*>;)Lcom/fasterxml/jackson/databind/ser/impl/WritableObjectId;", "findValueSerializer", "LIOSClass;LComFasterxmlJacksonDatabindBeanProperty;", "LComFasterxmlJacksonDatabindJsonMappingException;", "(Ljava/lang/Class<*>;Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", "LComFasterxmlJacksonDatabindJavaType;LComFasterxmlJacksonDatabindBeanProperty;", "(Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", "(Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", "LComFasterxmlJacksonDatabindJavaType;", "(Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", "findPrimaryPropertySerializer", "findTypedValueSerializer", "LIOSClass;ZLComFasterxmlJacksonDatabindBeanProperty;", "(Ljava/lang/Class<*>;ZLcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", "LComFasterxmlJacksonDatabindJavaType;ZLComFasterxmlJacksonDatabindBeanProperty;", "(Lcom/fasterxml/jackson/databind/JavaType;ZLcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", "findTypeSerializer", "findKeySerializer", "()Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", "findNullKeySerializer", "findNullValueSerializer", "LComFasterxmlJacksonDatabindBeanProperty;", "(Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", "getUnknownTypeSerializer", "isUnknownTypeSerializer", "(Lcom/fasterxml/jackson/databind/JsonSerializer<*>;)Z", "serializerInstance", "LComFasterxmlJacksonDatabindIntrospectAnnotated;LNSObject;", "(Lcom/fasterxml/jackson/databind/introspect/Annotated;Ljava/lang/Object;)Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", "includeFilterInstance", "LComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition;LIOSClass;", "(Lcom/fasterxml/jackson/databind/introspect/BeanPropertyDefinition;Ljava/lang/Class<*>;)Ljava/lang/Object;", "includeFilterSuppressNulls", "handlePrimaryContextualization", "LComFasterxmlJacksonDatabindJsonSerializer;LComFasterxmlJacksonDatabindBeanProperty;", "(Lcom/fasterxml/jackson/databind/JsonSerializer<*>;Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonSerializer<*>;", "handleSecondaryContextualization", "defaultSerializeValue", "LNSObject;LComFasterxmlJacksonCoreJsonGenerator;", "LJavaIoIOException;", "defaultSerializeField", "LNSString;LNSObject;LComFasterxmlJacksonCoreJsonGenerator;", "defaultSerializeDateValue", "JLComFasterxmlJacksonCoreJsonGenerator;", "LJavaUtilDate;LComFasterxmlJacksonCoreJsonGenerator;", "defaultSerializeDateKey", "defaultSerializeNull", "LComFasterxmlJacksonCoreJsonGenerator;", "reportMappingProblem", "LNSString;[LNSObject;", "reportBadTypeDefinition", "LComFasterxmlJacksonDatabindBeanDescription;LNSString;[LNSObject;", "<T:Ljava/lang/Object;>(Lcom/fasterxml/jackson/databind/BeanDescription;Ljava/lang/String;[Ljava/lang/Object;)TT;", "reportBadPropertyDefinition", "LComFasterxmlJacksonDatabindBeanDescription;LComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition;LNSString;[LNSObject;", "<T:Ljava/lang/Object;>(Lcom/fasterxml/jackson/databind/BeanDescription;Lcom/fasterxml/jackson/databind/introspect/BeanPropertyDefinition;Ljava/lang/String;[Ljava/lang/Object;)TT;", "reportBadDefinition", "LComFasterxmlJacksonDatabindJavaType;LNSString;", "<T:Ljava/lang/Object;>(Lcom/fasterxml/jackson/databind/JavaType;Ljava/lang/String;)TT;", "LComFasterxmlJacksonDatabindJavaType;LNSString;LJavaLangThrowable;", "<T:Ljava/lang/Object;>(Lcom/fasterxml/jackson/databind/JavaType;Ljava/lang/String;Ljava/lang/Throwable;)TT;", "LIOSClass;LNSString;LJavaLangThrowable;", "<T:Ljava/lang/Object;>(Ljava/lang/Class<*>;Ljava/lang/String;Ljava/lang/Throwable;)TT;", "LJavaLangThrowable;LNSString;[LNSObject;", "invalidTypeIdException", "LComFasterxmlJacksonDatabindJavaType;LNSString;LNSString;", "mappingException", (void *)&ComFasterxmlJacksonDatabindSerializerProvider__Annotations$1, (void *)&ComFasterxmlJacksonDatabindSerializerProvider__Annotations$2, "_reportIncompatibleRootType", "LNSObject;LComFasterxmlJacksonDatabindJavaType;", "_findExplicitUntypedSerializer", "_createAndCacheUntypedSerializer", "_createUntypedSerializer", "_handleContextualResolvable", "(Lcom/fasterxml/jackson/databind/JsonSerializer<*>;Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", "_handleResolvable", "(Lcom/fasterxml/jackson/databind/JsonSerializer<*>;)Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", &ComFasterxmlJacksonDatabindSerializerProvider_DEFAULT_NULL_KEY_SERIALIZER, "Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", &ComFasterxmlJacksonDatabindSerializerProvider_DEFAULT_UNKNOWN_SERIALIZER, "Ljava/lang/Class<*>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerializerProvider = { "SerializerProvider", "com.fasterxml.jackson.databind", ptrTable, methods, fields, 7, 0x401, 71, 15, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindSerializerProvider;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindSerializerProvider class]) {
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindSerializerProvider_DEFAULT_NULL_KEY_SERIALIZER, new_ComFasterxmlJacksonDatabindSerImplFailingSerializer_initWithNSString_(@"Null key for a Map not allowed in JSON (use a converting NullKeySerializer?)"));
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindSerializerProvider_DEFAULT_UNKNOWN_SERIALIZER, new_ComFasterxmlJacksonDatabindSerImplUnknownSerializer_init());
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindSerializerProvider)
  }
}

@end

void ComFasterxmlJacksonDatabindSerializerProvider_init(ComFasterxmlJacksonDatabindSerializerProvider *self) {
  ComFasterxmlJacksonDatabindDatabindContext_init(self);
  JreStrongAssign(&self->_unknownTypeSerializer_, ComFasterxmlJacksonDatabindSerializerProvider_DEFAULT_UNKNOWN_SERIALIZER);
  JreStrongAssign(&self->_nullValueSerializer_, JreLoadStatic(ComFasterxmlJacksonDatabindSerStdNullSerializer, instance));
  JreStrongAssign(&self->_nullKeySerializer_, ComFasterxmlJacksonDatabindSerializerProvider_DEFAULT_NULL_KEY_SERIALIZER);
  JreStrongAssign(&self->_config_, nil);
  JreStrongAssign(&self->_serializerFactory_, nil);
  JreStrongAssignAndConsume(&self->_serializerCache_, new_ComFasterxmlJacksonDatabindSerSerializerCache_init());
  JreStrongAssign(&self->_knownSerializers_, nil);
  JreStrongAssign(&self->_serializationView_, nil);
  JreStrongAssign(&self->_attributes_, nil);
  self->_stdNullValueSerializer_ = true;
}

void ComFasterxmlJacksonDatabindSerializerProvider_initWithComFasterxmlJacksonDatabindSerializerProvider_withComFasterxmlJacksonDatabindSerializationConfig_withComFasterxmlJacksonDatabindSerSerializerFactory_(ComFasterxmlJacksonDatabindSerializerProvider *self, ComFasterxmlJacksonDatabindSerializerProvider *src, ComFasterxmlJacksonDatabindSerializationConfig *config, ComFasterxmlJacksonDatabindSerSerializerFactory *f) {
  ComFasterxmlJacksonDatabindDatabindContext_init(self);
  JreStrongAssign(&self->_unknownTypeSerializer_, ComFasterxmlJacksonDatabindSerializerProvider_DEFAULT_UNKNOWN_SERIALIZER);
  JreStrongAssign(&self->_nullValueSerializer_, JreLoadStatic(ComFasterxmlJacksonDatabindSerStdNullSerializer, instance));
  JreStrongAssign(&self->_nullKeySerializer_, ComFasterxmlJacksonDatabindSerializerProvider_DEFAULT_NULL_KEY_SERIALIZER);
  JreStrongAssign(&self->_serializerFactory_, f);
  JreStrongAssign(&self->_config_, config);
  JreStrongAssign(&self->_serializerCache_, ((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(src))->_serializerCache_);
  JreStrongAssign(&self->_unknownTypeSerializer_, src->_unknownTypeSerializer_);
  JreStrongAssign(&self->_keySerializer_, src->_keySerializer_);
  JreStrongAssign(&self->_nullValueSerializer_, src->_nullValueSerializer_);
  JreStrongAssign(&self->_nullKeySerializer_, src->_nullKeySerializer_);
  self->_stdNullValueSerializer_ = (self->_nullValueSerializer_ == ComFasterxmlJacksonDatabindSerializerProvider_DEFAULT_NULL_KEY_SERIALIZER);
  JreStrongAssign(&self->_serializationView_, [((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(config)) getActiveView]);
  JreStrongAssign(&self->_attributes_, [config getAttributes]);
  JreStrongAssign(&self->_knownSerializers_, [((ComFasterxmlJacksonDatabindSerSerializerCache *) nil_chk(self->_serializerCache_)) getReadOnlyLookupMap]);
}

void ComFasterxmlJacksonDatabindSerializerProvider_initWithComFasterxmlJacksonDatabindSerializerProvider_(ComFasterxmlJacksonDatabindSerializerProvider *self, ComFasterxmlJacksonDatabindSerializerProvider *src) {
  ComFasterxmlJacksonDatabindDatabindContext_init(self);
  JreStrongAssign(&self->_unknownTypeSerializer_, ComFasterxmlJacksonDatabindSerializerProvider_DEFAULT_UNKNOWN_SERIALIZER);
  JreStrongAssign(&self->_nullValueSerializer_, JreLoadStatic(ComFasterxmlJacksonDatabindSerStdNullSerializer, instance));
  JreStrongAssign(&self->_nullKeySerializer_, ComFasterxmlJacksonDatabindSerializerProvider_DEFAULT_NULL_KEY_SERIALIZER);
  JreStrongAssign(&self->_config_, nil);
  JreStrongAssign(&self->_serializationView_, nil);
  JreStrongAssign(&self->_serializerFactory_, nil);
  JreStrongAssign(&self->_knownSerializers_, nil);
  JreStrongAssignAndConsume(&self->_serializerCache_, new_ComFasterxmlJacksonDatabindSerSerializerCache_init());
  JreStrongAssign(&self->_unknownTypeSerializer_, ((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(src))->_unknownTypeSerializer_);
  JreStrongAssign(&self->_keySerializer_, src->_keySerializer_);
  JreStrongAssign(&self->_nullValueSerializer_, src->_nullValueSerializer_);
  JreStrongAssign(&self->_nullKeySerializer_, src->_nullKeySerializer_);
  self->_stdNullValueSerializer_ = src->_stdNullValueSerializer_;
}

jboolean ComFasterxmlJacksonDatabindSerializerProvider_isEnabledWithComFasterxmlJacksonDatabindSerializationFeature_(ComFasterxmlJacksonDatabindSerializerProvider *self, ComFasterxmlJacksonDatabindSerializationFeature *feature) {
  return [((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(self->_config_)) isEnabledWithComFasterxmlJacksonDatabindSerializationFeature:feature];
}

JavaTextDateFormat *ComFasterxmlJacksonDatabindSerializerProvider__dateFormat(ComFasterxmlJacksonDatabindSerializerProvider *self) {
  if (self->_dateFormat_ != nil) {
    return self->_dateFormat_;
  }
  JavaTextDateFormat *df = [((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(self->_config_)) getDateFormat];
  JreStrongAssign(&self->_dateFormat_, df = (JavaTextDateFormat *) cast_chk([((JavaTextDateFormat *) nil_chk(df)) java_clone], [JavaTextDateFormat class]));
  return df;
}

IOSObjectArray *ComFasterxmlJacksonDatabindSerializerProvider__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindSerializerProvider__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindSerializerProvider__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerializerProvider)
