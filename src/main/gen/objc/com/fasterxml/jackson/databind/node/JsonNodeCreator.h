//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/node/JsonNodeCreator.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeJsonNodeCreator")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindNodeJsonNodeCreator
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeJsonNodeCreator 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeJsonNodeCreator 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindNodeJsonNodeCreator

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindNodeJsonNodeCreator_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeJsonNodeCreator || defined(INCLUDE_ComFasterxmlJacksonDatabindNodeJsonNodeCreator))
#define ComFasterxmlJacksonDatabindNodeJsonNodeCreator_

@class ComFasterxmlJacksonDatabindNodeArrayNode;
@class ComFasterxmlJacksonDatabindNodeObjectNode;
@class ComFasterxmlJacksonDatabindNodeValueNode;
@class ComFasterxmlJacksonDatabindUtilRawValue;
@class IOSByteArray;
@class JavaLangByte;
@class JavaLangDouble;
@class JavaLangFloat;
@class JavaLangInteger;
@class JavaLangLong;
@class JavaLangShort;
@class JavaMathBigDecimal;
@class JavaMathBigInteger;

/*!
 @brief Interface that defines common "creator" functionality implemented
  both by <code>JsonNodeFactory</code> and <code>ContainerNode</code> (that is,
  JSON Object and Array nodes).
 @since 2.3
 */
@protocol ComFasterxmlJacksonDatabindNodeJsonNodeCreator < JavaObject >

- (ComFasterxmlJacksonDatabindNodeValueNode *)booleanNodeWithBoolean:(jboolean)v;

- (ComFasterxmlJacksonDatabindNodeValueNode *)nullNode;

- (ComFasterxmlJacksonDatabindNodeValueNode *)numberNodeWithByte:(jbyte)v;

- (ComFasterxmlJacksonDatabindNodeValueNode *)numberNodeWithJavaLangByte:(JavaLangByte *)value;

- (ComFasterxmlJacksonDatabindNodeValueNode *)numberNodeWithShort:(jshort)v;

- (ComFasterxmlJacksonDatabindNodeValueNode *)numberNodeWithJavaLangShort:(JavaLangShort *)value;

- (ComFasterxmlJacksonDatabindNodeValueNode *)numberNodeWithInt:(jint)v;

- (ComFasterxmlJacksonDatabindNodeValueNode *)numberNodeWithJavaLangInteger:(JavaLangInteger *)value;

- (ComFasterxmlJacksonDatabindNodeValueNode *)numberNodeWithLong:(jlong)v;

- (ComFasterxmlJacksonDatabindNodeValueNode *)numberNodeWithJavaLangLong:(JavaLangLong *)value;

- (ComFasterxmlJacksonDatabindNodeValueNode *)numberNodeWithJavaMathBigInteger:(JavaMathBigInteger *)v;

- (ComFasterxmlJacksonDatabindNodeValueNode *)numberNodeWithFloat:(jfloat)v;

- (ComFasterxmlJacksonDatabindNodeValueNode *)numberNodeWithJavaLangFloat:(JavaLangFloat *)value;

- (ComFasterxmlJacksonDatabindNodeValueNode *)numberNodeWithDouble:(jdouble)v;

- (ComFasterxmlJacksonDatabindNodeValueNode *)numberNodeWithJavaLangDouble:(JavaLangDouble *)value;

- (ComFasterxmlJacksonDatabindNodeValueNode *)numberNodeWithJavaMathBigDecimal:(JavaMathBigDecimal *)v;

- (ComFasterxmlJacksonDatabindNodeValueNode *)textNodeWithNSString:(NSString *)text;

- (ComFasterxmlJacksonDatabindNodeValueNode *)binaryNodeWithByteArray:(IOSByteArray *)data;

- (ComFasterxmlJacksonDatabindNodeValueNode *)binaryNodeWithByteArray:(IOSByteArray *)data
                                                              withInt:(jint)offset
                                                              withInt:(jint)length;

- (ComFasterxmlJacksonDatabindNodeValueNode *)pojoNodeWithId:(id)pojo;

/*!
 @brief Factory method to use for adding "raw values"; pre-encoded values
  that are included exactly as-is when node is serialized.
 This may be used, for example, to include fully serialized JSON
  sub-trees.
  Note that the concept may not work with all backends, and since
  no translation of any kinds is done it will not work when converting
  between data formats.
 @since 2.6
 */
- (ComFasterxmlJacksonDatabindNodeValueNode *)rawValueNodeWithComFasterxmlJacksonDatabindUtilRawValue:(ComFasterxmlJacksonDatabindUtilRawValue *)value;

- (ComFasterxmlJacksonDatabindNodeArrayNode *)arrayNode;

/*!
 @brief Factory method for constructing a JSON Array node with an initial capacity
 @since 2.8
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)arrayNodeWithInt:(jint)capacity;

- (ComFasterxmlJacksonDatabindNodeObjectNode *)objectNode;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindNodeJsonNodeCreator)

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindNodeJsonNodeCreator)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeJsonNodeCreator")
