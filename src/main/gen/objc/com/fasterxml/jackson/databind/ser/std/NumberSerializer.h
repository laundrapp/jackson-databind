//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/std/NumberSerializer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdNumberSerializer")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindSerStdNumberSerializer
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdNumberSerializer 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdNumberSerializer 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindSerStdNumberSerializer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindSerStdNumberSerializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdNumberSerializer || defined(INCLUDE_ComFasterxmlJacksonDatabindSerStdNumberSerializer))
#define ComFasterxmlJacksonDatabindSerStdNumberSerializer_

#define RESTRICT_ComFasterxmlJacksonDatabindSerStdStdScalarSerializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerStdStdScalarSerializer 1
#include "com/fasterxml/jackson/databind/ser/std/StdScalarSerializer.h"

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsonNode;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSClass;
@protocol ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;
@protocol JavaLangReflectType;

/*!
 @brief As a fallback, we may need to use this serializer for other
  types of <code>Number</code>s: both custom types and "big" numbers
  like <code>BigInteger</code> and <code>BigDecimal</code>.
 */
@interface ComFasterxmlJacksonDatabindSerStdNumberSerializer : ComFasterxmlJacksonDatabindSerStdStdScalarSerializer {
 @public
  jboolean _isInt_;
}

#pragma mark Public

/*!
 @since 2.5
 */
- (instancetype __nonnull)initWithIOSClass:(IOSClass *)rawType;

- (void)acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint;

- (ComFasterxmlJacksonDatabindJsonNode *)getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                            withJavaLangReflectType:(id<JavaLangReflectType>)typeHint;

- (void)serializeWithId:(NSNumber *)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0
                               withBoolean:(jboolean)arg1 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonDatabindSerStdNumberSerializer)

/*!
 @brief Static instance that is only to be used for <code>java.lang.Number</code>.
 */
inline ComFasterxmlJacksonDatabindSerStdNumberSerializer *ComFasterxmlJacksonDatabindSerStdNumberSerializer_get_instance(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdNumberSerializer *ComFasterxmlJacksonDatabindSerStdNumberSerializer_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindSerStdNumberSerializer, instance, ComFasterxmlJacksonDatabindSerStdNumberSerializer *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdNumberSerializer_initWithIOSClass_(ComFasterxmlJacksonDatabindSerStdNumberSerializer *self, IOSClass *rawType);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdNumberSerializer *new_ComFasterxmlJacksonDatabindSerStdNumberSerializer_initWithIOSClass_(IOSClass *rawType) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdNumberSerializer *create_ComFasterxmlJacksonDatabindSerStdNumberSerializer_initWithIOSClass_(IOSClass *rawType);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerStdNumberSerializer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdNumberSerializer")
