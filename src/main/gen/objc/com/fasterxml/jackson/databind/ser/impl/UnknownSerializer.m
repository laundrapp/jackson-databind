//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/impl/UnknownSerializer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/core/JsonToken.h"
#include "com/fasterxml/jackson/core/type/WritableTypeId.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/JsonNode.h"
#include "com/fasterxml/jackson/databind/SerializationFeature.h"
#include "com/fasterxml/jackson/databind/SerializerProvider.h"
#include "com/fasterxml/jackson/databind/jsonFormatVisitors/JsonAnyFormatVisitor.h"
#include "com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper.h"
#include "com/fasterxml/jackson/databind/jsontype/TypeSerializer.h"
#include "com/fasterxml/jackson/databind/ser/impl/UnknownSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/StdSerializer.h"
#include "java/lang/reflect/Type.h"

@implementation ComFasterxmlJacksonDatabindSerImplUnknownSerializer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindSerImplUnknownSerializer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)cls {
  ComFasterxmlJacksonDatabindSerImplUnknownSerializer_initWithIOSClass_(self, cls);
  return self;
}

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  if ([((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) isEnabledWithComFasterxmlJacksonDatabindSerializationFeature:JreLoadEnum(ComFasterxmlJacksonDatabindSerializationFeature, FAIL_ON_EMPTY_BEANS)]) {
    [self failForEmptyWithComFasterxmlJacksonDatabindSerializerProvider:provider withId:value];
  }
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeStartObject];
  [gen writeEndObject];
}

- (void)serializeWithTypeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer {
  if ([((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) isEnabledWithComFasterxmlJacksonDatabindSerializationFeature:JreLoadEnum(ComFasterxmlJacksonDatabindSerializationFeature, FAIL_ON_EMPTY_BEANS)]) {
    [self failForEmptyWithComFasterxmlJacksonDatabindSerializerProvider:provider withId:value];
  }
  ComFasterxmlJacksonCoreTypeWritableTypeId *typeIdDef = [((ComFasterxmlJacksonDatabindJsontypeTypeSerializer *) nil_chk(typeSer)) writeTypePrefixWithComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonCoreTypeWritableTypeId:[typeSer typeIdWithId:value withComFasterxmlJacksonCoreJsonToken:JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_OBJECT)]];
  [typeSer writeTypeSuffixWithComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonCoreTypeWritableTypeId:typeIdDef];
}

- (jboolean)isEmptyWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                              withId:(id)value {
  return true;
}

- (ComFasterxmlJacksonDatabindJsonNode *)getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                            withJavaLangReflectType:(id<JavaLangReflectType>)typeHint {
  return nil;
}

- (void)acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint {
  [((id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>) nil_chk(visitor)) expectAnyFormatWithComFasterxmlJacksonDatabindJavaType:typeHint];
}

- (void)failForEmptyWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                               withId:(id)value {
  [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(prov)) reportBadDefinitionWithIOSClass:[self handledType] withNSString:NSString_java_formatWithNSString_withNSObjectArray_(@"No serializer found for class %s and no properties discovered to create BeanSerializer (to avoid exception, disable SerializationFeature.FAIL_ON_EMPTY_BEANS)", [IOSObjectArray arrayWithObjects:(id[]){ [[nil_chk(value) java_getClass] getName] } count:1 type:NSObject_class_()])];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x11, 5, 6, 4, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x1, 9, 10, 11, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 13, 11, -1, -1, -1 },
    { NULL, "V", 0x4, 14, 8, 11, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithIOSClass:);
  methods[2].selector = @selector(serializeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  methods[3].selector = @selector(serializeWithTypeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindJsontypeTypeSerializer:);
  methods[4].selector = @selector(isEmptyWithComFasterxmlJacksonDatabindSerializerProvider:withId:);
  methods[5].selector = @selector(getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:withJavaLangReflectType:);
  methods[6].selector = @selector(acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:withComFasterxmlJacksonDatabindJavaType:);
  methods[7].selector = @selector(failForEmptyWithComFasterxmlJacksonDatabindSerializerProvider:withId:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LIOSClass;", "(Ljava/lang/Class<*>;)V", "serialize", "LNSObject;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;", "LJavaIoIOException;", "serializeWithType", "LNSObject;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindJsontypeTypeSerializer;", "isEmpty", "LComFasterxmlJacksonDatabindSerializerProvider;LNSObject;", "getSchema", "LComFasterxmlJacksonDatabindSerializerProvider;LJavaLangReflectType;", "LComFasterxmlJacksonDatabindJsonMappingException;", "acceptJsonFormatVisitor", "LComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;LComFasterxmlJacksonDatabindJavaType;", "failForEmpty", "Lcom/fasterxml/jackson/databind/ser/std/StdSerializer<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerImplUnknownSerializer = { "UnknownSerializer", "com.fasterxml.jackson.databind.ser.impl", ptrTable, methods, NULL, 7, 0x1, 8, 0, -1, -1, -1, 15, -1 };
  return &_ComFasterxmlJacksonDatabindSerImplUnknownSerializer;
}

@end

void ComFasterxmlJacksonDatabindSerImplUnknownSerializer_init(ComFasterxmlJacksonDatabindSerImplUnknownSerializer *self) {
  ComFasterxmlJacksonDatabindSerStdStdSerializer_initWithIOSClass_(self, NSObject_class_());
}

ComFasterxmlJacksonDatabindSerImplUnknownSerializer *new_ComFasterxmlJacksonDatabindSerImplUnknownSerializer_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerImplUnknownSerializer, init)
}

ComFasterxmlJacksonDatabindSerImplUnknownSerializer *create_ComFasterxmlJacksonDatabindSerImplUnknownSerializer_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerImplUnknownSerializer, init)
}

void ComFasterxmlJacksonDatabindSerImplUnknownSerializer_initWithIOSClass_(ComFasterxmlJacksonDatabindSerImplUnknownSerializer *self, IOSClass *cls) {
  ComFasterxmlJacksonDatabindSerStdStdSerializer_initWithIOSClass_withBoolean_(self, cls, false);
}

ComFasterxmlJacksonDatabindSerImplUnknownSerializer *new_ComFasterxmlJacksonDatabindSerImplUnknownSerializer_initWithIOSClass_(IOSClass *cls) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerImplUnknownSerializer, initWithIOSClass_, cls)
}

ComFasterxmlJacksonDatabindSerImplUnknownSerializer *create_ComFasterxmlJacksonDatabindSerImplUnknownSerializer_initWithIOSClass_(IOSClass *cls) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerImplUnknownSerializer, initWithIOSClass_, cls)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerImplUnknownSerializer)
