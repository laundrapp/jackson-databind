//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/impl/TypeWrappedSerializer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerImplTypeWrappedSerializer")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindSerImplTypeWrappedSerializer
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerImplTypeWrappedSerializer 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerImplTypeWrappedSerializer 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindSerImplTypeWrappedSerializer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindSerImplTypeWrappedSerializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerImplTypeWrappedSerializer || defined(INCLUDE_ComFasterxmlJacksonDatabindSerImplTypeWrappedSerializer))
#define ComFasterxmlJacksonDatabindSerImplTypeWrappedSerializer_

#define RESTRICT_ComFasterxmlJacksonDatabindJsonSerializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindJsonSerializer 1
#include "com/fasterxml/jackson/databind/JsonSerializer.h"

#define RESTRICT_ComFasterxmlJacksonDatabindSerContextualSerializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerContextualSerializer 1
#include "com/fasterxml/jackson/databind/ser/ContextualSerializer.h"

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonDatabindJsontypeTypeSerializer;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSClass;
@protocol ComFasterxmlJacksonDatabindBeanProperty;

/*!
 @brief Simple serializer that will call configured type serializer, passing
  in configured data serializer, and exposing it all as a simple
  serializer.
 */
@interface ComFasterxmlJacksonDatabindSerImplTypeWrappedSerializer : ComFasterxmlJacksonDatabindJsonSerializer < ComFasterxmlJacksonDatabindSerContextualSerializer > {
 @public
  ComFasterxmlJacksonDatabindJsontypeTypeSerializer *_typeSerializer_;
  ComFasterxmlJacksonDatabindJsonSerializer *_serializer_;
}

#pragma mark Public

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer
                                      withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)ser;

- (ComFasterxmlJacksonDatabindJsonSerializer *)createContextualWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                     withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property;

- (IOSClass *)handledType;

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

- (void)serializeWithTypeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer;

- (ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSerializer;

- (ComFasterxmlJacksonDatabindJsonSerializer *)valueSerializer;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindSerImplTypeWrappedSerializer)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindSerImplTypeWrappedSerializer, _typeSerializer_, ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindSerImplTypeWrappedSerializer, _serializer_, ComFasterxmlJacksonDatabindJsonSerializer *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerImplTypeWrappedSerializer_initWithComFasterxmlJacksonDatabindJsontypeTypeSerializer_withComFasterxmlJacksonDatabindJsonSerializer_(ComFasterxmlJacksonDatabindSerImplTypeWrappedSerializer *self, ComFasterxmlJacksonDatabindJsontypeTypeSerializer *typeSer, ComFasterxmlJacksonDatabindJsonSerializer *ser);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerImplTypeWrappedSerializer *new_ComFasterxmlJacksonDatabindSerImplTypeWrappedSerializer_initWithComFasterxmlJacksonDatabindJsontypeTypeSerializer_withComFasterxmlJacksonDatabindJsonSerializer_(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *typeSer, ComFasterxmlJacksonDatabindJsonSerializer *ser) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerImplTypeWrappedSerializer *create_ComFasterxmlJacksonDatabindSerImplTypeWrappedSerializer_initWithComFasterxmlJacksonDatabindJsontypeTypeSerializer_withComFasterxmlJacksonDatabindJsonSerializer_(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *typeSer, ComFasterxmlJacksonDatabindJsonSerializer *ser);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerImplTypeWrappedSerializer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerImplTypeWrappedSerializer")
