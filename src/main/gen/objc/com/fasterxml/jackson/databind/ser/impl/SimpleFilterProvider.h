//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/impl/SimpleFilterProvider.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider || defined(INCLUDE_ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider))
#define ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider_

#define RESTRICT_ComFasterxmlJacksonDatabindSerFilterProvider 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerFilterProvider 1
#include "com/fasterxml/jackson/databind/ser/FilterProvider.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class ComFasterxmlJacksonDatabindSerImplSimpleBeanPropertyFilter;
@protocol ComFasterxmlJacksonDatabindSerBeanPropertyFilter;
@protocol ComFasterxmlJacksonDatabindSerPropertyFilter;
@protocol JavaUtilMap;

/*!
 @brief Simple <code>FilterProvider</code> implementation that just stores
  direct id-to-filter mapping.
 <p>
  Note that version 2.3 was a partial rewrite, now that 
 <code>PropertyFilter</code> is set to replace <code>BeanPropertyFilter</code>.
 */
@interface ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider : ComFasterxmlJacksonDatabindSerFilterProvider < JavaIoSerializable > {
 @public
  /*!
   @brief Mappings from ids to filters.
   */
  id<JavaUtilMap> _filtersById_;
  /*!
   @brief This is the filter we return in case no mapping was found for
  given id; default is 'null' (in which case caller typically
  reports an error), but can be set to an explicit filter.
   */
  id<ComFasterxmlJacksonDatabindSerPropertyFilter> _defaultFilter_;
  /*!
   @brief Flag that indicates whether request for an unknown filter id should
  result an exception (default) or not.
   Note that this is only relevant if no default filter has been
  configured.
   */
  jboolean _cfgFailOnUnknownId_;
}

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @param mapping Mapping from id to filter; used as is if if possible
 */
- (instancetype __nonnull)initWithJavaUtilMap:(id<JavaUtilMap>)mapping;

/*!
 */
- (ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider *)addFilterWithNSString:(NSString *)id_
                             withComFasterxmlJacksonDatabindSerBeanPropertyFilter:(id<ComFasterxmlJacksonDatabindSerBeanPropertyFilter>)filter;

- (ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider *)addFilterWithNSString:(NSString *)id_
                                 withComFasterxmlJacksonDatabindSerPropertyFilter:(id<ComFasterxmlJacksonDatabindSerPropertyFilter>)filter;

/*!
 @brief Overloaded variant just to resolve "ties" when using <code>SimpleBeanPropertyFilter</code>.
 */
- (ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider *)addFilterWithNSString:(NSString *)id_
                   withComFasterxmlJacksonDatabindSerImplSimpleBeanPropertyFilter:(ComFasterxmlJacksonDatabindSerImplSimpleBeanPropertyFilter *)filter;

- (id<ComFasterxmlJacksonDatabindSerBeanPropertyFilter>)findFilterWithId:(id)filterId;

- (id<ComFasterxmlJacksonDatabindSerPropertyFilter>)findPropertyFilterWithId:(id)filterId
                                                                      withId:(id)valueToFilter;

- (id<ComFasterxmlJacksonDatabindSerPropertyFilter>)getDefaultFilter;

- (id<ComFasterxmlJacksonDatabindSerPropertyFilter>)removeFilterWithNSString:(NSString *)id_;

/*!
 @brief Method for defining filter to return for "unknown" filters; cases
  where there is no mapping from given id to an explicit filter.
 @param f Filter to return when no filter is found for given id
 */
- (ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider *)setDefaultFilterWithComFasterxmlJacksonDatabindSerBeanPropertyFilter:(id<ComFasterxmlJacksonDatabindSerBeanPropertyFilter>)f;

- (ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider *)setDefaultFilterWithComFasterxmlJacksonDatabindSerPropertyFilter:(id<ComFasterxmlJacksonDatabindSerPropertyFilter>)f;

/*!
 @brief Overloaded variant just to resolve "ties" when using <code>SimpleBeanPropertyFilter</code>.
 */
- (ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider *)setDefaultFilterWithComFasterxmlJacksonDatabindSerImplSimpleBeanPropertyFilter:(ComFasterxmlJacksonDatabindSerImplSimpleBeanPropertyFilter *)f;

- (ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider *)setFailOnUnknownIdWithBoolean:(jboolean)state;

- (jboolean)willFailOnUnknownId;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider, _filtersById_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider, _defaultFilter_, id<ComFasterxmlJacksonDatabindSerPropertyFilter>)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider_init(ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider *new_ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider *create_ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider_init(void);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider_initWithJavaUtilMap_(ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider *self, id<JavaUtilMap> mapping);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider *new_ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider_initWithJavaUtilMap_(id<JavaUtilMap> mapping) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider *create_ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider_initWithJavaUtilMap_(id<JavaUtilMap> mapping);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider")
