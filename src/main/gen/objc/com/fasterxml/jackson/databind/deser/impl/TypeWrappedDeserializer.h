//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/deser/impl/TypeWrappedDeserializer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserImplTypeWrappedDeserializer")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindDeserImplTypeWrappedDeserializer
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserImplTypeWrappedDeserializer 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserImplTypeWrappedDeserializer 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindDeserImplTypeWrappedDeserializer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindDeserImplTypeWrappedDeserializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserImplTypeWrappedDeserializer || defined(INCLUDE_ComFasterxmlJacksonDatabindDeserImplTypeWrappedDeserializer))
#define ComFasterxmlJacksonDatabindDeserImplTypeWrappedDeserializer_

#define RESTRICT_ComFasterxmlJacksonDatabindJsonDeserializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindJsonDeserializer 1
#include "com/fasterxml/jackson/databind/JsonDeserializer.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class ComFasterxmlJacksonCoreJsonParser;
@class ComFasterxmlJacksonDatabindDeserializationConfig;
@class ComFasterxmlJacksonDatabindDeserializationContext;
@class ComFasterxmlJacksonDatabindJsontypeTypeDeserializer;
@class IOSClass;
@class JavaLangBoolean;
@protocol JavaUtilCollection;

/*!
 @brief Simple deserializer that will call configured type deserializer, passing
  in configured data deserializer, and exposing it all as a simple
  deserializer.
 This is necessary when there is no "parent" deserializer which could handle
  details of calling a <code>TypeDeserializer</code>, most commonly used with
  root values.
 */
@interface ComFasterxmlJacksonDatabindDeserImplTypeWrappedDeserializer : ComFasterxmlJacksonDatabindJsonDeserializer < JavaIoSerializable > {
 @public
  ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *_typeDeserializer_;
  ComFasterxmlJacksonDatabindJsonDeserializer *_deserializer_;
}

#pragma mark Public

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJsontypeTypeDeserializer:(ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *)typeDeser
                                      withComFasterxmlJacksonDatabindJsonDeserializer:(ComFasterxmlJacksonDatabindJsonDeserializer *)deser;

- (id)deserializeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
 withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt;

- (id)deserializeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
 withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                withId:(id)intoValue;

- (id)deserializeWithTypeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
         withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
       withComFasterxmlJacksonDatabindJsontypeTypeDeserializer:(ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *)typeDeserializer;

- (ComFasterxmlJacksonDatabindJsonDeserializer *)getDelegatee;

- (id)getEmptyValueWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt;

- (id<JavaUtilCollection>)getKnownPropertyNames;

- (id)getNullValueWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt;

- (IOSClass *)handledType;

- (JavaLangBoolean *)supportsUpdateWithComFasterxmlJacksonDatabindDeserializationConfig:(ComFasterxmlJacksonDatabindDeserializationConfig *)config;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindDeserImplTypeWrappedDeserializer)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserImplTypeWrappedDeserializer, _typeDeserializer_, ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserImplTypeWrappedDeserializer, _deserializer_, ComFasterxmlJacksonDatabindJsonDeserializer *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindDeserImplTypeWrappedDeserializer_initWithComFasterxmlJacksonDatabindJsontypeTypeDeserializer_withComFasterxmlJacksonDatabindJsonDeserializer_(ComFasterxmlJacksonDatabindDeserImplTypeWrappedDeserializer *self, ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *typeDeser, ComFasterxmlJacksonDatabindJsonDeserializer *deser);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserImplTypeWrappedDeserializer *new_ComFasterxmlJacksonDatabindDeserImplTypeWrappedDeserializer_initWithComFasterxmlJacksonDatabindJsontypeTypeDeserializer_withComFasterxmlJacksonDatabindJsonDeserializer_(ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *typeDeser, ComFasterxmlJacksonDatabindJsonDeserializer *deser) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserImplTypeWrappedDeserializer *create_ComFasterxmlJacksonDatabindDeserImplTypeWrappedDeserializer_initWithComFasterxmlJacksonDatabindJsontypeTypeDeserializer_withComFasterxmlJacksonDatabindJsonDeserializer_(ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *typeDeser, ComFasterxmlJacksonDatabindJsonDeserializer *deser);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindDeserImplTypeWrappedDeserializer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserImplTypeWrappedDeserializer")
