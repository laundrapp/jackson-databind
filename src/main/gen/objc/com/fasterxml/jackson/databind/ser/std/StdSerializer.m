//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/std/StdSerializer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/annotation/JsonFormat.h"
#include "com/fasterxml/jackson/annotation/JsonInclude.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/core/JsonParser.h"
#include "com/fasterxml/jackson/databind/AnnotationIntrospector.h"
#include "com/fasterxml/jackson/databind/BeanProperty.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/JsonMappingException.h"
#include "com/fasterxml/jackson/databind/JsonNode.h"
#include "com/fasterxml/jackson/databind/JsonSerializer.h"
#include "com/fasterxml/jackson/databind/SerializationConfig.h"
#include "com/fasterxml/jackson/databind/SerializationFeature.h"
#include "com/fasterxml/jackson/databind/SerializerProvider.h"
#include "com/fasterxml/jackson/databind/introspect/AnnotatedMember.h"
#include "com/fasterxml/jackson/databind/jsonFormatVisitors/JsonAnyFormatVisitor.h"
#include "com/fasterxml/jackson/databind/jsonFormatVisitors/JsonArrayFormatVisitor.h"
#include "com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes.h"
#include "com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper.h"
#include "com/fasterxml/jackson/databind/jsonFormatVisitors/JsonIntegerFormatVisitor.h"
#include "com/fasterxml/jackson/databind/jsonFormatVisitors/JsonNumberFormatVisitor.h"
#include "com/fasterxml/jackson/databind/jsonFormatVisitors/JsonStringFormatVisitor.h"
#include "com/fasterxml/jackson/databind/jsonFormatVisitors/JsonValueFormat.h"
#include "com/fasterxml/jackson/databind/node/JsonNodeFactory.h"
#include "com/fasterxml/jackson/databind/node/ObjectNode.h"
#include "com/fasterxml/jackson/databind/ser/FilterProvider.h"
#include "com/fasterxml/jackson/databind/ser/PropertyFilter.h"
#include "com/fasterxml/jackson/databind/ser/std/StdDelegatingSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/StdSerializer.h"
#include "com/fasterxml/jackson/databind/type/TypeFactory.h"
#include "com/fasterxml/jackson/databind/util/ClassUtil.h"
#include "com/fasterxml/jackson/databind/util/Converter.h"
#include "java/io/IOException.h"
#include "java/lang/Boolean.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Throwable.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/reflect/InvocationTargetException.h"
#include "java/lang/reflect/Type.h"
#include "java/util/Collection.h"
#include "java/util/IdentityHashMap.h"
#include "java/util/Map.h"

inline jlong ComFasterxmlJacksonDatabindSerStdStdSerializer_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindSerStdStdSerializer_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindSerStdStdSerializer, serialVersionUID, jlong)

/*!
 @brief Key used for storing a lock object to prevent infinite recursion when
  constructing converting serializers.
 @since 2.9
 */
inline id ComFasterxmlJacksonDatabindSerStdStdSerializer_get_KEY_CONTENT_CONVERTER_LOCK(void);
static id ComFasterxmlJacksonDatabindSerStdStdSerializer_KEY_CONTENT_CONVERTER_LOCK;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindSerStdStdSerializer, KEY_CONTENT_CONVERTER_LOCK, id)

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindSerStdStdSerializer__Annotations$0(void);

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindSerStdStdSerializer)

@implementation ComFasterxmlJacksonDatabindSerStdStdSerializer

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)t {
  ComFasterxmlJacksonDatabindSerStdStdSerializer_initWithIOSClass_(self, t);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type {
  ComFasterxmlJacksonDatabindSerStdStdSerializer_initWithComFasterxmlJacksonDatabindJavaType_(self, type);
  return self;
}

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)t
                               withBoolean:(jboolean)dummy {
  ComFasterxmlJacksonDatabindSerStdStdSerializer_initWithIOSClass_withBoolean_(self, t, dummy);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindSerStdStdSerializer:(ComFasterxmlJacksonDatabindSerStdStdSerializer *)src {
  ComFasterxmlJacksonDatabindSerStdStdSerializer_initWithComFasterxmlJacksonDatabindSerStdStdSerializer_(self, src);
  return self;
}

- (IOSClass *)handledType {
  return _handledType_;
}

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (void)acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint {
  [((id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>) nil_chk(visitor)) expectAnyFormatWithComFasterxmlJacksonDatabindJavaType:typeHint];
}

- (ComFasterxmlJacksonDatabindJsonNode *)getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                            withJavaLangReflectType:(id<JavaLangReflectType>)typeHint {
  return [self createSchemaNodeWithNSString:@"string"];
}

- (ComFasterxmlJacksonDatabindJsonNode *)getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                            withJavaLangReflectType:(id<JavaLangReflectType>)typeHint
                                                                                        withBoolean:(jboolean)isOptional {
  ComFasterxmlJacksonDatabindNodeObjectNode *schema = (ComFasterxmlJacksonDatabindNodeObjectNode *) cast_chk([self getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:provider withJavaLangReflectType:typeHint], [ComFasterxmlJacksonDatabindNodeObjectNode class]);
  if (!isOptional) {
    [((ComFasterxmlJacksonDatabindNodeObjectNode *) nil_chk(schema)) putWithNSString:@"required" withBoolean:!isOptional];
  }
  return schema;
}

- (ComFasterxmlJacksonDatabindNodeObjectNode *)createSchemaNodeWithNSString:(NSString *)type {
  ComFasterxmlJacksonDatabindNodeObjectNode *schema = [((ComFasterxmlJacksonDatabindNodeJsonNodeFactory *) nil_chk(JreLoadStatic(ComFasterxmlJacksonDatabindNodeJsonNodeFactory, instance))) objectNode];
  [((ComFasterxmlJacksonDatabindNodeObjectNode *) nil_chk(schema)) putWithNSString:@"type" withNSString:type];
  return schema;
}

- (ComFasterxmlJacksonDatabindNodeObjectNode *)createSchemaNodeWithNSString:(NSString *)type
                                                                withBoolean:(jboolean)isOptional {
  ComFasterxmlJacksonDatabindNodeObjectNode *schema = [self createSchemaNodeWithNSString:type];
  if (!isOptional) {
    [((ComFasterxmlJacksonDatabindNodeObjectNode *) nil_chk(schema)) putWithNSString:@"required" withBoolean:!isOptional];
  }
  return schema;
}

- (void)visitStringFormatWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                           withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint {
  [((id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>) nil_chk(visitor)) expectStringFormatWithComFasterxmlJacksonDatabindJavaType:typeHint];
}

- (void)visitStringFormatWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                           withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint
                                  withComFasterxmlJacksonDatabindJsonFormatVisitorsJsonValueFormat:(ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonValueFormat *)format {
  id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonStringFormatVisitor> v2 = [((id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>) nil_chk(visitor)) expectStringFormatWithComFasterxmlJacksonDatabindJavaType:typeHint];
  if (v2 != nil) {
    [v2 formatWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonValueFormat:format];
  }
}

- (void)visitIntFormatWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                        withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint
                                               withComFasterxmlJacksonCoreJsonParser_NumberType:(ComFasterxmlJacksonCoreJsonParser_NumberType *)numberType {
  id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonIntegerFormatVisitor> v2 = [((id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>) nil_chk(visitor)) expectIntegerFormatWithComFasterxmlJacksonDatabindJavaType:typeHint];
  if (ComFasterxmlJacksonDatabindSerStdStdSerializer__neitherNullWithId_withId_(v2, numberType)) {
    [((id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonIntegerFormatVisitor>) nil_chk(v2)) numberTypeWithComFasterxmlJacksonCoreJsonParser_NumberType:numberType];
  }
}

- (void)visitIntFormatWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                        withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint
                                               withComFasterxmlJacksonCoreJsonParser_NumberType:(ComFasterxmlJacksonCoreJsonParser_NumberType *)numberType
                               withComFasterxmlJacksonDatabindJsonFormatVisitorsJsonValueFormat:(ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonValueFormat *)format {
  id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonIntegerFormatVisitor> v2 = [((id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>) nil_chk(visitor)) expectIntegerFormatWithComFasterxmlJacksonDatabindJavaType:typeHint];
  if (v2 != nil) {
    if (numberType != nil) {
      [v2 numberTypeWithComFasterxmlJacksonCoreJsonParser_NumberType:numberType];
    }
    if (format != nil) {
      [v2 formatWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonValueFormat:format];
    }
  }
}

- (void)visitFloatFormatWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                          withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint
                                                 withComFasterxmlJacksonCoreJsonParser_NumberType:(ComFasterxmlJacksonCoreJsonParser_NumberType *)numberType {
  id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonNumberFormatVisitor> v2 = [((id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>) nil_chk(visitor)) expectNumberFormatWithComFasterxmlJacksonDatabindJavaType:typeHint];
  if (v2 != nil) {
    [v2 numberTypeWithComFasterxmlJacksonCoreJsonParser_NumberType:numberType];
  }
}

- (void)visitArrayFormatWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                          withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint
                                                    withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)itemSerializer
                                                          withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)itemType {
  id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonArrayFormatVisitor> v2 = [((id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>) nil_chk(visitor)) expectArrayFormatWithComFasterxmlJacksonDatabindJavaType:typeHint];
  if (ComFasterxmlJacksonDatabindSerStdStdSerializer__neitherNullWithId_withId_(v2, itemSerializer)) {
    [((id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonArrayFormatVisitor>) nil_chk(v2)) itemsFormatWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitable:itemSerializer withComFasterxmlJacksonDatabindJavaType:itemType];
  }
}

- (void)visitArrayFormatWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                          withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint
                                 withComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatTypes:(ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatTypes *)itemType {
  id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonArrayFormatVisitor> v2 = [((id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>) nil_chk(visitor)) expectArrayFormatWithComFasterxmlJacksonDatabindJavaType:typeHint];
  if (v2 != nil) {
    [v2 itemsFormatWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatTypes:itemType];
  }
}

- (void)wrapAndThrowWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                withJavaLangThrowable:(JavaLangThrowable *)t
                                                               withId:(id)bean
                                                         withNSString:(NSString *)fieldName {
  while ([t isKindOfClass:[JavaLangReflectInvocationTargetException class]] && [((JavaLangThrowable *) nil_chk(t)) getCause] != nil) {
    t = [((JavaLangThrowable *) nil_chk(t)) getCause];
  }
  ComFasterxmlJacksonDatabindUtilClassUtil_throwIfErrorWithJavaLangThrowable_(t);
  jboolean wrap = (provider == nil) || [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) isEnabledWithComFasterxmlJacksonDatabindSerializationFeature:JreLoadEnum(ComFasterxmlJacksonDatabindSerializationFeature, WRAP_EXCEPTIONS)];
  if ([t isKindOfClass:[JavaIoIOException class]]) {
    if (!wrap || !([t isKindOfClass:[ComFasterxmlJacksonDatabindJsonMappingException class]])) {
      @throw nil_chk((JavaIoIOException *) cast_chk(t, [JavaIoIOException class]));
    }
  }
  else if (!wrap) {
    ComFasterxmlJacksonDatabindUtilClassUtil_throwIfRTEWithJavaLangThrowable_(t);
  }
  @throw nil_chk(ComFasterxmlJacksonDatabindJsonMappingException_wrapWithPathWithJavaLangThrowable_withId_withNSString_(t, bean, fieldName));
}

- (void)wrapAndThrowWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                withJavaLangThrowable:(JavaLangThrowable *)t
                                                               withId:(id)bean
                                                              withInt:(jint)index {
  while ([t isKindOfClass:[JavaLangReflectInvocationTargetException class]] && [((JavaLangThrowable *) nil_chk(t)) getCause] != nil) {
    t = [((JavaLangThrowable *) nil_chk(t)) getCause];
  }
  ComFasterxmlJacksonDatabindUtilClassUtil_throwIfErrorWithJavaLangThrowable_(t);
  jboolean wrap = (provider == nil) || [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) isEnabledWithComFasterxmlJacksonDatabindSerializationFeature:JreLoadEnum(ComFasterxmlJacksonDatabindSerializationFeature, WRAP_EXCEPTIONS)];
  if ([t isKindOfClass:[JavaIoIOException class]]) {
    if (!wrap || !([t isKindOfClass:[ComFasterxmlJacksonDatabindJsonMappingException class]])) {
      @throw nil_chk((JavaIoIOException *) cast_chk(t, [JavaIoIOException class]));
    }
  }
  else if (!wrap) {
    ComFasterxmlJacksonDatabindUtilClassUtil_throwIfRTEWithJavaLangThrowable_(t);
  }
  @throw nil_chk(ComFasterxmlJacksonDatabindJsonMappingException_wrapWithPathWithJavaLangThrowable_withId_withInt_(t, bean, index));
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)findContextualConvertingSerializerWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                                       withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property
                                                                                     withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)existingSerializer {
  id<JavaUtilMap> conversions = (id<JavaUtilMap>) cast_check([((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) getAttributeWithId:ComFasterxmlJacksonDatabindSerStdStdSerializer_KEY_CONTENT_CONVERTER_LOCK], JavaUtilMap_class_());
  if (conversions != nil) {
    id lock = [conversions getWithId:property];
    if (lock != nil) {
      return existingSerializer;
    }
  }
  else {
    conversions = create_JavaUtilIdentityHashMap_init();
    [provider setAttributeWithId:ComFasterxmlJacksonDatabindSerStdStdSerializer_KEY_CONTENT_CONVERTER_LOCK withId:conversions];
  }
  [conversions putWithId:property withId:JreLoadStatic(JavaLangBoolean, TRUE)];
  @try {
    ComFasterxmlJacksonDatabindJsonSerializer *ser = [self findConvertingContentSerializerWithComFasterxmlJacksonDatabindSerializerProvider:provider withComFasterxmlJacksonDatabindBeanProperty:property withComFasterxmlJacksonDatabindJsonSerializer:existingSerializer];
    if (ser != nil) {
      return [provider handleSecondaryContextualizationWithComFasterxmlJacksonDatabindJsonSerializer:ser withComFasterxmlJacksonDatabindBeanProperty:property];
    }
  }
  @finally {
    [conversions removeWithId:property];
  }
  return existingSerializer;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)findConvertingContentSerializerWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                                    withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)prop
                                                                                  withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)existingSerializer {
  ComFasterxmlJacksonDatabindAnnotationIntrospector *intr = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) getAnnotationIntrospector];
  if (ComFasterxmlJacksonDatabindSerStdStdSerializer__neitherNullWithId_withId_(intr, prop)) {
    ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *m = [((id<ComFasterxmlJacksonDatabindBeanProperty>) nil_chk(prop)) getMember];
    if (m != nil) {
      id convDef = [((ComFasterxmlJacksonDatabindAnnotationIntrospector *) nil_chk(intr)) findSerializationContentConverterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMember:m];
      if (convDef != nil) {
        id<ComFasterxmlJacksonDatabindUtilConverter> conv = [provider converterInstanceWithComFasterxmlJacksonDatabindIntrospectAnnotated:[prop getMember] withId:convDef];
        ComFasterxmlJacksonDatabindJavaType *delegateType = [((id<ComFasterxmlJacksonDatabindUtilConverter>) nil_chk(conv)) getOutputTypeWithComFasterxmlJacksonDatabindTypeTypeFactory:[provider getTypeFactory]];
        if ((existingSerializer == nil) && ![((ComFasterxmlJacksonDatabindJavaType *) nil_chk(delegateType)) isJavaLangObject]) {
          existingSerializer = [provider findValueSerializerWithComFasterxmlJacksonDatabindJavaType:delegateType];
        }
        return create_ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer_initWithComFasterxmlJacksonDatabindUtilConverter_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJsonSerializer_(conv, delegateType, existingSerializer);
      }
    }
  }
  return existingSerializer;
}

- (id<ComFasterxmlJacksonDatabindSerPropertyFilter>)findPropertyFilterWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                                                                 withId:(id)filterId
                                                                                                                 withId:(id)valueToFilter {
  ComFasterxmlJacksonDatabindSerFilterProvider *filters = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) getFilterProvider];
  if (filters == nil) {
    [provider reportBadDefinitionWithIOSClass:[self handledType] withNSString:JreStrcat("$@$", @"Cannot resolve PropertyFilter with id '", filterId, @"'; no FilterProvider configured")];
  }
  return [((ComFasterxmlJacksonDatabindSerFilterProvider *) nil_chk(filters)) findPropertyFilterWithId:filterId withId:valueToFilter];
}

- (ComFasterxmlJacksonAnnotationJsonFormat_Value *)findFormatOverridesWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                            withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)prop
                                                                                                           withIOSClass:(IOSClass *)typeForDefaults {
  if (prop != nil) {
    return [prop findPropertyFormatWithComFasterxmlJacksonDatabindCfgMapperConfig:[((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) getConfig] withIOSClass:typeForDefaults];
  }
  return [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) getDefaultPropertyFormatWithIOSClass:typeForDefaults];
}

- (JavaLangBoolean *)findFormatFeatureWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                            withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)prop
                                                                           withIOSClass:(IOSClass *)typeForDefaults
                                    withComFasterxmlJacksonAnnotationJsonFormat_Feature:(ComFasterxmlJacksonAnnotationJsonFormat_Feature *)feat {
  ComFasterxmlJacksonAnnotationJsonFormat_Value *format = [self findFormatOverridesWithComFasterxmlJacksonDatabindSerializerProvider:provider withComFasterxmlJacksonDatabindBeanProperty:prop withIOSClass:typeForDefaults];
  if (format != nil) {
    return [format getFeatureWithComFasterxmlJacksonAnnotationJsonFormat_Feature:feat];
  }
  return nil;
}

- (ComFasterxmlJacksonAnnotationJsonInclude_Value *)findIncludeOverridesWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                              withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)prop
                                                                                                             withIOSClass:(IOSClass *)typeForDefaults {
  if (prop != nil) {
    return [prop findPropertyInclusionWithComFasterxmlJacksonDatabindCfgMapperConfig:[((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) getConfig] withIOSClass:typeForDefaults];
  }
  return [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) getDefaultPropertyInclusionWithIOSClass:typeForDefaults];
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)findAnnotatedContentSerializerWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)serializers
                                                                                   withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property {
  if (property != nil) {
    ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *m = [property getMember];
    ComFasterxmlJacksonDatabindAnnotationIntrospector *intr = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(serializers)) getAnnotationIntrospector];
    if (m != nil) {
      id serDef = [((ComFasterxmlJacksonDatabindAnnotationIntrospector *) nil_chk(intr)) findContentSerializerWithComFasterxmlJacksonDatabindIntrospectAnnotated:m];
      if (serDef != nil) {
        return [serializers serializerInstanceWithComFasterxmlJacksonDatabindIntrospectAnnotated:m withId:serDef];
      }
    }
  }
  return nil;
}

- (jboolean)isDefaultSerializerWithComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)serializer {
  return ComFasterxmlJacksonDatabindUtilClassUtil_isJacksonStdImplWithId_(serializer);
}

+ (jboolean)_neitherNullWithId:(id)a
                        withId:(id)b {
  return ComFasterxmlJacksonDatabindSerStdStdSerializer__neitherNullWithId_withId_(a, b);
}

+ (jboolean)_nonEmptyWithJavaUtilCollection:(id<JavaUtilCollection>)c {
  return ComFasterxmlJacksonDatabindSerStdStdSerializer__nonEmptyWithJavaUtilCollection_(c);
}

- (void)dealloc {
  RELEASE_(_handledType_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x4, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 3, -1, 4, -1, -1 },
    { NULL, NULL, 0x4, -1, 5, -1, 6, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 7, -1, -1 },
    { NULL, "V", 0x401, 8, 9, 10, 11, -1, -1 },
    { NULL, "V", 0x1, 12, 13, 14, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x1, 15, 16, 14, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x1, 15, 17, 14, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeObjectNode;", 0x4, 18, 19, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeObjectNode;", 0x4, 18, 20, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 21, 13, 14, -1, -1, -1 },
    { NULL, "V", 0x4, 21, 22, 14, -1, -1, -1 },
    { NULL, "V", 0x4, 23, 24, 14, -1, -1, -1 },
    { NULL, "V", 0x4, 23, 25, 14, -1, -1, -1 },
    { NULL, "V", 0x4, 26, 24, 14, -1, -1, -1 },
    { NULL, "V", 0x4, 27, 28, 14, 29, -1, -1 },
    { NULL, "V", 0x4, 27, 30, 14, -1, -1, -1 },
    { NULL, "V", 0x1, 31, 32, 10, -1, -1, -1 },
    { NULL, "V", 0x1, 31, 33, 10, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x4, 34, 35, 14, 36, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x4, 37, 35, 14, 36, 38, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerPropertyFilter;", 0x4, 39, 40, 14, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonFormat_Value;", 0x4, 41, 42, -1, 43, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x4, 44, 45, -1, 46, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonInclude_Value;", 0x4, 47, 42, -1, 48, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x4, 49, 50, 14, 51, -1, -1 },
    { NULL, "Z", 0x4, 52, 53, -1, 54, -1, -1 },
    { NULL, "Z", 0x1c, 55, 56, -1, -1, -1, -1 },
    { NULL, "Z", 0x1c, 57, 58, -1, 59, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:);
  methods[1].selector = @selector(initWithComFasterxmlJacksonDatabindJavaType:);
  methods[2].selector = @selector(initWithIOSClass:withBoolean:);
  methods[3].selector = @selector(initWithComFasterxmlJacksonDatabindSerStdStdSerializer:);
  methods[4].selector = @selector(handledType);
  methods[5].selector = @selector(serializeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  methods[6].selector = @selector(acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:withComFasterxmlJacksonDatabindJavaType:);
  methods[7].selector = @selector(getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:withJavaLangReflectType:);
  methods[8].selector = @selector(getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:withJavaLangReflectType:withBoolean:);
  methods[9].selector = @selector(createSchemaNodeWithNSString:);
  methods[10].selector = @selector(createSchemaNodeWithNSString:withBoolean:);
  methods[11].selector = @selector(visitStringFormatWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:withComFasterxmlJacksonDatabindJavaType:);
  methods[12].selector = @selector(visitStringFormatWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindJsonFormatVisitorsJsonValueFormat:);
  methods[13].selector = @selector(visitIntFormatWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonCoreJsonParser_NumberType:);
  methods[14].selector = @selector(visitIntFormatWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonCoreJsonParser_NumberType:withComFasterxmlJacksonDatabindJsonFormatVisitorsJsonValueFormat:);
  methods[15].selector = @selector(visitFloatFormatWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonCoreJsonParser_NumberType:);
  methods[16].selector = @selector(visitArrayFormatWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindJsonSerializer:withComFasterxmlJacksonDatabindJavaType:);
  methods[17].selector = @selector(visitArrayFormatWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatTypes:);
  methods[18].selector = @selector(wrapAndThrowWithComFasterxmlJacksonDatabindSerializerProvider:withJavaLangThrowable:withId:withNSString:);
  methods[19].selector = @selector(wrapAndThrowWithComFasterxmlJacksonDatabindSerializerProvider:withJavaLangThrowable:withId:withInt:);
  methods[20].selector = @selector(findContextualConvertingSerializerWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindBeanProperty:withComFasterxmlJacksonDatabindJsonSerializer:);
  methods[21].selector = @selector(findConvertingContentSerializerWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindBeanProperty:withComFasterxmlJacksonDatabindJsonSerializer:);
  methods[22].selector = @selector(findPropertyFilterWithComFasterxmlJacksonDatabindSerializerProvider:withId:withId:);
  methods[23].selector = @selector(findFormatOverridesWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindBeanProperty:withIOSClass:);
  methods[24].selector = @selector(findFormatFeatureWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindBeanProperty:withIOSClass:withComFasterxmlJacksonAnnotationJsonFormat_Feature:);
  methods[25].selector = @selector(findIncludeOverridesWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindBeanProperty:withIOSClass:);
  methods[26].selector = @selector(findAnnotatedContentSerializerWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindBeanProperty:);
  methods[27].selector = @selector(isDefaultSerializerWithComFasterxmlJacksonDatabindJsonSerializer:);
  methods[28].selector = @selector(_neitherNullWithId:withId:);
  methods[29].selector = @selector(_nonEmptyWithJavaUtilCollection:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindSerStdStdSerializer_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "KEY_CONTENT_CONVERTER_LOCK", "LNSObject;", .constantValue.asLong = 0, 0x1a, -1, 60, -1, -1 },
    { "_handledType_", "LIOSClass;", .constantValue.asLong = 0, 0x14, -1, -1, 61, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;", "(Ljava/lang/Class<TT;>;)V", "LComFasterxmlJacksonDatabindJavaType;", "LIOSClass;Z", "(Ljava/lang/Class<*>;Z)V", "LComFasterxmlJacksonDatabindSerStdStdSerializer;", "(Lcom/fasterxml/jackson/databind/ser/std/StdSerializer<*>;)V", "()Ljava/lang/Class<TT;>;", "serialize", "LNSObject;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;", "LJavaIoIOException;", "(TT;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V", "acceptJsonFormatVisitor", "LComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;LComFasterxmlJacksonDatabindJavaType;", "LComFasterxmlJacksonDatabindJsonMappingException;", "getSchema", "LComFasterxmlJacksonDatabindSerializerProvider;LJavaLangReflectType;", "LComFasterxmlJacksonDatabindSerializerProvider;LJavaLangReflectType;Z", "createSchemaNode", "LNSString;", "LNSString;Z", "visitStringFormat", "LComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;LComFasterxmlJacksonDatabindJavaType;LComFasterxmlJacksonDatabindJsonFormatVisitorsJsonValueFormat;", "visitIntFormat", "LComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;LComFasterxmlJacksonDatabindJavaType;LComFasterxmlJacksonCoreJsonParser_NumberType;", "LComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;LComFasterxmlJacksonDatabindJavaType;LComFasterxmlJacksonCoreJsonParser_NumberType;LComFasterxmlJacksonDatabindJsonFormatVisitorsJsonValueFormat;", "visitFloatFormat", "visitArrayFormat", "LComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;LComFasterxmlJacksonDatabindJavaType;LComFasterxmlJacksonDatabindJsonSerializer;LComFasterxmlJacksonDatabindJavaType;", "(Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/JsonSerializer<*>;Lcom/fasterxml/jackson/databind/JavaType;)V", "LComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;LComFasterxmlJacksonDatabindJavaType;LComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatTypes;", "wrapAndThrow", "LComFasterxmlJacksonDatabindSerializerProvider;LJavaLangThrowable;LNSObject;LNSString;", "LComFasterxmlJacksonDatabindSerializerProvider;LJavaLangThrowable;LNSObject;I", "findContextualConvertingSerializer", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindBeanProperty;LComFasterxmlJacksonDatabindJsonSerializer;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanProperty;Lcom/fasterxml/jackson/databind/JsonSerializer<*>;)Lcom/fasterxml/jackson/databind/JsonSerializer<*>;", "findConvertingContentSerializer", (void *)&ComFasterxmlJacksonDatabindSerStdStdSerializer__Annotations$0, "findPropertyFilter", "LComFasterxmlJacksonDatabindSerializerProvider;LNSObject;LNSObject;", "findFormatOverrides", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindBeanProperty;LIOSClass;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanProperty;Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/annotation/JsonFormat$Value;", "findFormatFeature", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindBeanProperty;LIOSClass;LComFasterxmlJacksonAnnotationJsonFormat_Feature;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanProperty;Ljava/lang/Class<*>;Lcom/fasterxml/jackson/annotation/JsonFormat$Feature;)Ljava/lang/Boolean;", "findIncludeOverrides", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanProperty;Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/annotation/JsonInclude$Value;", "findAnnotatedContentSerializer", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindBeanProperty;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonSerializer<*>;", "isDefaultSerializer", "LComFasterxmlJacksonDatabindJsonSerializer;", "(Lcom/fasterxml/jackson/databind/JsonSerializer<*>;)Z", "_neitherNull", "LNSObject;LNSObject;", "_nonEmpty", "LJavaUtilCollection;", "(Ljava/util/Collection<*>;)Z", &ComFasterxmlJacksonDatabindSerStdStdSerializer_KEY_CONTENT_CONVERTER_LOCK, "Ljava/lang/Class<TT;>;", "<T:Ljava/lang/Object;>Lcom/fasterxml/jackson/databind/JsonSerializer<TT;>;Lcom/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitable;Lcom/fasterxml/jackson/databind/jsonschema/SchemaAware;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerStdStdSerializer = { "StdSerializer", "com.fasterxml.jackson.databind.ser.std", ptrTable, methods, fields, 7, 0x401, 30, 3, -1, -1, -1, 62, -1 };
  return &_ComFasterxmlJacksonDatabindSerStdStdSerializer;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindSerStdStdSerializer class]) {
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindSerStdStdSerializer_KEY_CONTENT_CONVERTER_LOCK, new_NSObject_init());
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindSerStdStdSerializer)
  }
}

@end

void ComFasterxmlJacksonDatabindSerStdStdSerializer_initWithIOSClass_(ComFasterxmlJacksonDatabindSerStdStdSerializer *self, IOSClass *t) {
  ComFasterxmlJacksonDatabindJsonSerializer_init(self);
  JreStrongAssign(&self->_handledType_, t);
}

void ComFasterxmlJacksonDatabindSerStdStdSerializer_initWithComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindSerStdStdSerializer *self, ComFasterxmlJacksonDatabindJavaType *type) {
  ComFasterxmlJacksonDatabindJsonSerializer_init(self);
  JreStrongAssign(&self->_handledType_, [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(type)) getRawClass]);
}

void ComFasterxmlJacksonDatabindSerStdStdSerializer_initWithIOSClass_withBoolean_(ComFasterxmlJacksonDatabindSerStdStdSerializer *self, IOSClass *t, jboolean dummy) {
  ComFasterxmlJacksonDatabindJsonSerializer_init(self);
  JreStrongAssign(&self->_handledType_, t);
}

void ComFasterxmlJacksonDatabindSerStdStdSerializer_initWithComFasterxmlJacksonDatabindSerStdStdSerializer_(ComFasterxmlJacksonDatabindSerStdStdSerializer *self, ComFasterxmlJacksonDatabindSerStdStdSerializer *src) {
  ComFasterxmlJacksonDatabindJsonSerializer_init(self);
  JreStrongAssign(&self->_handledType_, ((ComFasterxmlJacksonDatabindSerStdStdSerializer *) nil_chk(src))->_handledType_);
}

jboolean ComFasterxmlJacksonDatabindSerStdStdSerializer__neitherNullWithId_withId_(id a, id b) {
  ComFasterxmlJacksonDatabindSerStdStdSerializer_initialize();
  return (a != nil) && (b != nil);
}

jboolean ComFasterxmlJacksonDatabindSerStdStdSerializer__nonEmptyWithJavaUtilCollection_(id<JavaUtilCollection> c) {
  ComFasterxmlJacksonDatabindSerStdStdSerializer_initialize();
  return (c != nil) && ![((id<JavaUtilCollection>) nil_chk(c)) isEmpty];
}

IOSObjectArray *ComFasterxmlJacksonDatabindSerStdStdSerializer__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerStdStdSerializer)
