//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/std/ByteArraySerializer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdByteArraySerializer")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindSerStdByteArraySerializer
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdByteArraySerializer 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdByteArraySerializer 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindSerStdByteArraySerializer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindSerStdByteArraySerializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdByteArraySerializer || defined(INCLUDE_ComFasterxmlJacksonDatabindSerStdByteArraySerializer))
#define ComFasterxmlJacksonDatabindSerStdByteArraySerializer_

#define RESTRICT_ComFasterxmlJacksonDatabindSerStdStdSerializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerStdStdSerializer 1
#include "com/fasterxml/jackson/databind/ser/std/StdSerializer.h"

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsonNode;
@class ComFasterxmlJacksonDatabindJsontypeTypeSerializer;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSByteArray;
@class IOSClass;
@protocol ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;
@protocol JavaLangReflectType;

/*!
 @brief Unlike other integral number array serializers, we do not just print out byte values
  as numbers.Instead, we assume that it would make more sense to output content
  as base64 encoded bytes (using default base64 encoding).
 <p>
  NOTE: since it is NOT serialized as an array, cannot use AsArraySerializer as base
 <p>
  NOTE: since 2.6, has been a main-level class; earlier was embedded in 
 <code>StdArraySerializers</code>.
 */
@interface ComFasterxmlJacksonDatabindSerStdByteArraySerializer : ComFasterxmlJacksonDatabindSerStdStdSerializer

#pragma mark Public

- (instancetype __nonnull)init;

- (void)acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint;

- (ComFasterxmlJacksonDatabindJsonNode *)getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                            withJavaLangReflectType:(id<JavaLangReflectType>)typeHint;

- (jboolean)isEmptyWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                              withId:(IOSByteArray *)value;

- (void)serializeWithId:(IOSByteArray *)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

- (void)serializeWithTypeWithId:(IOSByteArray *)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindSerStdStdSerializer:(ComFasterxmlJacksonDatabindSerStdStdSerializer *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0
                               withBoolean:(jboolean)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindSerStdByteArraySerializer)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdByteArraySerializer_init(ComFasterxmlJacksonDatabindSerStdByteArraySerializer *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdByteArraySerializer *new_ComFasterxmlJacksonDatabindSerStdByteArraySerializer_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdByteArraySerializer *create_ComFasterxmlJacksonDatabindSerStdByteArraySerializer_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerStdByteArraySerializer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdByteArraySerializer")
