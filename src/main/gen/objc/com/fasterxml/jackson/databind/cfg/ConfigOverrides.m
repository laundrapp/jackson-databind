//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/cfg/ConfigOverrides.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/annotation/JsonInclude.h"
#include "com/fasterxml/jackson/annotation/JsonSetter.h"
#include "com/fasterxml/jackson/databind/cfg/ConfigOverride.h"
#include "com/fasterxml/jackson/databind/cfg/ConfigOverrides.h"
#include "com/fasterxml/jackson/databind/cfg/MutableConfigOverride.h"
#include "com/fasterxml/jackson/databind/introspect/VisibilityChecker.h"
#include "java/lang/Boolean.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

inline jlong ComFasterxmlJacksonDatabindCfgConfigOverrides_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindCfgConfigOverrides_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindCfgConfigOverrides, serialVersionUID, jlong)

@implementation ComFasterxmlJacksonDatabindCfgConfigOverrides

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindCfgConfigOverrides_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithJavaUtilMap:(id<JavaUtilMap>)overrides
withComFasterxmlJacksonAnnotationJsonInclude_Value:(ComFasterxmlJacksonAnnotationJsonInclude_Value *)defIncl
withComFasterxmlJacksonAnnotationJsonSetter_Value:(ComFasterxmlJacksonAnnotationJsonSetter_Value *)defSetter
withComFasterxmlJacksonDatabindIntrospectVisibilityChecker:(id<ComFasterxmlJacksonDatabindIntrospectVisibilityChecker>)defVisibility
                          withJavaLangBoolean:(JavaLangBoolean *)defMergeable {
  ComFasterxmlJacksonDatabindCfgConfigOverrides_initWithJavaUtilMap_withComFasterxmlJacksonAnnotationJsonInclude_Value_withComFasterxmlJacksonAnnotationJsonSetter_Value_withComFasterxmlJacksonDatabindIntrospectVisibilityChecker_withJavaLangBoolean_(self, overrides, defIncl, defSetter, defVisibility, defMergeable);
  return self;
}

- (ComFasterxmlJacksonDatabindCfgConfigOverrides *)copy__ {
  id<JavaUtilMap> newOverrides;
  if (_overrides_ == nil) {
    newOverrides = nil;
  }
  else {
    newOverrides = [self _newMap];
    for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(_overrides_)) entrySet])) {
      [((id<JavaUtilMap>) nil_chk(newOverrides)) putWithId:[((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey] withId:[((ComFasterxmlJacksonDatabindCfgMutableConfigOverride *) nil_chk([entry_ getValue])) copy__]];
    }
  }
  return create_ComFasterxmlJacksonDatabindCfgConfigOverrides_initWithJavaUtilMap_withComFasterxmlJacksonAnnotationJsonInclude_Value_withComFasterxmlJacksonAnnotationJsonSetter_Value_withComFasterxmlJacksonDatabindIntrospectVisibilityChecker_withJavaLangBoolean_(newOverrides, _defaultInclusion_, _defaultSetterInfo_, _visibilityChecker_, _defaultMergeable_);
}

- (ComFasterxmlJacksonDatabindCfgConfigOverride *)findOverrideWithIOSClass:(IOSClass *)type {
  if (_overrides_ == nil) {
    return nil;
  }
  return [_overrides_ getWithId:type];
}

- (ComFasterxmlJacksonDatabindCfgMutableConfigOverride *)findOrCreateOverrideWithIOSClass:(IOSClass *)type {
  if (_overrides_ == nil) {
    JreStrongAssign(&_overrides_, [self _newMap]);
  }
  ComFasterxmlJacksonDatabindCfgMutableConfigOverride *override = [((id<JavaUtilMap>) nil_chk(_overrides_)) getWithId:type];
  if (override == nil) {
    override = create_ComFasterxmlJacksonDatabindCfgMutableConfigOverride_init();
    [((id<JavaUtilMap>) nil_chk(_overrides_)) putWithId:type withId:override];
  }
  return override;
}

- (ComFasterxmlJacksonAnnotationJsonInclude_Value *)getDefaultInclusion {
  return _defaultInclusion_;
}

- (ComFasterxmlJacksonAnnotationJsonSetter_Value *)getDefaultSetterInfo {
  return _defaultSetterInfo_;
}

- (JavaLangBoolean *)getDefaultMergeable {
  return _defaultMergeable_;
}

- (id<ComFasterxmlJacksonDatabindIntrospectVisibilityChecker>)getDefaultVisibility {
  return _visibilityChecker_;
}

- (void)setDefaultInclusionWithComFasterxmlJacksonAnnotationJsonInclude_Value:(ComFasterxmlJacksonAnnotationJsonInclude_Value *)v {
  JreStrongAssign(&_defaultInclusion_, v);
}

- (void)setDefaultSetterInfoWithComFasterxmlJacksonAnnotationJsonSetter_Value:(ComFasterxmlJacksonAnnotationJsonSetter_Value *)v {
  JreStrongAssign(&_defaultSetterInfo_, v);
}

- (void)setDefaultMergeableWithJavaLangBoolean:(JavaLangBoolean *)v {
  JreStrongAssign(&_defaultMergeable_, v);
}

- (void)setDefaultVisibilityWithComFasterxmlJacksonDatabindIntrospectVisibilityChecker:(id<ComFasterxmlJacksonDatabindIntrospectVisibilityChecker>)v {
  JreStrongAssign(&_visibilityChecker_, v);
}

- (id<JavaUtilMap>)_newMap {
  return create_JavaUtilHashMap_init();
}

- (void)dealloc {
  RELEASE_(_overrides_);
  RELEASE_(_defaultInclusion_);
  RELEASE_(_defaultSetterInfo_);
  RELEASE_(_visibilityChecker_);
  RELEASE_(_defaultMergeable_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgConfigOverrides;", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgConfigOverride;", 0x1, 3, 4, -1, 5, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMutableConfigOverride;", 0x1, 6, 4, -1, 7, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonInclude_Value;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonSetter_Value;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindIntrospectVisibilityChecker;", 0x1, -1, -1, -1, 8, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 15, 16, -1, 17, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x4, -1, -1, -1, 18, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithJavaUtilMap:withComFasterxmlJacksonAnnotationJsonInclude_Value:withComFasterxmlJacksonAnnotationJsonSetter_Value:withComFasterxmlJacksonDatabindIntrospectVisibilityChecker:withJavaLangBoolean:);
  methods[2].selector = @selector(copy__);
  methods[3].selector = @selector(findOverrideWithIOSClass:);
  methods[4].selector = @selector(findOrCreateOverrideWithIOSClass:);
  methods[5].selector = @selector(getDefaultInclusion);
  methods[6].selector = @selector(getDefaultSetterInfo);
  methods[7].selector = @selector(getDefaultMergeable);
  methods[8].selector = @selector(getDefaultVisibility);
  methods[9].selector = @selector(setDefaultInclusionWithComFasterxmlJacksonAnnotationJsonInclude_Value:);
  methods[10].selector = @selector(setDefaultSetterInfoWithComFasterxmlJacksonAnnotationJsonSetter_Value:);
  methods[11].selector = @selector(setDefaultMergeableWithJavaLangBoolean:);
  methods[12].selector = @selector(setDefaultVisibilityWithComFasterxmlJacksonDatabindIntrospectVisibilityChecker:);
  methods[13].selector = @selector(_newMap);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindCfgConfigOverrides_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "_overrides_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x4, -1, -1, 19, -1 },
    { "_defaultInclusion_", "LComFasterxmlJacksonAnnotationJsonInclude_Value;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_defaultSetterInfo_", "LComFasterxmlJacksonAnnotationJsonSetter_Value;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_visibilityChecker_", "LComFasterxmlJacksonDatabindIntrospectVisibilityChecker;", .constantValue.asLong = 0, 0x4, -1, -1, 20, -1 },
    { "_defaultMergeable_", "LJavaLangBoolean;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilMap;LComFasterxmlJacksonAnnotationJsonInclude_Value;LComFasterxmlJacksonAnnotationJsonSetter_Value;LComFasterxmlJacksonDatabindIntrospectVisibilityChecker;LJavaLangBoolean;", "(Ljava/util/Map<Ljava/lang/Class<*>;Lcom/fasterxml/jackson/databind/cfg/MutableConfigOverride;>;Lcom/fasterxml/jackson/annotation/JsonInclude$Value;Lcom/fasterxml/jackson/annotation/JsonSetter$Value;Lcom/fasterxml/jackson/databind/introspect/VisibilityChecker<*>;Ljava/lang/Boolean;)V", "copy", "findOverride", "LIOSClass;", "(Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/cfg/ConfigOverride;", "findOrCreateOverride", "(Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/cfg/MutableConfigOverride;", "()Lcom/fasterxml/jackson/databind/introspect/VisibilityChecker<*>;", "setDefaultInclusion", "LComFasterxmlJacksonAnnotationJsonInclude_Value;", "setDefaultSetterInfo", "LComFasterxmlJacksonAnnotationJsonSetter_Value;", "setDefaultMergeable", "LJavaLangBoolean;", "setDefaultVisibility", "LComFasterxmlJacksonDatabindIntrospectVisibilityChecker;", "(Lcom/fasterxml/jackson/databind/introspect/VisibilityChecker<*>;)V", "()Ljava/util/Map<Ljava/lang/Class<*>;Lcom/fasterxml/jackson/databind/cfg/MutableConfigOverride;>;", "Ljava/util/Map<Ljava/lang/Class<*>;Lcom/fasterxml/jackson/databind/cfg/MutableConfigOverride;>;", "Lcom/fasterxml/jackson/databind/introspect/VisibilityChecker<*>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindCfgConfigOverrides = { "ConfigOverrides", "com.fasterxml.jackson.databind.cfg", ptrTable, methods, fields, 7, 0x1, 14, 6, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindCfgConfigOverrides;
}

@end

void ComFasterxmlJacksonDatabindCfgConfigOverrides_init(ComFasterxmlJacksonDatabindCfgConfigOverrides *self) {
  ComFasterxmlJacksonDatabindCfgConfigOverrides_initWithJavaUtilMap_withComFasterxmlJacksonAnnotationJsonInclude_Value_withComFasterxmlJacksonAnnotationJsonSetter_Value_withComFasterxmlJacksonDatabindIntrospectVisibilityChecker_withJavaLangBoolean_(self, nil, ComFasterxmlJacksonAnnotationJsonInclude_Value_empty(), ComFasterxmlJacksonAnnotationJsonSetter_Value_empty(), ComFasterxmlJacksonDatabindIntrospectVisibilityChecker_Std_defaultInstance(), nil);
}

ComFasterxmlJacksonDatabindCfgConfigOverrides *new_ComFasterxmlJacksonDatabindCfgConfigOverrides_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindCfgConfigOverrides, init)
}

ComFasterxmlJacksonDatabindCfgConfigOverrides *create_ComFasterxmlJacksonDatabindCfgConfigOverrides_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindCfgConfigOverrides, init)
}

void ComFasterxmlJacksonDatabindCfgConfigOverrides_initWithJavaUtilMap_withComFasterxmlJacksonAnnotationJsonInclude_Value_withComFasterxmlJacksonAnnotationJsonSetter_Value_withComFasterxmlJacksonDatabindIntrospectVisibilityChecker_withJavaLangBoolean_(ComFasterxmlJacksonDatabindCfgConfigOverrides *self, id<JavaUtilMap> overrides, ComFasterxmlJacksonAnnotationJsonInclude_Value *defIncl, ComFasterxmlJacksonAnnotationJsonSetter_Value *defSetter, id<ComFasterxmlJacksonDatabindIntrospectVisibilityChecker> defVisibility, JavaLangBoolean *defMergeable) {
  NSObject_init(self);
  JreStrongAssign(&self->_overrides_, overrides);
  JreStrongAssign(&self->_defaultInclusion_, defIncl);
  JreStrongAssign(&self->_defaultSetterInfo_, defSetter);
  JreStrongAssign(&self->_visibilityChecker_, defVisibility);
  JreStrongAssign(&self->_defaultMergeable_, defMergeable);
}

ComFasterxmlJacksonDatabindCfgConfigOverrides *new_ComFasterxmlJacksonDatabindCfgConfigOverrides_initWithJavaUtilMap_withComFasterxmlJacksonAnnotationJsonInclude_Value_withComFasterxmlJacksonAnnotationJsonSetter_Value_withComFasterxmlJacksonDatabindIntrospectVisibilityChecker_withJavaLangBoolean_(id<JavaUtilMap> overrides, ComFasterxmlJacksonAnnotationJsonInclude_Value *defIncl, ComFasterxmlJacksonAnnotationJsonSetter_Value *defSetter, id<ComFasterxmlJacksonDatabindIntrospectVisibilityChecker> defVisibility, JavaLangBoolean *defMergeable) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindCfgConfigOverrides, initWithJavaUtilMap_withComFasterxmlJacksonAnnotationJsonInclude_Value_withComFasterxmlJacksonAnnotationJsonSetter_Value_withComFasterxmlJacksonDatabindIntrospectVisibilityChecker_withJavaLangBoolean_, overrides, defIncl, defSetter, defVisibility, defMergeable)
}

ComFasterxmlJacksonDatabindCfgConfigOverrides *create_ComFasterxmlJacksonDatabindCfgConfigOverrides_initWithJavaUtilMap_withComFasterxmlJacksonAnnotationJsonInclude_Value_withComFasterxmlJacksonAnnotationJsonSetter_Value_withComFasterxmlJacksonDatabindIntrospectVisibilityChecker_withJavaLangBoolean_(id<JavaUtilMap> overrides, ComFasterxmlJacksonAnnotationJsonInclude_Value *defIncl, ComFasterxmlJacksonAnnotationJsonSetter_Value *defSetter, id<ComFasterxmlJacksonDatabindIntrospectVisibilityChecker> defVisibility, JavaLangBoolean *defMergeable) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindCfgConfigOverrides, initWithJavaUtilMap_withComFasterxmlJacksonAnnotationJsonInclude_Value_withComFasterxmlJacksonAnnotationJsonSetter_Value_withComFasterxmlJacksonDatabindIntrospectVisibilityChecker_withJavaLangBoolean_, overrides, defIncl, defSetter, defVisibility, defMergeable)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindCfgConfigOverrides)
