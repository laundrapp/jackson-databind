//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/std/MapSerializer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/annotation/JsonFormat.h"
#include "com/fasterxml/jackson/annotation/JsonIgnoreProperties.h"
#include "com/fasterxml/jackson/annotation/JsonInclude.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/core/JsonToken.h"
#include "com/fasterxml/jackson/core/type/WritableTypeId.h"
#include "com/fasterxml/jackson/databind/AnnotationIntrospector.h"
#include "com/fasterxml/jackson/databind/BeanProperty.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/JsonMappingException.h"
#include "com/fasterxml/jackson/databind/JsonNode.h"
#include "com/fasterxml/jackson/databind/JsonSerializer.h"
#include "com/fasterxml/jackson/databind/SerializationConfig.h"
#include "com/fasterxml/jackson/databind/SerializationFeature.h"
#include "com/fasterxml/jackson/databind/SerializerProvider.h"
#include "com/fasterxml/jackson/databind/annotation/JacksonStdImpl.h"
#include "com/fasterxml/jackson/databind/introspect/AnnotatedMember.h"
#include "com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper.h"
#include "com/fasterxml/jackson/databind/jsonFormatVisitors/JsonMapFormatVisitor.h"
#include "com/fasterxml/jackson/databind/jsontype/TypeSerializer.h"
#include "com/fasterxml/jackson/databind/node/ObjectNode.h"
#include "com/fasterxml/jackson/databind/ser/ContainerSerializer.h"
#include "com/fasterxml/jackson/databind/ser/PropertyFilter.h"
#include "com/fasterxml/jackson/databind/ser/impl/PropertySerializerMap.h"
#include "com/fasterxml/jackson/databind/ser/std/MapProperty.h"
#include "com/fasterxml/jackson/databind/ser/std/MapSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/StdSerializer.h"
#include "com/fasterxml/jackson/databind/type/TypeFactory.h"
#include "com/fasterxml/jackson/databind/util/ArrayBuilders.h"
#include "com/fasterxml/jackson/databind/util/BeanUtil.h"
#include "com/fasterxml/jackson/databind/util/ClassUtil.h"
#include "java/lang/Boolean.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Exception.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/reflect/Type.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/HashSet.h"
#include "java/util/Map.h"
#include "java/util/Set.h"
#include "java/util/SortedMap.h"
#include "java/util/TreeMap.h"

@interface ComFasterxmlJacksonDatabindSerStdMapSerializer ()

- (ComFasterxmlJacksonDatabindJsonSerializer *)_findSerializerWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                                                         withId:(id)value;

@end

inline jlong ComFasterxmlJacksonDatabindSerStdMapSerializer_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindSerStdMapSerializer_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindSerStdMapSerializer, serialVersionUID, jlong)

__attribute__((unused)) static ComFasterxmlJacksonDatabindJsonSerializer *ComFasterxmlJacksonDatabindSerStdMapSerializer__findAndAddDynamicWithComFasterxmlJacksonDatabindSerImplPropertySerializerMap_withIOSClass_withComFasterxmlJacksonDatabindSerializerProvider_(ComFasterxmlJacksonDatabindSerStdMapSerializer *self, ComFasterxmlJacksonDatabindSerImplPropertySerializerMap *map, IOSClass *type, ComFasterxmlJacksonDatabindSerializerProvider *provider);

__attribute__((unused)) static ComFasterxmlJacksonDatabindJsonSerializer *ComFasterxmlJacksonDatabindSerStdMapSerializer__findAndAddDynamicWithComFasterxmlJacksonDatabindSerImplPropertySerializerMap_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindSerializerProvider_(ComFasterxmlJacksonDatabindSerStdMapSerializer *self, ComFasterxmlJacksonDatabindSerImplPropertySerializerMap *map, ComFasterxmlJacksonDatabindJavaType *type, ComFasterxmlJacksonDatabindSerializerProvider *provider);

__attribute__((unused)) static ComFasterxmlJacksonDatabindJsonSerializer *ComFasterxmlJacksonDatabindSerStdMapSerializer__findSerializerWithComFasterxmlJacksonDatabindSerializerProvider_withId_(ComFasterxmlJacksonDatabindSerStdMapSerializer *self, ComFasterxmlJacksonDatabindSerializerProvider *provider, id value);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindSerStdMapSerializer__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindSerStdMapSerializer__Annotations$1(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindSerStdMapSerializer__Annotations$2(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindSerStdMapSerializer__Annotations$3(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindSerStdMapSerializer__Annotations$4(void);

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindSerStdMapSerializer)

ComFasterxmlJacksonDatabindJavaType *ComFasterxmlJacksonDatabindSerStdMapSerializer_UNSPECIFIED_TYPE;
id ComFasterxmlJacksonDatabindSerStdMapSerializer_MARKER_FOR_EMPTY;

@implementation ComFasterxmlJacksonDatabindSerStdMapSerializer

- (instancetype __nonnull)initWithJavaUtilSet:(id<JavaUtilSet>)ignoredEntries
      withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)keyType
      withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)valueType
                                  withBoolean:(jboolean)valueTypeIsStatic
withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)vts
withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)keySerializer
withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)valueSerializer {
  ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithJavaUtilSet_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_withBoolean_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withComFasterxmlJacksonDatabindJsonSerializer_(self, ignoredEntries, keyType, valueType, valueTypeIsStatic, vts, keySerializer, valueSerializer);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindSerStdMapSerializer:(ComFasterxmlJacksonDatabindSerStdMapSerializer *)src
                                     withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property
                                   withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)keySerializer
                                   withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)valueSerializer
                                                                 withJavaUtilSet:(id<JavaUtilSet>)ignoredEntries {
  ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withComFasterxmlJacksonDatabindBeanProperty_withComFasterxmlJacksonDatabindJsonSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withJavaUtilSet_(self, src, property, keySerializer, valueSerializer, ignoredEntries);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindSerStdMapSerializer:(ComFasterxmlJacksonDatabindSerStdMapSerializer *)src
                           withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)vts
                                                                          withId:(id)suppressableValue
                                                                     withBoolean:(jboolean)suppressNulls {
  ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withId_withBoolean_(self, src, vts, suppressableValue, suppressNulls);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindSerStdMapSerializer:(ComFasterxmlJacksonDatabindSerStdMapSerializer *)src
                                                                          withId:(id)filterId
                                                                     withBoolean:(jboolean)sortKeys {
  ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withId_withBoolean_(self, src, filterId, sortKeys);
  return self;
}

- (ComFasterxmlJacksonDatabindSerStdMapSerializer *)_withValueTypeSerializerWithComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)vts {
  if (_valueTypeSerializer_ == vts) {
    return self;
  }
  [self _ensureOverrideWithNSString:@"_withValueTypeSerializer"];
  return create_ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withId_withBoolean_(self, vts, _suppressableValue_, _suppressNulls_);
}

- (ComFasterxmlJacksonDatabindSerStdMapSerializer *)withResolvedWithComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property
                                                              withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)keySerializer
                                                              withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)valueSerializer
                                                                                            withJavaUtilSet:(id<JavaUtilSet>)ignored
                                                                                                withBoolean:(jboolean)sortKeys {
  [self _ensureOverrideWithNSString:@"withResolved"];
  ComFasterxmlJacksonDatabindSerStdMapSerializer *ser = create_ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withComFasterxmlJacksonDatabindBeanProperty_withComFasterxmlJacksonDatabindJsonSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withJavaUtilSet_(self, property, keySerializer, valueSerializer, ignored);
  if (sortKeys != ser->_sortKeys_) {
    ser = create_ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withId_withBoolean_(ser, _filterId_, sortKeys);
  }
  return ser;
}

- (ComFasterxmlJacksonDatabindSerStdMapSerializer *)withFilterIdWithId:(id)filterId {
  if (_filterId_ == filterId) {
    return self;
  }
  [self _ensureOverrideWithNSString:@"withFilterId"];
  return create_ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withId_withBoolean_(self, filterId, _sortKeys_);
}

- (ComFasterxmlJacksonDatabindSerStdMapSerializer *)withContentInclusionWithId:(id)suppressableValue
                                                                   withBoolean:(jboolean)suppressNulls {
  if ((suppressableValue == _suppressableValue_) && (suppressNulls == _suppressNulls_)) {
    return self;
  }
  [self _ensureOverrideWithNSString:@"withContentInclusion"];
  return create_ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withId_withBoolean_(self, _valueTypeSerializer_, suppressableValue, suppressNulls);
}

+ (ComFasterxmlJacksonDatabindSerStdMapSerializer *)constructWithJavaUtilSet:(id<JavaUtilSet>)ignoredEntries
                                     withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)mapType
                                                                 withBoolean:(jboolean)staticValueType
                       withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)vts
                               withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)keySerializer
                               withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)valueSerializer
                                                                      withId:(id)filterId {
  return ComFasterxmlJacksonDatabindSerStdMapSerializer_constructWithJavaUtilSet_withComFasterxmlJacksonDatabindJavaType_withBoolean_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withId_(ignoredEntries, mapType, staticValueType, vts, keySerializer, valueSerializer, filterId);
}

- (void)_ensureOverrideWithNSString:(NSString *)method {
  ComFasterxmlJacksonDatabindUtilClassUtil_verifyMustOverrideWithIOSClass_withId_withNSString_(ComFasterxmlJacksonDatabindSerStdMapSerializer_class_(), self, method);
}

- (void)_ensureOverride {
  [self _ensureOverrideWithNSString:@"N/A"];
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindSerStdMapSerializer:(ComFasterxmlJacksonDatabindSerStdMapSerializer *)src
                           withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)vts
                                                                          withId:(id)suppressableValue {
  ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withId_(self, src, vts, suppressableValue);
  return self;
}

- (ComFasterxmlJacksonDatabindSerStdMapSerializer *)withContentInclusionWithId:(id)suppressableValue {
  return create_ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withId_withBoolean_(self, _valueTypeSerializer_, suppressableValue, _suppressNulls_);
}

+ (ComFasterxmlJacksonDatabindSerStdMapSerializer *)constructWithNSStringArray:(IOSObjectArray *)ignoredList
                                       withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)mapType
                                                                   withBoolean:(jboolean)staticValueType
                         withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)vts
                                 withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)keySerializer
                                 withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)valueSerializer
                                                                        withId:(id)filterId {
  return ComFasterxmlJacksonDatabindSerStdMapSerializer_constructWithNSStringArray_withComFasterxmlJacksonDatabindJavaType_withBoolean_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withId_(ignoredList, mapType, staticValueType, vts, keySerializer, valueSerializer, filterId);
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)createContextualWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                     withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property {
  ComFasterxmlJacksonDatabindJsonSerializer *ser = nil;
  ComFasterxmlJacksonDatabindJsonSerializer *keySer = nil;
  ComFasterxmlJacksonDatabindAnnotationIntrospector *intr = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) getAnnotationIntrospector];
  ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *propertyAcc = (property == nil) ? nil : [((id<ComFasterxmlJacksonDatabindBeanProperty>) nil_chk(property)) getMember];
  if (ComFasterxmlJacksonDatabindSerStdStdSerializer__neitherNullWithId_withId_(propertyAcc, intr)) {
    id serDef = [((ComFasterxmlJacksonDatabindAnnotationIntrospector *) nil_chk(intr)) findKeySerializerWithComFasterxmlJacksonDatabindIntrospectAnnotated:propertyAcc];
    if (serDef != nil) {
      keySer = [provider serializerInstanceWithComFasterxmlJacksonDatabindIntrospectAnnotated:propertyAcc withId:serDef];
    }
    serDef = [intr findContentSerializerWithComFasterxmlJacksonDatabindIntrospectAnnotated:propertyAcc];
    if (serDef != nil) {
      ser = [provider serializerInstanceWithComFasterxmlJacksonDatabindIntrospectAnnotated:propertyAcc withId:serDef];
    }
  }
  if (ser == nil) {
    ser = _valueSerializer_;
  }
  ser = [self findContextualConvertingSerializerWithComFasterxmlJacksonDatabindSerializerProvider:provider withComFasterxmlJacksonDatabindBeanProperty:property withComFasterxmlJacksonDatabindJsonSerializer:ser];
  if (ser == nil) {
    if (_valueTypeIsStatic_ && ![((ComFasterxmlJacksonDatabindJavaType *) nil_chk(_valueType_)) isJavaLangObject]) {
      ser = [provider findValueSerializerWithComFasterxmlJacksonDatabindJavaType:_valueType_ withComFasterxmlJacksonDatabindBeanProperty:property];
    }
  }
  if (keySer == nil) {
    keySer = _keySerializer_;
  }
  if (keySer == nil) {
    keySer = [provider findKeySerializerWithComFasterxmlJacksonDatabindJavaType:_keyType_ withComFasterxmlJacksonDatabindBeanProperty:property];
  }
  else {
    keySer = [provider handleSecondaryContextualizationWithComFasterxmlJacksonDatabindJsonSerializer:keySer withComFasterxmlJacksonDatabindBeanProperty:property];
  }
  id<JavaUtilSet> ignored = _ignoredEntries_;
  jboolean sortKeys = false;
  if (ComFasterxmlJacksonDatabindSerStdStdSerializer__neitherNullWithId_withId_(propertyAcc, intr)) {
    ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *ignorals = [((ComFasterxmlJacksonDatabindAnnotationIntrospector *) nil_chk(intr)) findPropertyIgnoralsWithComFasterxmlJacksonDatabindIntrospectAnnotated:propertyAcc];
    if (ignorals != nil) {
      id<JavaUtilSet> newIgnored = [ignorals findIgnoredForSerialization];
      if (ComFasterxmlJacksonDatabindSerStdStdSerializer__nonEmptyWithJavaUtilCollection_(newIgnored)) {
        ignored = (ignored == nil) ? create_JavaUtilHashSet_init() : create_JavaUtilHashSet_initWithJavaUtilCollection_(ignored);
        for (NSString * __strong str in nil_chk(newIgnored)) {
          [ignored addWithId:str];
        }
      }
    }
    JavaLangBoolean *b = [intr findSerializationSortAlphabeticallyWithComFasterxmlJacksonDatabindIntrospectAnnotated:propertyAcc];
    sortKeys = [((JavaLangBoolean *) nil_chk(JreLoadStatic(JavaLangBoolean, TRUE))) isEqual:b];
  }
  ComFasterxmlJacksonAnnotationJsonFormat_Value *format = [self findFormatOverridesWithComFasterxmlJacksonDatabindSerializerProvider:provider withComFasterxmlJacksonDatabindBeanProperty:property withIOSClass:JavaUtilMap_class_()];
  if (format != nil) {
    JavaLangBoolean *B = [format getFeatureWithComFasterxmlJacksonAnnotationJsonFormat_Feature:JreLoadEnum(ComFasterxmlJacksonAnnotationJsonFormat_Feature, WRITE_SORTED_MAP_ENTRIES)];
    if (B != nil) {
      sortKeys = [B booleanValue];
    }
  }
  ComFasterxmlJacksonDatabindSerStdMapSerializer *mser = [self withResolvedWithComFasterxmlJacksonDatabindBeanProperty:property withComFasterxmlJacksonDatabindJsonSerializer:keySer withComFasterxmlJacksonDatabindJsonSerializer:ser withJavaUtilSet:ignored withBoolean:sortKeys];
  if (property != nil) {
    ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *m = [property getMember];
    if (m != nil) {
      id filterId = [((ComFasterxmlJacksonDatabindAnnotationIntrospector *) nil_chk(intr)) findFilterIdWithComFasterxmlJacksonDatabindIntrospectAnnotated:m];
      if (filterId != nil) {
        mser = [((ComFasterxmlJacksonDatabindSerStdMapSerializer *) nil_chk(mser)) withFilterIdWithId:filterId];
      }
    }
    ComFasterxmlJacksonAnnotationJsonInclude_Value *inclV = [property findPropertyInclusionWithComFasterxmlJacksonDatabindCfgMapperConfig:[provider getConfig] withIOSClass:nil];
    if (inclV != nil) {
      ComFasterxmlJacksonAnnotationJsonInclude_Include *incl = [inclV getContentInclusion];
      if (incl != JreLoadEnum(ComFasterxmlJacksonAnnotationJsonInclude_Include, USE_DEFAULTS)) {
        id valueToSuppress;
        jboolean suppressNulls;
        switch ([incl ordinal]) {
          case ComFasterxmlJacksonAnnotationJsonInclude_Include_Enum_NON_DEFAULT:
          valueToSuppress = ComFasterxmlJacksonDatabindUtilBeanUtil_getDefaultValueWithComFasterxmlJacksonDatabindJavaType_(_valueType_);
          suppressNulls = true;
          if (valueToSuppress != nil) {
            if ([[valueToSuppress java_getClass] isArray]) {
              valueToSuppress = ComFasterxmlJacksonDatabindUtilArrayBuilders_getArrayComparatorWithId_(valueToSuppress);
            }
          }
          break;
          case ComFasterxmlJacksonAnnotationJsonInclude_Include_Enum_NON_ABSENT:
          suppressNulls = true;
          valueToSuppress = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(_valueType_)) isReferenceType] ? ComFasterxmlJacksonDatabindSerStdMapSerializer_MARKER_FOR_EMPTY : nil;
          break;
          case ComFasterxmlJacksonAnnotationJsonInclude_Include_Enum_NON_EMPTY:
          suppressNulls = true;
          valueToSuppress = ComFasterxmlJacksonDatabindSerStdMapSerializer_MARKER_FOR_EMPTY;
          break;
          case ComFasterxmlJacksonAnnotationJsonInclude_Include_Enum_CUSTOM:
          valueToSuppress = [provider includeFilterInstanceWithComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition:nil withIOSClass:[inclV getContentFilter]];
          if (valueToSuppress == nil) {
            suppressNulls = true;
          }
          else {
            suppressNulls = [provider includeFilterSuppressNullsWithId:valueToSuppress];
          }
          break;
          case ComFasterxmlJacksonAnnotationJsonInclude_Include_Enum_NON_NULL:
          valueToSuppress = nil;
          suppressNulls = true;
          break;
          case ComFasterxmlJacksonAnnotationJsonInclude_Include_Enum_ALWAYS:
          default:
          valueToSuppress = nil;
          suppressNulls = false;
          break;
        }
        mser = [((ComFasterxmlJacksonDatabindSerStdMapSerializer *) nil_chk(mser)) withContentInclusionWithId:valueToSuppress withBoolean:suppressNulls];
      }
    }
  }
  return mser;
}

- (ComFasterxmlJacksonDatabindJavaType *)getContentType {
  return _valueType_;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)getContentSerializer {
  return _valueSerializer_;
}

- (jboolean)isEmptyWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                              withId:(id<JavaUtilMap>)value {
  if ([((id<JavaUtilMap>) nil_chk(value)) isEmpty]) {
    return true;
  }
  id supp = _suppressableValue_;
  if ((supp == nil) && !_suppressNulls_) {
    return false;
  }
  ComFasterxmlJacksonDatabindJsonSerializer *valueSer = _valueSerializer_;
  jboolean checkEmpty = ComFasterxmlJacksonDatabindSerStdMapSerializer_MARKER_FOR_EMPTY == supp;
  if (valueSer != nil) {
    for (id __strong elemValue in nil_chk([value values])) {
      if (elemValue == nil) {
        if (_suppressNulls_) {
          continue;
        }
        return false;
      }
      if (checkEmpty) {
        if (![valueSer isEmptyWithComFasterxmlJacksonDatabindSerializerProvider:prov withId:elemValue]) {
          return false;
        }
      }
      else if ((supp == nil) || ![nil_chk(supp) isEqual:value]) {
        return false;
      }
    }
    return true;
  }
  for (id __strong elemValue in nil_chk([value values])) {
    if (elemValue == nil) {
      if (_suppressNulls_) {
        continue;
      }
      return false;
    }
    @try {
      valueSer = ComFasterxmlJacksonDatabindSerStdMapSerializer__findSerializerWithComFasterxmlJacksonDatabindSerializerProvider_withId_(self, prov, elemValue);
    }
    @catch (ComFasterxmlJacksonDatabindJsonMappingException *e) {
      return false;
    }
    if (checkEmpty) {
      if (![((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk(valueSer)) isEmptyWithComFasterxmlJacksonDatabindSerializerProvider:prov withId:elemValue]) {
        return false;
      }
    }
    else if ((supp == nil) || ![nil_chk(supp) isEqual:value]) {
      return false;
    }
  }
  return true;
}

- (jboolean)hasSingleElementWithId:(id<JavaUtilMap>)value {
  return [((id<JavaUtilMap>) nil_chk(value)) size] == 1;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)getKeySerializer {
  return _keySerializer_;
}

- (void)serializeWithId:(id<JavaUtilMap>)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeStartObjectWithId:value];
  if (![((id<JavaUtilMap>) nil_chk(value)) isEmpty]) {
    if (_sortKeys_ || [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) isEnabledWithComFasterxmlJacksonDatabindSerializationFeature:JreLoadEnum(ComFasterxmlJacksonDatabindSerializationFeature, ORDER_MAP_ENTRIES_BY_KEYS)]) {
      value = [self _orderEntriesWithJavaUtilMap:value withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider];
    }
    id<ComFasterxmlJacksonDatabindSerPropertyFilter> pf;
    if ((_filterId_ != nil) && (pf = [self findPropertyFilterWithComFasterxmlJacksonDatabindSerializerProvider:provider withId:_filterId_ withId:value]) != nil) {
      [self serializeFilteredFieldsWithJavaUtilMap:value withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider withComFasterxmlJacksonDatabindSerPropertyFilter:pf withId:_suppressableValue_];
    }
    else if ((_suppressableValue_ != nil) || _suppressNulls_) {
      [self serializeOptionalFieldsWithJavaUtilMap:value withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider withId:_suppressableValue_];
    }
    else if (_valueSerializer_ != nil) {
      [self serializeFieldsUsingWithJavaUtilMap:value withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider withComFasterxmlJacksonDatabindJsonSerializer:_valueSerializer_];
    }
    else {
      [self serializeFieldsWithJavaUtilMap:value withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider];
    }
  }
  [gen writeEndObject];
}

- (void)serializeWithTypeWithId:(id<JavaUtilMap>)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer {
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) setCurrentValueWithId:value];
  ComFasterxmlJacksonCoreTypeWritableTypeId *typeIdDef = [((ComFasterxmlJacksonDatabindJsontypeTypeSerializer *) nil_chk(typeSer)) writeTypePrefixWithComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonCoreTypeWritableTypeId:[typeSer typeIdWithId:value withComFasterxmlJacksonCoreJsonToken:JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_OBJECT)]];
  if (![((id<JavaUtilMap>) nil_chk(value)) isEmpty]) {
    if (_sortKeys_ || [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) isEnabledWithComFasterxmlJacksonDatabindSerializationFeature:JreLoadEnum(ComFasterxmlJacksonDatabindSerializationFeature, ORDER_MAP_ENTRIES_BY_KEYS)]) {
      value = [self _orderEntriesWithJavaUtilMap:value withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider];
    }
    id<ComFasterxmlJacksonDatabindSerPropertyFilter> pf;
    if ((_filterId_ != nil) && (pf = [self findPropertyFilterWithComFasterxmlJacksonDatabindSerializerProvider:provider withId:_filterId_ withId:value]) != nil) {
      [self serializeFilteredFieldsWithJavaUtilMap:value withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider withComFasterxmlJacksonDatabindSerPropertyFilter:pf withId:_suppressableValue_];
    }
    else if ((_suppressableValue_ != nil) || _suppressNulls_) {
      [self serializeOptionalFieldsWithJavaUtilMap:value withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider withId:_suppressableValue_];
    }
    else if (_valueSerializer_ != nil) {
      [self serializeFieldsUsingWithJavaUtilMap:value withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider withComFasterxmlJacksonDatabindJsonSerializer:_valueSerializer_];
    }
    else {
      [self serializeFieldsWithJavaUtilMap:value withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider];
    }
  }
  [typeSer writeTypeSuffixWithComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonCoreTypeWritableTypeId:typeIdDef];
}

- (void)serializeFieldsWithJavaUtilMap:(id<JavaUtilMap>)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  if (_valueTypeSerializer_ != nil) {
    [self serializeTypedFieldsWithJavaUtilMap:value withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider withId:nil];
    return;
  }
  ComFasterxmlJacksonDatabindJsonSerializer *keySerializer = _keySerializer_;
  id<JavaUtilSet> ignored = _ignoredEntries_;
  id keyElem = nil;
  @try {
    for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(value)) entrySet])) {
      id valueElem = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getValue];
      keyElem = [entry_ getKey];
      if (keyElem == nil) {
        [((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk([((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) findNullKeySerializerWithComFasterxmlJacksonDatabindJavaType:_keyType_ withComFasterxmlJacksonDatabindBeanProperty:_property_])) serializeWithId:nil withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider];
      }
      else {
        if ((ignored != nil) && [((id<JavaUtilSet>) nil_chk(ignored)) containsWithId:keyElem]) {
          continue;
        }
        [((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk(keySerializer)) serializeWithId:keyElem withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider];
      }
      if (valueElem == nil) {
        [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) defaultSerializeNullWithComFasterxmlJacksonCoreJsonGenerator:gen];
        continue;
      }
      ComFasterxmlJacksonDatabindJsonSerializer *serializer = _valueSerializer_;
      if (serializer == nil) {
        serializer = ComFasterxmlJacksonDatabindSerStdMapSerializer__findSerializerWithComFasterxmlJacksonDatabindSerializerProvider_withId_(self, provider, valueElem);
      }
      [((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk(serializer)) serializeWithId:valueElem withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider];
    }
  }
  @catch (JavaLangException *e) {
    [self wrapAndThrowWithComFasterxmlJacksonDatabindSerializerProvider:provider withJavaLangThrowable:e withId:value withNSString:NSString_java_valueOf_(keyElem)];
  }
}

- (void)serializeOptionalFieldsWithJavaUtilMap:(id<JavaUtilMap>)value
      withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                        withId:(id)suppressableValue {
  if (_valueTypeSerializer_ != nil) {
    [self serializeTypedFieldsWithJavaUtilMap:value withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider withId:suppressableValue];
    return;
  }
  id<JavaUtilSet> ignored = _ignoredEntries_;
  jboolean checkEmpty = ComFasterxmlJacksonDatabindSerStdMapSerializer_MARKER_FOR_EMPTY == suppressableValue;
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(value)) entrySet])) {
    id keyElem = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
    ComFasterxmlJacksonDatabindJsonSerializer *keySerializer;
    if (keyElem == nil) {
      keySerializer = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) findNullKeySerializerWithComFasterxmlJacksonDatabindJavaType:_keyType_ withComFasterxmlJacksonDatabindBeanProperty:_property_];
    }
    else {
      if (ignored != nil && [ignored containsWithId:keyElem]) continue;
      keySerializer = _keySerializer_;
    }
    id valueElem = [entry_ getValue];
    ComFasterxmlJacksonDatabindJsonSerializer *valueSer;
    if (valueElem == nil) {
      if (_suppressNulls_) {
        continue;
      }
      valueSer = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) getDefaultNullValueSerializer];
    }
    else {
      valueSer = _valueSerializer_;
      if (valueSer == nil) {
        valueSer = ComFasterxmlJacksonDatabindSerStdMapSerializer__findSerializerWithComFasterxmlJacksonDatabindSerializerProvider_withId_(self, provider, valueElem);
      }
      if (checkEmpty) {
        if ([((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk(valueSer)) isEmptyWithComFasterxmlJacksonDatabindSerializerProvider:provider withId:valueElem]) {
          continue;
        }
      }
      else if (suppressableValue != nil) {
        if ([suppressableValue isEqual:valueElem]) {
          continue;
        }
      }
    }
    @try {
      [((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk(keySerializer)) serializeWithId:keyElem withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider];
      [((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk(valueSer)) serializeWithId:valueElem withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider];
    }
    @catch (JavaLangException *e) {
      [self wrapAndThrowWithComFasterxmlJacksonDatabindSerializerProvider:provider withJavaLangThrowable:e withId:value withNSString:NSString_java_valueOf_(keyElem)];
    }
  }
}

- (void)serializeFieldsUsingWithJavaUtilMap:(id<JavaUtilMap>)value
   withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)ser {
  ComFasterxmlJacksonDatabindJsonSerializer *keySerializer = _keySerializer_;
  id<JavaUtilSet> ignored = _ignoredEntries_;
  ComFasterxmlJacksonDatabindJsontypeTypeSerializer *typeSer = _valueTypeSerializer_;
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(value)) entrySet])) {
    id keyElem = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
    if (ignored != nil && [ignored containsWithId:keyElem]) continue;
    if (keyElem == nil) {
      [((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk([((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) findNullKeySerializerWithComFasterxmlJacksonDatabindJavaType:_keyType_ withComFasterxmlJacksonDatabindBeanProperty:_property_])) serializeWithId:nil withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider];
    }
    else {
      [((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk(keySerializer)) serializeWithId:keyElem withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider];
    }
    id valueElem = [entry_ getValue];
    if (valueElem == nil) {
      [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) defaultSerializeNullWithComFasterxmlJacksonCoreJsonGenerator:gen];
    }
    else {
      @try {
        if (typeSer == nil) {
          [((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk(ser)) serializeWithId:valueElem withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider];
        }
        else {
          [((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk(ser)) serializeWithTypeWithId:valueElem withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider withComFasterxmlJacksonDatabindJsontypeTypeSerializer:typeSer];
        }
      }
      @catch (JavaLangException *e) {
        [self wrapAndThrowWithComFasterxmlJacksonDatabindSerializerProvider:provider withJavaLangThrowable:e withId:value withNSString:NSString_java_valueOf_(keyElem)];
      }
    }
  }
}

- (void)serializeFilteredFieldsWithJavaUtilMap:(id<JavaUtilMap>)value
      withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
withComFasterxmlJacksonDatabindSerPropertyFilter:(id<ComFasterxmlJacksonDatabindSerPropertyFilter>)filter
                                        withId:(id)suppressableValue {
  id<JavaUtilSet> ignored = _ignoredEntries_;
  ComFasterxmlJacksonDatabindSerStdMapProperty *prop = create_ComFasterxmlJacksonDatabindSerStdMapProperty_initWithComFasterxmlJacksonDatabindJsontypeTypeSerializer_withComFasterxmlJacksonDatabindBeanProperty_(_valueTypeSerializer_, _property_);
  jboolean checkEmpty = ComFasterxmlJacksonDatabindSerStdMapSerializer_MARKER_FOR_EMPTY == suppressableValue;
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(value)) entrySet])) {
    id keyElem = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
    if (ignored != nil && [ignored containsWithId:keyElem]) continue;
    ComFasterxmlJacksonDatabindJsonSerializer *keySerializer;
    if (keyElem == nil) {
      keySerializer = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) findNullKeySerializerWithComFasterxmlJacksonDatabindJavaType:_keyType_ withComFasterxmlJacksonDatabindBeanProperty:_property_];
    }
    else {
      keySerializer = _keySerializer_;
    }
    id valueElem = [entry_ getValue];
    ComFasterxmlJacksonDatabindJsonSerializer *valueSer;
    if (valueElem == nil) {
      if (_suppressNulls_) {
        continue;
      }
      valueSer = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) getDefaultNullValueSerializer];
    }
    else {
      valueSer = _valueSerializer_;
      if (valueSer == nil) {
        valueSer = ComFasterxmlJacksonDatabindSerStdMapSerializer__findSerializerWithComFasterxmlJacksonDatabindSerializerProvider_withId_(self, provider, valueElem);
      }
      if (checkEmpty) {
        if ([((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk(valueSer)) isEmptyWithComFasterxmlJacksonDatabindSerializerProvider:provider withId:valueElem]) {
          continue;
        }
      }
      else if (suppressableValue != nil) {
        if ([suppressableValue isEqual:valueElem]) {
          continue;
        }
      }
    }
    [prop resetWithId:keyElem withId:valueElem withComFasterxmlJacksonDatabindJsonSerializer:keySerializer withComFasterxmlJacksonDatabindJsonSerializer:valueSer];
    @try {
      [((id<ComFasterxmlJacksonDatabindSerPropertyFilter>) nil_chk(filter)) serializeAsFieldWithId:value withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider withComFasterxmlJacksonDatabindSerPropertyWriter:prop];
    }
    @catch (JavaLangException *e) {
      [self wrapAndThrowWithComFasterxmlJacksonDatabindSerializerProvider:provider withJavaLangThrowable:e withId:value withNSString:NSString_java_valueOf_(keyElem)];
    }
  }
}

- (void)serializeTypedFieldsWithJavaUtilMap:(id<JavaUtilMap>)value
   withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                     withId:(id)suppressableValue {
  id<JavaUtilSet> ignored = _ignoredEntries_;
  jboolean checkEmpty = ComFasterxmlJacksonDatabindSerStdMapSerializer_MARKER_FOR_EMPTY == suppressableValue;
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(value)) entrySet])) {
    id keyElem = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
    ComFasterxmlJacksonDatabindJsonSerializer *keySerializer;
    if (keyElem == nil) {
      keySerializer = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) findNullKeySerializerWithComFasterxmlJacksonDatabindJavaType:_keyType_ withComFasterxmlJacksonDatabindBeanProperty:_property_];
    }
    else {
      if (ignored != nil && [ignored containsWithId:keyElem]) continue;
      keySerializer = _keySerializer_;
    }
    id valueElem = [entry_ getValue];
    ComFasterxmlJacksonDatabindJsonSerializer *valueSer;
    if (valueElem == nil) {
      if (_suppressNulls_) {
        continue;
      }
      valueSer = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) getDefaultNullValueSerializer];
    }
    else {
      valueSer = _valueSerializer_;
      if (valueSer == nil) {
        valueSer = ComFasterxmlJacksonDatabindSerStdMapSerializer__findSerializerWithComFasterxmlJacksonDatabindSerializerProvider_withId_(self, provider, valueElem);
      }
      if (checkEmpty) {
        if ([((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk(valueSer)) isEmptyWithComFasterxmlJacksonDatabindSerializerProvider:provider withId:valueElem]) {
          continue;
        }
      }
      else if (suppressableValue != nil) {
        if ([suppressableValue isEqual:valueElem]) {
          continue;
        }
      }
    }
    [((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk(keySerializer)) serializeWithId:keyElem withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider];
    @try {
      [((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk(valueSer)) serializeWithTypeWithId:valueElem withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider withComFasterxmlJacksonDatabindJsontypeTypeSerializer:_valueTypeSerializer_];
    }
    @catch (JavaLangException *e) {
      [self wrapAndThrowWithComFasterxmlJacksonDatabindSerializerProvider:provider withJavaLangThrowable:e withId:value withNSString:NSString_java_valueOf_(keyElem)];
    }
  }
}

- (void)serializeFilteredAnyPropertiesWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                               withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
                                                                                 withId:(id)bean
                                                                        withJavaUtilMap:(id<JavaUtilMap>)value
                                       withComFasterxmlJacksonDatabindSerPropertyFilter:(id<ComFasterxmlJacksonDatabindSerPropertyFilter>)filter
                                                                                 withId:(id)suppressableValue {
  id<JavaUtilSet> ignored = _ignoredEntries_;
  ComFasterxmlJacksonDatabindSerStdMapProperty *prop = create_ComFasterxmlJacksonDatabindSerStdMapProperty_initWithComFasterxmlJacksonDatabindJsontypeTypeSerializer_withComFasterxmlJacksonDatabindBeanProperty_(_valueTypeSerializer_, _property_);
  jboolean checkEmpty = ComFasterxmlJacksonDatabindSerStdMapSerializer_MARKER_FOR_EMPTY == suppressableValue;
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(value)) entrySet])) {
    id keyElem = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
    if (ignored != nil && [ignored containsWithId:keyElem]) continue;
    ComFasterxmlJacksonDatabindJsonSerializer *keySerializer;
    if (keyElem == nil) {
      keySerializer = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) findNullKeySerializerWithComFasterxmlJacksonDatabindJavaType:_keyType_ withComFasterxmlJacksonDatabindBeanProperty:_property_];
    }
    else {
      keySerializer = _keySerializer_;
    }
    id valueElem = [entry_ getValue];
    ComFasterxmlJacksonDatabindJsonSerializer *valueSer;
    if (valueElem == nil) {
      if (_suppressNulls_) {
        continue;
      }
      valueSer = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) getDefaultNullValueSerializer];
    }
    else {
      valueSer = _valueSerializer_;
      if (valueSer == nil) {
        valueSer = ComFasterxmlJacksonDatabindSerStdMapSerializer__findSerializerWithComFasterxmlJacksonDatabindSerializerProvider_withId_(self, provider, valueElem);
      }
      if (checkEmpty) {
        if ([((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk(valueSer)) isEmptyWithComFasterxmlJacksonDatabindSerializerProvider:provider withId:valueElem]) {
          continue;
        }
      }
      else if (suppressableValue != nil) {
        if ([suppressableValue isEqual:valueElem]) {
          continue;
        }
      }
    }
    [prop resetWithId:keyElem withId:valueElem withComFasterxmlJacksonDatabindJsonSerializer:keySerializer withComFasterxmlJacksonDatabindJsonSerializer:valueSer];
    @try {
      [((id<ComFasterxmlJacksonDatabindSerPropertyFilter>) nil_chk(filter)) serializeAsFieldWithId:bean withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider withComFasterxmlJacksonDatabindSerPropertyWriter:prop];
    }
    @catch (JavaLangException *e) {
      [self wrapAndThrowWithComFasterxmlJacksonDatabindSerializerProvider:provider withJavaLangThrowable:e withId:value withNSString:NSString_java_valueOf_(keyElem)];
    }
  }
}

- (ComFasterxmlJacksonDatabindJsonNode *)getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                            withJavaLangReflectType:(id<JavaLangReflectType>)typeHint {
  return [self createSchemaNodeWithNSString:@"object" withBoolean:true];
}

- (void)acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint {
  id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonMapFormatVisitor> v2 = [((id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>) nil_chk(visitor)) expectMapFormatWithComFasterxmlJacksonDatabindJavaType:typeHint];
  if (v2 != nil) {
    [v2 keyFormatWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitable:_keySerializer_ withComFasterxmlJacksonDatabindJavaType:_keyType_];
    ComFasterxmlJacksonDatabindJsonSerializer *valueSer = _valueSerializer_;
    if (valueSer == nil) {
      valueSer = ComFasterxmlJacksonDatabindSerStdMapSerializer__findAndAddDynamicWithComFasterxmlJacksonDatabindSerImplPropertySerializerMap_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindSerializerProvider_(self, _dynamicValueSerializers_, _valueType_, [visitor getProvider]);
    }
    [v2 valueFormatWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitable:valueSer withComFasterxmlJacksonDatabindJavaType:_valueType_];
  }
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)_findAndAddDynamicWithComFasterxmlJacksonDatabindSerImplPropertySerializerMap:(ComFasterxmlJacksonDatabindSerImplPropertySerializerMap *)map
                                                                                                                withIOSClass:(IOSClass *)type
                                                                           withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  return ComFasterxmlJacksonDatabindSerStdMapSerializer__findAndAddDynamicWithComFasterxmlJacksonDatabindSerImplPropertySerializerMap_withIOSClass_withComFasterxmlJacksonDatabindSerializerProvider_(self, map, type, provider);
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)_findAndAddDynamicWithComFasterxmlJacksonDatabindSerImplPropertySerializerMap:(ComFasterxmlJacksonDatabindSerImplPropertySerializerMap *)map
                                                                                     withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                                           withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  return ComFasterxmlJacksonDatabindSerStdMapSerializer__findAndAddDynamicWithComFasterxmlJacksonDatabindSerImplPropertySerializerMap_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindSerializerProvider_(self, map, type, provider);
}

- (id<JavaUtilMap>)_orderEntriesWithJavaUtilMap:(id<JavaUtilMap>)input
       withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  if ([JavaUtilSortedMap_class_() isInstance:input]) {
    return input;
  }
  if ([self _hasNullKeyWithJavaUtilMap:input]) {
    JavaUtilTreeMap *result = create_JavaUtilTreeMap_init();
    for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(input)) entrySet])) {
      id key = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
      if (key == nil) {
        [self _writeNullKeyedEntryWithComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider withId:[entry_ getValue]];
        continue;
      }
      [result putWithId:key withId:[entry_ getValue]];
    }
    return result;
  }
  return create_JavaUtilTreeMap_initWithJavaUtilMap_(input);
}

- (jboolean)_hasNullKeyWithJavaUtilMap:(id<JavaUtilMap>)input {
  return ([input isKindOfClass:[JavaUtilHashMap class]]) && [((id<JavaUtilMap>) nil_chk(input)) containsKeyWithId:nil];
}

- (void)_writeNullKeyedEntryWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
                   withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                              withId:(id)value {
  ComFasterxmlJacksonDatabindJsonSerializer *keySerializer = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) findNullKeySerializerWithComFasterxmlJacksonDatabindJavaType:_keyType_ withComFasterxmlJacksonDatabindBeanProperty:_property_];
  ComFasterxmlJacksonDatabindJsonSerializer *valueSer;
  if (value == nil) {
    if (_suppressNulls_) {
      return;
    }
    valueSer = [provider getDefaultNullValueSerializer];
  }
  else {
    valueSer = _valueSerializer_;
    if (valueSer == nil) {
      valueSer = ComFasterxmlJacksonDatabindSerStdMapSerializer__findSerializerWithComFasterxmlJacksonDatabindSerializerProvider_withId_(self, provider, value);
    }
    if (_suppressableValue_ == ComFasterxmlJacksonDatabindSerStdMapSerializer_MARKER_FOR_EMPTY) {
      if ([((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk(valueSer)) isEmptyWithComFasterxmlJacksonDatabindSerializerProvider:provider withId:value]) {
        return;
      }
    }
    else if ((_suppressableValue_ != nil) && ([nil_chk(_suppressableValue_) isEqual:value])) {
      return;
    }
  }
  @try {
    [((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk(keySerializer)) serializeWithId:nil withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider];
    [((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk(valueSer)) serializeWithId:value withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider];
  }
  @catch (JavaLangException *e) {
    [self wrapAndThrowWithComFasterxmlJacksonDatabindSerializerProvider:provider withJavaLangThrowable:e withId:value withNSString:@""];
  }
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)_findSerializerWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                                                         withId:(id)value {
  return ComFasterxmlJacksonDatabindSerStdMapSerializer__findSerializerWithComFasterxmlJacksonDatabindSerializerProvider_withId_(self, provider, value);
}

- (void)dealloc {
  RELEASE_(_property_);
  RELEASE_(_keyType_);
  RELEASE_(_valueType_);
  RELEASE_(_keySerializer_);
  RELEASE_(_valueSerializer_);
  RELEASE_(_valueTypeSerializer_);
  RELEASE_(_dynamicValueSerializers_);
  RELEASE_(_ignoredEntries_);
  RELEASE_(_filterId_);
  RELEASE_(_suppressableValue_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x4, -1, 2, -1, 3, -1, -1 },
    { NULL, NULL, 0x4, -1, 4, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 5, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerStdMapSerializer;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerStdMapSerializer;", 0x1, 8, 9, -1, 10, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerStdMapSerializer;", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerStdMapSerializer;", 0x1, 13, 14, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerStdMapSerializer;", 0x9, 15, 16, -1, 17, -1, -1 },
    { NULL, "V", 0x4, 18, 19, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, 20, -1 },
    { NULL, NULL, 0x4, -1, 21, -1, -1, 22, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerStdMapSerializer;", 0x1, 13, 12, -1, -1, 23, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerStdMapSerializer;", 0x9, 15, 24, -1, 25, 26, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 27, 28, 29, 30, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, -1, -1, -1, 31, -1, -1 },
    { NULL, "Z", 0x1, 32, 33, -1, 34, -1, -1 },
    { NULL, "Z", 0x1, 35, 36, -1, 37, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, -1, -1, -1, 31, -1, -1 },
    { NULL, "V", 0x1, 38, 39, 40, 41, -1, -1 },
    { NULL, "V", 0x1, 42, 43, 40, 44, -1, -1 },
    { NULL, "V", 0x1, 45, 39, 40, 41, -1, -1 },
    { NULL, "V", 0x1, 46, 47, 40, 48, -1, -1 },
    { NULL, "V", 0x1, 49, 50, 40, 51, -1, -1 },
    { NULL, "V", 0x1, 52, 53, 40, 54, -1, -1 },
    { NULL, "V", 0x1, 55, 47, 40, 48, -1, -1 },
    { NULL, "V", 0x1, 56, 57, 40, 58, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x1, 59, 60, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 61, 62, 29, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x14, 63, 64, 29, 65, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x14, 63, 66, 29, 67, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x4, 68, 39, 40, 69, -1, -1 },
    { NULL, "Z", 0x4, 70, 36, -1, 37, -1, -1 },
    { NULL, "V", 0x4, 71, 72, 40, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x12, 73, 74, 29, 75, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithJavaUtilSet:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindJavaType:withBoolean:withComFasterxmlJacksonDatabindJsontypeTypeSerializer:withComFasterxmlJacksonDatabindJsonSerializer:withComFasterxmlJacksonDatabindJsonSerializer:);
  methods[1].selector = @selector(initWithComFasterxmlJacksonDatabindSerStdMapSerializer:withComFasterxmlJacksonDatabindBeanProperty:withComFasterxmlJacksonDatabindJsonSerializer:withComFasterxmlJacksonDatabindJsonSerializer:withJavaUtilSet:);
  methods[2].selector = @selector(initWithComFasterxmlJacksonDatabindSerStdMapSerializer:withComFasterxmlJacksonDatabindJsontypeTypeSerializer:withId:withBoolean:);
  methods[3].selector = @selector(initWithComFasterxmlJacksonDatabindSerStdMapSerializer:withId:withBoolean:);
  methods[4].selector = @selector(_withValueTypeSerializerWithComFasterxmlJacksonDatabindJsontypeTypeSerializer:);
  methods[5].selector = @selector(withResolvedWithComFasterxmlJacksonDatabindBeanProperty:withComFasterxmlJacksonDatabindJsonSerializer:withComFasterxmlJacksonDatabindJsonSerializer:withJavaUtilSet:withBoolean:);
  methods[6].selector = @selector(withFilterIdWithId:);
  methods[7].selector = @selector(withContentInclusionWithId:withBoolean:);
  methods[8].selector = @selector(constructWithJavaUtilSet:withComFasterxmlJacksonDatabindJavaType:withBoolean:withComFasterxmlJacksonDatabindJsontypeTypeSerializer:withComFasterxmlJacksonDatabindJsonSerializer:withComFasterxmlJacksonDatabindJsonSerializer:withId:);
  methods[9].selector = @selector(_ensureOverrideWithNSString:);
  methods[10].selector = @selector(_ensureOverride);
  methods[11].selector = @selector(initWithComFasterxmlJacksonDatabindSerStdMapSerializer:withComFasterxmlJacksonDatabindJsontypeTypeSerializer:withId:);
  methods[12].selector = @selector(withContentInclusionWithId:);
  methods[13].selector = @selector(constructWithNSStringArray:withComFasterxmlJacksonDatabindJavaType:withBoolean:withComFasterxmlJacksonDatabindJsontypeTypeSerializer:withComFasterxmlJacksonDatabindJsonSerializer:withComFasterxmlJacksonDatabindJsonSerializer:withId:);
  methods[14].selector = @selector(createContextualWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindBeanProperty:);
  methods[15].selector = @selector(getContentType);
  methods[16].selector = @selector(getContentSerializer);
  methods[17].selector = @selector(isEmptyWithComFasterxmlJacksonDatabindSerializerProvider:withId:);
  methods[18].selector = @selector(hasSingleElementWithId:);
  methods[19].selector = @selector(getKeySerializer);
  methods[20].selector = @selector(serializeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  methods[21].selector = @selector(serializeWithTypeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindJsontypeTypeSerializer:);
  methods[22].selector = @selector(serializeFieldsWithJavaUtilMap:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  methods[23].selector = @selector(serializeOptionalFieldsWithJavaUtilMap:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:withId:);
  methods[24].selector = @selector(serializeFieldsUsingWithJavaUtilMap:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindJsonSerializer:);
  methods[25].selector = @selector(serializeFilteredFieldsWithJavaUtilMap:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindSerPropertyFilter:withId:);
  methods[26].selector = @selector(serializeTypedFieldsWithJavaUtilMap:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:withId:);
  methods[27].selector = @selector(serializeFilteredAnyPropertiesWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonCoreJsonGenerator:withId:withJavaUtilMap:withComFasterxmlJacksonDatabindSerPropertyFilter:withId:);
  methods[28].selector = @selector(getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:withJavaLangReflectType:);
  methods[29].selector = @selector(acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:withComFasterxmlJacksonDatabindJavaType:);
  methods[30].selector = @selector(_findAndAddDynamicWithComFasterxmlJacksonDatabindSerImplPropertySerializerMap:withIOSClass:withComFasterxmlJacksonDatabindSerializerProvider:);
  methods[31].selector = @selector(_findAndAddDynamicWithComFasterxmlJacksonDatabindSerImplPropertySerializerMap:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindSerializerProvider:);
  methods[32].selector = @selector(_orderEntriesWithJavaUtilMap:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  methods[33].selector = @selector(_hasNullKeyWithJavaUtilMap:);
  methods[34].selector = @selector(_writeNullKeyedEntryWithComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:withId:);
  methods[35].selector = @selector(_findSerializerWithComFasterxmlJacksonDatabindSerializerProvider:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindSerStdMapSerializer_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "UNSPECIFIED_TYPE", "LComFasterxmlJacksonDatabindJavaType;", .constantValue.asLong = 0, 0x1c, -1, 76, -1, -1 },
    { "MARKER_FOR_EMPTY", "LNSObject;", .constantValue.asLong = 0, 0x19, -1, 77, -1, -1 },
    { "_property_", "LComFasterxmlJacksonDatabindBeanProperty;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_valueTypeIsStatic_", "Z", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_keyType_", "LComFasterxmlJacksonDatabindJavaType;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_valueType_", "LComFasterxmlJacksonDatabindJavaType;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_keySerializer_", "LComFasterxmlJacksonDatabindJsonSerializer;", .constantValue.asLong = 0, 0x4, -1, -1, 78, -1 },
    { "_valueSerializer_", "LComFasterxmlJacksonDatabindJsonSerializer;", .constantValue.asLong = 0, 0x4, -1, -1, 78, -1 },
    { "_valueTypeSerializer_", "LComFasterxmlJacksonDatabindJsontypeTypeSerializer;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_dynamicValueSerializers_", "LComFasterxmlJacksonDatabindSerImplPropertySerializerMap;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_ignoredEntries_", "LJavaUtilSet;", .constantValue.asLong = 0, 0x14, -1, -1, 79, -1 },
    { "_filterId_", "LNSObject;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_suppressableValue_", "LNSObject;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_suppressNulls_", "Z", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_sortKeys_", "Z", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilSet;LComFasterxmlJacksonDatabindJavaType;LComFasterxmlJacksonDatabindJavaType;ZLComFasterxmlJacksonDatabindJsontypeTypeSerializer;LComFasterxmlJacksonDatabindJsonSerializer;LComFasterxmlJacksonDatabindJsonSerializer;", "(Ljava/util/Set<Ljava/lang/String;>;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/JavaType;ZLcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer<*>;Lcom/fasterxml/jackson/databind/JsonSerializer<*>;)V", "LComFasterxmlJacksonDatabindSerStdMapSerializer;LComFasterxmlJacksonDatabindBeanProperty;LComFasterxmlJacksonDatabindJsonSerializer;LComFasterxmlJacksonDatabindJsonSerializer;LJavaUtilSet;", "(Lcom/fasterxml/jackson/databind/ser/std/MapSerializer;Lcom/fasterxml/jackson/databind/BeanProperty;Lcom/fasterxml/jackson/databind/JsonSerializer<*>;Lcom/fasterxml/jackson/databind/JsonSerializer<*>;Ljava/util/Set<Ljava/lang/String;>;)V", "LComFasterxmlJacksonDatabindSerStdMapSerializer;LComFasterxmlJacksonDatabindJsontypeTypeSerializer;LNSObject;Z", "LComFasterxmlJacksonDatabindSerStdMapSerializer;LNSObject;Z", "_withValueTypeSerializer", "LComFasterxmlJacksonDatabindJsontypeTypeSerializer;", "withResolved", "LComFasterxmlJacksonDatabindBeanProperty;LComFasterxmlJacksonDatabindJsonSerializer;LComFasterxmlJacksonDatabindJsonSerializer;LJavaUtilSet;Z", "(Lcom/fasterxml/jackson/databind/BeanProperty;Lcom/fasterxml/jackson/databind/JsonSerializer<*>;Lcom/fasterxml/jackson/databind/JsonSerializer<*>;Ljava/util/Set<Ljava/lang/String;>;Z)Lcom/fasterxml/jackson/databind/ser/std/MapSerializer;", "withFilterId", "LNSObject;", "withContentInclusion", "LNSObject;Z", "construct", "LJavaUtilSet;LComFasterxmlJacksonDatabindJavaType;ZLComFasterxmlJacksonDatabindJsontypeTypeSerializer;LComFasterxmlJacksonDatabindJsonSerializer;LComFasterxmlJacksonDatabindJsonSerializer;LNSObject;", "(Ljava/util/Set<Ljava/lang/String;>;Lcom/fasterxml/jackson/databind/JavaType;ZLcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;Ljava/lang/Object;)Lcom/fasterxml/jackson/databind/ser/std/MapSerializer;", "_ensureOverride", "LNSString;", (void *)&ComFasterxmlJacksonDatabindSerStdMapSerializer__Annotations$0, "LComFasterxmlJacksonDatabindSerStdMapSerializer;LComFasterxmlJacksonDatabindJsontypeTypeSerializer;LNSObject;", (void *)&ComFasterxmlJacksonDatabindSerStdMapSerializer__Annotations$1, (void *)&ComFasterxmlJacksonDatabindSerStdMapSerializer__Annotations$2, "[LNSString;LComFasterxmlJacksonDatabindJavaType;ZLComFasterxmlJacksonDatabindJsontypeTypeSerializer;LComFasterxmlJacksonDatabindJsonSerializer;LComFasterxmlJacksonDatabindJsonSerializer;LNSObject;", "([Ljava/lang/String;Lcom/fasterxml/jackson/databind/JavaType;ZLcom/fasterxml/jackson/databind/jsontype/TypeSerializer;Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;Ljava/lang/Object;)Lcom/fasterxml/jackson/databind/ser/std/MapSerializer;", (void *)&ComFasterxmlJacksonDatabindSerStdMapSerializer__Annotations$3, "createContextual", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindBeanProperty;", "LComFasterxmlJacksonDatabindJsonMappingException;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonSerializer<*>;", "()Lcom/fasterxml/jackson/databind/JsonSerializer<*>;", "isEmpty", "LComFasterxmlJacksonDatabindSerializerProvider;LJavaUtilMap;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/util/Map<**>;)Z", "hasSingleElement", "LJavaUtilMap;", "(Ljava/util/Map<**>;)Z", "serialize", "LJavaUtilMap;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;", "LJavaIoIOException;", "(Ljava/util/Map<**>;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V", "serializeWithType", "LJavaUtilMap;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindJsontypeTypeSerializer;", "(Ljava/util/Map<**>;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V", "serializeFields", "serializeOptionalFields", "LJavaUtilMap;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;LNSObject;", "(Ljava/util/Map<**>;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/lang/Object;)V", "serializeFieldsUsing", "LJavaUtilMap;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindJsonSerializer;", "(Ljava/util/Map<**>;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;)V", "serializeFilteredFields", "LJavaUtilMap;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindSerPropertyFilter;LNSObject;", "(Ljava/util/Map<**>;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/ser/PropertyFilter;Ljava/lang/Object;)V", "serializeTypedFields", "serializeFilteredAnyProperties", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonCoreJsonGenerator;LNSObject;LJavaUtilMap;LComFasterxmlJacksonDatabindSerPropertyFilter;LNSObject;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/core/JsonGenerator;Ljava/lang/Object;Ljava/util/Map<**>;Lcom/fasterxml/jackson/databind/ser/PropertyFilter;Ljava/lang/Object;)V", "getSchema", "LComFasterxmlJacksonDatabindSerializerProvider;LJavaLangReflectType;", "acceptJsonFormatVisitor", "LComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;LComFasterxmlJacksonDatabindJavaType;", "_findAndAddDynamic", "LComFasterxmlJacksonDatabindSerImplPropertySerializerMap;LIOSClass;LComFasterxmlJacksonDatabindSerializerProvider;", "(Lcom/fasterxml/jackson/databind/ser/impl/PropertySerializerMap;Ljava/lang/Class<*>;Lcom/fasterxml/jackson/databind/SerializerProvider;)Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", "LComFasterxmlJacksonDatabindSerImplPropertySerializerMap;LComFasterxmlJacksonDatabindJavaType;LComFasterxmlJacksonDatabindSerializerProvider;", "(Lcom/fasterxml/jackson/databind/ser/impl/PropertySerializerMap;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/SerializerProvider;)Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", "_orderEntries", "(Ljava/util/Map<**>;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)Ljava/util/Map<**>;", "_hasNullKey", "_writeNullKeyedEntry", "LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;LNSObject;", "_findSerializer", "LComFasterxmlJacksonDatabindSerializerProvider;LNSObject;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Ljava/lang/Object;)Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", &ComFasterxmlJacksonDatabindSerStdMapSerializer_UNSPECIFIED_TYPE, &ComFasterxmlJacksonDatabindSerStdMapSerializer_MARKER_FOR_EMPTY, "Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", "Ljava/util/Set<Ljava/lang/String;>;", "Lcom/fasterxml/jackson/databind/ser/ContainerSerializer<Ljava/util/Map<**>;>;Lcom/fasterxml/jackson/databind/ser/ContextualSerializer;", (void *)&ComFasterxmlJacksonDatabindSerStdMapSerializer__Annotations$4 };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerStdMapSerializer = { "MapSerializer", "com.fasterxml.jackson.databind.ser.std", ptrTable, methods, fields, 7, 0x1, 36, 16, -1, -1, -1, 80, 81 };
  return &_ComFasterxmlJacksonDatabindSerStdMapSerializer;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindSerStdMapSerializer class]) {
    JreStrongAssign(&ComFasterxmlJacksonDatabindSerStdMapSerializer_UNSPECIFIED_TYPE, ComFasterxmlJacksonDatabindTypeTypeFactory_unknownType());
    JreStrongAssign(&ComFasterxmlJacksonDatabindSerStdMapSerializer_MARKER_FOR_EMPTY, JreLoadEnum(ComFasterxmlJacksonAnnotationJsonInclude_Include, NON_EMPTY));
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindSerStdMapSerializer)
  }
}

@end

void ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithJavaUtilSet_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_withBoolean_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withComFasterxmlJacksonDatabindJsonSerializer_(ComFasterxmlJacksonDatabindSerStdMapSerializer *self, id<JavaUtilSet> ignoredEntries, ComFasterxmlJacksonDatabindJavaType *keyType, ComFasterxmlJacksonDatabindJavaType *valueType, jboolean valueTypeIsStatic, ComFasterxmlJacksonDatabindJsontypeTypeSerializer *vts, ComFasterxmlJacksonDatabindJsonSerializer *keySerializer, ComFasterxmlJacksonDatabindJsonSerializer *valueSerializer) {
  ComFasterxmlJacksonDatabindSerContainerSerializer_initWithIOSClass_withBoolean_(self, JavaUtilMap_class_(), false);
  JreStrongAssign(&self->_ignoredEntries_, ((ignoredEntries == nil) || [((id<JavaUtilSet>) nil_chk(ignoredEntries)) isEmpty]) ? nil : ignoredEntries);
  JreStrongAssign(&self->_keyType_, keyType);
  JreStrongAssign(&self->_valueType_, valueType);
  self->_valueTypeIsStatic_ = valueTypeIsStatic;
  JreStrongAssign(&self->_valueTypeSerializer_, vts);
  JreStrongAssign(&self->_keySerializer_, keySerializer);
  JreStrongAssign(&self->_valueSerializer_, valueSerializer);
  JreStrongAssign(&self->_dynamicValueSerializers_, ComFasterxmlJacksonDatabindSerImplPropertySerializerMap_emptyForProperties());
  JreStrongAssign(&self->_property_, nil);
  JreStrongAssign(&self->_filterId_, nil);
  self->_sortKeys_ = false;
  JreStrongAssign(&self->_suppressableValue_, nil);
  self->_suppressNulls_ = false;
}

ComFasterxmlJacksonDatabindSerStdMapSerializer *new_ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithJavaUtilSet_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_withBoolean_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withComFasterxmlJacksonDatabindJsonSerializer_(id<JavaUtilSet> ignoredEntries, ComFasterxmlJacksonDatabindJavaType *keyType, ComFasterxmlJacksonDatabindJavaType *valueType, jboolean valueTypeIsStatic, ComFasterxmlJacksonDatabindJsontypeTypeSerializer *vts, ComFasterxmlJacksonDatabindJsonSerializer *keySerializer, ComFasterxmlJacksonDatabindJsonSerializer *valueSerializer) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerStdMapSerializer, initWithJavaUtilSet_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_withBoolean_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withComFasterxmlJacksonDatabindJsonSerializer_, ignoredEntries, keyType, valueType, valueTypeIsStatic, vts, keySerializer, valueSerializer)
}

ComFasterxmlJacksonDatabindSerStdMapSerializer *create_ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithJavaUtilSet_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_withBoolean_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withComFasterxmlJacksonDatabindJsonSerializer_(id<JavaUtilSet> ignoredEntries, ComFasterxmlJacksonDatabindJavaType *keyType, ComFasterxmlJacksonDatabindJavaType *valueType, jboolean valueTypeIsStatic, ComFasterxmlJacksonDatabindJsontypeTypeSerializer *vts, ComFasterxmlJacksonDatabindJsonSerializer *keySerializer, ComFasterxmlJacksonDatabindJsonSerializer *valueSerializer) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerStdMapSerializer, initWithJavaUtilSet_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_withBoolean_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withComFasterxmlJacksonDatabindJsonSerializer_, ignoredEntries, keyType, valueType, valueTypeIsStatic, vts, keySerializer, valueSerializer)
}

void ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withComFasterxmlJacksonDatabindBeanProperty_withComFasterxmlJacksonDatabindJsonSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withJavaUtilSet_(ComFasterxmlJacksonDatabindSerStdMapSerializer *self, ComFasterxmlJacksonDatabindSerStdMapSerializer *src, id<ComFasterxmlJacksonDatabindBeanProperty> property, ComFasterxmlJacksonDatabindJsonSerializer *keySerializer, ComFasterxmlJacksonDatabindJsonSerializer *valueSerializer, id<JavaUtilSet> ignoredEntries) {
  ComFasterxmlJacksonDatabindSerContainerSerializer_initWithIOSClass_withBoolean_(self, JavaUtilMap_class_(), false);
  JreStrongAssign(&self->_ignoredEntries_, ((ignoredEntries == nil) || [((id<JavaUtilSet>) nil_chk(ignoredEntries)) isEmpty]) ? nil : ignoredEntries);
  JreStrongAssign(&self->_keyType_, ((ComFasterxmlJacksonDatabindSerStdMapSerializer *) nil_chk(src))->_keyType_);
  JreStrongAssign(&self->_valueType_, src->_valueType_);
  self->_valueTypeIsStatic_ = src->_valueTypeIsStatic_;
  JreStrongAssign(&self->_valueTypeSerializer_, src->_valueTypeSerializer_);
  JreStrongAssign(&self->_keySerializer_, keySerializer);
  JreStrongAssign(&self->_valueSerializer_, valueSerializer);
  JreStrongAssign(&self->_dynamicValueSerializers_, src->_dynamicValueSerializers_);
  JreStrongAssign(&self->_property_, property);
  JreStrongAssign(&self->_filterId_, src->_filterId_);
  self->_sortKeys_ = src->_sortKeys_;
  JreStrongAssign(&self->_suppressableValue_, src->_suppressableValue_);
  self->_suppressNulls_ = src->_suppressNulls_;
}

ComFasterxmlJacksonDatabindSerStdMapSerializer *new_ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withComFasterxmlJacksonDatabindBeanProperty_withComFasterxmlJacksonDatabindJsonSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withJavaUtilSet_(ComFasterxmlJacksonDatabindSerStdMapSerializer *src, id<ComFasterxmlJacksonDatabindBeanProperty> property, ComFasterxmlJacksonDatabindJsonSerializer *keySerializer, ComFasterxmlJacksonDatabindJsonSerializer *valueSerializer, id<JavaUtilSet> ignoredEntries) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerStdMapSerializer, initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withComFasterxmlJacksonDatabindBeanProperty_withComFasterxmlJacksonDatabindJsonSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withJavaUtilSet_, src, property, keySerializer, valueSerializer, ignoredEntries)
}

ComFasterxmlJacksonDatabindSerStdMapSerializer *create_ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withComFasterxmlJacksonDatabindBeanProperty_withComFasterxmlJacksonDatabindJsonSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withJavaUtilSet_(ComFasterxmlJacksonDatabindSerStdMapSerializer *src, id<ComFasterxmlJacksonDatabindBeanProperty> property, ComFasterxmlJacksonDatabindJsonSerializer *keySerializer, ComFasterxmlJacksonDatabindJsonSerializer *valueSerializer, id<JavaUtilSet> ignoredEntries) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerStdMapSerializer, initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withComFasterxmlJacksonDatabindBeanProperty_withComFasterxmlJacksonDatabindJsonSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withJavaUtilSet_, src, property, keySerializer, valueSerializer, ignoredEntries)
}

void ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withId_withBoolean_(ComFasterxmlJacksonDatabindSerStdMapSerializer *self, ComFasterxmlJacksonDatabindSerStdMapSerializer *src, ComFasterxmlJacksonDatabindJsontypeTypeSerializer *vts, id suppressableValue, jboolean suppressNulls) {
  ComFasterxmlJacksonDatabindSerContainerSerializer_initWithIOSClass_withBoolean_(self, JavaUtilMap_class_(), false);
  JreStrongAssign(&self->_ignoredEntries_, ((ComFasterxmlJacksonDatabindSerStdMapSerializer *) nil_chk(src))->_ignoredEntries_);
  JreStrongAssign(&self->_keyType_, src->_keyType_);
  JreStrongAssign(&self->_valueType_, src->_valueType_);
  self->_valueTypeIsStatic_ = src->_valueTypeIsStatic_;
  JreStrongAssign(&self->_valueTypeSerializer_, vts);
  JreStrongAssign(&self->_keySerializer_, src->_keySerializer_);
  JreStrongAssign(&self->_valueSerializer_, src->_valueSerializer_);
  JreStrongAssign(&self->_dynamicValueSerializers_, src->_dynamicValueSerializers_);
  JreStrongAssign(&self->_property_, src->_property_);
  JreStrongAssign(&self->_filterId_, src->_filterId_);
  self->_sortKeys_ = src->_sortKeys_;
  JreStrongAssign(&self->_suppressableValue_, suppressableValue);
  self->_suppressNulls_ = suppressNulls;
}

ComFasterxmlJacksonDatabindSerStdMapSerializer *new_ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withId_withBoolean_(ComFasterxmlJacksonDatabindSerStdMapSerializer *src, ComFasterxmlJacksonDatabindJsontypeTypeSerializer *vts, id suppressableValue, jboolean suppressNulls) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerStdMapSerializer, initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withId_withBoolean_, src, vts, suppressableValue, suppressNulls)
}

ComFasterxmlJacksonDatabindSerStdMapSerializer *create_ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withId_withBoolean_(ComFasterxmlJacksonDatabindSerStdMapSerializer *src, ComFasterxmlJacksonDatabindJsontypeTypeSerializer *vts, id suppressableValue, jboolean suppressNulls) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerStdMapSerializer, initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withId_withBoolean_, src, vts, suppressableValue, suppressNulls)
}

void ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withId_withBoolean_(ComFasterxmlJacksonDatabindSerStdMapSerializer *self, ComFasterxmlJacksonDatabindSerStdMapSerializer *src, id filterId, jboolean sortKeys) {
  ComFasterxmlJacksonDatabindSerContainerSerializer_initWithIOSClass_withBoolean_(self, JavaUtilMap_class_(), false);
  JreStrongAssign(&self->_ignoredEntries_, ((ComFasterxmlJacksonDatabindSerStdMapSerializer *) nil_chk(src))->_ignoredEntries_);
  JreStrongAssign(&self->_keyType_, src->_keyType_);
  JreStrongAssign(&self->_valueType_, src->_valueType_);
  self->_valueTypeIsStatic_ = src->_valueTypeIsStatic_;
  JreStrongAssign(&self->_valueTypeSerializer_, src->_valueTypeSerializer_);
  JreStrongAssign(&self->_keySerializer_, src->_keySerializer_);
  JreStrongAssign(&self->_valueSerializer_, src->_valueSerializer_);
  JreStrongAssign(&self->_dynamicValueSerializers_, src->_dynamicValueSerializers_);
  JreStrongAssign(&self->_property_, src->_property_);
  JreStrongAssign(&self->_filterId_, filterId);
  self->_sortKeys_ = sortKeys;
  JreStrongAssign(&self->_suppressableValue_, src->_suppressableValue_);
  self->_suppressNulls_ = src->_suppressNulls_;
}

ComFasterxmlJacksonDatabindSerStdMapSerializer *new_ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withId_withBoolean_(ComFasterxmlJacksonDatabindSerStdMapSerializer *src, id filterId, jboolean sortKeys) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerStdMapSerializer, initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withId_withBoolean_, src, filterId, sortKeys)
}

ComFasterxmlJacksonDatabindSerStdMapSerializer *create_ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withId_withBoolean_(ComFasterxmlJacksonDatabindSerStdMapSerializer *src, id filterId, jboolean sortKeys) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerStdMapSerializer, initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withId_withBoolean_, src, filterId, sortKeys)
}

ComFasterxmlJacksonDatabindSerStdMapSerializer *ComFasterxmlJacksonDatabindSerStdMapSerializer_constructWithJavaUtilSet_withComFasterxmlJacksonDatabindJavaType_withBoolean_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withId_(id<JavaUtilSet> ignoredEntries, ComFasterxmlJacksonDatabindJavaType *mapType, jboolean staticValueType, ComFasterxmlJacksonDatabindJsontypeTypeSerializer *vts, ComFasterxmlJacksonDatabindJsonSerializer *keySerializer, ComFasterxmlJacksonDatabindJsonSerializer *valueSerializer, id filterId) {
  ComFasterxmlJacksonDatabindSerStdMapSerializer_initialize();
  ComFasterxmlJacksonDatabindJavaType *keyType;
  ComFasterxmlJacksonDatabindJavaType *valueType;
  if (mapType == nil) {
    keyType = valueType = ComFasterxmlJacksonDatabindSerStdMapSerializer_UNSPECIFIED_TYPE;
  }
  else {
    keyType = [mapType getKeyType];
    valueType = [mapType getContentType];
  }
  if (!staticValueType) {
    staticValueType = (valueType != nil && [valueType isFinal]);
  }
  else {
    if ([((ComFasterxmlJacksonDatabindJavaType *) nil_chk(valueType)) getRawClass] == NSObject_class_()) {
      staticValueType = false;
    }
  }
  ComFasterxmlJacksonDatabindSerStdMapSerializer *ser = create_ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithJavaUtilSet_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_withBoolean_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withComFasterxmlJacksonDatabindJsonSerializer_(ignoredEntries, keyType, valueType, staticValueType, vts, keySerializer, valueSerializer);
  if (filterId != nil) {
    ser = [ser withFilterIdWithId:filterId];
  }
  return ser;
}

void ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withId_(ComFasterxmlJacksonDatabindSerStdMapSerializer *self, ComFasterxmlJacksonDatabindSerStdMapSerializer *src, ComFasterxmlJacksonDatabindJsontypeTypeSerializer *vts, id suppressableValue) {
  ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withId_withBoolean_(self, src, vts, suppressableValue, false);
}

ComFasterxmlJacksonDatabindSerStdMapSerializer *new_ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withId_(ComFasterxmlJacksonDatabindSerStdMapSerializer *src, ComFasterxmlJacksonDatabindJsontypeTypeSerializer *vts, id suppressableValue) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerStdMapSerializer, initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withId_, src, vts, suppressableValue)
}

ComFasterxmlJacksonDatabindSerStdMapSerializer *create_ComFasterxmlJacksonDatabindSerStdMapSerializer_initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withId_(ComFasterxmlJacksonDatabindSerStdMapSerializer *src, ComFasterxmlJacksonDatabindJsontypeTypeSerializer *vts, id suppressableValue) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerStdMapSerializer, initWithComFasterxmlJacksonDatabindSerStdMapSerializer_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withId_, src, vts, suppressableValue)
}

ComFasterxmlJacksonDatabindSerStdMapSerializer *ComFasterxmlJacksonDatabindSerStdMapSerializer_constructWithNSStringArray_withComFasterxmlJacksonDatabindJavaType_withBoolean_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withId_(IOSObjectArray *ignoredList, ComFasterxmlJacksonDatabindJavaType *mapType, jboolean staticValueType, ComFasterxmlJacksonDatabindJsontypeTypeSerializer *vts, ComFasterxmlJacksonDatabindJsonSerializer *keySerializer, ComFasterxmlJacksonDatabindJsonSerializer *valueSerializer, id filterId) {
  ComFasterxmlJacksonDatabindSerStdMapSerializer_initialize();
  id<JavaUtilSet> ignoredEntries = ComFasterxmlJacksonDatabindUtilArrayBuilders_arrayToSetWithNSObjectArray_(ignoredList);
  return ComFasterxmlJacksonDatabindSerStdMapSerializer_constructWithJavaUtilSet_withComFasterxmlJacksonDatabindJavaType_withBoolean_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withId_(ignoredEntries, mapType, staticValueType, vts, keySerializer, valueSerializer, filterId);
}

ComFasterxmlJacksonDatabindJsonSerializer *ComFasterxmlJacksonDatabindSerStdMapSerializer__findAndAddDynamicWithComFasterxmlJacksonDatabindSerImplPropertySerializerMap_withIOSClass_withComFasterxmlJacksonDatabindSerializerProvider_(ComFasterxmlJacksonDatabindSerStdMapSerializer *self, ComFasterxmlJacksonDatabindSerImplPropertySerializerMap *map, IOSClass *type, ComFasterxmlJacksonDatabindSerializerProvider *provider) {
  ComFasterxmlJacksonDatabindSerImplPropertySerializerMap_SerializerAndMapResult *result = [((ComFasterxmlJacksonDatabindSerImplPropertySerializerMap *) nil_chk(map)) findAndAddSecondarySerializerWithIOSClass:type withComFasterxmlJacksonDatabindSerializerProvider:provider withComFasterxmlJacksonDatabindBeanProperty:self->_property_];
  if (map != ((ComFasterxmlJacksonDatabindSerImplPropertySerializerMap_SerializerAndMapResult *) nil_chk(result))->map_) {
    JreStrongAssign(&self->_dynamicValueSerializers_, result->map_);
  }
  return result->serializer_;
}

ComFasterxmlJacksonDatabindJsonSerializer *ComFasterxmlJacksonDatabindSerStdMapSerializer__findAndAddDynamicWithComFasterxmlJacksonDatabindSerImplPropertySerializerMap_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindSerializerProvider_(ComFasterxmlJacksonDatabindSerStdMapSerializer *self, ComFasterxmlJacksonDatabindSerImplPropertySerializerMap *map, ComFasterxmlJacksonDatabindJavaType *type, ComFasterxmlJacksonDatabindSerializerProvider *provider) {
  ComFasterxmlJacksonDatabindSerImplPropertySerializerMap_SerializerAndMapResult *result = [((ComFasterxmlJacksonDatabindSerImplPropertySerializerMap *) nil_chk(map)) findAndAddSecondarySerializerWithComFasterxmlJacksonDatabindJavaType:type withComFasterxmlJacksonDatabindSerializerProvider:provider withComFasterxmlJacksonDatabindBeanProperty:self->_property_];
  if (map != ((ComFasterxmlJacksonDatabindSerImplPropertySerializerMap_SerializerAndMapResult *) nil_chk(result))->map_) {
    JreStrongAssign(&self->_dynamicValueSerializers_, result->map_);
  }
  return result->serializer_;
}

ComFasterxmlJacksonDatabindJsonSerializer *ComFasterxmlJacksonDatabindSerStdMapSerializer__findSerializerWithComFasterxmlJacksonDatabindSerializerProvider_withId_(ComFasterxmlJacksonDatabindSerStdMapSerializer *self, ComFasterxmlJacksonDatabindSerializerProvider *provider, id value) {
  IOSClass *cc = [nil_chk(value) java_getClass];
  ComFasterxmlJacksonDatabindJsonSerializer *valueSer = [((ComFasterxmlJacksonDatabindSerImplPropertySerializerMap *) nil_chk(self->_dynamicValueSerializers_)) serializerForWithIOSClass:cc];
  if (valueSer != nil) {
    return valueSer;
  }
  if ([((ComFasterxmlJacksonDatabindJavaType *) nil_chk(self->_valueType_)) hasGenericTypes]) {
    return ComFasterxmlJacksonDatabindSerStdMapSerializer__findAndAddDynamicWithComFasterxmlJacksonDatabindSerImplPropertySerializerMap_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindSerializerProvider_(self, self->_dynamicValueSerializers_, [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) constructSpecializedTypeWithComFasterxmlJacksonDatabindJavaType:self->_valueType_ withIOSClass:cc], provider);
  }
  return ComFasterxmlJacksonDatabindSerStdMapSerializer__findAndAddDynamicWithComFasterxmlJacksonDatabindSerImplPropertySerializerMap_withIOSClass_withComFasterxmlJacksonDatabindSerializerProvider_(self, self->_dynamicValueSerializers_, cc, provider);
}

IOSObjectArray *ComFasterxmlJacksonDatabindSerStdMapSerializer__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindSerStdMapSerializer__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindSerStdMapSerializer__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindSerStdMapSerializer__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindSerStdMapSerializer__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_ComFasterxmlJacksonDatabindAnnotationJacksonStdImpl() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerStdMapSerializer)
