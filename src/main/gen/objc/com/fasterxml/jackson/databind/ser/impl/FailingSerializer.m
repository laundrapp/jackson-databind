//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/impl/FailingSerializer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/JsonNode.h"
#include "com/fasterxml/jackson/databind/SerializerProvider.h"
#include "com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper.h"
#include "com/fasterxml/jackson/databind/ser/impl/FailingSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/StdSerializer.h"
#include "java/lang/reflect/Type.h"

@implementation ComFasterxmlJacksonDatabindSerImplFailingSerializer

- (instancetype __nonnull)initWithNSString:(NSString *)msg {
  ComFasterxmlJacksonDatabindSerImplFailingSerializer_initWithNSString_(self, msg);
  return self;
}

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) reportMappingProblemWithNSString:_msg_ withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]];
}

- (ComFasterxmlJacksonDatabindJsonNode *)getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                            withJavaLangReflectType:(id<JavaLangReflectType>)typeHint {
  return nil;
}

- (void)acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint {
  
  ;
}

- (void)dealloc {
  RELEASE_(_msg_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x1, 4, 5, 6, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(serializeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  methods[2].selector = @selector(getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:withJavaLangReflectType:);
  methods[3].selector = @selector(acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:withComFasterxmlJacksonDatabindJavaType:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_msg_", "LNSString;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", "serialize", "LNSObject;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;", "LJavaIoIOException;", "getSchema", "LComFasterxmlJacksonDatabindSerializerProvider;LJavaLangReflectType;", "LComFasterxmlJacksonDatabindJsonMappingException;", "acceptJsonFormatVisitor", "LComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;LComFasterxmlJacksonDatabindJavaType;", "Lcom/fasterxml/jackson/databind/ser/std/StdSerializer<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerImplFailingSerializer = { "FailingSerializer", "com.fasterxml.jackson.databind.ser.impl", ptrTable, methods, fields, 7, 0x1, 4, 1, -1, -1, -1, 9, -1 };
  return &_ComFasterxmlJacksonDatabindSerImplFailingSerializer;
}

@end

void ComFasterxmlJacksonDatabindSerImplFailingSerializer_initWithNSString_(ComFasterxmlJacksonDatabindSerImplFailingSerializer *self, NSString *msg) {
  ComFasterxmlJacksonDatabindSerStdStdSerializer_initWithIOSClass_(self, NSObject_class_());
  JreStrongAssign(&self->_msg_, msg);
}

ComFasterxmlJacksonDatabindSerImplFailingSerializer *new_ComFasterxmlJacksonDatabindSerImplFailingSerializer_initWithNSString_(NSString *msg) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerImplFailingSerializer, initWithNSString_, msg)
}

ComFasterxmlJacksonDatabindSerImplFailingSerializer *create_ComFasterxmlJacksonDatabindSerImplFailingSerializer_initWithNSString_(NSString *msg) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerImplFailingSerializer, initWithNSString_, msg)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerImplFailingSerializer)
