//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/util/JSONPObject.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindUtilJSONPObject")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindUtilJSONPObject
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindUtilJSONPObject 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindUtilJSONPObject 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindUtilJSONPObject

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindUtilJSONPObject_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindUtilJSONPObject || defined(INCLUDE_ComFasterxmlJacksonDatabindUtilJSONPObject))
#define ComFasterxmlJacksonDatabindUtilJSONPObject_

#define RESTRICT_ComFasterxmlJacksonDatabindJsonSerializable 1
#define INCLUDE_ComFasterxmlJacksonDatabindJsonSerializable 1
#include "com/fasterxml/jackson/databind/JsonSerializable.h"

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsontypeTypeSerializer;
@class ComFasterxmlJacksonDatabindSerializerProvider;

/*!
 @brief Container class that can be used to wrap any Object instances (including
  nulls), and will serialize embedded in 
 <a href="http://en.wikipedia.org/wiki/JSONP">JSONP</a> wrapping.
 - seealso: com.fasterxml.jackson.databind.util.JSONWrappedObject
 */
@interface ComFasterxmlJacksonDatabindUtilJSONPObject : NSObject < ComFasterxmlJacksonDatabindJsonSerializable > {
 @public
  /*!
   @brief JSONP function name to use for serialization
   */
  NSString *_function_;
  /*!
   @brief Value to be serialized as JSONP padded; can be null.
   */
  id _value_;
  /*!
   @brief Optional static type to use for serialization; if null, runtime
  type is used.Can be used to specify declared type which defines
  serializer to use, as well as aspects of extra type information
  to include (if any).
   */
  ComFasterxmlJacksonDatabindJavaType *_serializationType_;
}

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)function
                                    withId:(id)value;

- (instancetype __nonnull)initWithNSString:(NSString *)function
                                    withId:(id)value
   withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)asType;

- (NSString *)getFunction;

- (ComFasterxmlJacksonDatabindJavaType *)getSerializationType;

- (id)getValue;

- (void)serializeWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
        withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

- (void)serializeWithTypeWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
                withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
            withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindUtilJSONPObject)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindUtilJSONPObject, _function_, NSString *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindUtilJSONPObject, _value_, id)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindUtilJSONPObject, _serializationType_, ComFasterxmlJacksonDatabindJavaType *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindUtilJSONPObject_initWithNSString_withId_(ComFasterxmlJacksonDatabindUtilJSONPObject *self, NSString *function, id value);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindUtilJSONPObject *new_ComFasterxmlJacksonDatabindUtilJSONPObject_initWithNSString_withId_(NSString *function, id value) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindUtilJSONPObject *create_ComFasterxmlJacksonDatabindUtilJSONPObject_initWithNSString_withId_(NSString *function, id value);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindUtilJSONPObject_initWithNSString_withId_withComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindUtilJSONPObject *self, NSString *function, id value, ComFasterxmlJacksonDatabindJavaType *asType);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindUtilJSONPObject *new_ComFasterxmlJacksonDatabindUtilJSONPObject_initWithNSString_withId_withComFasterxmlJacksonDatabindJavaType_(NSString *function, id value, ComFasterxmlJacksonDatabindJavaType *asType) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindUtilJSONPObject *create_ComFasterxmlJacksonDatabindUtilJSONPObject_initWithNSString_withId_withComFasterxmlJacksonDatabindJavaType_(NSString *function, id value, ComFasterxmlJacksonDatabindJavaType *asType);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindUtilJSONPObject)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindUtilJSONPObject")
