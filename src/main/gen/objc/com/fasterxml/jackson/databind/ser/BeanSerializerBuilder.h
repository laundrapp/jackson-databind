//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerBuilder.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerBeanSerializerBuilder")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindSerBeanSerializerBuilder
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerBeanSerializerBuilder 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerBeanSerializerBuilder 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindSerBeanSerializerBuilder

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindSerBeanSerializerBuilder_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerBeanSerializerBuilder || defined(INCLUDE_ComFasterxmlJacksonDatabindSerBeanSerializerBuilder))
#define ComFasterxmlJacksonDatabindSerBeanSerializerBuilder_

@class ComFasterxmlJacksonDatabindBeanDescription;
@class ComFasterxmlJacksonDatabindIntrospectAnnotatedClass;
@class ComFasterxmlJacksonDatabindIntrospectAnnotatedMember;
@class ComFasterxmlJacksonDatabindJsonSerializer;
@class ComFasterxmlJacksonDatabindSerAnyGetterWriter;
@class ComFasterxmlJacksonDatabindSerBeanSerializer;
@class ComFasterxmlJacksonDatabindSerImplObjectIdWriter;
@class ComFasterxmlJacksonDatabindSerializationConfig;
@class IOSObjectArray;
@protocol JavaUtilList;

/*!
 @brief Builder class used for aggregating deserialization information about
  a POJO, in order to build a <code>JsonSerializer</code> for serializing
  intances.
 Main reason for using separate builder class is that this makes it easier
  to make actual serializer class fully immutable.
 */
@interface ComFasterxmlJacksonDatabindSerBeanSerializerBuilder : NSObject {
 @public
  ComFasterxmlJacksonDatabindBeanDescription *_beanDesc_;
  ComFasterxmlJacksonDatabindSerializationConfig *_config_;
  /*!
   @brief Bean properties, in order of serialization
   */
  id<JavaUtilList> _properties_;
  /*!
   @brief Optional array of filtered property writers; if null, no
  view-based filtering is performed.
   */
  IOSObjectArray *_filteredProperties_;
  /*!
   @brief Writer used for "any getter" properties, if any.
   */
  ComFasterxmlJacksonDatabindSerAnyGetterWriter *_anyGetter_;
  /*!
   @brief Id of the property filter to use for POJO, if any.
   */
  id _filterId_;
  /*!
   @brief Property that is used for type id (and not serialized as regular
  property)
   */
  ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *_typeId_;
  /*!
   @brief Object responsible for serializing Object Ids for the handled
  type, if any.
   */
  ComFasterxmlJacksonDatabindSerImplObjectIdWriter *_objectIdWriter_;
}

#pragma mark Public

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc;

/*!
 @brief Method called to create <code>BeanSerializer</code> instance with
  all accumulated information.Will construct a serializer if we
  have enough information, or return null if not.
 */
- (ComFasterxmlJacksonDatabindJsonSerializer *)build;

/*!
 @brief Factory method for constructing an "empty" serializer; one that
  outputs no properties (but handles JSON objects properly, including
  type information)
 */
- (ComFasterxmlJacksonDatabindSerBeanSerializer *)createDummy;

- (ComFasterxmlJacksonDatabindSerAnyGetterWriter *)getAnyGetter;

- (ComFasterxmlJacksonDatabindBeanDescription *)getBeanDescription;

- (ComFasterxmlJacksonDatabindIntrospectAnnotatedClass *)getClassInfo;

- (IOSObjectArray *)getFilteredProperties;

- (id)getFilterId;

- (ComFasterxmlJacksonDatabindSerImplObjectIdWriter *)getObjectIdWriter;

- (id<JavaUtilList>)getProperties;

- (ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *)getTypeId;

- (jboolean)hasProperties;

- (void)setAnyGetterWithComFasterxmlJacksonDatabindSerAnyGetterWriter:(ComFasterxmlJacksonDatabindSerAnyGetterWriter *)anyGetter;

/*!
 @param properties Number and order of properties here MUST match that     of "regular" properties set earlier using 
 <code>setProperties(List)</code> ; if not,     an 
 <code>IllegalArgumentException</code>  will be thrown
 */
- (void)setFilteredPropertiesWithComFasterxmlJacksonDatabindSerBeanPropertyWriterArray:(IOSObjectArray *)properties;

- (void)setFilterIdWithId:(id)filterId;

- (void)setObjectIdWriterWithComFasterxmlJacksonDatabindSerImplObjectIdWriter:(ComFasterxmlJacksonDatabindSerImplObjectIdWriter *)w;

- (void)setPropertiesWithJavaUtilList:(id<JavaUtilList>)properties;

- (void)setTypeIdWithComFasterxmlJacksonDatabindIntrospectAnnotatedMember:(ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *)idProp;

#pragma mark Protected

/*!
 @brief Copy-constructor that may be used for sub-classing
 */
- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindSerBeanSerializerBuilder:(ComFasterxmlJacksonDatabindSerBeanSerializerBuilder *)src;

/*!
 @brief Initialization method called right after construction, to specify
  configuration to use.
 <p>
  Note: ideally should be passed in constructor, but for backwards
  compatibility, needed to add a setter instead
 @since 2.1
 */
- (void)setConfigWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonDatabindSerBeanSerializerBuilder)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindSerBeanSerializerBuilder, _beanDesc_, ComFasterxmlJacksonDatabindBeanDescription *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindSerBeanSerializerBuilder, _config_, ComFasterxmlJacksonDatabindSerializationConfig *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindSerBeanSerializerBuilder, _properties_, id<JavaUtilList>)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindSerBeanSerializerBuilder, _filteredProperties_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindSerBeanSerializerBuilder, _anyGetter_, ComFasterxmlJacksonDatabindSerAnyGetterWriter *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindSerBeanSerializerBuilder, _filterId_, id)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindSerBeanSerializerBuilder, _typeId_, ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindSerBeanSerializerBuilder, _objectIdWriter_, ComFasterxmlJacksonDatabindSerImplObjectIdWriter *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerBeanSerializerBuilder_initWithComFasterxmlJacksonDatabindBeanDescription_(ComFasterxmlJacksonDatabindSerBeanSerializerBuilder *self, ComFasterxmlJacksonDatabindBeanDescription *beanDesc);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerBeanSerializerBuilder *new_ComFasterxmlJacksonDatabindSerBeanSerializerBuilder_initWithComFasterxmlJacksonDatabindBeanDescription_(ComFasterxmlJacksonDatabindBeanDescription *beanDesc) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerBeanSerializerBuilder *create_ComFasterxmlJacksonDatabindSerBeanSerializerBuilder_initWithComFasterxmlJacksonDatabindBeanDescription_(ComFasterxmlJacksonDatabindBeanDescription *beanDesc);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerBeanSerializerBuilder_initWithComFasterxmlJacksonDatabindSerBeanSerializerBuilder_(ComFasterxmlJacksonDatabindSerBeanSerializerBuilder *self, ComFasterxmlJacksonDatabindSerBeanSerializerBuilder *src);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerBeanSerializerBuilder *new_ComFasterxmlJacksonDatabindSerBeanSerializerBuilder_initWithComFasterxmlJacksonDatabindSerBeanSerializerBuilder_(ComFasterxmlJacksonDatabindSerBeanSerializerBuilder *src) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerBeanSerializerBuilder *create_ComFasterxmlJacksonDatabindSerBeanSerializerBuilder_initWithComFasterxmlJacksonDatabindSerBeanSerializerBuilder_(ComFasterxmlJacksonDatabindSerBeanSerializerBuilder *src);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerBeanSerializerBuilder)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerBeanSerializerBuilder")
