//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/std/InetSocketAddressSerializer.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/core/JsonToken.h"
#include "com/fasterxml/jackson/core/type/WritableTypeId.h"
#include "com/fasterxml/jackson/databind/SerializerProvider.h"
#include "com/fasterxml/jackson/databind/jsontype/TypeSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/InetSocketAddressSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/StdScalarSerializer.h"
#include "java/net/Inet6Address.h"
#include "java/net/InetAddress.h"
#include "java/net/InetSocketAddress.h"

@implementation ComFasterxmlJacksonDatabindSerStdInetSocketAddressSerializer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindSerStdInetSocketAddressSerializer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)serializeWithId:(JavaNetInetSocketAddress *)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)jgen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  JavaNetInetAddress *addr = [((JavaNetInetSocketAddress *) nil_chk(value)) getAddress];
  NSString *str = addr == nil ? [value getHostName] : [((NSString *) nil_chk([addr description])) java_trim];
  jint ix = [str java_indexOf:'/'];
  if (ix >= 0) {
    if (ix == 0) {
      str = [addr isKindOfClass:[JavaNetInet6Address class]] ? JreStrcat("C$C", '[', [str java_substring:1], ']') : [str java_substring:1];
    }
    else {
      str = [str java_substring:0 endIndex:ix];
    }
  }
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(jgen)) writeStringWithNSString:JreStrcat("$CI", str, ':', [value getPort])];
}

- (void)serializeWithTypeWithId:(JavaNetInetSocketAddress *)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer {
  ComFasterxmlJacksonCoreTypeWritableTypeId *typeIdDef = [((ComFasterxmlJacksonDatabindJsontypeTypeSerializer *) nil_chk(typeSer)) writeTypePrefixWithComFasterxmlJacksonCoreJsonGenerator:g withComFasterxmlJacksonCoreTypeWritableTypeId:[typeSer typeIdWithId:value withIOSClass:JavaNetInetSocketAddress_class_() withComFasterxmlJacksonCoreJsonToken:JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_STRING)]];
  [self serializeWithId:value withComFasterxmlJacksonCoreJsonGenerator:g withComFasterxmlJacksonDatabindSerializerProvider:provider];
  [typeSer writeTypeSuffixWithComFasterxmlJacksonCoreJsonGenerator:g withComFasterxmlJacksonCoreTypeWritableTypeId:typeIdDef];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(serializeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  methods[2].selector = @selector(serializeWithTypeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindJsontypeTypeSerializer:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "serialize", "LJavaNetInetSocketAddress;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;", "LJavaIoIOException;", "serializeWithType", "LJavaNetInetSocketAddress;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindJsontypeTypeSerializer;", "Lcom/fasterxml/jackson/databind/ser/std/StdScalarSerializer<Ljava/net/InetSocketAddress;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerStdInetSocketAddressSerializer = { "InetSocketAddressSerializer", "com.fasterxml.jackson.databind.ser.std", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, 5, -1 };
  return &_ComFasterxmlJacksonDatabindSerStdInetSocketAddressSerializer;
}

@end

void ComFasterxmlJacksonDatabindSerStdInetSocketAddressSerializer_init(ComFasterxmlJacksonDatabindSerStdInetSocketAddressSerializer *self) {
  ComFasterxmlJacksonDatabindSerStdStdScalarSerializer_initWithIOSClass_(self, JavaNetInetSocketAddress_class_());
}

ComFasterxmlJacksonDatabindSerStdInetSocketAddressSerializer *new_ComFasterxmlJacksonDatabindSerStdInetSocketAddressSerializer_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerStdInetSocketAddressSerializer, init)
}

ComFasterxmlJacksonDatabindSerStdInetSocketAddressSerializer *create_ComFasterxmlJacksonDatabindSerStdInetSocketAddressSerializer_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerStdInetSocketAddressSerializer, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerStdInetSocketAddressSerializer)
