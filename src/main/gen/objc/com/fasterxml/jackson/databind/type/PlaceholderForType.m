//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/PlaceholderForType.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/type/PlaceholderForType.h"
#include "com/fasterxml/jackson/databind/type/TypeBase.h"
#include "com/fasterxml/jackson/databind/type/TypeBindings.h"
#include "com/fasterxml/jackson/databind/type/TypeFactory.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/UnsupportedOperationException.h"

@interface ComFasterxmlJacksonDatabindTypePlaceholderForType ()

- (id)_unsupported;

@end

inline jlong ComFasterxmlJacksonDatabindTypePlaceholderForType_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindTypePlaceholderForType_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindTypePlaceholderForType, serialVersionUID, jlong)

__attribute__((unused)) static id ComFasterxmlJacksonDatabindTypePlaceholderForType__unsupported(ComFasterxmlJacksonDatabindTypePlaceholderForType *self);

@implementation ComFasterxmlJacksonDatabindTypePlaceholderForType

- (instancetype __nonnull)initWithInt:(jint)ordinal {
  ComFasterxmlJacksonDatabindTypePlaceholderForType_initWithInt_(self, ordinal);
  return self;
}

- (ComFasterxmlJacksonDatabindJavaType *)actualType {
  return _actualType_;
}

- (void)actualTypeWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)t {
  JreStrongAssign(&_actualType_, t);
}

- (NSString *)buildCanonicalName {
  return [self description];
}

- (JavaLangStringBuilder *)getGenericSignatureWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
  return [self getErasedSignatureWithJavaLangStringBuilder:sb];
}

- (JavaLangStringBuilder *)getErasedSignatureWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
  [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(sb)) appendWithChar:'$'])) appendWithInt:_ordinal_ + 1];
  return sb;
}

- (ComFasterxmlJacksonDatabindJavaType *)withTypeHandlerWithId:(id)h {
  return ComFasterxmlJacksonDatabindTypePlaceholderForType__unsupported(self);
}

- (ComFasterxmlJacksonDatabindJavaType *)withContentTypeHandlerWithId:(id)h {
  return ComFasterxmlJacksonDatabindTypePlaceholderForType__unsupported(self);
}

- (ComFasterxmlJacksonDatabindJavaType *)withValueHandlerWithId:(id)h {
  return ComFasterxmlJacksonDatabindTypePlaceholderForType__unsupported(self);
}

- (ComFasterxmlJacksonDatabindJavaType *)withContentValueHandlerWithId:(id)h {
  return ComFasterxmlJacksonDatabindTypePlaceholderForType__unsupported(self);
}

- (ComFasterxmlJacksonDatabindJavaType *)withContentTypeWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)contentType {
  return ComFasterxmlJacksonDatabindTypePlaceholderForType__unsupported(self);
}

- (ComFasterxmlJacksonDatabindJavaType *)withStaticTyping {
  return ComFasterxmlJacksonDatabindTypePlaceholderForType__unsupported(self);
}

- (ComFasterxmlJacksonDatabindJavaType *)refineWithIOSClass:(IOSClass *)rawType
            withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)bindings
                    withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)superClass
               withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)superInterfaces {
  return ComFasterxmlJacksonDatabindTypePlaceholderForType__unsupported(self);
}

- (ComFasterxmlJacksonDatabindJavaType *)_narrowWithIOSClass:(IOSClass *)subclass {
  return ComFasterxmlJacksonDatabindTypePlaceholderForType__unsupported(self);
}

- (jboolean)isContainerType {
  return false;
}

- (NSString *)description {
  return [((JavaLangStringBuilder *) nil_chk([self getErasedSignatureWithJavaLangStringBuilder:create_JavaLangStringBuilder_init()])) description];
}

- (jboolean)isEqual:(id)o {
  return o == self;
}

- (id)_unsupported {
  return ComFasterxmlJacksonDatabindTypePlaceholderForType__unsupported(self);
}

- (void)dealloc {
  RELEASE_(_actualType_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x1, 5, 4, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, 8, 7, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, 9, 7, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, 10, 7, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, 11, 2, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, 12, 13, -1, 14, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x4, 15, 16, -1, 17, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 18, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 19, 7, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, -1, -1, -1, 20, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:);
  methods[1].selector = @selector(actualType);
  methods[2].selector = @selector(actualTypeWithComFasterxmlJacksonDatabindJavaType:);
  methods[3].selector = @selector(buildCanonicalName);
  methods[4].selector = @selector(getGenericSignatureWithJavaLangStringBuilder:);
  methods[5].selector = @selector(getErasedSignatureWithJavaLangStringBuilder:);
  methods[6].selector = @selector(withTypeHandlerWithId:);
  methods[7].selector = @selector(withContentTypeHandlerWithId:);
  methods[8].selector = @selector(withValueHandlerWithId:);
  methods[9].selector = @selector(withContentValueHandlerWithId:);
  methods[10].selector = @selector(withContentTypeWithComFasterxmlJacksonDatabindJavaType:);
  methods[11].selector = @selector(withStaticTyping);
  methods[12].selector = @selector(refineWithIOSClass:withComFasterxmlJacksonDatabindTypeTypeBindings:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindJavaTypeArray:);
  methods[13].selector = @selector(_narrowWithIOSClass:);
  methods[14].selector = @selector(isContainerType);
  methods[15].selector = @selector(description);
  methods[16].selector = @selector(isEqual:);
  methods[17].selector = @selector(_unsupported);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindTypePlaceholderForType_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "_ordinal_", "I", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_actualType_", "LComFasterxmlJacksonDatabindJavaType;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "I", "actualType", "LComFasterxmlJacksonDatabindJavaType;", "getGenericSignature", "LJavaLangStringBuilder;", "getErasedSignature", "withTypeHandler", "LNSObject;", "withContentTypeHandler", "withValueHandler", "withContentValueHandler", "withContentType", "refine", "LIOSClass;LComFasterxmlJacksonDatabindTypeTypeBindings;LComFasterxmlJacksonDatabindJavaType;[LComFasterxmlJacksonDatabindJavaType;", "(Ljava/lang/Class<*>;Lcom/fasterxml/jackson/databind/type/TypeBindings;Lcom/fasterxml/jackson/databind/JavaType;[Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/JavaType;", "_narrow", "LIOSClass;", "(Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/JavaType;", "toString", "equals", "<T:Ljava/lang/Object;>()TT;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindTypePlaceholderForType = { "PlaceholderForType", "com.fasterxml.jackson.databind.type", ptrTable, methods, fields, 7, 0x1, 18, 3, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindTypePlaceholderForType;
}

@end

void ComFasterxmlJacksonDatabindTypePlaceholderForType_initWithInt_(ComFasterxmlJacksonDatabindTypePlaceholderForType *self, jint ordinal) {
  ComFasterxmlJacksonDatabindTypeTypeBase_initWithIOSClass_withComFasterxmlJacksonDatabindTypeTypeBindings_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaTypeArray_withInt_withId_withId_withBoolean_(self, NSObject_class_(), ComFasterxmlJacksonDatabindTypeTypeBindings_emptyBindings(), ComFasterxmlJacksonDatabindTypeTypeFactory_unknownType(), nil, 1, nil, nil, false);
  self->_ordinal_ = ordinal;
}

ComFasterxmlJacksonDatabindTypePlaceholderForType *new_ComFasterxmlJacksonDatabindTypePlaceholderForType_initWithInt_(jint ordinal) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindTypePlaceholderForType, initWithInt_, ordinal)
}

ComFasterxmlJacksonDatabindTypePlaceholderForType *create_ComFasterxmlJacksonDatabindTypePlaceholderForType_initWithInt_(jint ordinal) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindTypePlaceholderForType, initWithInt_, ordinal)
}

id ComFasterxmlJacksonDatabindTypePlaceholderForType__unsupported(ComFasterxmlJacksonDatabindTypePlaceholderForType *self) {
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(JreStrcat("$$", @"Operation should not be attempted on ", [[self java_getClass] getName]));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindTypePlaceholderForType)
