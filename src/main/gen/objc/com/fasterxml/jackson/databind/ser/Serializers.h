//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/Serializers.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerSerializers")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindSerSerializers
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerSerializers 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerSerializers 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindSerSerializers
#ifdef INCLUDE_ComFasterxmlJacksonDatabindSerSerializers_Base
#define INCLUDE_ComFasterxmlJacksonDatabindSerSerializers 1
#endif

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindSerSerializers_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerSerializers || defined(INCLUDE_ComFasterxmlJacksonDatabindSerSerializers))
#define ComFasterxmlJacksonDatabindSerSerializers_

@class ComFasterxmlJacksonDatabindBeanDescription;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsonSerializer;
@class ComFasterxmlJacksonDatabindJsontypeTypeSerializer;
@class ComFasterxmlJacksonDatabindSerializationConfig;
@class ComFasterxmlJacksonDatabindTypeArrayType;
@class ComFasterxmlJacksonDatabindTypeCollectionLikeType;
@class ComFasterxmlJacksonDatabindTypeCollectionType;
@class ComFasterxmlJacksonDatabindTypeMapLikeType;
@class ComFasterxmlJacksonDatabindTypeMapType;
@class ComFasterxmlJacksonDatabindTypeReferenceType;

/*!
 @brief Interface that defines API for simple extensions that can provide additional serializers
  for various types.Access is by a single callback method; instance is to either return
  a configured <code>JsonSerializer</code> for specified type, or null to indicate that it
  does not support handling of the type.
 In latter case, further calls can be made
  for other providers; in former case returned serializer is used for handling of
  instances of specified type.
 */
@protocol ComFasterxmlJacksonDatabindSerSerializers < JavaObject >

/*!
 @brief Method called by serialization framework first time a serializer is needed for
  specified type, which is not of a container or reference type (for which
  other methods are called).
 @param type Fully resolved type of instances to serialize
 @param config Serialization configuration in use
 @param beanDesc Additional information about type
 @return Configured serializer to use for the type; or null if implementation
     does not recognize or support type
 */
- (ComFasterxmlJacksonDatabindJsonSerializer *)findSerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                        withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                                 withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc;

/*!
 @brief Method called by serialization framework first time a serializer is needed for
  given <code>ReferenceType</code>
 @since 2.7
 */
- (ComFasterxmlJacksonDatabindJsonSerializer *)findReferenceSerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                        withComFasterxmlJacksonDatabindTypeReferenceType:(ComFasterxmlJacksonDatabindTypeReferenceType *)type
                                                                          withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                   withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)contentTypeSerializer
                                                                           withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)contentValueSerializer;

/*!
 @brief Method called by serialization framework first time a serializer is needed for
  specified array type.
 Implementation should return a serializer instance if it supports
  specified type; or null if it does not.
 */
- (ComFasterxmlJacksonDatabindJsonSerializer *)findArraySerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                        withComFasterxmlJacksonDatabindTypeArrayType:(ComFasterxmlJacksonDatabindTypeArrayType *)type
                                                                      withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                               withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)elementTypeSerializer
                                                                       withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)elementValueSerializer;

/*!
 @brief Method called by serialization framework first time a serializer is needed for
  specified <code>java.util.Collection</code> type.
 Implementation should return a serializer instance if it supports
  specified type; or null if it does not.
 */
- (ComFasterxmlJacksonDatabindJsonSerializer *)findCollectionSerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                        withComFasterxmlJacksonDatabindTypeCollectionType:(ComFasterxmlJacksonDatabindTypeCollectionType *)type
                                                                           withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                    withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)elementTypeSerializer
                                                                            withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)elementValueSerializer;

/*!
 @brief Method called by serialization framework first time a serializer is needed for
  specified "Collection-like" type (type that acts like <code>java.util.Collection</code>,
  but does not implement it).
 Implementation should return a serializer instance if it supports
  specified type; or null if it does not.
 */
- (ComFasterxmlJacksonDatabindJsonSerializer *)findCollectionLikeSerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                        withComFasterxmlJacksonDatabindTypeCollectionLikeType:(ComFasterxmlJacksonDatabindTypeCollectionLikeType *)type
                                                                               withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                        withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)elementTypeSerializer
                                                                                withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)elementValueSerializer;

/*!
 @brief Method called by serialization framework first time a serializer is needed for
  specified <code>java.util.Map</code> type.
 Implementation should return a serializer instance if it supports
  specified type; or null if it does not.
 */
- (ComFasterxmlJacksonDatabindJsonSerializer *)findMapSerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                        withComFasterxmlJacksonDatabindTypeMapType:(ComFasterxmlJacksonDatabindTypeMapType *)type
                                                                    withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                     withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)keySerializer
                                                             withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)elementTypeSerializer
                                                                     withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)elementValueSerializer;

/*!
 @brief Method called by serialization framework first time a serializer is needed for
  specified "Map-like" type (type that acts like <code>java.util.Map</code>,
  but does not implement it).
 Implementation should return a serializer instance if it supports
  specified type; or null if it does not.
 */
- (ComFasterxmlJacksonDatabindJsonSerializer *)findMapLikeSerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                        withComFasterxmlJacksonDatabindTypeMapLikeType:(ComFasterxmlJacksonDatabindTypeMapLikeType *)type
                                                                        withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                         withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)keySerializer
                                                                 withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)elementTypeSerializer
                                                                         withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)elementValueSerializer;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindSerSerializers)

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerSerializers)

#endif

#if !defined (ComFasterxmlJacksonDatabindSerSerializers_Base_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerSerializers || defined(INCLUDE_ComFasterxmlJacksonDatabindSerSerializers_Base))
#define ComFasterxmlJacksonDatabindSerSerializers_Base_

@class ComFasterxmlJacksonDatabindBeanDescription;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsonSerializer;
@class ComFasterxmlJacksonDatabindJsontypeTypeSerializer;
@class ComFasterxmlJacksonDatabindSerializationConfig;
@class ComFasterxmlJacksonDatabindTypeArrayType;
@class ComFasterxmlJacksonDatabindTypeCollectionLikeType;
@class ComFasterxmlJacksonDatabindTypeCollectionType;
@class ComFasterxmlJacksonDatabindTypeMapLikeType;
@class ComFasterxmlJacksonDatabindTypeMapType;
@class ComFasterxmlJacksonDatabindTypeReferenceType;

/*!
 @brief Basic <code>Serializers</code> implementation that implements all methods but provides
  no serializers.Its main purpose is to serve as a base class so that
  sub-classes only need to override methods they need.
 */
@interface ComFasterxmlJacksonDatabindSerSerializers_Base : NSObject < ComFasterxmlJacksonDatabindSerSerializers >

#pragma mark Public

- (instancetype __nonnull)init;

- (ComFasterxmlJacksonDatabindJsonSerializer *)findArraySerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                        withComFasterxmlJacksonDatabindTypeArrayType:(ComFasterxmlJacksonDatabindTypeArrayType *)type
                                                                      withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                               withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)elementTypeSerializer
                                                                       withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)elementValueSerializer;

- (ComFasterxmlJacksonDatabindJsonSerializer *)findCollectionLikeSerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                        withComFasterxmlJacksonDatabindTypeCollectionLikeType:(ComFasterxmlJacksonDatabindTypeCollectionLikeType *)type
                                                                               withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                        withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)elementTypeSerializer
                                                                                withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)elementValueSerializer;

- (ComFasterxmlJacksonDatabindJsonSerializer *)findCollectionSerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                        withComFasterxmlJacksonDatabindTypeCollectionType:(ComFasterxmlJacksonDatabindTypeCollectionType *)type
                                                                           withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                    withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)elementTypeSerializer
                                                                            withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)elementValueSerializer;

- (ComFasterxmlJacksonDatabindJsonSerializer *)findMapLikeSerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                        withComFasterxmlJacksonDatabindTypeMapLikeType:(ComFasterxmlJacksonDatabindTypeMapLikeType *)type
                                                                        withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                         withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)keySerializer
                                                                 withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)elementTypeSerializer
                                                                         withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)elementValueSerializer;

- (ComFasterxmlJacksonDatabindJsonSerializer *)findMapSerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                        withComFasterxmlJacksonDatabindTypeMapType:(ComFasterxmlJacksonDatabindTypeMapType *)type
                                                                    withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                     withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)keySerializer
                                                             withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)elementTypeSerializer
                                                                     withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)elementValueSerializer;

- (ComFasterxmlJacksonDatabindJsonSerializer *)findReferenceSerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                        withComFasterxmlJacksonDatabindTypeReferenceType:(ComFasterxmlJacksonDatabindTypeReferenceType *)type
                                                                          withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                   withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)contentTypeSerializer
                                                                           withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)contentValueSerializer;

- (ComFasterxmlJacksonDatabindJsonSerializer *)findSerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                        withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                                 withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindSerSerializers_Base)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerSerializers_Base_init(ComFasterxmlJacksonDatabindSerSerializers_Base *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerSerializers_Base *new_ComFasterxmlJacksonDatabindSerSerializers_Base_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerSerializers_Base *create_ComFasterxmlJacksonDatabindSerSerializers_Base_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerSerializers_Base)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerSerializers")
