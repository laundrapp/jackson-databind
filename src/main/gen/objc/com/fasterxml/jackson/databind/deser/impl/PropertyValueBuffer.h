//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/deser/impl/PropertyValueBuffer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer || defined(INCLUDE_ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer))
#define ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer_

@class ComFasterxmlJacksonCoreJsonParser;
@class ComFasterxmlJacksonDatabindDeserImplObjectIdReader;
@class ComFasterxmlJacksonDatabindDeserImplPropertyValue;
@class ComFasterxmlJacksonDatabindDeserSettableAnyProperty;
@class ComFasterxmlJacksonDatabindDeserSettableBeanProperty;
@class ComFasterxmlJacksonDatabindDeserializationContext;
@class IOSObjectArray;
@class JavaUtilBitSet;

/*!
 @brief Simple container used for temporarily buffering a set of 
 <code>PropertyValue</code>s.
 Using during construction of beans (and Maps) that use Creators, 
  and hence need buffering before instance (that will have properties
  to assign values to) is constructed.
 */
@interface ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer : NSObject {
 @public
  ComFasterxmlJacksonCoreJsonParser *_parser_;
  ComFasterxmlJacksonDatabindDeserializationContext *_context_;
  ComFasterxmlJacksonDatabindDeserImplObjectIdReader *_objectIdReader_;
  /*!
   @brief Buffer used for storing creator parameters for constructing
  instance.
   */
  IOSObjectArray *_creatorParameters_;
  /*!
   @brief Number of creator parameters for which we have not yet received
  values.
   */
  jint _paramsNeeded_;
  /*!
   @brief Bitflag used to track parameters found from incoming data
  when number of parameters is
  less than 32 (fits in int).
   */
  jint _paramsSeen_;
  /*!
   @brief Bitflag used to track parameters found from incoming data
  when number of parameters is
  32 or higher.
   */
  JavaUtilBitSet *_paramsSeenBig_;
  /*!
   @brief If we get non-creator parameters before or between
  creator parameters, those need to be buffered.Buffer
  is just a simple linked list
   */
  ComFasterxmlJacksonDatabindDeserImplPropertyValue *_buffered_;
  /*!
   @brief In case there is an Object Id property to handle, this is the value
  we have for it.
   */
  id _idValue_;
}

#pragma mark Public

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
              withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                            withInt:(jint)paramCount
             withComFasterxmlJacksonDatabindDeserImplObjectIdReader:(ComFasterxmlJacksonDatabindDeserImplObjectIdReader *)oir;

/*!
 @brief Method called to buffer value for given property, as well as check whether
  we now have values for all (creator) properties that we expect to get values for.
 @return True if we have received all creator parameters
 @since 2.6
 */
- (jboolean)assignParameterWithComFasterxmlJacksonDatabindDeserSettableBeanProperty:(ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)prop
                                                                             withId:(id)value;

- (void)bufferAnyPropertyWithComFasterxmlJacksonDatabindDeserSettableAnyProperty:(ComFasterxmlJacksonDatabindDeserSettableAnyProperty *)prop
                                                                    withNSString:(NSString *)propName
                                                                          withId:(id)value;

- (void)bufferMapPropertyWithId:(id)key
                         withId:(id)value;

- (void)bufferPropertyWithComFasterxmlJacksonDatabindDeserSettableBeanProperty:(ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)prop
                                                                        withId:(id)value;

/*!
 @brief A variation of <code>getParameters(SettableBeanProperty[])</code> that
  accepts a single property.Whereas the plural form eagerly fetches and
  validates all properties, this method may be used (along with 
 <code>hasParameter(SettableBeanProperty)</code>) to let applications only
  fetch the properties defined in the JSON source itself, and to have some
  other customized behavior for missing properties.
 @since 2.8
 */
- (id)getParameterWithComFasterxmlJacksonDatabindDeserSettableBeanProperty:(ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)prop;

/*!
 @brief Method called to do necessary post-processing such as injection of values
  and verification of values for required properties,
  after either <code>Object)</code>
  returns <code>true</code> (to indicate all creator properties are found), or when
  then whole JSON Object has been processed,
 */
- (IOSObjectArray *)getParametersWithComFasterxmlJacksonDatabindDeserSettableBeanPropertyArray:(IOSObjectArray *)props;

/*!
 @brief Helper method called to handle Object Id value collected earlier, if any
 */
- (id)handleIdValueWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                  withId:(id)bean;

/*!
 @brief Returns <code>true</code> if the given property was seen in the JSON source by
  this buffer.
 @since 2.8
 */
- (jboolean)hasParameterWithComFasterxmlJacksonDatabindDeserSettableBeanProperty:(ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)prop;

- (jboolean)isComplete;

/*!
 @brief Helper method called to see if given non-creator property is the "id property";
  and if so, handle appropriately.
 @since 2.1
 */
- (jboolean)readIdPropertyWithNSString:(NSString *)propName;

#pragma mark Protected

- (id)_findMissingWithComFasterxmlJacksonDatabindDeserSettableBeanProperty:(ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)prop;

- (ComFasterxmlJacksonDatabindDeserImplPropertyValue *)buffered;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer, _parser_, ComFasterxmlJacksonCoreJsonParser *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer, _context_, ComFasterxmlJacksonDatabindDeserializationContext *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer, _objectIdReader_, ComFasterxmlJacksonDatabindDeserImplObjectIdReader *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer, _creatorParameters_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer, _paramsSeenBig_, JavaUtilBitSet *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer, _buffered_, ComFasterxmlJacksonDatabindDeserImplPropertyValue *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer, _idValue_, id)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer_initWithComFasterxmlJacksonCoreJsonParser_withComFasterxmlJacksonDatabindDeserializationContext_withInt_withComFasterxmlJacksonDatabindDeserImplObjectIdReader_(ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer *self, ComFasterxmlJacksonCoreJsonParser *p, ComFasterxmlJacksonDatabindDeserializationContext *ctxt, jint paramCount, ComFasterxmlJacksonDatabindDeserImplObjectIdReader *oir);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer *new_ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer_initWithComFasterxmlJacksonCoreJsonParser_withComFasterxmlJacksonDatabindDeserializationContext_withInt_withComFasterxmlJacksonDatabindDeserImplObjectIdReader_(ComFasterxmlJacksonCoreJsonParser *p, ComFasterxmlJacksonDatabindDeserializationContext *ctxt, jint paramCount, ComFasterxmlJacksonDatabindDeserImplObjectIdReader *oir) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer *create_ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer_initWithComFasterxmlJacksonCoreJsonParser_withComFasterxmlJacksonDatabindDeserializationContext_withInt_withComFasterxmlJacksonDatabindDeserImplObjectIdReader_(ComFasterxmlJacksonCoreJsonParser *p, ComFasterxmlJacksonDatabindDeserializationContext *ctxt, jint paramCount, ComFasterxmlJacksonDatabindDeserImplObjectIdReader *oir);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer")
