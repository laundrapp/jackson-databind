//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/util/TypeKey.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindUtilTypeKey")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindUtilTypeKey
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindUtilTypeKey 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindUtilTypeKey 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindUtilTypeKey

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindUtilTypeKey_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindUtilTypeKey || defined(INCLUDE_ComFasterxmlJacksonDatabindUtilTypeKey))
#define ComFasterxmlJacksonDatabindUtilTypeKey_

@class ComFasterxmlJacksonDatabindJavaType;
@class IOSClass;

/*!
 @brief Key that offers two "modes"; one with raw class, as used for
  cases were raw class type is available (for example, when using
  runtime type); and one with full generics-including.
 */
@interface ComFasterxmlJacksonDatabindUtilTypeKey : NSObject {
 @public
  jint _hashCode_;
  IOSClass *_class_;
  ComFasterxmlJacksonDatabindJavaType *_type_;
  /*!
   @brief Indicator of whether serializer stored has a type serializer
  wrapper around it or not; if not, it is "untyped" serializer;
  if it has, it is "typed"
   */
  jboolean _isTyped_;
}

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)key
                               withBoolean:(jboolean)typed;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)key
                                                          withBoolean:(jboolean)typed;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindUtilTypeKey:(ComFasterxmlJacksonDatabindUtilTypeKey *)src;

- (jboolean)isEqual:(id)o;

- (IOSClass *)getRawType;

- (ComFasterxmlJacksonDatabindJavaType *)getType;

- (NSUInteger)hash;

- (jboolean)isTyped;

- (void)resetTypedWithIOSClass:(IOSClass *)cls;

- (void)resetTypedWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type;

- (void)resetUntypedWithIOSClass:(IOSClass *)cls;

- (void)resetUntypedWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type;

- (NSString *)description;

+ (jint)typedHashWithIOSClass:(IOSClass *)cls;

+ (jint)typedHashWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type;

+ (jint)untypedHashWithIOSClass:(IOSClass *)cls;

+ (jint)untypedHashWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindUtilTypeKey)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindUtilTypeKey, _class_, IOSClass *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindUtilTypeKey, _type_, ComFasterxmlJacksonDatabindJavaType *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindUtilTypeKey_init(ComFasterxmlJacksonDatabindUtilTypeKey *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindUtilTypeKey *new_ComFasterxmlJacksonDatabindUtilTypeKey_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindUtilTypeKey *create_ComFasterxmlJacksonDatabindUtilTypeKey_init(void);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindUtilTypeKey_initWithComFasterxmlJacksonDatabindUtilTypeKey_(ComFasterxmlJacksonDatabindUtilTypeKey *self, ComFasterxmlJacksonDatabindUtilTypeKey *src);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindUtilTypeKey *new_ComFasterxmlJacksonDatabindUtilTypeKey_initWithComFasterxmlJacksonDatabindUtilTypeKey_(ComFasterxmlJacksonDatabindUtilTypeKey *src) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindUtilTypeKey *create_ComFasterxmlJacksonDatabindUtilTypeKey_initWithComFasterxmlJacksonDatabindUtilTypeKey_(ComFasterxmlJacksonDatabindUtilTypeKey *src);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindUtilTypeKey_initWithIOSClass_withBoolean_(ComFasterxmlJacksonDatabindUtilTypeKey *self, IOSClass *key, jboolean typed);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindUtilTypeKey *new_ComFasterxmlJacksonDatabindUtilTypeKey_initWithIOSClass_withBoolean_(IOSClass *key, jboolean typed) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindUtilTypeKey *create_ComFasterxmlJacksonDatabindUtilTypeKey_initWithIOSClass_withBoolean_(IOSClass *key, jboolean typed);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindUtilTypeKey_initWithComFasterxmlJacksonDatabindJavaType_withBoolean_(ComFasterxmlJacksonDatabindUtilTypeKey *self, ComFasterxmlJacksonDatabindJavaType *key, jboolean typed);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindUtilTypeKey *new_ComFasterxmlJacksonDatabindUtilTypeKey_initWithComFasterxmlJacksonDatabindJavaType_withBoolean_(ComFasterxmlJacksonDatabindJavaType *key, jboolean typed) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindUtilTypeKey *create_ComFasterxmlJacksonDatabindUtilTypeKey_initWithComFasterxmlJacksonDatabindJavaType_withBoolean_(ComFasterxmlJacksonDatabindJavaType *key, jboolean typed);

FOUNDATION_EXPORT jint ComFasterxmlJacksonDatabindUtilTypeKey_untypedHashWithIOSClass_(IOSClass *cls);

FOUNDATION_EXPORT jint ComFasterxmlJacksonDatabindUtilTypeKey_typedHashWithIOSClass_(IOSClass *cls);

FOUNDATION_EXPORT jint ComFasterxmlJacksonDatabindUtilTypeKey_untypedHashWithComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindJavaType *type);

FOUNDATION_EXPORT jint ComFasterxmlJacksonDatabindUtilTypeKey_typedHashWithComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindJavaType *type);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindUtilTypeKey)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindUtilTypeKey")
