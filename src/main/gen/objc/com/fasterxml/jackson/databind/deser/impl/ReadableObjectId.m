//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/deser/impl/ReadableObjectId.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/annotation/ObjectIdGenerator.h"
#include "com/fasterxml/jackson/annotation/ObjectIdResolver.h"
#include "com/fasterxml/jackson/core/JsonLocation.h"
#include "com/fasterxml/jackson/databind/DeserializationContext.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/deser/UnresolvedForwardReference.h"
#include "com/fasterxml/jackson/databind/deser/impl/ReadableObjectId.h"
#include "java/util/Collections.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"

@interface ComFasterxmlJacksonDatabindDeserImplReadableObjectId_Referring () {
 @public
  ComFasterxmlJacksonDatabindDeserUnresolvedForwardReference *_reference_;
  IOSClass *_beanType_;
}

@end

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserImplReadableObjectId_Referring, _reference_, ComFasterxmlJacksonDatabindDeserUnresolvedForwardReference *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserImplReadableObjectId_Referring, _beanType_, IOSClass *)

@implementation ComFasterxmlJacksonDatabindDeserImplReadableObjectId

- (instancetype __nonnull)initWithComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey:(ComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey *)key {
  ComFasterxmlJacksonDatabindDeserImplReadableObjectId_initWithComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey_(self, key);
  return self;
}

- (void)setResolverWithComFasterxmlJacksonAnnotationObjectIdResolver:(id<ComFasterxmlJacksonAnnotationObjectIdResolver>)resolver {
  JreStrongAssign(&_resolver_, resolver);
}

- (ComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey *)getKey {
  return _key_;
}

- (void)appendReferringWithComFasterxmlJacksonDatabindDeserImplReadableObjectId_Referring:(ComFasterxmlJacksonDatabindDeserImplReadableObjectId_Referring *)currentReferring {
  if (_referringProperties_ == nil) {
    JreStrongAssignAndConsume(&_referringProperties_, new_JavaUtilLinkedList_init());
  }
  [_referringProperties_ addWithId:currentReferring];
}

- (void)bindItemWithId:(id)ob {
  [((id<ComFasterxmlJacksonAnnotationObjectIdResolver>) nil_chk(_resolver_)) bindItemWithComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey:_key_ withId:ob];
  JreStrongAssign(&_item_, ob);
  id id_ = ((ComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey *) nil_chk(_key_))->key_;
  if (_referringProperties_ != nil) {
    id<JavaUtilIterator> it = [_referringProperties_ iterator];
    JreStrongAssign(&_referringProperties_, nil);
    while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
      [((ComFasterxmlJacksonDatabindDeserImplReadableObjectId_Referring *) nil_chk([it next])) handleResolvedForwardReferenceWithId:id_ withId:ob];
    }
  }
}

- (id)resolve {
  return (JreStrongAssign(&_item_, [((id<ComFasterxmlJacksonAnnotationObjectIdResolver>) nil_chk(_resolver_)) resolveIdWithComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey:_key_]));
}

- (jboolean)hasReferringProperties {
  return (_referringProperties_ != nil) && ![((JavaUtilLinkedList *) nil_chk(_referringProperties_)) isEmpty];
}

- (id<JavaUtilIterator>)referringProperties {
  if (_referringProperties_ == nil) {
    return [((id<JavaUtilList>) nil_chk(JavaUtilCollections_emptyList())) iterator];
  }
  return [_referringProperties_ iterator];
}

- (jboolean)tryToResolveUnresolvedWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt {
  return false;
}

- (id<ComFasterxmlJacksonAnnotationObjectIdResolver>)getResolver {
  return _resolver_;
}

- (NSString *)description {
  return NSString_java_valueOf_(_key_);
}

- (void)dealloc {
  RELEASE_(_item_);
  RELEASE_(_key_);
  RELEASE_(_referringProperties_);
  RELEASE_(_resolver_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, 7, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 8, -1, -1 },
    { NULL, "Z", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationObjectIdResolver;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 11, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey:);
  methods[1].selector = @selector(setResolverWithComFasterxmlJacksonAnnotationObjectIdResolver:);
  methods[2].selector = @selector(getKey);
  methods[3].selector = @selector(appendReferringWithComFasterxmlJacksonDatabindDeserImplReadableObjectId_Referring:);
  methods[4].selector = @selector(bindItemWithId:);
  methods[5].selector = @selector(resolve);
  methods[6].selector = @selector(hasReferringProperties);
  methods[7].selector = @selector(referringProperties);
  methods[8].selector = @selector(tryToResolveUnresolvedWithComFasterxmlJacksonDatabindDeserializationContext:);
  methods[9].selector = @selector(getResolver);
  methods[10].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_item_", "LNSObject;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_key_", "LComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_referringProperties_", "LJavaUtilLinkedList;", .constantValue.asLong = 0, 0x4, -1, -1, 12, -1 },
    { "_resolver_", "LComFasterxmlJacksonAnnotationObjectIdResolver;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey;", "setResolver", "LComFasterxmlJacksonAnnotationObjectIdResolver;", "appendReferring", "LComFasterxmlJacksonDatabindDeserImplReadableObjectId_Referring;", "bindItem", "LNSObject;", "LJavaIoIOException;", "()Ljava/util/Iterator<Lcom/fasterxml/jackson/databind/deser/impl/ReadableObjectId$Referring;>;", "tryToResolveUnresolved", "LComFasterxmlJacksonDatabindDeserializationContext;", "toString", "Ljava/util/LinkedList<Lcom/fasterxml/jackson/databind/deser/impl/ReadableObjectId$Referring;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindDeserImplReadableObjectId = { "ReadableObjectId", "com.fasterxml.jackson.databind.deser.impl", ptrTable, methods, fields, 7, 0x1, 11, 4, -1, 4, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindDeserImplReadableObjectId;
}

@end

void ComFasterxmlJacksonDatabindDeserImplReadableObjectId_initWithComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey_(ComFasterxmlJacksonDatabindDeserImplReadableObjectId *self, ComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey *key) {
  NSObject_init(self);
  JreStrongAssign(&self->_key_, key);
}

ComFasterxmlJacksonDatabindDeserImplReadableObjectId *new_ComFasterxmlJacksonDatabindDeserImplReadableObjectId_initWithComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey_(ComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey *key) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindDeserImplReadableObjectId, initWithComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey_, key)
}

ComFasterxmlJacksonDatabindDeserImplReadableObjectId *create_ComFasterxmlJacksonDatabindDeserImplReadableObjectId_initWithComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey_(ComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey *key) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindDeserImplReadableObjectId, initWithComFasterxmlJacksonAnnotationObjectIdGenerator_IdKey_, key)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindDeserImplReadableObjectId)

@implementation ComFasterxmlJacksonDatabindDeserImplReadableObjectId_Referring

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindDeserUnresolvedForwardReference:(ComFasterxmlJacksonDatabindDeserUnresolvedForwardReference *)ref
                                                                                withIOSClass:(IOSClass *)beanType {
  ComFasterxmlJacksonDatabindDeserImplReadableObjectId_Referring_initWithComFasterxmlJacksonDatabindDeserUnresolvedForwardReference_withIOSClass_(self, ref, beanType);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindDeserUnresolvedForwardReference:(ComFasterxmlJacksonDatabindDeserUnresolvedForwardReference *)ref
                                                     withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)beanType {
  ComFasterxmlJacksonDatabindDeserImplReadableObjectId_Referring_initWithComFasterxmlJacksonDatabindDeserUnresolvedForwardReference_withComFasterxmlJacksonDatabindJavaType_(self, ref, beanType);
  return self;
}

- (ComFasterxmlJacksonCoreJsonLocation *)getLocation {
  return [((ComFasterxmlJacksonDatabindDeserUnresolvedForwardReference *) nil_chk(_reference_)) getLocation];
}

- (IOSClass *)getBeanType {
  return _beanType_;
}

- (void)handleResolvedForwardReferenceWithId:(id)id_
                                      withId:(id)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
}

- (jboolean)hasIdWithId:(id)id_ {
  return [nil_chk(id_) isEqual:[((ComFasterxmlJacksonDatabindDeserUnresolvedForwardReference *) nil_chk(_reference_)) getUnresolvedId]];
}

- (void)dealloc {
  RELEASE_(_reference_);
  RELEASE_(_beanType_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonLocation;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 3, -1, -1 },
    { NULL, "V", 0x401, 4, 5, 6, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonDatabindDeserUnresolvedForwardReference:withIOSClass:);
  methods[1].selector = @selector(initWithComFasterxmlJacksonDatabindDeserUnresolvedForwardReference:withComFasterxmlJacksonDatabindJavaType:);
  methods[2].selector = @selector(getLocation);
  methods[3].selector = @selector(getBeanType);
  methods[4].selector = @selector(handleResolvedForwardReferenceWithId:withId:);
  methods[5].selector = @selector(hasIdWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_reference_", "LComFasterxmlJacksonDatabindDeserUnresolvedForwardReference;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_beanType_", "LIOSClass;", .constantValue.asLong = 0, 0x12, -1, -1, 9, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindDeserUnresolvedForwardReference;LIOSClass;", "(Lcom/fasterxml/jackson/databind/deser/UnresolvedForwardReference;Ljava/lang/Class<*>;)V", "LComFasterxmlJacksonDatabindDeserUnresolvedForwardReference;LComFasterxmlJacksonDatabindJavaType;", "()Ljava/lang/Class<*>;", "handleResolvedForwardReference", "LNSObject;LNSObject;", "LJavaIoIOException;", "hasId", "LNSObject;", "Ljava/lang/Class<*>;", "LComFasterxmlJacksonDatabindDeserImplReadableObjectId;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindDeserImplReadableObjectId_Referring = { "Referring", "com.fasterxml.jackson.databind.deser.impl", ptrTable, methods, fields, 7, 0x409, 6, 2, 10, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindDeserImplReadableObjectId_Referring;
}

@end

void ComFasterxmlJacksonDatabindDeserImplReadableObjectId_Referring_initWithComFasterxmlJacksonDatabindDeserUnresolvedForwardReference_withIOSClass_(ComFasterxmlJacksonDatabindDeserImplReadableObjectId_Referring *self, ComFasterxmlJacksonDatabindDeserUnresolvedForwardReference *ref, IOSClass *beanType) {
  NSObject_init(self);
  JreStrongAssign(&self->_reference_, ref);
  JreStrongAssign(&self->_beanType_, beanType);
}

void ComFasterxmlJacksonDatabindDeserImplReadableObjectId_Referring_initWithComFasterxmlJacksonDatabindDeserUnresolvedForwardReference_withComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindDeserImplReadableObjectId_Referring *self, ComFasterxmlJacksonDatabindDeserUnresolvedForwardReference *ref, ComFasterxmlJacksonDatabindJavaType *beanType) {
  NSObject_init(self);
  JreStrongAssign(&self->_reference_, ref);
  JreStrongAssign(&self->_beanType_, [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(beanType)) getRawClass]);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindDeserImplReadableObjectId_Referring)
