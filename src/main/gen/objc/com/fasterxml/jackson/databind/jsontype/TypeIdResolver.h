//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/jsontype/TypeIdResolver.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeTypeIdResolver")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindJsontypeTypeIdResolver
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeTypeIdResolver 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeTypeIdResolver 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindJsontypeTypeIdResolver

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindJsontypeTypeIdResolver_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeTypeIdResolver || defined(INCLUDE_ComFasterxmlJacksonDatabindJsontypeTypeIdResolver))
#define ComFasterxmlJacksonDatabindJsontypeTypeIdResolver_

@class ComFasterxmlJacksonAnnotationJsonTypeInfo_Id;
@class ComFasterxmlJacksonDatabindDatabindContext;
@class ComFasterxmlJacksonDatabindJavaType;
@class IOSClass;

/*!
 @brief Interface that defines standard API for converting types
  to type identifiers and vice versa.Used by type resolvers
  (<code>com.fasterxml.jackson.databind.jsontype.TypeSerializer</code>,
  <code>com.fasterxml.jackson.databind.jsontype.TypeDeserializer</code>) for converting
  between type and matching id; id is stored in JSON and needed for
  creating instances of proper subtypes when deserializing values.
 <p>
  NOTE: it is <b>strongly</b> recommended that developers always extend
  abstract base class <code>com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase</code>
  instead of directly implementing this interface; this helps prevent
  breakage in case new methds need to be added in this interface (something
  we try to avoid doing; but which may be necessary in some cases).
 */
@protocol ComFasterxmlJacksonDatabindJsontypeTypeIdResolver < JavaObject >

/*!
 @brief Method that will be called once before any type resolution calls;
  used to initialize instance with configuration.This is necessary
  since instances may be created via reflection, without ability to
  call specific constructor to pass in configuration settings.
 @param baseType Base type for which this id resolver instance is    used
 */
- (void)init__WithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)baseType OBJC_METHOD_FAMILY_NONE;

/*!
 @brief Method called to serialize type of the type of given value
  as a String to include in serialized JSON content.
 */
- (NSString *)idFromValueWithId:(id)value;

/*!
 @brief Alternative method used for determining type from combination of
  value and type, using suggested type (that serializer provides)
  and possibly value of that type.Most common implementation will
  use suggested type as is.
 */
- (NSString *)idFromValueAndTypeWithId:(id)value
                          withIOSClass:(IOSClass *)suggestedType;

/*!
 @brief Method that can be called to figure out type id to use for instances
  of base type (declared type of property).This is usually only used
  for fallback handling, for cases where real type information is not
  available for some reason.
 */
- (NSString *)idFromBaseType;

/*!
 @brief Method called to resolve type from given type identifier.
 @since 2.5 (throws clause added in 2.8)
 */
- (ComFasterxmlJacksonDatabindJavaType *)typeFromIdWithComFasterxmlJacksonDatabindDatabindContext:(ComFasterxmlJacksonDatabindDatabindContext *)context
                                                                                     withNSString:(NSString *)id_;

/*!
 @brief Method called for error-reporting and diagnostics purposes.
 @since 2.7 -- but since 2.5 has existed in <code>com.fasterxml.jackson.databind.jsontype.impl.TypeIdResolverBase</code>
 */
- (NSString *)getDescForKnownTypeIds;

/*!
 @brief Accessor for mechanism that this resolver uses for determining
  type id from type.Mostly informational; not required to be called
  or used.
 */
- (ComFasterxmlJacksonAnnotationJsonTypeInfo_Id *)getMechanism;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindJsontypeTypeIdResolver)

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindJsontypeTypeIdResolver)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeTypeIdResolver")
