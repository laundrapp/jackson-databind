//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/impl/FailingSerializer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerImplFailingSerializer")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindSerImplFailingSerializer
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerImplFailingSerializer 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerImplFailingSerializer 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindSerImplFailingSerializer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindSerImplFailingSerializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerImplFailingSerializer || defined(INCLUDE_ComFasterxmlJacksonDatabindSerImplFailingSerializer))
#define ComFasterxmlJacksonDatabindSerImplFailingSerializer_

#define RESTRICT_ComFasterxmlJacksonDatabindSerStdStdSerializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerStdStdSerializer 1
#include "com/fasterxml/jackson/databind/ser/std/StdSerializer.h"

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsonNode;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSClass;
@protocol ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;
@protocol JavaLangReflectType;

/*!
 @brief Special bogus "serializer" that will throw 
 <code>JsonMappingException</code> if its <code>serialize</code>
  gets invoked.Most commonly registered as handler for unknown types,
  as well as for catching unintended usage (like trying to use null
  as Map/Object key).
 */
@interface ComFasterxmlJacksonDatabindSerImplFailingSerializer : ComFasterxmlJacksonDatabindSerStdStdSerializer {
 @public
  NSString *_msg_;
}

#pragma mark Public

- (instancetype __nonnull)initWithNSString:(NSString *)msg;

- (void)acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint;

- (ComFasterxmlJacksonDatabindJsonNode *)getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                            withJavaLangReflectType:(id<JavaLangReflectType>)typeHint;

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindSerStdStdSerializer:(ComFasterxmlJacksonDatabindSerStdStdSerializer *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0
                               withBoolean:(jboolean)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindSerImplFailingSerializer)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindSerImplFailingSerializer, _msg_, NSString *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerImplFailingSerializer_initWithNSString_(ComFasterxmlJacksonDatabindSerImplFailingSerializer *self, NSString *msg);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerImplFailingSerializer *new_ComFasterxmlJacksonDatabindSerImplFailingSerializer_initWithNSString_(NSString *msg) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerImplFailingSerializer *create_ComFasterxmlJacksonDatabindSerImplFailingSerializer_initWithNSString_(NSString *msg);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerImplFailingSerializer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerImplFailingSerializer")
