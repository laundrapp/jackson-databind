//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/node/ArrayNode.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeArrayNode")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindNodeArrayNode
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeArrayNode 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeArrayNode 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindNodeArrayNode

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindNodeArrayNode_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeArrayNode || defined(INCLUDE_ComFasterxmlJacksonDatabindNodeArrayNode))
#define ComFasterxmlJacksonDatabindNodeArrayNode_

#define RESTRICT_ComFasterxmlJacksonDatabindNodeContainerNode 1
#define INCLUDE_ComFasterxmlJacksonDatabindNodeContainerNode 1
#include "com/fasterxml/jackson/databind/node/ContainerNode.h"

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonCoreJsonPointer;
@class ComFasterxmlJacksonCoreJsonToken;
@class ComFasterxmlJacksonDatabindJsonNode;
@class ComFasterxmlJacksonDatabindJsontypeTypeSerializer;
@class ComFasterxmlJacksonDatabindNodeJsonNodeFactory;
@class ComFasterxmlJacksonDatabindNodeJsonNodeType;
@class ComFasterxmlJacksonDatabindNodeObjectNode;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class ComFasterxmlJacksonDatabindUtilRawValue;
@class IOSByteArray;
@class JavaLangBoolean;
@class JavaLangDouble;
@class JavaLangFloat;
@class JavaLangInteger;
@class JavaLangLong;
@class JavaMathBigDecimal;
@class JavaMathBigInteger;
@protocol JavaUtilCollection;
@protocol JavaUtilComparator;
@protocol JavaUtilIterator;
@protocol JavaUtilList;

/*!
 @brief Node class that represents Arrays mapped from JSON content.
 <p>
  Note: class was <code>final</code> temporarily for Jackson 2.2.
 */
@interface ComFasterxmlJacksonDatabindNodeArrayNode : ComFasterxmlJacksonDatabindNodeContainerNode

#pragma mark Public

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory:(ComFasterxmlJacksonDatabindNodeJsonNodeFactory *)nf;

/*!
 @since 2.8
 */
- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory:(ComFasterxmlJacksonDatabindNodeJsonNodeFactory *)nf
                                                                         withInt:(jint)capacity;

/*!
 @since 2.7
 */
- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory:(ComFasterxmlJacksonDatabindNodeJsonNodeFactory *)nf
                                                                withJavaUtilList:(id<JavaUtilList>)children;

/*!
 @brief Method for adding specified number at the end of this array.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithJavaMathBigDecimal:(JavaMathBigDecimal *)v;

/*!
 @brief Method for adding specified number at the end of this array.
 @return This array node, to allow chaining
 @since 2.9
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithJavaMathBigInteger:(JavaMathBigInteger *)v;

/*!
 @brief Method for adding specified boolean value at the end of this array.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithBoolean:(jboolean)v;

/*!
 @brief Alternative method that we need to avoid bumping into NPE issues
  with auto-unboxing.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithJavaLangBoolean:(JavaLangBoolean *)value;

/*!
 @brief Method for adding specified binary value at the end of this array
  (note: when serializing as JSON, will be output Base64 encoded)
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithByteArray:(IOSByteArray *)v;

/*!
 @brief Method for adding specified number at the end of this array.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithDouble:(jdouble)v;

/*!
 @brief Alternative method that we need to avoid bumping into NPE issues
  with auto-unboxing.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithJavaLangDouble:(JavaLangDouble *)value;

/*!
 @brief Method for adding specified number at the end of this array.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithFloat:(jfloat)v;

/*!
 @brief Alternative method that we need to avoid bumping into NPE issues
  with auto-unboxing.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithJavaLangFloat:(JavaLangFloat *)value;

/*!
 @brief Method for adding specified number at the end of this array.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithInt:(jint)v;

/*!
 @brief Alternative method that we need to avoid bumping into NPE issues
  with auto-unboxing.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithJavaLangInteger:(JavaLangInteger *)value;

/*!
 @brief Method for adding specified node at the end of this array.
 @return This node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithComFasterxmlJacksonDatabindJsonNode:(ComFasterxmlJacksonDatabindJsonNode *)value;

/*!
 @brief Method for adding specified number at the end of this array.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithLong:(jlong)v;

/*!
 @brief Alternative method that we need to avoid bumping into NPE issues
  with auto-unboxing.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithJavaLangLong:(JavaLangLong *)value;

/*!
 @brief Method for adding specified String value at the end of this array.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithNSString:(NSString *)v;

/*!
 @brief Method for adding all child nodes of given Array, appending to
  child nodes this array contains
 @param other Array to add contents from
 @return This node (to allow chaining)
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)addAllWithComFasterxmlJacksonDatabindNodeArrayNode:(ComFasterxmlJacksonDatabindNodeArrayNode *)other;

/*!
 @brief Method for adding given nodes as child nodes of this array node.
 @param nodes Nodes to add
 @return This node (to allow chaining)
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)nodes;

/*!
 @brief Method that will construct an ArrayNode and add it at the end
  of this array node.
 @return Newly constructed ArrayNode
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)addArray;

/*!
 @brief Method that will add a null value at the end of this array node.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)addNull;

/*!
 @brief Method that will construct an ObjectNode and add it at the end
  of this array node.
 @return Newly constructed ObjectNode
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)addObject;

/*!
 @brief Method that will construct a POJONode and add it at the end
  of this array node.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)addPOJOWithId:(id)value;

/*!
 @return This array node, to allow chaining
 @since 2.6
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)addRawValueWithComFasterxmlJacksonDatabindUtilRawValue:(ComFasterxmlJacksonDatabindUtilRawValue *)raw;

- (ComFasterxmlJacksonCoreJsonToken *)asToken;

- (ComFasterxmlJacksonDatabindNodeArrayNode *)deepCopy;

- (id<JavaUtilIterator>)elements;

- (jboolean)equalsWithJavaUtilComparator:(id<JavaUtilComparator>)comparator
 withComFasterxmlJacksonDatabindJsonNode:(ComFasterxmlJacksonDatabindJsonNode *)o;

- (jboolean)isEqual:(id)o;

- (ComFasterxmlJacksonDatabindNodeObjectNode *)findParentWithNSString:(NSString *)fieldName;

- (id<JavaUtilList>)findParentsWithNSString:(NSString *)fieldName
                           withJavaUtilList:(id<JavaUtilList>)foundSoFar;

- (ComFasterxmlJacksonDatabindJsonNode *)findValueWithNSString:(NSString *)fieldName;

- (id<JavaUtilList>)findValuesWithNSString:(NSString *)fieldName
                          withJavaUtilList:(id<JavaUtilList>)foundSoFar;

- (id<JavaUtilList>)findValuesAsTextWithNSString:(NSString *)fieldName
                                withJavaUtilList:(id<JavaUtilList>)foundSoFar;

- (ComFasterxmlJacksonDatabindJsonNode *)getWithInt:(jint)index;

- (ComFasterxmlJacksonDatabindJsonNode *)getWithNSString:(NSString *)fieldName;

- (ComFasterxmlJacksonDatabindNodeJsonNodeType *)getNodeType;

- (NSUInteger)hash;

/*!
 @brief Method that will insert specified numeric value
  at specified position in this array.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                     withJavaMathBigDecimal:(JavaMathBigDecimal *)v;

/*!
 @brief Method that will insert specified numeric value
  at specified position in this array.
 @return This array node, to allow chaining
 @since 2.9
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                     withJavaMathBigInteger:(JavaMathBigInteger *)v;

/*!
 @brief Method that will insert specified String
  at specified position in this array.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                                withBoolean:(jboolean)v;

/*!
 @brief Alternative method that we need to avoid bumping into NPE issues
  with auto-unboxing.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                        withJavaLangBoolean:(JavaLangBoolean *)value;

/*!
 @brief Method that will insert specified binary value
  at specified position in this array
  (note: when written as JSON, will be Base64 encoded)
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                              withByteArray:(IOSByteArray *)v;

/*!
 @brief Method that will insert specified numeric value
  at specified position in this array.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                                 withDouble:(jdouble)v;

/*!
 @brief Alternative method that we need to avoid bumping into NPE issues
  with auto-unboxing.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                         withJavaLangDouble:(JavaLangDouble *)value;

/*!
 @brief Method that will insert specified numeric value
  at specified position in this array.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                                  withFloat:(jfloat)v;

/*!
 @brief Alternative method that we need to avoid bumping into NPE issues
  with auto-unboxing.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                          withJavaLangFloat:(JavaLangFloat *)value;

/*!
 @brief Method that will insert specified numeric value
  at specified position in this array.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                                    withInt:(jint)v;

/*!
 @brief Alternative method that we need to avoid bumping into NPE issues
  with auto-unboxing.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                        withJavaLangInteger:(JavaLangInteger *)value;

/*!
 @brief Method for inserting specified child node as an element
  of this Array.If index is 0 or less, it will be inserted as
  the first element; if >= size(), appended at the end, and otherwise
  inserted before existing element in specified index.
 No exceptions are thrown for any index.
 @return This node (to allow chaining)
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                    withComFasterxmlJacksonDatabindJsonNode:(ComFasterxmlJacksonDatabindJsonNode *)value;

/*!
 @brief Method that will insert specified numeric value
  at specified position in this array.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                                   withLong:(jlong)v;

/*!
 @brief Alternative method that we need to avoid bumping into NPE issues
  with auto-unboxing.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                           withJavaLangLong:(JavaLangLong *)value;

/*!
 @brief Method that will insert specified String
  at specified position in this array.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                               withNSString:(NSString *)v;

/*!
 @brief Method for creating an array node, inserting it at the
  specified point in the array,
  and returning the <b>newly created array</b>
  (note: NOT 'this' array)
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertArrayWithInt:(jint)index;

/*!
 @brief Method that will insert a null value
  at specified position in this array.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertNullWithInt:(jint)index;

/*!
 @brief Method for creating an <code>ObjectNode</code>, appending it at the end
  of this array, and returning the <b>newly created node</b>
  (note: NOT 'this' array)
 @return Newly constructed ObjectNode
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)insertObjectWithInt:(jint)index;

/*!
 @brief Method that will construct a POJONode and
  insert it at specified position in this array.
 @return This array node, to allow chaining
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertPOJOWithInt:(jint)index
                                                         withId:(id)value;

- (jboolean)isArray;

- (jboolean)isEmptyWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)serializers;

- (ComFasterxmlJacksonDatabindJsonNode *)pathWithInt:(jint)index;

- (ComFasterxmlJacksonDatabindJsonNode *)pathWithNSString:(NSString *)fieldName;

/*!
 @brief Method for removing an entry from this ArrayNode.
 Will return value of the entry at specified index, if entry existed;
  null if not.
 @return Node removed, if any; null if none
 */
- (ComFasterxmlJacksonDatabindJsonNode *)removeWithInt:(jint)index;

/*!
 @brief Method for removing all elements of this array, leaving the
  array empty.
 @return This node (to allow chaining)
 */
- (ComFasterxmlJacksonDatabindNodeArrayNode *)removeAll;

- (void)serializeWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)f
        withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

- (void)serializeWithTypeWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
                withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
            withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer;

/*!
 @brief Method that will set specified field, replacing old value,
  if any.
 @param value to set field to; if null, will be converted    to a 
 <code>NullNode</code>  first  (to remove field entry, call    <code>remove</code>
   instead)
 @return Old value of the field, if any; null if there was no
    old value.
 */
- (ComFasterxmlJacksonDatabindJsonNode *)setWithInt:(jint)index
            withComFasterxmlJacksonDatabindJsonNode:(ComFasterxmlJacksonDatabindJsonNode *)value;

- (jint)size;

- (NSString *)description;

#pragma mark Protected

- (ComFasterxmlJacksonDatabindNodeArrayNode *)_addWithComFasterxmlJacksonDatabindJsonNode:(ComFasterxmlJacksonDatabindJsonNode *)node;

- (ComFasterxmlJacksonDatabindJsonNode *)_atWithComFasterxmlJacksonCoreJsonPointer:(ComFasterxmlJacksonCoreJsonPointer *)ptr;

/*!
 @since 2.3
 */
- (jboolean)_childrenEqualWithComFasterxmlJacksonDatabindNodeArrayNode:(ComFasterxmlJacksonDatabindNodeArrayNode *)other;

- (ComFasterxmlJacksonDatabindNodeArrayNode *)_insertWithInt:(jint)index
                     withComFasterxmlJacksonDatabindJsonNode:(ComFasterxmlJacksonDatabindJsonNode *)node;

#pragma mark Package-Private

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindNodeArrayNode)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindNodeArrayNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_(ComFasterxmlJacksonDatabindNodeArrayNode *self, ComFasterxmlJacksonDatabindNodeJsonNodeFactory *nf);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeArrayNode *new_ComFasterxmlJacksonDatabindNodeArrayNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_(ComFasterxmlJacksonDatabindNodeJsonNodeFactory *nf) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeArrayNode *create_ComFasterxmlJacksonDatabindNodeArrayNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_(ComFasterxmlJacksonDatabindNodeJsonNodeFactory *nf);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindNodeArrayNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_withInt_(ComFasterxmlJacksonDatabindNodeArrayNode *self, ComFasterxmlJacksonDatabindNodeJsonNodeFactory *nf, jint capacity);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeArrayNode *new_ComFasterxmlJacksonDatabindNodeArrayNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_withInt_(ComFasterxmlJacksonDatabindNodeJsonNodeFactory *nf, jint capacity) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeArrayNode *create_ComFasterxmlJacksonDatabindNodeArrayNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_withInt_(ComFasterxmlJacksonDatabindNodeJsonNodeFactory *nf, jint capacity);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindNodeArrayNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_withJavaUtilList_(ComFasterxmlJacksonDatabindNodeArrayNode *self, ComFasterxmlJacksonDatabindNodeJsonNodeFactory *nf, id<JavaUtilList> children);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeArrayNode *new_ComFasterxmlJacksonDatabindNodeArrayNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_withJavaUtilList_(ComFasterxmlJacksonDatabindNodeJsonNodeFactory *nf, id<JavaUtilList> children) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeArrayNode *create_ComFasterxmlJacksonDatabindNodeArrayNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_withJavaUtilList_(ComFasterxmlJacksonDatabindNodeJsonNodeFactory *nf, id<JavaUtilList> children);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindNodeArrayNode)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeArrayNode")
