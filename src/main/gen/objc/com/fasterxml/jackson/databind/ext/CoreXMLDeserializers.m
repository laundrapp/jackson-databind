//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ext/CoreXMLDeserializers.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonParser.h"
#include "com/fasterxml/jackson/core/JsonToken.h"
#include "com/fasterxml/jackson/databind/BeanDescription.h"
#include "com/fasterxml/jackson/databind/DeserializationConfig.h"
#include "com/fasterxml/jackson/databind/DeserializationContext.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/JsonDeserializer.h"
#include "com/fasterxml/jackson/databind/JsonMappingException.h"
#include "com/fasterxml/jackson/databind/deser/Deserializers.h"
#include "com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.h"
#include "com/fasterxml/jackson/databind/ext/CoreXMLDeserializers.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/RuntimeException.h"
#include "java/util/Date.h"
#include "java/util/GregorianCalendar.h"
#include "java/util/TimeZone.h"
#include "javax/xml/datatype/DatatypeConfigurationException.h"
#include "javax/xml/datatype/DatatypeFactory.h"
#include "javax/xml/datatype/Duration.h"
#include "javax/xml/datatype/XMLGregorianCalendar.h"
#include "javax/xml/namespace/QName.h"

inline jlong ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std, serialVersionUID, jlong)

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindExtCoreXMLDeserializers)

JavaxXmlDatatypeDatatypeFactory *ComFasterxmlJacksonDatabindExtCoreXMLDeserializers__dataTypeFactory;

@implementation ComFasterxmlJacksonDatabindExtCoreXMLDeserializers

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComFasterxmlJacksonDatabindJsonDeserializer *)findBeanDeserializerWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                        withComFasterxmlJacksonDatabindDeserializationConfig:(ComFasterxmlJacksonDatabindDeserializationConfig *)config
                                                              withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc {
  IOSClass *raw = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(type)) getRawClass];
  if (raw == JavaxXmlNamespaceQName_class_()) {
    return create_ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std_initWithIOSClass_withInt_(raw, ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_TYPE_QNAME);
  }
  if (raw == JavaxXmlDatatypeXMLGregorianCalendar_class_()) {
    return create_ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std_initWithIOSClass_withInt_(raw, ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_TYPE_G_CALENDAR);
  }
  if (raw == JavaxXmlDatatypeDuration_class_()) {
    return create_ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std_initWithIOSClass_withInt_(raw, ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_TYPE_DURATION);
  }
  return nil;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonDeserializer;", 0x1, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(findBeanDeserializerWithComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindDeserializationConfig:withComFasterxmlJacksonDatabindBeanDescription:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_dataTypeFactory", "LJavaxXmlDatatypeDatatypeFactory;", .constantValue.asLong = 0, 0x18, -1, 3, -1, -1 },
    { "TYPE_DURATION", "I", .constantValue.asInt = ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_TYPE_DURATION, 0x1c, -1, -1, -1, -1 },
    { "TYPE_G_CALENDAR", "I", .constantValue.asInt = ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_TYPE_G_CALENDAR, 0x1c, -1, -1, -1, -1 },
    { "TYPE_QNAME", "I", .constantValue.asInt = ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_TYPE_QNAME, 0x1c, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "findBeanDeserializer", "LComFasterxmlJacksonDatabindJavaType;LComFasterxmlJacksonDatabindDeserializationConfig;LComFasterxmlJacksonDatabindBeanDescription;", "(Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/DeserializationConfig;Lcom/fasterxml/jackson/databind/BeanDescription;)Lcom/fasterxml/jackson/databind/JsonDeserializer<*>;", &ComFasterxmlJacksonDatabindExtCoreXMLDeserializers__dataTypeFactory, "LComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindExtCoreXMLDeserializers = { "CoreXMLDeserializers", "com.fasterxml.jackson.databind.ext", ptrTable, methods, fields, 7, 0x1, 2, 4, -1, 4, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindExtCoreXMLDeserializers;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindExtCoreXMLDeserializers class]) {
    {
      @try {
        JreStrongAssign(&ComFasterxmlJacksonDatabindExtCoreXMLDeserializers__dataTypeFactory, JavaxXmlDatatypeDatatypeFactory_newInstance());
      }
      @catch (JavaxXmlDatatypeDatatypeConfigurationException *e) {
        @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(e);
      }
    }
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindExtCoreXMLDeserializers)
  }
}

@end

void ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_init(ComFasterxmlJacksonDatabindExtCoreXMLDeserializers *self) {
  ComFasterxmlJacksonDatabindDeserDeserializers_Base_init(self);
}

ComFasterxmlJacksonDatabindExtCoreXMLDeserializers *new_ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindExtCoreXMLDeserializers, init)
}

ComFasterxmlJacksonDatabindExtCoreXMLDeserializers *create_ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindExtCoreXMLDeserializers, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindExtCoreXMLDeserializers)

@implementation ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)raw
                                   withInt:(jint)kind {
  ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std_initWithIOSClass_withInt_(self, raw, kind);
  return self;
}

- (id)deserializeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
 withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt {
  if (_kind_ == ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_TYPE_G_CALENDAR) {
    if ([((ComFasterxmlJacksonCoreJsonParser *) nil_chk(p)) hasTokenWithComFasterxmlJacksonCoreJsonToken:JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_NUMBER_INT)]) {
      return [self _gregorianFromDateWithComFasterxmlJacksonDatabindDeserializationContext:ctxt withJavaUtilDate:[self _parseDateWithComFasterxmlJacksonCoreJsonParser:p withComFasterxmlJacksonDatabindDeserializationContext:ctxt]];
    }
  }
  return [super deserializeWithComFasterxmlJacksonCoreJsonParser:p withComFasterxmlJacksonDatabindDeserializationContext:ctxt];
}

- (id)_deserializeWithNSString:(NSString *)value
withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt {
  {
    JavaUtilDate *d;
    switch (_kind_) {
      case ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_TYPE_DURATION:
      return [((JavaxXmlDatatypeDatatypeFactory *) nil_chk(JreLoadStatic(ComFasterxmlJacksonDatabindExtCoreXMLDeserializers, _dataTypeFactory))) newDurationWithNSString:value];
      case ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_TYPE_QNAME:
      return JavaxXmlNamespaceQName_valueOfWithNSString_(value);
      case ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_TYPE_G_CALENDAR:
      @try {
        d = [self _parseDateWithNSString:value withComFasterxmlJacksonDatabindDeserializationContext:ctxt];
      }
      @catch (ComFasterxmlJacksonDatabindJsonMappingException *e) {
        return [((JavaxXmlDatatypeDatatypeFactory *) nil_chk(JreLoadStatic(ComFasterxmlJacksonDatabindExtCoreXMLDeserializers, _dataTypeFactory))) newXMLGregorianCalendarWithNSString:value];
      }
      return [self _gregorianFromDateWithComFasterxmlJacksonDatabindDeserializationContext:ctxt withJavaUtilDate:d];
    }
  }
  @throw create_JavaLangIllegalStateException_init();
}

- (JavaxXmlDatatypeXMLGregorianCalendar *)_gregorianFromDateWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                                                 withJavaUtilDate:(JavaUtilDate *)d {
  if (d == nil) {
    return nil;
  }
  JavaUtilGregorianCalendar *calendar = create_JavaUtilGregorianCalendar_init();
  [calendar setTimeWithJavaUtilDate:d];
  JavaUtilTimeZone *tz = [((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) getTimeZone];
  if (tz != nil) {
    [calendar setTimeZoneWithJavaUtilTimeZone:tz];
  }
  return [((JavaxXmlDatatypeDatatypeFactory *) nil_chk(JreLoadStatic(ComFasterxmlJacksonDatabindExtCoreXMLDeserializers, _dataTypeFactory))) newXMLGregorianCalendarWithJavaUtilGregorianCalendar:calendar];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "LNSObject;", 0x4, 5, 6, 4, -1, -1, -1 },
    { NULL, "LJavaxXmlDatatypeXMLGregorianCalendar;", 0x4, 7, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:withInt:);
  methods[1].selector = @selector(deserializeWithComFasterxmlJacksonCoreJsonParser:withComFasterxmlJacksonDatabindDeserializationContext:);
  methods[2].selector = @selector(_deserializeWithNSString:withComFasterxmlJacksonDatabindDeserializationContext:);
  methods[3].selector = @selector(_gregorianFromDateWithComFasterxmlJacksonDatabindDeserializationContext:withJavaUtilDate:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "_kind_", "I", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;I", "(Ljava/lang/Class<*>;I)V", "deserialize", "LComFasterxmlJacksonCoreJsonParser;LComFasterxmlJacksonDatabindDeserializationContext;", "LJavaIoIOException;", "_deserialize", "LNSString;LComFasterxmlJacksonDatabindDeserializationContext;", "_gregorianFromDate", "LComFasterxmlJacksonDatabindDeserializationContext;LJavaUtilDate;", "LComFasterxmlJacksonDatabindExtCoreXMLDeserializers;", "Lcom/fasterxml/jackson/databind/deser/std/FromStringDeserializer<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std = { "Std", "com.fasterxml.jackson.databind.ext", ptrTable, methods, fields, 7, 0x9, 4, 2, 9, -1, -1, 10, -1 };
  return &_ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std;
}

@end

void ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std_initWithIOSClass_withInt_(ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std *self, IOSClass *raw, jint kind) {
  ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_initWithIOSClass_(self, raw);
  self->_kind_ = kind;
}

ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std *new_ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std_initWithIOSClass_withInt_(IOSClass *raw, jint kind) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std, initWithIOSClass_withInt_, raw, kind)
}

ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std *create_ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std_initWithIOSClass_withInt_(IOSClass *raw, jint kind) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std, initWithIOSClass_withInt_, raw, kind)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std)
