//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/jsontype/NamedType.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/databind/jsontype/NamedType.h"

inline jlong ComFasterxmlJacksonDatabindJsontypeNamedType_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindJsontypeNamedType_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindJsontypeNamedType, serialVersionUID, jlong)

@implementation ComFasterxmlJacksonDatabindJsontypeNamedType

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)c {
  ComFasterxmlJacksonDatabindJsontypeNamedType_initWithIOSClass_(self, c);
  return self;
}

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)c
                              withNSString:(NSString *)name {
  ComFasterxmlJacksonDatabindJsontypeNamedType_initWithIOSClass_withNSString_(self, c, name);
  return self;
}

- (IOSClass *)getType {
  return _class_;
}

- (NSString *)getName {
  return _name_;
}

- (void)setNameWithNSString:(NSString *)name {
  JreStrongAssign(&_name_, (name == nil || [name java_length] == 0) ? nil : name);
}

- (jboolean)hasName {
  return _name_ != nil;
}

- (jboolean)isEqual:(id)o {
  if (o == self) return true;
  if (o == nil) return false;
  if ([o java_getClass] != [self java_getClass]) return false;
  return _class_ == ((ComFasterxmlJacksonDatabindJsontypeNamedType *) cast_chk(o, [ComFasterxmlJacksonDatabindJsontypeNamedType class]))->_class_;
}

- (NSUInteger)hash {
  return _hashCode_;
}

- (NSString *)description {
  return JreStrcat("$$$$C", @"[NamedType, class ", [((IOSClass *) nil_chk(_class_)) getName], @", name: ", (_name_ == nil ? @"null" : (JreStrcat("C$C", '\'', _name_, '\''))), ']');
}

- (void)dealloc {
  RELEASE_(_class_);
  RELEASE_(_name_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, 3, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 4, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 9, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 10, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:);
  methods[1].selector = @selector(initWithIOSClass:withNSString:);
  methods[2].selector = @selector(getType);
  methods[3].selector = @selector(getName);
  methods[4].selector = @selector(setNameWithNSString:);
  methods[5].selector = @selector(hasName);
  methods[6].selector = @selector(isEqual:);
  methods[7].selector = @selector(hash);
  methods[8].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindJsontypeNamedType_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "_class_", "LIOSClass;", .constantValue.asLong = 0, 0x14, -1, -1, 11, -1 },
    { "_hashCode_", "I", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_name_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;", "(Ljava/lang/Class<*>;)V", "LIOSClass;LNSString;", "(Ljava/lang/Class<*>;Ljava/lang/String;)V", "()Ljava/lang/Class<*>;", "setName", "LNSString;", "equals", "LNSObject;", "hashCode", "toString", "Ljava/lang/Class<*>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindJsontypeNamedType = { "NamedType", "com.fasterxml.jackson.databind.jsontype", ptrTable, methods, fields, 7, 0x11, 9, 4, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindJsontypeNamedType;
}

@end

void ComFasterxmlJacksonDatabindJsontypeNamedType_initWithIOSClass_(ComFasterxmlJacksonDatabindJsontypeNamedType *self, IOSClass *c) {
  ComFasterxmlJacksonDatabindJsontypeNamedType_initWithIOSClass_withNSString_(self, c, nil);
}

ComFasterxmlJacksonDatabindJsontypeNamedType *new_ComFasterxmlJacksonDatabindJsontypeNamedType_initWithIOSClass_(IOSClass *c) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindJsontypeNamedType, initWithIOSClass_, c)
}

ComFasterxmlJacksonDatabindJsontypeNamedType *create_ComFasterxmlJacksonDatabindJsontypeNamedType_initWithIOSClass_(IOSClass *c) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindJsontypeNamedType, initWithIOSClass_, c)
}

void ComFasterxmlJacksonDatabindJsontypeNamedType_initWithIOSClass_withNSString_(ComFasterxmlJacksonDatabindJsontypeNamedType *self, IOSClass *c, NSString *name) {
  NSObject_init(self);
  JreStrongAssign(&self->_class_, c);
  self->_hashCode_ = ((jint) [((NSString *) nil_chk([((IOSClass *) nil_chk(c)) getName])) hash]);
  [self setNameWithNSString:name];
}

ComFasterxmlJacksonDatabindJsontypeNamedType *new_ComFasterxmlJacksonDatabindJsontypeNamedType_initWithIOSClass_withNSString_(IOSClass *c, NSString *name) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindJsontypeNamedType, initWithIOSClass_withNSString_, c, name)
}

ComFasterxmlJacksonDatabindJsontypeNamedType *create_ComFasterxmlJacksonDatabindJsontypeNamedType_initWithIOSClass_withNSString_(IOSClass *c, NSString *name) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindJsontypeNamedType, initWithIOSClass_withNSString_, c, name)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindJsontypeNamedType)
