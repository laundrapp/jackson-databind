//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/util/TypeKey.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/util/TypeKey.h"

@implementation ComFasterxmlJacksonDatabindUtilTypeKey

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindUtilTypeKey_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindUtilTypeKey:(ComFasterxmlJacksonDatabindUtilTypeKey *)src {
  ComFasterxmlJacksonDatabindUtilTypeKey_initWithComFasterxmlJacksonDatabindUtilTypeKey_(self, src);
  return self;
}

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)key
                               withBoolean:(jboolean)typed {
  ComFasterxmlJacksonDatabindUtilTypeKey_initWithIOSClass_withBoolean_(self, key, typed);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)key
                                                          withBoolean:(jboolean)typed {
  ComFasterxmlJacksonDatabindUtilTypeKey_initWithComFasterxmlJacksonDatabindJavaType_withBoolean_(self, key, typed);
  return self;
}

+ (jint)untypedHashWithIOSClass:(IOSClass *)cls {
  return ComFasterxmlJacksonDatabindUtilTypeKey_untypedHashWithIOSClass_(cls);
}

+ (jint)typedHashWithIOSClass:(IOSClass *)cls {
  return ComFasterxmlJacksonDatabindUtilTypeKey_typedHashWithIOSClass_(cls);
}

+ (jint)untypedHashWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type {
  return ComFasterxmlJacksonDatabindUtilTypeKey_untypedHashWithComFasterxmlJacksonDatabindJavaType_(type);
}

+ (jint)typedHashWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type {
  return ComFasterxmlJacksonDatabindUtilTypeKey_typedHashWithComFasterxmlJacksonDatabindJavaType_(type);
}

- (void)resetTypedWithIOSClass:(IOSClass *)cls {
  JreStrongAssign(&_type_, nil);
  JreStrongAssign(&_class_, cls);
  _isTyped_ = true;
  _hashCode_ = ComFasterxmlJacksonDatabindUtilTypeKey_typedHashWithIOSClass_(cls);
}

- (void)resetUntypedWithIOSClass:(IOSClass *)cls {
  JreStrongAssign(&_type_, nil);
  JreStrongAssign(&_class_, cls);
  _isTyped_ = false;
  _hashCode_ = ComFasterxmlJacksonDatabindUtilTypeKey_untypedHashWithIOSClass_(cls);
}

- (void)resetTypedWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type {
  JreStrongAssign(&_type_, type);
  JreStrongAssign(&_class_, nil);
  _isTyped_ = true;
  _hashCode_ = ComFasterxmlJacksonDatabindUtilTypeKey_typedHashWithComFasterxmlJacksonDatabindJavaType_(type);
}

- (void)resetUntypedWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type {
  JreStrongAssign(&_type_, type);
  JreStrongAssign(&_class_, nil);
  _isTyped_ = false;
  _hashCode_ = ComFasterxmlJacksonDatabindUtilTypeKey_untypedHashWithComFasterxmlJacksonDatabindJavaType_(type);
}

- (jboolean)isTyped {
  return _isTyped_;
}

- (IOSClass *)getRawType {
  return _class_;
}

- (ComFasterxmlJacksonDatabindJavaType *)getType {
  return _type_;
}

- (NSUInteger)hash {
  return _hashCode_;
}

- (NSString *)description {
  if (_class_ != nil) {
    return JreStrcat("$$$ZC", @"{class: ", [_class_ getName], @", typed? ", _isTyped_, '}');
  }
  return JreStrcat("$@$ZC", @"{type: ", _type_, @", typed? ", _isTyped_, '}');
}

- (jboolean)isEqual:(id)o {
  if (o == nil) return false;
  if (o == self) return true;
  if ([o java_getClass] != [self java_getClass]) {
    return false;
  }
  ComFasterxmlJacksonDatabindUtilTypeKey *other = (ComFasterxmlJacksonDatabindUtilTypeKey *) cast_chk(o, [ComFasterxmlJacksonDatabindUtilTypeKey class]);
  if (other->_isTyped_ == _isTyped_) {
    if (_class_ != nil) {
      return other->_class_ == _class_;
    }
    return [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(_type_)) isEqual:other->_type_];
  }
  return false;
}

- (void)dealloc {
  RELEASE_(_class_);
  RELEASE_(_type_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x1, -1, 3, -1, -1, -1, -1 },
    { NULL, "I", 0x19, 4, 5, -1, 6, -1, -1 },
    { NULL, "I", 0x19, 7, 5, -1, 6, -1, -1 },
    { NULL, "I", 0x19, 4, 8, -1, -1, -1, -1 },
    { NULL, "I", 0x19, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 9, 5, -1, 10, -1, -1 },
    { NULL, "V", 0x11, 11, 5, -1, 10, -1, -1 },
    { NULL, "V", 0x11, 9, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 11, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 12, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x11, 13, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, 14, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, 15, 16, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithComFasterxmlJacksonDatabindUtilTypeKey:);
  methods[2].selector = @selector(initWithIOSClass:withBoolean:);
  methods[3].selector = @selector(initWithComFasterxmlJacksonDatabindJavaType:withBoolean:);
  methods[4].selector = @selector(untypedHashWithIOSClass:);
  methods[5].selector = @selector(typedHashWithIOSClass:);
  methods[6].selector = @selector(untypedHashWithComFasterxmlJacksonDatabindJavaType:);
  methods[7].selector = @selector(typedHashWithComFasterxmlJacksonDatabindJavaType:);
  methods[8].selector = @selector(resetTypedWithIOSClass:);
  methods[9].selector = @selector(resetUntypedWithIOSClass:);
  methods[10].selector = @selector(resetTypedWithComFasterxmlJacksonDatabindJavaType:);
  methods[11].selector = @selector(resetUntypedWithComFasterxmlJacksonDatabindJavaType:);
  methods[12].selector = @selector(isTyped);
  methods[13].selector = @selector(getRawType);
  methods[14].selector = @selector(getType);
  methods[15].selector = @selector(hash);
  methods[16].selector = @selector(description);
  methods[17].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_hashCode_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_class_", "LIOSClass;", .constantValue.asLong = 0, 0x4, -1, -1, 17, -1 },
    { "_type_", "LComFasterxmlJacksonDatabindJavaType;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_isTyped_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindUtilTypeKey;", "LIOSClass;Z", "(Ljava/lang/Class<*>;Z)V", "LComFasterxmlJacksonDatabindJavaType;Z", "untypedHash", "LIOSClass;", "(Ljava/lang/Class<*>;)I", "typedHash", "LComFasterxmlJacksonDatabindJavaType;", "resetTyped", "(Ljava/lang/Class<*>;)V", "resetUntyped", "()Ljava/lang/Class<*>;", "hashCode", "toString", "equals", "LNSObject;", "Ljava/lang/Class<*>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindUtilTypeKey = { "TypeKey", "com.fasterxml.jackson.databind.util", ptrTable, methods, fields, 7, 0x1, 18, 4, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindUtilTypeKey;
}

@end

void ComFasterxmlJacksonDatabindUtilTypeKey_init(ComFasterxmlJacksonDatabindUtilTypeKey *self) {
  NSObject_init(self);
}

ComFasterxmlJacksonDatabindUtilTypeKey *new_ComFasterxmlJacksonDatabindUtilTypeKey_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindUtilTypeKey, init)
}

ComFasterxmlJacksonDatabindUtilTypeKey *create_ComFasterxmlJacksonDatabindUtilTypeKey_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindUtilTypeKey, init)
}

void ComFasterxmlJacksonDatabindUtilTypeKey_initWithComFasterxmlJacksonDatabindUtilTypeKey_(ComFasterxmlJacksonDatabindUtilTypeKey *self, ComFasterxmlJacksonDatabindUtilTypeKey *src) {
  NSObject_init(self);
  self->_hashCode_ = ((ComFasterxmlJacksonDatabindUtilTypeKey *) nil_chk(src))->_hashCode_;
  JreStrongAssign(&self->_class_, src->_class_);
  JreStrongAssign(&self->_type_, src->_type_);
  self->_isTyped_ = src->_isTyped_;
}

ComFasterxmlJacksonDatabindUtilTypeKey *new_ComFasterxmlJacksonDatabindUtilTypeKey_initWithComFasterxmlJacksonDatabindUtilTypeKey_(ComFasterxmlJacksonDatabindUtilTypeKey *src) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindUtilTypeKey, initWithComFasterxmlJacksonDatabindUtilTypeKey_, src)
}

ComFasterxmlJacksonDatabindUtilTypeKey *create_ComFasterxmlJacksonDatabindUtilTypeKey_initWithComFasterxmlJacksonDatabindUtilTypeKey_(ComFasterxmlJacksonDatabindUtilTypeKey *src) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindUtilTypeKey, initWithComFasterxmlJacksonDatabindUtilTypeKey_, src)
}

void ComFasterxmlJacksonDatabindUtilTypeKey_initWithIOSClass_withBoolean_(ComFasterxmlJacksonDatabindUtilTypeKey *self, IOSClass *key, jboolean typed) {
  NSObject_init(self);
  JreStrongAssign(&self->_class_, key);
  JreStrongAssign(&self->_type_, nil);
  self->_isTyped_ = typed;
  self->_hashCode_ = typed ? ComFasterxmlJacksonDatabindUtilTypeKey_typedHashWithIOSClass_(key) : ComFasterxmlJacksonDatabindUtilTypeKey_untypedHashWithIOSClass_(key);
}

ComFasterxmlJacksonDatabindUtilTypeKey *new_ComFasterxmlJacksonDatabindUtilTypeKey_initWithIOSClass_withBoolean_(IOSClass *key, jboolean typed) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindUtilTypeKey, initWithIOSClass_withBoolean_, key, typed)
}

ComFasterxmlJacksonDatabindUtilTypeKey *create_ComFasterxmlJacksonDatabindUtilTypeKey_initWithIOSClass_withBoolean_(IOSClass *key, jboolean typed) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindUtilTypeKey, initWithIOSClass_withBoolean_, key, typed)
}

void ComFasterxmlJacksonDatabindUtilTypeKey_initWithComFasterxmlJacksonDatabindJavaType_withBoolean_(ComFasterxmlJacksonDatabindUtilTypeKey *self, ComFasterxmlJacksonDatabindJavaType *key, jboolean typed) {
  NSObject_init(self);
  JreStrongAssign(&self->_type_, key);
  JreStrongAssign(&self->_class_, nil);
  self->_isTyped_ = typed;
  self->_hashCode_ = typed ? ComFasterxmlJacksonDatabindUtilTypeKey_typedHashWithComFasterxmlJacksonDatabindJavaType_(key) : ComFasterxmlJacksonDatabindUtilTypeKey_untypedHashWithComFasterxmlJacksonDatabindJavaType_(key);
}

ComFasterxmlJacksonDatabindUtilTypeKey *new_ComFasterxmlJacksonDatabindUtilTypeKey_initWithComFasterxmlJacksonDatabindJavaType_withBoolean_(ComFasterxmlJacksonDatabindJavaType *key, jboolean typed) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindUtilTypeKey, initWithComFasterxmlJacksonDatabindJavaType_withBoolean_, key, typed)
}

ComFasterxmlJacksonDatabindUtilTypeKey *create_ComFasterxmlJacksonDatabindUtilTypeKey_initWithComFasterxmlJacksonDatabindJavaType_withBoolean_(ComFasterxmlJacksonDatabindJavaType *key, jboolean typed) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindUtilTypeKey, initWithComFasterxmlJacksonDatabindJavaType_withBoolean_, key, typed)
}

jint ComFasterxmlJacksonDatabindUtilTypeKey_untypedHashWithIOSClass_(IOSClass *cls) {
  ComFasterxmlJacksonDatabindUtilTypeKey_initialize();
  return ((jint) [((NSString *) nil_chk([((IOSClass *) nil_chk(cls)) getName])) hash]);
}

jint ComFasterxmlJacksonDatabindUtilTypeKey_typedHashWithIOSClass_(IOSClass *cls) {
  ComFasterxmlJacksonDatabindUtilTypeKey_initialize();
  return ((jint) [((NSString *) nil_chk([((IOSClass *) nil_chk(cls)) getName])) hash]) + 1;
}

jint ComFasterxmlJacksonDatabindUtilTypeKey_untypedHashWithComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindJavaType *type) {
  ComFasterxmlJacksonDatabindUtilTypeKey_initialize();
  return ((jint) [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(type)) hash]) - 1;
}

jint ComFasterxmlJacksonDatabindUtilTypeKey_typedHashWithComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindJavaType *type) {
  ComFasterxmlJacksonDatabindUtilTypeKey_initialize();
  return ((jint) [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(type)) hash]) - 2;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindUtilTypeKey)
