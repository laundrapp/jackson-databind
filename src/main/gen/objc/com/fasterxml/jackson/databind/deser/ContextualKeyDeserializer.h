//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/deser/ContextualKeyDeserializer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserContextualKeyDeserializer")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindDeserContextualKeyDeserializer
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserContextualKeyDeserializer 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserContextualKeyDeserializer 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindDeserContextualKeyDeserializer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindDeserContextualKeyDeserializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserContextualKeyDeserializer || defined(INCLUDE_ComFasterxmlJacksonDatabindDeserContextualKeyDeserializer))
#define ComFasterxmlJacksonDatabindDeserContextualKeyDeserializer_

@class ComFasterxmlJacksonDatabindDeserializationContext;
@class ComFasterxmlJacksonDatabindKeyDeserializer;
@protocol ComFasterxmlJacksonDatabindBeanProperty;

/*!
 @brief Add-on interface that <code>KeyDeserializer</code>s can implement to get a callback
  that can be used to create contextual instances of key deserializer to use for
  handling Map keys of supported type.This can be useful
  for key deserializers that can be configured by annotations, or should otherwise
  have differing behavior depending on what kind of Map property keys are being deserialized.
 */
@protocol ComFasterxmlJacksonDatabindDeserContextualKeyDeserializer < JavaObject >

/*!
 @brief Method called to see if a different (or differently configured) key deserializer
  is needed to deserialize keys of specified Map property.
 Note that instance that this method is called on is typically shared one and
  as a result method should <b>NOT</b> modify this instance but rather construct
  and return a new instance. This instance should only be returned as-is, in case
  it is already suitable for use.
 @param ctxt Deserialization context to access configuration, additional      deserializers that may be needed by this deserializer
 @param property Method, field or constructor parameter that declared Map for which    contextual instance will be used. Will not be available when deserializing root-level
     Map value; otherwise should not be null.
 @return Key deserializer to use for deserializing keys specified Map property,
    may be this instance or a new instance.
 */
- (ComFasterxmlJacksonDatabindKeyDeserializer *)createContextualWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                          withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindDeserContextualKeyDeserializer)

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindDeserContextualKeyDeserializer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserContextualKeyDeserializer")
