//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/node/DecimalNode.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeDecimalNode")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindNodeDecimalNode
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeDecimalNode 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeDecimalNode 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindNodeDecimalNode

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindNodeDecimalNode_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeDecimalNode || defined(INCLUDE_ComFasterxmlJacksonDatabindNodeDecimalNode))
#define ComFasterxmlJacksonDatabindNodeDecimalNode_

#define RESTRICT_ComFasterxmlJacksonDatabindNodeNumericNode 1
#define INCLUDE_ComFasterxmlJacksonDatabindNodeNumericNode 1
#include "com/fasterxml/jackson/databind/node/NumericNode.h"

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonCoreJsonParser_NumberType;
@class ComFasterxmlJacksonCoreJsonToken;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class JavaMathBigDecimal;
@class JavaMathBigInteger;

/*!
 @brief Numeric node that contains values that do not fit in simple
  integer (int, long) or floating point (double) values.
 */
@interface ComFasterxmlJacksonDatabindNodeDecimalNode : ComFasterxmlJacksonDatabindNodeNumericNode {
 @public
  JavaMathBigDecimal *_value_;
}

#pragma mark Public

- (instancetype __nonnull)initWithJavaMathBigDecimal:(JavaMathBigDecimal *)v;

- (NSString *)asText;

- (ComFasterxmlJacksonCoreJsonToken *)asToken;

- (JavaMathBigInteger *)bigIntegerValue;

- (jboolean)canConvertToInt;

- (jboolean)canConvertToLong;

- (JavaMathBigDecimal *)decimalValue;

- (jdouble)doubleValue;

- (jboolean)isEqual:(id)o;

- (jfloat)floatValue;

- (NSUInteger)hash;

- (jint)intValue;

- (jboolean)isBigDecimal;

- (jboolean)isFloatingPointNumber;

- (jlong)longValue;

- (ComFasterxmlJacksonCoreJsonParser_NumberType *)numberType;

- (NSNumber *)numberValue;

- (void)serializeWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)jgen
        withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

- (jshort)shortValue;

+ (ComFasterxmlJacksonDatabindNodeDecimalNode *)valueOfWithJavaMathBigDecimal:(JavaMathBigDecimal *)d;

#pragma mark Package-Private

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonDatabindNodeDecimalNode)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindNodeDecimalNode, _value_, JavaMathBigDecimal *)

inline ComFasterxmlJacksonDatabindNodeDecimalNode *ComFasterxmlJacksonDatabindNodeDecimalNode_get_ZERO(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeDecimalNode *ComFasterxmlJacksonDatabindNodeDecimalNode_ZERO;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindNodeDecimalNode, ZERO, ComFasterxmlJacksonDatabindNodeDecimalNode *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindNodeDecimalNode_initWithJavaMathBigDecimal_(ComFasterxmlJacksonDatabindNodeDecimalNode *self, JavaMathBigDecimal *v);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeDecimalNode *new_ComFasterxmlJacksonDatabindNodeDecimalNode_initWithJavaMathBigDecimal_(JavaMathBigDecimal *v) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeDecimalNode *create_ComFasterxmlJacksonDatabindNodeDecimalNode_initWithJavaMathBigDecimal_(JavaMathBigDecimal *v);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeDecimalNode *ComFasterxmlJacksonDatabindNodeDecimalNode_valueOfWithJavaMathBigDecimal_(JavaMathBigDecimal *d);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindNodeDecimalNode)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeDecimalNode")
