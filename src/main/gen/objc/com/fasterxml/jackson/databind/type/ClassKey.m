//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/ClassKey.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/databind/type/ClassKey.h"

@interface ComFasterxmlJacksonDatabindTypeClassKey () {
 @public
  NSString *_className_;
  IOSClass *_class_;
  /*!
   @brief Let's cache hash code straight away, since we are
  almost certain to need it.
   */
  jint _hashCode_;
}

@end

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindTypeClassKey, _className_, NSString *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindTypeClassKey, _class_, IOSClass *)

inline jlong ComFasterxmlJacksonDatabindTypeClassKey_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindTypeClassKey_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindTypeClassKey, serialVersionUID, jlong)

@implementation ComFasterxmlJacksonDatabindTypeClassKey

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindTypeClassKey_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)clz {
  ComFasterxmlJacksonDatabindTypeClassKey_initWithIOSClass_(self, clz);
  return self;
}

- (void)resetWithIOSClass:(IOSClass *)clz {
  JreStrongAssign(&_class_, clz);
  JreStrongAssign(&_className_, [((IOSClass *) nil_chk(clz)) getName]);
  _hashCode_ = ((jint) [((NSString *) nil_chk(_className_)) hash]);
}

- (jint)compareToWithId:(ComFasterxmlJacksonDatabindTypeClassKey *)other {
  cast_chk(other, [ComFasterxmlJacksonDatabindTypeClassKey class]);
  return [((NSString *) nil_chk(_className_)) compareToWithId:((ComFasterxmlJacksonDatabindTypeClassKey *) nil_chk(other))->_className_];
}

- (jboolean)isEqual:(id)o {
  if (o == self) return true;
  if (o == nil) return false;
  if ([o java_getClass] != [self java_getClass]) return false;
  ComFasterxmlJacksonDatabindTypeClassKey *other = (ComFasterxmlJacksonDatabindTypeClassKey *) cast_chk(o, [ComFasterxmlJacksonDatabindTypeClassKey class]);
  return other->_class_ == _class_;
}

- (NSUInteger)hash {
  return _hashCode_;
}

- (NSString *)description {
  return _className_;
}

- (void)dealloc {
  RELEASE_(_className_);
  RELEASE_(_class_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 0, -1, 1, -1, -1 },
    { NULL, "I", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 7, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 8, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithIOSClass:);
  methods[2].selector = @selector(resetWithIOSClass:);
  methods[3].selector = @selector(compareToWithId:);
  methods[4].selector = @selector(isEqual:);
  methods[5].selector = @selector(hash);
  methods[6].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindTypeClassKey_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "_className_", "LNSString;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_class_", "LIOSClass;", .constantValue.asLong = 0, 0x2, -1, -1, 9, -1 },
    { "_hashCode_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;", "(Ljava/lang/Class<*>;)V", "reset", "compareTo", "LComFasterxmlJacksonDatabindTypeClassKey;", "equals", "LNSObject;", "hashCode", "toString", "Ljava/lang/Class<*>;", "Ljava/lang/Object;Ljava/lang/Comparable<Lcom/fasterxml/jackson/databind/type/ClassKey;>;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindTypeClassKey = { "ClassKey", "com.fasterxml.jackson.databind.type", ptrTable, methods, fields, 7, 0x11, 7, 4, -1, -1, -1, 10, -1 };
  return &_ComFasterxmlJacksonDatabindTypeClassKey;
}

@end

void ComFasterxmlJacksonDatabindTypeClassKey_init(ComFasterxmlJacksonDatabindTypeClassKey *self) {
  NSObject_init(self);
  JreStrongAssign(&self->_class_, nil);
  JreStrongAssign(&self->_className_, nil);
  self->_hashCode_ = 0;
}

ComFasterxmlJacksonDatabindTypeClassKey *new_ComFasterxmlJacksonDatabindTypeClassKey_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindTypeClassKey, init)
}

ComFasterxmlJacksonDatabindTypeClassKey *create_ComFasterxmlJacksonDatabindTypeClassKey_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindTypeClassKey, init)
}

void ComFasterxmlJacksonDatabindTypeClassKey_initWithIOSClass_(ComFasterxmlJacksonDatabindTypeClassKey *self, IOSClass *clz) {
  NSObject_init(self);
  JreStrongAssign(&self->_class_, clz);
  JreStrongAssign(&self->_className_, [((IOSClass *) nil_chk(clz)) getName]);
  self->_hashCode_ = ((jint) [((NSString *) nil_chk(self->_className_)) hash]);
}

ComFasterxmlJacksonDatabindTypeClassKey *new_ComFasterxmlJacksonDatabindTypeClassKey_initWithIOSClass_(IOSClass *clz) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindTypeClassKey, initWithIOSClass_, clz)
}

ComFasterxmlJacksonDatabindTypeClassKey *create_ComFasterxmlJacksonDatabindTypeClassKey_initWithIOSClass_(IOSClass *clz) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindTypeClassKey, initWithIOSClass_, clz)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindTypeClassKey)
