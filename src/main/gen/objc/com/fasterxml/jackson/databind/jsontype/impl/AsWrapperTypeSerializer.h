//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeSerializer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer || defined(INCLUDE_ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer))
#define ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer_

#define RESTRICT_ComFasterxmlJacksonDatabindJsontypeImplTypeSerializerBase 1
#define INCLUDE_ComFasterxmlJacksonDatabindJsontypeImplTypeSerializerBase 1
#include "com/fasterxml/jackson/databind/jsontype/impl/TypeSerializerBase.h"

@class ComFasterxmlJacksonAnnotationJsonTypeInfo_As;
@class ComFasterxmlJacksonCoreJsonGenerator;
@protocol ComFasterxmlJacksonDatabindBeanProperty;
@protocol ComFasterxmlJacksonDatabindJsontypeTypeIdResolver;

/*!
 @brief Type wrapper that tries to use an extra JSON Object, with a single
  entry that has type name as key, to serialize type information.
 If this is not possible (value is serialize as array or primitive),
  will use <code>As.WRAPPER_ARRAY</code> mechanism as fallback: that is,
  just use a wrapping array with type information as the first element
  and value as second.
 */
@interface ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer : ComFasterxmlJacksonDatabindJsontypeImplTypeSerializerBase

#pragma mark Public

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver:(id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver>)idRes
                                        withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property;

- (ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer *)forPropertyWithComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)prop;

- (ComFasterxmlJacksonAnnotationJsonTypeInfo_As *)getTypeInclusion;

#pragma mark Protected

/*!
 @brief Helper method used to ensure that intended type id is output as something that is valid:
  currently only used to ensure that `null` output is converted to an empty String.
 @since 2.6
 */
- (NSString *)_validTypeIdWithNSString:(NSString *)typeId;

- (void)_writeTypeIdWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
                                                withNSString:(NSString *)typeId;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer_initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withComFasterxmlJacksonDatabindBeanProperty_(ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer *self, id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver> idRes, id<ComFasterxmlJacksonDatabindBeanProperty> property);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer *new_ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer_initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withComFasterxmlJacksonDatabindBeanProperty_(id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver> idRes, id<ComFasterxmlJacksonDatabindBeanProperty> property) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer *create_ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer_initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withComFasterxmlJacksonDatabindBeanProperty_(id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver> idRes, id<ComFasterxmlJacksonDatabindBeanProperty> property);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer")
