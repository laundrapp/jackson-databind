//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/util/LinkedNode.java
//

#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/databind/util/LinkedNode.h"
#include "java/lang/IllegalStateException.h"

@interface ComFasterxmlJacksonDatabindUtilLinkedNode () {
 @public
  id value_;
  ComFasterxmlJacksonDatabindUtilLinkedNode *next_;
}

@end

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindUtilLinkedNode, value_, id)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindUtilLinkedNode, next_, ComFasterxmlJacksonDatabindUtilLinkedNode *)

@implementation ComFasterxmlJacksonDatabindUtilLinkedNode

- (instancetype __nonnull)initWithId:(id)value
withComFasterxmlJacksonDatabindUtilLinkedNode:(ComFasterxmlJacksonDatabindUtilLinkedNode *)next {
  ComFasterxmlJacksonDatabindUtilLinkedNode_initWithId_withComFasterxmlJacksonDatabindUtilLinkedNode_(self, value, next);
  return self;
}

- (void)linkNextWithComFasterxmlJacksonDatabindUtilLinkedNode:(ComFasterxmlJacksonDatabindUtilLinkedNode *)n {
  if (next_ != nil) {
    @throw create_JavaLangIllegalStateException_init();
  }
  JreStrongAssign(&next_, n);
}

- (ComFasterxmlJacksonDatabindUtilLinkedNode *)next {
  return next_;
}

- (id)value {
  return value_;
}

+ (jboolean)containsWithComFasterxmlJacksonDatabindUtilLinkedNode:(ComFasterxmlJacksonDatabindUtilLinkedNode *)node
                                                           withId:(id)value {
  return ComFasterxmlJacksonDatabindUtilLinkedNode_containsWithComFasterxmlJacksonDatabindUtilLinkedNode_withId_(node, value);
}

- (void)dealloc {
  RELEASE_(value_);
  RELEASE_(next_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, -1, 4, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindUtilLinkedNode;", 0x1, -1, -1, -1, 5, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 6, -1, -1 },
    { NULL, "Z", 0x9, 7, 8, -1, 9, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithId:withComFasterxmlJacksonDatabindUtilLinkedNode:);
  methods[1].selector = @selector(linkNextWithComFasterxmlJacksonDatabindUtilLinkedNode:);
  methods[2].selector = @selector(next);
  methods[3].selector = @selector(value);
  methods[4].selector = @selector(containsWithComFasterxmlJacksonDatabindUtilLinkedNode:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "value_", "LNSObject;", .constantValue.asLong = 0, 0x12, -1, -1, 10, -1 },
    { "next_", "LComFasterxmlJacksonDatabindUtilLinkedNode;", .constantValue.asLong = 0, 0x2, -1, -1, 11, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;LComFasterxmlJacksonDatabindUtilLinkedNode;", "(TT;Lcom/fasterxml/jackson/databind/util/LinkedNode<TT;>;)V", "linkNext", "LComFasterxmlJacksonDatabindUtilLinkedNode;", "(Lcom/fasterxml/jackson/databind/util/LinkedNode<TT;>;)V", "()Lcom/fasterxml/jackson/databind/util/LinkedNode<TT;>;", "()TT;", "contains", "LComFasterxmlJacksonDatabindUtilLinkedNode;LNSObject;", "<ST:Ljava/lang/Object;>(Lcom/fasterxml/jackson/databind/util/LinkedNode<TST;>;TST;)Z", "TT;", "Lcom/fasterxml/jackson/databind/util/LinkedNode<TT;>;", "<T:Ljava/lang/Object;>Ljava/lang/Object;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindUtilLinkedNode = { "LinkedNode", "com.fasterxml.jackson.databind.util", ptrTable, methods, fields, 7, 0x11, 5, 2, -1, -1, -1, 12, -1 };
  return &_ComFasterxmlJacksonDatabindUtilLinkedNode;
}

@end

void ComFasterxmlJacksonDatabindUtilLinkedNode_initWithId_withComFasterxmlJacksonDatabindUtilLinkedNode_(ComFasterxmlJacksonDatabindUtilLinkedNode *self, id value, ComFasterxmlJacksonDatabindUtilLinkedNode *next) {
  NSObject_init(self);
  JreStrongAssign(&self->value_, value);
  JreStrongAssign(&self->next_, next);
}

ComFasterxmlJacksonDatabindUtilLinkedNode *new_ComFasterxmlJacksonDatabindUtilLinkedNode_initWithId_withComFasterxmlJacksonDatabindUtilLinkedNode_(id value, ComFasterxmlJacksonDatabindUtilLinkedNode *next) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindUtilLinkedNode, initWithId_withComFasterxmlJacksonDatabindUtilLinkedNode_, value, next)
}

ComFasterxmlJacksonDatabindUtilLinkedNode *create_ComFasterxmlJacksonDatabindUtilLinkedNode_initWithId_withComFasterxmlJacksonDatabindUtilLinkedNode_(id value, ComFasterxmlJacksonDatabindUtilLinkedNode *next) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindUtilLinkedNode, initWithId_withComFasterxmlJacksonDatabindUtilLinkedNode_, value, next)
}

jboolean ComFasterxmlJacksonDatabindUtilLinkedNode_containsWithComFasterxmlJacksonDatabindUtilLinkedNode_withId_(ComFasterxmlJacksonDatabindUtilLinkedNode *node, id value) {
  ComFasterxmlJacksonDatabindUtilLinkedNode_initialize();
  while (node != nil) {
    if ([node value] == value) {
      return true;
    }
    node = [node next];
  }
  return false;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindUtilLinkedNode)
