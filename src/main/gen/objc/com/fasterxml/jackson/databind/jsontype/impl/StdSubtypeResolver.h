//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/StdSubtypeResolver.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplStdSubtypeResolver")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindJsontypeImplStdSubtypeResolver
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplStdSubtypeResolver 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplStdSubtypeResolver 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindJsontypeImplStdSubtypeResolver

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindJsontypeImplStdSubtypeResolver_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplStdSubtypeResolver || defined(INCLUDE_ComFasterxmlJacksonDatabindJsontypeImplStdSubtypeResolver))
#define ComFasterxmlJacksonDatabindJsontypeImplStdSubtypeResolver_

#define RESTRICT_ComFasterxmlJacksonDatabindJsontypeSubtypeResolver 1
#define INCLUDE_ComFasterxmlJacksonDatabindJsontypeSubtypeResolver 1
#include "com/fasterxml/jackson/databind/jsontype/SubtypeResolver.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class ComFasterxmlJacksonDatabindAnnotationIntrospector;
@class ComFasterxmlJacksonDatabindCfgMapperConfig;
@class ComFasterxmlJacksonDatabindIntrospectAnnotatedClass;
@class ComFasterxmlJacksonDatabindIntrospectAnnotatedMember;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsontypeNamedType;
@class IOSClass;
@class IOSObjectArray;
@class JavaUtilHashMap;
@class JavaUtilLinkedHashSet;
@protocol JavaUtilCollection;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

/*!
 @brief Standard <code>SubtypeResolver</code> implementation.
 */
@interface ComFasterxmlJacksonDatabindJsontypeImplStdSubtypeResolver : ComFasterxmlJacksonDatabindJsontypeSubtypeResolver < JavaIoSerializable > {
 @public
  JavaUtilLinkedHashSet *_registeredSubtypes_;
}

#pragma mark Public

- (instancetype __nonnull)init;

- (id<JavaUtilCollection>)collectAndResolveSubtypesByClassWithComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)config
                                                 withComFasterxmlJacksonDatabindIntrospectAnnotatedClass:(ComFasterxmlJacksonDatabindIntrospectAnnotatedClass *)type;

- (id<JavaUtilCollection>)collectAndResolveSubtypesByClassWithComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)config
                                                withComFasterxmlJacksonDatabindIntrospectAnnotatedMember:(ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *)property
                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)baseType;

- (id<JavaUtilCollection>)collectAndResolveSubtypesByTypeIdWithComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)config
                                                  withComFasterxmlJacksonDatabindIntrospectAnnotatedClass:(ComFasterxmlJacksonDatabindIntrospectAnnotatedClass *)baseType;

- (id<JavaUtilCollection>)collectAndResolveSubtypesByTypeIdWithComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)config
                                                 withComFasterxmlJacksonDatabindIntrospectAnnotatedMember:(ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *)property
                                                                  withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)baseType;

- (void)registerSubtypesWithIOSClassArray:(IOSObjectArray *)classes;

- (void)registerSubtypesWithJavaUtilCollection:(id<JavaUtilCollection>)subtypes;

- (void)registerSubtypesWithComFasterxmlJacksonDatabindJsontypeNamedTypeArray:(IOSObjectArray *)types;

#pragma mark Protected

/*!
 @brief Method called to find subtypes for a specific type (class), using
  type (class) as the unique key (in case of conflicts).
 */
- (void)_collectAndResolveWithComFasterxmlJacksonDatabindIntrospectAnnotatedClass:(ComFasterxmlJacksonDatabindIntrospectAnnotatedClass *)annotatedType
                                 withComFasterxmlJacksonDatabindJsontypeNamedType:(ComFasterxmlJacksonDatabindJsontypeNamedType *)namedType
                                   withComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)config
                            withComFasterxmlJacksonDatabindAnnotationIntrospector:(ComFasterxmlJacksonDatabindAnnotationIntrospector *)ai
                                                              withJavaUtilHashMap:(JavaUtilHashMap *)collectedSubtypes;

/*!
 @brief Method called to find subtypes for a specific type (class), using
  type id as the unique key (in case of conflicts).
 */
- (void)_collectAndResolveByTypeIdWithComFasterxmlJacksonDatabindIntrospectAnnotatedClass:(ComFasterxmlJacksonDatabindIntrospectAnnotatedClass *)annotatedType
                                         withComFasterxmlJacksonDatabindJsontypeNamedType:(ComFasterxmlJacksonDatabindJsontypeNamedType *)namedType
                                           withComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)config
                                                                          withJavaUtilSet:(id<JavaUtilSet>)typesHandled
                                                                          withJavaUtilMap:(id<JavaUtilMap>)byName;

/*!
 @brief Helper method used for merging explicitly named types and handled classes
  without explicit names.
 */
- (id<JavaUtilCollection>)_combineNamedAndUnnamedWithIOSClass:(IOSClass *)rawBase
                                              withJavaUtilSet:(id<JavaUtilSet>)typesHandled
                                              withJavaUtilMap:(id<JavaUtilMap>)byName;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindJsontypeImplStdSubtypeResolver)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindJsontypeImplStdSubtypeResolver, _registeredSubtypes_, JavaUtilLinkedHashSet *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindJsontypeImplStdSubtypeResolver_init(ComFasterxmlJacksonDatabindJsontypeImplStdSubtypeResolver *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindJsontypeImplStdSubtypeResolver *new_ComFasterxmlJacksonDatabindJsontypeImplStdSubtypeResolver_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindJsontypeImplStdSubtypeResolver *create_ComFasterxmlJacksonDatabindJsontypeImplStdSubtypeResolver_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindJsontypeImplStdSubtypeResolver)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplStdSubtypeResolver")
