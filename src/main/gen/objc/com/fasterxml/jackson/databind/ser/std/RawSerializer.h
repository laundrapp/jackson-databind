//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/std/RawSerializer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdRawSerializer")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindSerStdRawSerializer
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdRawSerializer 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdRawSerializer 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindSerStdRawSerializer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindSerStdRawSerializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdRawSerializer || defined(INCLUDE_ComFasterxmlJacksonDatabindSerStdRawSerializer))
#define ComFasterxmlJacksonDatabindSerStdRawSerializer_

#define RESTRICT_ComFasterxmlJacksonDatabindSerStdStdSerializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerStdStdSerializer 1
#include "com/fasterxml/jackson/databind/ser/std/StdSerializer.h"

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsonNode;
@class ComFasterxmlJacksonDatabindJsontypeTypeSerializer;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSClass;
@protocol ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;
@protocol JavaLangReflectType;

/*!
 @brief This is a simple dummy serializer that will just output raw values by calling
  toString() on value to serialize.
 */
@interface ComFasterxmlJacksonDatabindSerStdRawSerializer : ComFasterxmlJacksonDatabindSerStdStdSerializer

#pragma mark Public

/*!
 @brief Constructor takes in expected type of values; but since caller
  typically cannot really provide actual type parameter, we will
  just take wild card and coerce type.
 */
- (instancetype __nonnull)initWithIOSClass:(IOSClass *)cls;

- (void)acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint;

- (ComFasterxmlJacksonDatabindJsonNode *)getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                            withJavaLangReflectType:(id<JavaLangReflectType>)typeHint;

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)jgen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

- (void)serializeWithTypeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindSerStdStdSerializer:(ComFasterxmlJacksonDatabindSerStdStdSerializer *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0
                               withBoolean:(jboolean)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindSerStdRawSerializer)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdRawSerializer_initWithIOSClass_(ComFasterxmlJacksonDatabindSerStdRawSerializer *self, IOSClass *cls);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdRawSerializer *new_ComFasterxmlJacksonDatabindSerStdRawSerializer_initWithIOSClass_(IOSClass *cls) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdRawSerializer *create_ComFasterxmlJacksonDatabindSerStdRawSerializer_initWithIOSClass_(IOSClass *cls);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerStdRawSerializer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdRawSerializer")
