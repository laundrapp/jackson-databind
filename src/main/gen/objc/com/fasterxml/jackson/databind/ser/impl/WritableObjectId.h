//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/impl/WritableObjectId.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerImplWritableObjectId")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindSerImplWritableObjectId
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerImplWritableObjectId 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerImplWritableObjectId 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindSerImplWritableObjectId

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindSerImplWritableObjectId_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerImplWritableObjectId || defined(INCLUDE_ComFasterxmlJacksonDatabindSerImplWritableObjectId))
#define ComFasterxmlJacksonDatabindSerImplWritableObjectId_

@class ComFasterxmlJacksonAnnotationObjectIdGenerator;
@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonDatabindSerImplObjectIdWriter;
@class ComFasterxmlJacksonDatabindSerializerProvider;

/*!
 @brief Simple value container used to keep track of Object Ids during
  serialization.
 */
@interface ComFasterxmlJacksonDatabindSerImplWritableObjectId : NSObject {
 @public
  ComFasterxmlJacksonAnnotationObjectIdGenerator *generator_;
  id id__;
  /*!
   @brief Marker to denote whether Object Id value has been written as part of an Object,
  to be referencible.Remains false when forward-reference is written.
   */
  jboolean idWritten_;
}

#pragma mark Public

- (instancetype __nonnull)initWithComFasterxmlJacksonAnnotationObjectIdGenerator:(ComFasterxmlJacksonAnnotationObjectIdGenerator *)generator;

- (id)generateIdWithId:(id)forPojo;

/*!
 @brief Method called to output Object Id as specified.
 */
- (void)writeAsFieldWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
           withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
        withComFasterxmlJacksonDatabindSerImplObjectIdWriter:(ComFasterxmlJacksonDatabindSerImplObjectIdWriter *)w;

- (jboolean)writeAsIdWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
            withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
         withComFasterxmlJacksonDatabindSerImplObjectIdWriter:(ComFasterxmlJacksonDatabindSerImplObjectIdWriter *)w;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindSerImplWritableObjectId)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindSerImplWritableObjectId, generator_, ComFasterxmlJacksonAnnotationObjectIdGenerator *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindSerImplWritableObjectId, id__, id)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerImplWritableObjectId_initWithComFasterxmlJacksonAnnotationObjectIdGenerator_(ComFasterxmlJacksonDatabindSerImplWritableObjectId *self, ComFasterxmlJacksonAnnotationObjectIdGenerator *generator);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerImplWritableObjectId *new_ComFasterxmlJacksonDatabindSerImplWritableObjectId_initWithComFasterxmlJacksonAnnotationObjectIdGenerator_(ComFasterxmlJacksonAnnotationObjectIdGenerator *generator) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerImplWritableObjectId *create_ComFasterxmlJacksonDatabindSerImplWritableObjectId_initWithComFasterxmlJacksonAnnotationObjectIdGenerator_(ComFasterxmlJacksonAnnotationObjectIdGenerator *generator);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerImplWritableObjectId)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerImplWritableObjectId")
