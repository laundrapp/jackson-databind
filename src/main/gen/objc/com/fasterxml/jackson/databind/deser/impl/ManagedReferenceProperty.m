//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/deser/impl/ManagedReferenceProperty.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonParser.h"
#include "com/fasterxml/jackson/databind/DeserializationConfig.h"
#include "com/fasterxml/jackson/databind/DeserializationContext.h"
#include "com/fasterxml/jackson/databind/deser/SettableBeanProperty.h"
#include "com/fasterxml/jackson/databind/deser/impl/ManagedReferenceProperty.h"
#include "java/lang/IllegalStateException.h"
#include "java/util/Collection.h"
#include "java/util/Map.h"

inline jlong ComFasterxmlJacksonDatabindDeserImplManagedReferenceProperty_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindDeserImplManagedReferenceProperty_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindDeserImplManagedReferenceProperty, serialVersionUID, jlong)

__attribute__((unused)) static void ComFasterxmlJacksonDatabindDeserImplManagedReferenceProperty_setWithId_withId_(ComFasterxmlJacksonDatabindDeserImplManagedReferenceProperty *self, id instance, id value);

@implementation ComFasterxmlJacksonDatabindDeserImplManagedReferenceProperty

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindDeserSettableBeanProperty:(ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)forward
                                                                          withNSString:(NSString *)refName
                              withComFasterxmlJacksonDatabindDeserSettableBeanProperty:(ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)backward
                                                                           withBoolean:(jboolean)isContainer {
  ComFasterxmlJacksonDatabindDeserImplManagedReferenceProperty_initWithComFasterxmlJacksonDatabindDeserSettableBeanProperty_withNSString_withComFasterxmlJacksonDatabindDeserSettableBeanProperty_withBoolean_(self, forward, refName, backward, isContainer);
  return self;
}

- (ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)withDelegateWithComFasterxmlJacksonDatabindDeserSettableBeanProperty:(ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)d {
  @throw create_JavaLangIllegalStateException_initWithNSString_(@"Should never try to reset delegate");
}

- (void)fixAccessWithComFasterxmlJacksonDatabindDeserializationConfig:(ComFasterxmlJacksonDatabindDeserializationConfig *)config {
  [((ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) nil_chk(delegate_)) fixAccessWithComFasterxmlJacksonDatabindDeserializationConfig:config];
  [((ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) nil_chk(_backProperty_)) fixAccessWithComFasterxmlJacksonDatabindDeserializationConfig:config];
}

- (void)deserializeAndSetWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
         withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                        withId:(id)instance {
  ComFasterxmlJacksonDatabindDeserImplManagedReferenceProperty_setWithId_withId_(self, instance, [((ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) nil_chk(delegate_)) deserializeWithComFasterxmlJacksonCoreJsonParser:p withComFasterxmlJacksonDatabindDeserializationContext:ctxt]);
}

- (id)deserializeSetAndReturnWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
             withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                            withId:(id)instance {
  return [self setAndReturnWithId:instance withId:[self deserializeWithComFasterxmlJacksonCoreJsonParser:p withComFasterxmlJacksonDatabindDeserializationContext:ctxt]];
}

- (void)setWithId:(id)instance
           withId:(id)value {
  ComFasterxmlJacksonDatabindDeserImplManagedReferenceProperty_setWithId_withId_(self, instance, value);
}

- (id)setAndReturnWithId:(id)instance
                  withId:(id)value {
  if (value != nil) {
    if (_isContainer_) {
      if ([IOSClass_arrayType(NSObject_class_(), 1) isInstance:value]) {
        {
          IOSObjectArray *a__ = (IOSObjectArray *) cast_check(value, IOSClass_arrayType(NSObject_class_(), 1));
          id const *b__ = a__->buffer_;
          id const *e__ = b__ + a__->size_;
          while (b__ < e__) {
            id ob = *b__++;
            if (ob != nil) {
              [((ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) nil_chk(_backProperty_)) setWithId:ob withId:instance];
            }
          }
        }
      }
      else if ([JavaUtilCollection_class_() isInstance:value]) {
        for (id __strong ob in (id<JavaUtilCollection>) cast_check(value, JavaUtilCollection_class_())) {
          if (ob != nil) {
            [((ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) nil_chk(_backProperty_)) setWithId:ob withId:instance];
          }
        }
      }
      else if ([JavaUtilMap_class_() isInstance:value]) {
        for (id __strong ob in nil_chk([((id<JavaUtilMap>) cast_check(value, JavaUtilMap_class_())) values])) {
          if (ob != nil) {
            [((ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) nil_chk(_backProperty_)) setWithId:ob withId:instance];
          }
        }
      }
      else {
        @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$$$C", @"Unsupported container type (", [[value java_getClass] getName], @") when resolving reference '", _referenceName_, '\''));
      }
    }
    else {
      [((ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) nil_chk(_backProperty_)) setWithId:value withId:instance];
    }
  }
  return [((ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) nil_chk(delegate_)) setAndReturnWithId:instance withId:value];
}

- (void)dealloc {
  RELEASE_(_referenceName_);
  RELEASE_(_backProperty_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindDeserSettableBeanProperty;", 0x4, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, 7, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 8, 6, 7, -1, -1, -1 },
    { NULL, "V", 0x11, 9, 10, 7, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 11, 10, 7, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonDatabindDeserSettableBeanProperty:withNSString:withComFasterxmlJacksonDatabindDeserSettableBeanProperty:withBoolean:);
  methods[1].selector = @selector(withDelegateWithComFasterxmlJacksonDatabindDeserSettableBeanProperty:);
  methods[2].selector = @selector(fixAccessWithComFasterxmlJacksonDatabindDeserializationConfig:);
  methods[3].selector = @selector(deserializeAndSetWithComFasterxmlJacksonCoreJsonParser:withComFasterxmlJacksonDatabindDeserializationContext:withId:);
  methods[4].selector = @selector(deserializeSetAndReturnWithComFasterxmlJacksonCoreJsonParser:withComFasterxmlJacksonDatabindDeserializationContext:withId:);
  methods[5].selector = @selector(setWithId:withId:);
  methods[6].selector = @selector(setAndReturnWithId:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindDeserImplManagedReferenceProperty_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "_referenceName_", "LNSString;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_isContainer_", "Z", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_backProperty_", "LComFasterxmlJacksonDatabindDeserSettableBeanProperty;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindDeserSettableBeanProperty;LNSString;LComFasterxmlJacksonDatabindDeserSettableBeanProperty;Z", "withDelegate", "LComFasterxmlJacksonDatabindDeserSettableBeanProperty;", "fixAccess", "LComFasterxmlJacksonDatabindDeserializationConfig;", "deserializeAndSet", "LComFasterxmlJacksonCoreJsonParser;LComFasterxmlJacksonDatabindDeserializationContext;LNSObject;", "LJavaIoIOException;", "deserializeSetAndReturn", "set", "LNSObject;LNSObject;", "setAndReturn" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindDeserImplManagedReferenceProperty = { "ManagedReferenceProperty", "com.fasterxml.jackson.databind.deser.impl", ptrTable, methods, fields, 7, 0x11, 7, 4, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindDeserImplManagedReferenceProperty;
}

@end

void ComFasterxmlJacksonDatabindDeserImplManagedReferenceProperty_initWithComFasterxmlJacksonDatabindDeserSettableBeanProperty_withNSString_withComFasterxmlJacksonDatabindDeserSettableBeanProperty_withBoolean_(ComFasterxmlJacksonDatabindDeserImplManagedReferenceProperty *self, ComFasterxmlJacksonDatabindDeserSettableBeanProperty *forward, NSString *refName, ComFasterxmlJacksonDatabindDeserSettableBeanProperty *backward, jboolean isContainer) {
  ComFasterxmlJacksonDatabindDeserSettableBeanProperty_Delegating_initWithComFasterxmlJacksonDatabindDeserSettableBeanProperty_(self, forward);
  JreStrongAssign(&self->_referenceName_, refName);
  JreStrongAssign(&self->_backProperty_, backward);
  self->_isContainer_ = isContainer;
}

ComFasterxmlJacksonDatabindDeserImplManagedReferenceProperty *new_ComFasterxmlJacksonDatabindDeserImplManagedReferenceProperty_initWithComFasterxmlJacksonDatabindDeserSettableBeanProperty_withNSString_withComFasterxmlJacksonDatabindDeserSettableBeanProperty_withBoolean_(ComFasterxmlJacksonDatabindDeserSettableBeanProperty *forward, NSString *refName, ComFasterxmlJacksonDatabindDeserSettableBeanProperty *backward, jboolean isContainer) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindDeserImplManagedReferenceProperty, initWithComFasterxmlJacksonDatabindDeserSettableBeanProperty_withNSString_withComFasterxmlJacksonDatabindDeserSettableBeanProperty_withBoolean_, forward, refName, backward, isContainer)
}

ComFasterxmlJacksonDatabindDeserImplManagedReferenceProperty *create_ComFasterxmlJacksonDatabindDeserImplManagedReferenceProperty_initWithComFasterxmlJacksonDatabindDeserSettableBeanProperty_withNSString_withComFasterxmlJacksonDatabindDeserSettableBeanProperty_withBoolean_(ComFasterxmlJacksonDatabindDeserSettableBeanProperty *forward, NSString *refName, ComFasterxmlJacksonDatabindDeserSettableBeanProperty *backward, jboolean isContainer) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindDeserImplManagedReferenceProperty, initWithComFasterxmlJacksonDatabindDeserSettableBeanProperty_withNSString_withComFasterxmlJacksonDatabindDeserSettableBeanProperty_withBoolean_, forward, refName, backward, isContainer)
}

void ComFasterxmlJacksonDatabindDeserImplManagedReferenceProperty_setWithId_withId_(ComFasterxmlJacksonDatabindDeserImplManagedReferenceProperty *self, id instance, id value) {
  [self setAndReturnWithId:instance withId:value];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindDeserImplManagedReferenceProperty)
