//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/cfg/MapperConfig.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/annotation/JsonFormat.h"
#include "com/fasterxml/jackson/annotation/JsonIgnoreProperties.h"
#include "com/fasterxml/jackson/annotation/JsonInclude.h"
#include "com/fasterxml/jackson/annotation/JsonSetter.h"
#include "com/fasterxml/jackson/core/Base64Variant.h"
#include "com/fasterxml/jackson/core/SerializableString.h"
#include "com/fasterxml/jackson/core/io/SerializedString.h"
#include "com/fasterxml/jackson/core/type/TypeReference.h"
#include "com/fasterxml/jackson/databind/AnnotationIntrospector.h"
#include "com/fasterxml/jackson/databind/BeanDescription.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/MapperFeature.h"
#include "com/fasterxml/jackson/databind/PropertyName.h"
#include "com/fasterxml/jackson/databind/PropertyNamingStrategy.h"
#include "com/fasterxml/jackson/databind/cfg/BaseSettings.h"
#include "com/fasterxml/jackson/databind/cfg/ConfigFeature.h"
#include "com/fasterxml/jackson/databind/cfg/ConfigOverride.h"
#include "com/fasterxml/jackson/databind/cfg/ContextAttributes.h"
#include "com/fasterxml/jackson/databind/cfg/HandlerInstantiator.h"
#include "com/fasterxml/jackson/databind/cfg/MapperConfig.h"
#include "com/fasterxml/jackson/databind/introspect/Annotated.h"
#include "com/fasterxml/jackson/databind/introspect/AnnotatedClass.h"
#include "com/fasterxml/jackson/databind/introspect/ClassIntrospector.h"
#include "com/fasterxml/jackson/databind/introspect/NopAnnotationIntrospector.h"
#include "com/fasterxml/jackson/databind/introspect/VisibilityChecker.h"
#include "com/fasterxml/jackson/databind/jsontype/SubtypeResolver.h"
#include "com/fasterxml/jackson/databind/jsontype/TypeIdResolver.h"
#include "com/fasterxml/jackson/databind/jsontype/TypeResolverBuilder.h"
#include "com/fasterxml/jackson/databind/type/TypeFactory.h"
#include "com/fasterxml/jackson/databind/util/ClassUtil.h"
#include "java/lang/Boolean.h"
#include "java/lang/Enum.h"
#include "java/lang/reflect/Type.h"
#include "java/text/DateFormat.h"
#include "java/util/Locale.h"
#include "java/util/TimeZone.h"

#pragma clang diagnostic ignored "-Wprotocol"

inline jlong ComFasterxmlJacksonDatabindCfgMapperConfig_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindCfgMapperConfig_serialVersionUID 2LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindCfgMapperConfig, serialVersionUID, jlong)

__attribute__((unused)) static jboolean ComFasterxmlJacksonDatabindCfgMapperConfig_isEnabledWithComFasterxmlJacksonDatabindMapperFeature_(ComFasterxmlJacksonDatabindCfgMapperConfig *self, ComFasterxmlJacksonDatabindMapperFeature *f);

__attribute__((unused)) static jboolean ComFasterxmlJacksonDatabindCfgMapperConfig_canOverrideAccessModifiers(ComFasterxmlJacksonDatabindCfgMapperConfig *self);

__attribute__((unused)) static ComFasterxmlJacksonDatabindCfgHandlerInstantiator *ComFasterxmlJacksonDatabindCfgMapperConfig_getHandlerInstantiator(ComFasterxmlJacksonDatabindCfgMapperConfig *self);

__attribute__((unused)) static ComFasterxmlJacksonDatabindTypeTypeFactory *ComFasterxmlJacksonDatabindCfgMapperConfig_getTypeFactory(ComFasterxmlJacksonDatabindCfgMapperConfig *self);

__attribute__((unused)) static ComFasterxmlJacksonDatabindJavaType *ComFasterxmlJacksonDatabindCfgMapperConfig_constructTypeWithIOSClass_(ComFasterxmlJacksonDatabindCfgMapperConfig *self, IOSClass *cls);

__attribute__((unused)) static ComFasterxmlJacksonDatabindBeanDescription *ComFasterxmlJacksonDatabindCfgMapperConfig_introspectDirectClassAnnotationsWithComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindCfgMapperConfig *self, ComFasterxmlJacksonDatabindJavaType *type);

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindCfgMapperConfig)

ComFasterxmlJacksonAnnotationJsonInclude_Value *ComFasterxmlJacksonDatabindCfgMapperConfig_EMPTY_INCLUDE;
ComFasterxmlJacksonAnnotationJsonFormat_Value *ComFasterxmlJacksonDatabindCfgMapperConfig_EMPTY_FORMAT;

@implementation ComFasterxmlJacksonDatabindCfgMapperConfig

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindCfgBaseSettings:(ComFasterxmlJacksonDatabindCfgBaseSettings *)base
                                                                     withInt:(jint)mapperFeatures {
  ComFasterxmlJacksonDatabindCfgMapperConfig_initWithComFasterxmlJacksonDatabindCfgBaseSettings_withInt_(self, base, mapperFeatures);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)src
                                                                     withInt:(jint)mapperFeatures {
  ComFasterxmlJacksonDatabindCfgMapperConfig_initWithComFasterxmlJacksonDatabindCfgMapperConfig_withInt_(self, src, mapperFeatures);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)src
                              withComFasterxmlJacksonDatabindCfgBaseSettings:(ComFasterxmlJacksonDatabindCfgBaseSettings *)base {
  ComFasterxmlJacksonDatabindCfgMapperConfig_initWithComFasterxmlJacksonDatabindCfgMapperConfig_withComFasterxmlJacksonDatabindCfgBaseSettings_(self, src, base);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)src {
  ComFasterxmlJacksonDatabindCfgMapperConfig_initWithComFasterxmlJacksonDatabindCfgMapperConfig_(self, src);
  return self;
}

+ (jint)collectFeatureDefaultsWithIOSClass:(IOSClass *)enumClass {
  return ComFasterxmlJacksonDatabindCfgMapperConfig_collectFeatureDefaultsWithIOSClass_(enumClass);
}

- (ComFasterxmlJacksonDatabindCfgMapperConfig *)withWithComFasterxmlJacksonDatabindMapperFeatureArray:(IOSObjectArray *)features {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindCfgMapperConfig *)withoutWithComFasterxmlJacksonDatabindMapperFeatureArray:(IOSObjectArray *)features {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindCfgMapperConfig *)withWithComFasterxmlJacksonDatabindMapperFeature:(ComFasterxmlJacksonDatabindMapperFeature *)feature
                                                                                     withBoolean:(jboolean)state {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isEnabledWithComFasterxmlJacksonDatabindMapperFeature:(ComFasterxmlJacksonDatabindMapperFeature *)f {
  return ComFasterxmlJacksonDatabindCfgMapperConfig_isEnabledWithComFasterxmlJacksonDatabindMapperFeature_(self, f);
}

- (jboolean)hasMapperFeaturesWithInt:(jint)featureMask {
  return (_mapperFeatures_ & featureMask) == featureMask;
}

- (jboolean)isAnnotationProcessingEnabled {
  return ComFasterxmlJacksonDatabindCfgMapperConfig_isEnabledWithComFasterxmlJacksonDatabindMapperFeature_(self, JreLoadEnum(ComFasterxmlJacksonDatabindMapperFeature, USE_ANNOTATIONS));
}

- (jboolean)canOverrideAccessModifiers {
  return ComFasterxmlJacksonDatabindCfgMapperConfig_canOverrideAccessModifiers(self);
}

- (jboolean)shouldSortPropertiesAlphabetically {
  return ComFasterxmlJacksonDatabindCfgMapperConfig_isEnabledWithComFasterxmlJacksonDatabindMapperFeature_(self, JreLoadEnum(ComFasterxmlJacksonDatabindMapperFeature, SORT_PROPERTIES_ALPHABETICALLY));
}

- (jboolean)useRootWrapping {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<ComFasterxmlJacksonCoreSerializableString>)compileStringWithNSString:(NSString *)src {
  return create_ComFasterxmlJacksonCoreIoSerializedString_initWithNSString_(src);
}

- (ComFasterxmlJacksonDatabindIntrospectClassIntrospector *)getClassIntrospector {
  return [((ComFasterxmlJacksonDatabindCfgBaseSettings *) nil_chk(_base_)) getClassIntrospector];
}

- (ComFasterxmlJacksonDatabindAnnotationIntrospector *)getAnnotationIntrospector {
  if (ComFasterxmlJacksonDatabindCfgMapperConfig_isEnabledWithComFasterxmlJacksonDatabindMapperFeature_(self, JreLoadEnum(ComFasterxmlJacksonDatabindMapperFeature, USE_ANNOTATIONS))) {
    return [((ComFasterxmlJacksonDatabindCfgBaseSettings *) nil_chk(_base_)) getAnnotationIntrospector];
  }
  return JreLoadStatic(ComFasterxmlJacksonDatabindIntrospectNopAnnotationIntrospector, instance);
}

- (ComFasterxmlJacksonDatabindPropertyNamingStrategy *)getPropertyNamingStrategy {
  return [((ComFasterxmlJacksonDatabindCfgBaseSettings *) nil_chk(_base_)) getPropertyNamingStrategy];
}

- (ComFasterxmlJacksonDatabindCfgHandlerInstantiator *)getHandlerInstantiator {
  return ComFasterxmlJacksonDatabindCfgMapperConfig_getHandlerInstantiator(self);
}

- (id<ComFasterxmlJacksonDatabindJsontypeTypeResolverBuilder>)getDefaultTyperWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)baseType {
  return [((ComFasterxmlJacksonDatabindCfgBaseSettings *) nil_chk(_base_)) getTypeResolverBuilder];
}

- (ComFasterxmlJacksonDatabindJsontypeSubtypeResolver *)getSubtypeResolver {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindTypeTypeFactory *)getTypeFactory {
  return ComFasterxmlJacksonDatabindCfgMapperConfig_getTypeFactory(self);
}

- (ComFasterxmlJacksonDatabindJavaType *)constructTypeWithIOSClass:(IOSClass *)cls {
  return ComFasterxmlJacksonDatabindCfgMapperConfig_constructTypeWithIOSClass_(self, cls);
}

- (ComFasterxmlJacksonDatabindJavaType *)constructTypeWithComFasterxmlJacksonCoreTypeTypeReference:(ComFasterxmlJacksonCoreTypeTypeReference *)valueTypeRef {
  return [((ComFasterxmlJacksonDatabindTypeTypeFactory *) nil_chk(ComFasterxmlJacksonDatabindCfgMapperConfig_getTypeFactory(self))) constructTypeWithJavaLangReflectType:[((ComFasterxmlJacksonCoreTypeTypeReference *) nil_chk(valueTypeRef)) getType]];
}

- (ComFasterxmlJacksonDatabindJavaType *)constructSpecializedTypeWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)baseType
                                                                                            withIOSClass:(IOSClass *)subclass {
  return [((ComFasterxmlJacksonDatabindTypeTypeFactory *) nil_chk(ComFasterxmlJacksonDatabindCfgMapperConfig_getTypeFactory(self))) constructSpecializedTypeWithComFasterxmlJacksonDatabindJavaType:baseType withIOSClass:subclass];
}

- (ComFasterxmlJacksonDatabindBeanDescription *)introspectClassAnnotationsWithIOSClass:(IOSClass *)cls {
  return [self introspectClassAnnotationsWithComFasterxmlJacksonDatabindJavaType:ComFasterxmlJacksonDatabindCfgMapperConfig_constructTypeWithIOSClass_(self, cls)];
}

- (ComFasterxmlJacksonDatabindBeanDescription *)introspectClassAnnotationsWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type {
  return [((ComFasterxmlJacksonDatabindIntrospectClassIntrospector *) nil_chk([self getClassIntrospector])) forClassAnnotationsWithComFasterxmlJacksonDatabindCfgMapperConfig:self withComFasterxmlJacksonDatabindJavaType:type withComFasterxmlJacksonDatabindIntrospectClassIntrospector_MixInResolver:self];
}

- (ComFasterxmlJacksonDatabindBeanDescription *)introspectDirectClassAnnotationsWithIOSClass:(IOSClass *)cls {
  return ComFasterxmlJacksonDatabindCfgMapperConfig_introspectDirectClassAnnotationsWithComFasterxmlJacksonDatabindJavaType_(self, ComFasterxmlJacksonDatabindCfgMapperConfig_constructTypeWithIOSClass_(self, cls));
}

- (ComFasterxmlJacksonDatabindBeanDescription *)introspectDirectClassAnnotationsWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type {
  return ComFasterxmlJacksonDatabindCfgMapperConfig_introspectDirectClassAnnotationsWithComFasterxmlJacksonDatabindJavaType_(self, type);
}

- (ComFasterxmlJacksonDatabindCfgConfigOverride *)findConfigOverrideWithIOSClass:(IOSClass *)type {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindCfgConfigOverride *)getConfigOverrideWithIOSClass:(IOSClass *)type {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonAnnotationJsonInclude_Value *)getDefaultPropertyInclusion {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonAnnotationJsonInclude_Value *)getDefaultPropertyInclusionWithIOSClass:(IOSClass *)baseType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonAnnotationJsonInclude_Value *)getDefaultPropertyInclusionWithIOSClass:(IOSClass *)baseType
                                         withComFasterxmlJacksonAnnotationJsonInclude_Value:(ComFasterxmlJacksonAnnotationJsonInclude_Value *)defaultIncl {
  ComFasterxmlJacksonAnnotationJsonInclude_Value *v = [((ComFasterxmlJacksonDatabindCfgConfigOverride *) nil_chk([self getConfigOverrideWithIOSClass:baseType])) getInclude];
  if (v != nil) {
    return v;
  }
  return defaultIncl;
}

- (ComFasterxmlJacksonAnnotationJsonInclude_Value *)getDefaultInclusionWithIOSClass:(IOSClass *)baseType
                                                                       withIOSClass:(IOSClass *)propertyType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonAnnotationJsonInclude_Value *)getDefaultInclusionWithIOSClass:(IOSClass *)baseType
                                                                       withIOSClass:(IOSClass *)propertyType
                                 withComFasterxmlJacksonAnnotationJsonInclude_Value:(ComFasterxmlJacksonAnnotationJsonInclude_Value *)defaultIncl {
  ComFasterxmlJacksonAnnotationJsonInclude_Value *baseOverride = [((ComFasterxmlJacksonDatabindCfgConfigOverride *) nil_chk([self getConfigOverrideWithIOSClass:baseType])) getInclude];
  ComFasterxmlJacksonAnnotationJsonInclude_Value *propOverride = [((ComFasterxmlJacksonDatabindCfgConfigOverride *) nil_chk([self getConfigOverrideWithIOSClass:propertyType])) getIncludeAsProperty];
  ComFasterxmlJacksonAnnotationJsonInclude_Value *result = ComFasterxmlJacksonAnnotationJsonInclude_Value_mergeAllWithComFasterxmlJacksonAnnotationJsonInclude_ValueArray_([IOSObjectArray arrayWithObjects:(id[]){ defaultIncl, baseOverride, propOverride } count:3 type:ComFasterxmlJacksonAnnotationJsonInclude_Value_class_()]);
  return result;
}

- (ComFasterxmlJacksonAnnotationJsonFormat_Value *)getDefaultPropertyFormatWithIOSClass:(IOSClass *)baseType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)getDefaultPropertyIgnoralsWithIOSClass:(IOSClass *)baseType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)getDefaultPropertyIgnoralsWithIOSClass:(IOSClass *)baseType
                                            withComFasterxmlJacksonDatabindIntrospectAnnotatedClass:(ComFasterxmlJacksonDatabindIntrospectAnnotatedClass *)actualClass {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<ComFasterxmlJacksonDatabindIntrospectVisibilityChecker>)getDefaultVisibilityChecker {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<ComFasterxmlJacksonDatabindIntrospectVisibilityChecker>)getDefaultVisibilityCheckerWithIOSClass:(IOSClass *)baseType
                                              withComFasterxmlJacksonDatabindIntrospectAnnotatedClass:(ComFasterxmlJacksonDatabindIntrospectAnnotatedClass *)actualClass {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonAnnotationJsonSetter_Value *)getDefaultSetterInfo {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (JavaLangBoolean *)getDefaultMergeable {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (JavaLangBoolean *)getDefaultMergeableWithIOSClass:(IOSClass *)baseType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (JavaTextDateFormat *)getDateFormat {
  return [((ComFasterxmlJacksonDatabindCfgBaseSettings *) nil_chk(_base_)) getDateFormat];
}

- (JavaUtilLocale *)getLocale {
  return [((ComFasterxmlJacksonDatabindCfgBaseSettings *) nil_chk(_base_)) getLocale];
}

- (JavaUtilTimeZone *)getTimeZone {
  return [((ComFasterxmlJacksonDatabindCfgBaseSettings *) nil_chk(_base_)) getTimeZone];
}

- (IOSClass *)getActiveView {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonCoreBase64Variant *)getBase64Variant {
  return [((ComFasterxmlJacksonDatabindCfgBaseSettings *) nil_chk(_base_)) getBase64Variant];
}

- (ComFasterxmlJacksonDatabindCfgContextAttributes *)getAttributes {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindPropertyName *)findRootNameWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)rootType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindPropertyName *)findRootNameWithIOSClass:(IOSClass *)rawRootType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<ComFasterxmlJacksonDatabindJsontypeTypeResolverBuilder>)typeResolverBuilderInstanceWithComFasterxmlJacksonDatabindIntrospectAnnotated:(ComFasterxmlJacksonDatabindIntrospectAnnotated *)annotated
                                                                                                                               withIOSClass:(IOSClass *)builderClass {
  ComFasterxmlJacksonDatabindCfgHandlerInstantiator *hi = ComFasterxmlJacksonDatabindCfgMapperConfig_getHandlerInstantiator(self);
  if (hi != nil) {
    id<ComFasterxmlJacksonDatabindJsontypeTypeResolverBuilder> builder = [hi typeResolverBuilderInstanceWithComFasterxmlJacksonDatabindCfgMapperConfig:self withComFasterxmlJacksonDatabindIntrospectAnnotated:annotated withIOSClass:builderClass];
    if (builder != nil) {
      return builder;
    }
  }
  return ComFasterxmlJacksonDatabindUtilClassUtil_createInstanceWithIOSClass_withBoolean_(builderClass, ComFasterxmlJacksonDatabindCfgMapperConfig_canOverrideAccessModifiers(self));
}

- (id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver>)typeIdResolverInstanceWithComFasterxmlJacksonDatabindIntrospectAnnotated:(ComFasterxmlJacksonDatabindIntrospectAnnotated *)annotated
                                                                                                                     withIOSClass:(IOSClass *)resolverClass {
  ComFasterxmlJacksonDatabindCfgHandlerInstantiator *hi = ComFasterxmlJacksonDatabindCfgMapperConfig_getHandlerInstantiator(self);
  if (hi != nil) {
    id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver> builder = [hi typeIdResolverInstanceWithComFasterxmlJacksonDatabindCfgMapperConfig:self withComFasterxmlJacksonDatabindIntrospectAnnotated:annotated withIOSClass:resolverClass];
    if (builder != nil) {
      return builder;
    }
  }
  return ComFasterxmlJacksonDatabindUtilClassUtil_createInstanceWithIOSClass_withBoolean_(resolverClass, ComFasterxmlJacksonDatabindCfgMapperConfig_canOverrideAccessModifiers(self));
}

- (void)dealloc {
  RELEASE_(_base_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x4, -1, 3, -1, 4, -1, -1 },
    { NULL, NULL, 0x4, -1, 5, -1, 6, -1, -1 },
    { NULL, "I", 0x9, 7, 8, -1, 9, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfig;", 0x481, 10, 11, -1, 12, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfig;", 0x481, 13, 11, -1, 12, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfig;", 0x401, 10, 14, -1, 15, -1, -1 },
    { NULL, "Z", 0x11, 16, 17, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, 18, 19, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreSerializableString;", 0x1, 20, 21, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindIntrospectClassIntrospector;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindAnnotationIntrospector;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindPropertyNamingStrategy;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgHandlerInstantiator;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsontypeTypeResolverBuilder;", 0x11, 22, 23, -1, 24, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsontypeSubtypeResolver;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeTypeFactory;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x11, 25, 8, -1, 26, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x11, 25, 27, -1, 28, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, 29, 30, -1, 31, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindBeanDescription;", 0x1, 32, 8, -1, 33, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindBeanDescription;", 0x1, 32, 23, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindBeanDescription;", 0x1, 34, 8, -1, 33, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindBeanDescription;", 0x11, 34, 23, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgConfigOverride;", 0x401, 35, 8, -1, 36, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgConfigOverride;", 0x401, 37, 8, -1, 36, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonInclude_Value;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonInclude_Value;", 0x401, 38, 8, -1, 39, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonInclude_Value;", 0x1, 38, 40, -1, 41, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonInclude_Value;", 0x401, 42, 43, -1, 44, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonInclude_Value;", 0x1, 42, 45, -1, 46, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonFormat_Value;", 0x401, 47, 8, -1, 48, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value;", 0x401, 49, 8, -1, 50, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value;", 0x401, 49, 51, -1, 52, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindIntrospectVisibilityChecker;", 0x401, -1, -1, -1, 53, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindIntrospectVisibilityChecker;", 0x401, 54, 51, -1, 55, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonSetter_Value;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x401, 56, 8, -1, 57, -1, -1 },
    { NULL, "LJavaTextDateFormat;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilLocale;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilTimeZone;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x401, -1, -1, -1, 58, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreBase64Variant;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgContextAttributes;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindPropertyName;", 0x401, 59, 23, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindPropertyName;", 0x401, 59, 8, -1, 60, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsontypeTypeResolverBuilder;", 0x1, 61, 62, -1, 63, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsontypeTypeIdResolver;", 0x1, 64, 62, -1, 65, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonDatabindCfgBaseSettings:withInt:);
  methods[1].selector = @selector(initWithComFasterxmlJacksonDatabindCfgMapperConfig:withInt:);
  methods[2].selector = @selector(initWithComFasterxmlJacksonDatabindCfgMapperConfig:withComFasterxmlJacksonDatabindCfgBaseSettings:);
  methods[3].selector = @selector(initWithComFasterxmlJacksonDatabindCfgMapperConfig:);
  methods[4].selector = @selector(collectFeatureDefaultsWithIOSClass:);
  methods[5].selector = @selector(withWithComFasterxmlJacksonDatabindMapperFeatureArray:);
  methods[6].selector = @selector(withoutWithComFasterxmlJacksonDatabindMapperFeatureArray:);
  methods[7].selector = @selector(withWithComFasterxmlJacksonDatabindMapperFeature:withBoolean:);
  methods[8].selector = @selector(isEnabledWithComFasterxmlJacksonDatabindMapperFeature:);
  methods[9].selector = @selector(hasMapperFeaturesWithInt:);
  methods[10].selector = @selector(isAnnotationProcessingEnabled);
  methods[11].selector = @selector(canOverrideAccessModifiers);
  methods[12].selector = @selector(shouldSortPropertiesAlphabetically);
  methods[13].selector = @selector(useRootWrapping);
  methods[14].selector = @selector(compileStringWithNSString:);
  methods[15].selector = @selector(getClassIntrospector);
  methods[16].selector = @selector(getAnnotationIntrospector);
  methods[17].selector = @selector(getPropertyNamingStrategy);
  methods[18].selector = @selector(getHandlerInstantiator);
  methods[19].selector = @selector(getDefaultTyperWithComFasterxmlJacksonDatabindJavaType:);
  methods[20].selector = @selector(getSubtypeResolver);
  methods[21].selector = @selector(getTypeFactory);
  methods[22].selector = @selector(constructTypeWithIOSClass:);
  methods[23].selector = @selector(constructTypeWithComFasterxmlJacksonCoreTypeTypeReference:);
  methods[24].selector = @selector(constructSpecializedTypeWithComFasterxmlJacksonDatabindJavaType:withIOSClass:);
  methods[25].selector = @selector(introspectClassAnnotationsWithIOSClass:);
  methods[26].selector = @selector(introspectClassAnnotationsWithComFasterxmlJacksonDatabindJavaType:);
  methods[27].selector = @selector(introspectDirectClassAnnotationsWithIOSClass:);
  methods[28].selector = @selector(introspectDirectClassAnnotationsWithComFasterxmlJacksonDatabindJavaType:);
  methods[29].selector = @selector(findConfigOverrideWithIOSClass:);
  methods[30].selector = @selector(getConfigOverrideWithIOSClass:);
  methods[31].selector = @selector(getDefaultPropertyInclusion);
  methods[32].selector = @selector(getDefaultPropertyInclusionWithIOSClass:);
  methods[33].selector = @selector(getDefaultPropertyInclusionWithIOSClass:withComFasterxmlJacksonAnnotationJsonInclude_Value:);
  methods[34].selector = @selector(getDefaultInclusionWithIOSClass:withIOSClass:);
  methods[35].selector = @selector(getDefaultInclusionWithIOSClass:withIOSClass:withComFasterxmlJacksonAnnotationJsonInclude_Value:);
  methods[36].selector = @selector(getDefaultPropertyFormatWithIOSClass:);
  methods[37].selector = @selector(getDefaultPropertyIgnoralsWithIOSClass:);
  methods[38].selector = @selector(getDefaultPropertyIgnoralsWithIOSClass:withComFasterxmlJacksonDatabindIntrospectAnnotatedClass:);
  methods[39].selector = @selector(getDefaultVisibilityChecker);
  methods[40].selector = @selector(getDefaultVisibilityCheckerWithIOSClass:withComFasterxmlJacksonDatabindIntrospectAnnotatedClass:);
  methods[41].selector = @selector(getDefaultSetterInfo);
  methods[42].selector = @selector(getDefaultMergeable);
  methods[43].selector = @selector(getDefaultMergeableWithIOSClass:);
  methods[44].selector = @selector(getDateFormat);
  methods[45].selector = @selector(getLocale);
  methods[46].selector = @selector(getTimeZone);
  methods[47].selector = @selector(getActiveView);
  methods[48].selector = @selector(getBase64Variant);
  methods[49].selector = @selector(getAttributes);
  methods[50].selector = @selector(findRootNameWithComFasterxmlJacksonDatabindJavaType:);
  methods[51].selector = @selector(findRootNameWithIOSClass:);
  methods[52].selector = @selector(typeResolverBuilderInstanceWithComFasterxmlJacksonDatabindIntrospectAnnotated:withIOSClass:);
  methods[53].selector = @selector(typeIdResolverInstanceWithComFasterxmlJacksonDatabindIntrospectAnnotated:withIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindCfgMapperConfig_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "EMPTY_INCLUDE", "LComFasterxmlJacksonAnnotationJsonInclude_Value;", .constantValue.asLong = 0, 0x1c, -1, 66, -1, -1 },
    { "EMPTY_FORMAT", "LComFasterxmlJacksonAnnotationJsonFormat_Value;", .constantValue.asLong = 0, 0x1c, -1, 67, -1, -1 },
    { "_mapperFeatures_", "I", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_base_", "LComFasterxmlJacksonDatabindCfgBaseSettings;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindCfgBaseSettings;I", "LComFasterxmlJacksonDatabindCfgMapperConfig;I", "(Lcom/fasterxml/jackson/databind/cfg/MapperConfig<TT;>;I)V", "LComFasterxmlJacksonDatabindCfgMapperConfig;LComFasterxmlJacksonDatabindCfgBaseSettings;", "(Lcom/fasterxml/jackson/databind/cfg/MapperConfig<TT;>;Lcom/fasterxml/jackson/databind/cfg/BaseSettings;)V", "LComFasterxmlJacksonDatabindCfgMapperConfig;", "(Lcom/fasterxml/jackson/databind/cfg/MapperConfig<TT;>;)V", "collectFeatureDefaults", "LIOSClass;", "<F:Ljava/lang/Enum<TF;>;:Lcom/fasterxml/jackson/databind/cfg/ConfigFeature;>(Ljava/lang/Class<TF;>;)I", "with", "[LComFasterxmlJacksonDatabindMapperFeature;", "([Lcom/fasterxml/jackson/databind/MapperFeature;)TT;", "without", "LComFasterxmlJacksonDatabindMapperFeature;Z", "(Lcom/fasterxml/jackson/databind/MapperFeature;Z)TT;", "isEnabled", "LComFasterxmlJacksonDatabindMapperFeature;", "hasMapperFeatures", "I", "compileString", "LNSString;", "getDefaultTyper", "LComFasterxmlJacksonDatabindJavaType;", "(Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/jsontype/TypeResolverBuilder<*>;", "constructType", "(Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/JavaType;", "LComFasterxmlJacksonCoreTypeTypeReference;", "(Lcom/fasterxml/jackson/core/type/TypeReference<*>;)Lcom/fasterxml/jackson/databind/JavaType;", "constructSpecializedType", "LComFasterxmlJacksonDatabindJavaType;LIOSClass;", "(Lcom/fasterxml/jackson/databind/JavaType;Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/JavaType;", "introspectClassAnnotations", "(Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/BeanDescription;", "introspectDirectClassAnnotations", "findConfigOverride", "(Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/cfg/ConfigOverride;", "getConfigOverride", "getDefaultPropertyInclusion", "(Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/annotation/JsonInclude$Value;", "LIOSClass;LComFasterxmlJacksonAnnotationJsonInclude_Value;", "(Ljava/lang/Class<*>;Lcom/fasterxml/jackson/annotation/JsonInclude$Value;)Lcom/fasterxml/jackson/annotation/JsonInclude$Value;", "getDefaultInclusion", "LIOSClass;LIOSClass;", "(Ljava/lang/Class<*>;Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/annotation/JsonInclude$Value;", "LIOSClass;LIOSClass;LComFasterxmlJacksonAnnotationJsonInclude_Value;", "(Ljava/lang/Class<*>;Ljava/lang/Class<*>;Lcom/fasterxml/jackson/annotation/JsonInclude$Value;)Lcom/fasterxml/jackson/annotation/JsonInclude$Value;", "getDefaultPropertyFormat", "(Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/annotation/JsonFormat$Value;", "getDefaultPropertyIgnorals", "(Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/annotation/JsonIgnoreProperties$Value;", "LIOSClass;LComFasterxmlJacksonDatabindIntrospectAnnotatedClass;", "(Ljava/lang/Class<*>;Lcom/fasterxml/jackson/databind/introspect/AnnotatedClass;)Lcom/fasterxml/jackson/annotation/JsonIgnoreProperties$Value;", "()Lcom/fasterxml/jackson/databind/introspect/VisibilityChecker<*>;", "getDefaultVisibilityChecker", "(Ljava/lang/Class<*>;Lcom/fasterxml/jackson/databind/introspect/AnnotatedClass;)Lcom/fasterxml/jackson/databind/introspect/VisibilityChecker<*>;", "getDefaultMergeable", "(Ljava/lang/Class<*>;)Ljava/lang/Boolean;", "()Ljava/lang/Class<*>;", "findRootName", "(Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/PropertyName;", "typeResolverBuilderInstance", "LComFasterxmlJacksonDatabindIntrospectAnnotated;LIOSClass;", "(Lcom/fasterxml/jackson/databind/introspect/Annotated;Ljava/lang/Class<+Lcom/fasterxml/jackson/databind/jsontype/TypeResolverBuilder<*>;>;)Lcom/fasterxml/jackson/databind/jsontype/TypeResolverBuilder<*>;", "typeIdResolverInstance", "(Lcom/fasterxml/jackson/databind/introspect/Annotated;Ljava/lang/Class<+Lcom/fasterxml/jackson/databind/jsontype/TypeIdResolver;>;)Lcom/fasterxml/jackson/databind/jsontype/TypeIdResolver;", &ComFasterxmlJacksonDatabindCfgMapperConfig_EMPTY_INCLUDE, &ComFasterxmlJacksonDatabindCfgMapperConfig_EMPTY_FORMAT, "<T:Lcom/fasterxml/jackson/databind/cfg/MapperConfig<TT;>;>Ljava/lang/Object;Lcom/fasterxml/jackson/databind/introspect/ClassIntrospector$MixInResolver;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindCfgMapperConfig = { "MapperConfig", "com.fasterxml.jackson.databind.cfg", ptrTable, methods, fields, 7, 0x401, 54, 5, -1, -1, -1, 68, -1 };
  return &_ComFasterxmlJacksonDatabindCfgMapperConfig;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindCfgMapperConfig class]) {
    JreStrongAssign(&ComFasterxmlJacksonDatabindCfgMapperConfig_EMPTY_INCLUDE, ComFasterxmlJacksonAnnotationJsonInclude_Value_empty());
    JreStrongAssign(&ComFasterxmlJacksonDatabindCfgMapperConfig_EMPTY_FORMAT, ComFasterxmlJacksonAnnotationJsonFormat_Value_empty());
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindCfgMapperConfig)
  }
}

@end

void ComFasterxmlJacksonDatabindCfgMapperConfig_initWithComFasterxmlJacksonDatabindCfgBaseSettings_withInt_(ComFasterxmlJacksonDatabindCfgMapperConfig *self, ComFasterxmlJacksonDatabindCfgBaseSettings *base, jint mapperFeatures) {
  NSObject_init(self);
  JreStrongAssign(&self->_base_, base);
  self->_mapperFeatures_ = mapperFeatures;
}

void ComFasterxmlJacksonDatabindCfgMapperConfig_initWithComFasterxmlJacksonDatabindCfgMapperConfig_withInt_(ComFasterxmlJacksonDatabindCfgMapperConfig *self, ComFasterxmlJacksonDatabindCfgMapperConfig *src, jint mapperFeatures) {
  NSObject_init(self);
  JreStrongAssign(&self->_base_, ((ComFasterxmlJacksonDatabindCfgMapperConfig *) nil_chk(src))->_base_);
  self->_mapperFeatures_ = mapperFeatures;
}

void ComFasterxmlJacksonDatabindCfgMapperConfig_initWithComFasterxmlJacksonDatabindCfgMapperConfig_withComFasterxmlJacksonDatabindCfgBaseSettings_(ComFasterxmlJacksonDatabindCfgMapperConfig *self, ComFasterxmlJacksonDatabindCfgMapperConfig *src, ComFasterxmlJacksonDatabindCfgBaseSettings *base) {
  NSObject_init(self);
  JreStrongAssign(&self->_base_, base);
  self->_mapperFeatures_ = ((ComFasterxmlJacksonDatabindCfgMapperConfig *) nil_chk(src))->_mapperFeatures_;
}

void ComFasterxmlJacksonDatabindCfgMapperConfig_initWithComFasterxmlJacksonDatabindCfgMapperConfig_(ComFasterxmlJacksonDatabindCfgMapperConfig *self, ComFasterxmlJacksonDatabindCfgMapperConfig *src) {
  NSObject_init(self);
  JreStrongAssign(&self->_base_, ((ComFasterxmlJacksonDatabindCfgMapperConfig *) nil_chk(src))->_base_);
  self->_mapperFeatures_ = src->_mapperFeatures_;
}

jint ComFasterxmlJacksonDatabindCfgMapperConfig_collectFeatureDefaultsWithIOSClass_(IOSClass *enumClass) {
  ComFasterxmlJacksonDatabindCfgMapperConfig_initialize();
  jint flags = 0;
  {
    IOSObjectArray *a__ = [((IOSClass *) nil_chk(enumClass)) getEnumConstants];
    JavaLangEnum<ComFasterxmlJacksonDatabindCfgConfigFeature> * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    JavaLangEnum<ComFasterxmlJacksonDatabindCfgConfigFeature> * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaLangEnum<ComFasterxmlJacksonDatabindCfgConfigFeature> *value = *b__++;
      if ([((JavaLangEnum<ComFasterxmlJacksonDatabindCfgConfigFeature> *) nil_chk(value)) enabledByDefault]) {
        flags |= [value getMask];
      }
    }
  }
  return flags;
}

jboolean ComFasterxmlJacksonDatabindCfgMapperConfig_isEnabledWithComFasterxmlJacksonDatabindMapperFeature_(ComFasterxmlJacksonDatabindCfgMapperConfig *self, ComFasterxmlJacksonDatabindMapperFeature *f) {
  return (self->_mapperFeatures_ & [((ComFasterxmlJacksonDatabindMapperFeature *) nil_chk(f)) getMask]) != 0;
}

jboolean ComFasterxmlJacksonDatabindCfgMapperConfig_canOverrideAccessModifiers(ComFasterxmlJacksonDatabindCfgMapperConfig *self) {
  return ComFasterxmlJacksonDatabindCfgMapperConfig_isEnabledWithComFasterxmlJacksonDatabindMapperFeature_(self, JreLoadEnum(ComFasterxmlJacksonDatabindMapperFeature, CAN_OVERRIDE_ACCESS_MODIFIERS));
}

ComFasterxmlJacksonDatabindCfgHandlerInstantiator *ComFasterxmlJacksonDatabindCfgMapperConfig_getHandlerInstantiator(ComFasterxmlJacksonDatabindCfgMapperConfig *self) {
  return [((ComFasterxmlJacksonDatabindCfgBaseSettings *) nil_chk(self->_base_)) getHandlerInstantiator];
}

ComFasterxmlJacksonDatabindTypeTypeFactory *ComFasterxmlJacksonDatabindCfgMapperConfig_getTypeFactory(ComFasterxmlJacksonDatabindCfgMapperConfig *self) {
  return [((ComFasterxmlJacksonDatabindCfgBaseSettings *) nil_chk(self->_base_)) getTypeFactory];
}

ComFasterxmlJacksonDatabindJavaType *ComFasterxmlJacksonDatabindCfgMapperConfig_constructTypeWithIOSClass_(ComFasterxmlJacksonDatabindCfgMapperConfig *self, IOSClass *cls) {
  return [((ComFasterxmlJacksonDatabindTypeTypeFactory *) nil_chk(ComFasterxmlJacksonDatabindCfgMapperConfig_getTypeFactory(self))) constructTypeWithJavaLangReflectType:cls];
}

ComFasterxmlJacksonDatabindBeanDescription *ComFasterxmlJacksonDatabindCfgMapperConfig_introspectDirectClassAnnotationsWithComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindCfgMapperConfig *self, ComFasterxmlJacksonDatabindJavaType *type) {
  return [((ComFasterxmlJacksonDatabindIntrospectClassIntrospector *) nil_chk([self getClassIntrospector])) forDirectClassAnnotationsWithComFasterxmlJacksonDatabindCfgMapperConfig:self withComFasterxmlJacksonDatabindJavaType:type withComFasterxmlJacksonDatabindIntrospectClassIntrospector_MixInResolver:self];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindCfgMapperConfig)
