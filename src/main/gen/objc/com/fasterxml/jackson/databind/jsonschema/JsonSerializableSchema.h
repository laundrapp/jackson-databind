//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/jsonschema/JsonSerializableSchema.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindJsonschemaJsonSerializableSchema")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindJsonschemaJsonSerializableSchema
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindJsonschemaJsonSerializableSchema 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindJsonschemaJsonSerializableSchema 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindJsonschemaJsonSerializableSchema

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindJsonschemaJsonSerializableSchema_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindJsonschemaJsonSerializableSchema || defined(INCLUDE_ComFasterxmlJacksonDatabindJsonschemaJsonSerializableSchema))
#define ComFasterxmlJacksonDatabindJsonschemaJsonSerializableSchema_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class IOSClass;

/*!
 @brief Annotation that can be used to define JSON Schema definition for
  the annotated class.
 <p>
  Note that annotation is often not needed: for example, regular
  Jackson beans that Jackson can introspect can be used without
  annotations, to produce JSON schema definition.
 @author Ryan Heaton
 @author Tatu Saloranta
 */
@protocol ComFasterxmlJacksonDatabindJsonschemaJsonSerializableSchema < JavaLangAnnotationAnnotation >

@property (readonly) NSString *id__;
@property (readonly) NSString *schemaType;
@property (readonly) NSString *schemaObjectPropertiesDefinition;
@property (readonly) NSString *schemaItemDefinition;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

@interface ComFasterxmlJacksonDatabindJsonschemaJsonSerializableSchema : NSObject < ComFasterxmlJacksonDatabindJsonschemaJsonSerializableSchema > {
 @public
  NSString *id___;
  NSString *schemaType_;
  NSString *schemaObjectPropertiesDefinition_;
  NSString *schemaItemDefinition_;
}

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindJsonschemaJsonSerializableSchema)

/*!
 @brief Marker value used to indicate that property has "no value";
  needed because annotations cannot have null as default
  value.
 */
inline NSString *ComFasterxmlJacksonDatabindJsonschemaJsonSerializableSchema_get_NO_VALUE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ComFasterxmlJacksonDatabindJsonschemaJsonSerializableSchema_NO_VALUE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindJsonschemaJsonSerializableSchema, NO_VALUE, NSString *)

FOUNDATION_EXPORT id<ComFasterxmlJacksonDatabindJsonschemaJsonSerializableSchema> create_ComFasterxmlJacksonDatabindJsonschemaJsonSerializableSchema(NSString *id__, NSString *schemaItemDefinition, NSString *schemaObjectPropertiesDefinition, NSString *schemaType);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindJsonschemaJsonSerializableSchema)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindJsonschemaJsonSerializableSchema")
