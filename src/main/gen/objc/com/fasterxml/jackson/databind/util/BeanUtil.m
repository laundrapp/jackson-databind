//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/util/BeanUtil.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/annotation/JsonInclude.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/introspect/AnnotatedMethod.h"
#include "com/fasterxml/jackson/databind/util/BeanUtil.h"
#include "com/fasterxml/jackson/databind/util/ClassUtil.h"
#include "java/lang/Boolean.h"
#include "java/lang/Character.h"
#include "java/lang/Deprecated.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Calendar.h"
#include "java/util/Date.h"
#include "java/util/GregorianCalendar.h"

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindUtilBeanUtil__Annotations$0(void);

@implementation ComFasterxmlJacksonDatabindUtilBeanUtil

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindUtilBeanUtil_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (NSString *)okNameForGetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod:(ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *)am
                                                                          withBoolean:(jboolean)stdNaming {
  return ComFasterxmlJacksonDatabindUtilBeanUtil_okNameForGetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod_withBoolean_(am, stdNaming);
}

+ (NSString *)okNameForRegularGetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod:(ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *)am
                                                                                withNSString:(NSString *)name
                                                                                 withBoolean:(jboolean)stdNaming {
  return ComFasterxmlJacksonDatabindUtilBeanUtil_okNameForRegularGetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod_withNSString_withBoolean_(am, name, stdNaming);
}

+ (NSString *)okNameForIsGetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod:(ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *)am
                                                                           withNSString:(NSString *)name
                                                                            withBoolean:(jboolean)stdNaming {
  return ComFasterxmlJacksonDatabindUtilBeanUtil_okNameForIsGetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod_withNSString_withBoolean_(am, name, stdNaming);
}

+ (NSString *)okNameForSetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod:(ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *)am
                                                                          withBoolean:(jboolean)stdNaming {
  return ComFasterxmlJacksonDatabindUtilBeanUtil_okNameForSetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod_withBoolean_(am, stdNaming);
}

+ (NSString *)okNameForMutatorWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod:(ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *)am
                                                                          withNSString:(NSString *)prefix
                                                                           withBoolean:(jboolean)stdNaming {
  return ComFasterxmlJacksonDatabindUtilBeanUtil_okNameForMutatorWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod_withNSString_withBoolean_(am, prefix, stdNaming);
}

+ (id)getDefaultValueWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type {
  return ComFasterxmlJacksonDatabindUtilBeanUtil_getDefaultValueWithComFasterxmlJacksonDatabindJavaType_(type);
}

+ (jboolean)isCglibGetCallbacksWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod:(ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *)am {
  return ComFasterxmlJacksonDatabindUtilBeanUtil_isCglibGetCallbacksWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod_(am);
}

+ (jboolean)isGroovyMetaClassSetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod:(ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *)am {
  return ComFasterxmlJacksonDatabindUtilBeanUtil_isGroovyMetaClassSetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod_(am);
}

+ (jboolean)isGroovyMetaClassGetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod:(ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *)am {
  return ComFasterxmlJacksonDatabindUtilBeanUtil_isGroovyMetaClassGetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod_(am);
}

+ (NSString *)legacyManglePropertyNameWithNSString:(NSString *)basename
                                           withInt:(jint)offset {
  return ComFasterxmlJacksonDatabindUtilBeanUtil_legacyManglePropertyNameWithNSString_withInt_(basename, offset);
}

+ (NSString *)stdManglePropertyNameWithNSString:(NSString *)basename
                                        withInt:(jint)offset {
  return ComFasterxmlJacksonDatabindUtilBeanUtil_stdManglePropertyNameWithNSString_withInt_(basename, offset);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 0, 1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 2, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 4, 3, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x9, 5, 1, -1, -1, 6, -1 },
    { NULL, "LNSString;", 0x9, 7, 3, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x9, 8, 9, -1, -1, -1, -1 },
    { NULL, "Z", 0xc, 10, 11, -1, -1, -1, -1 },
    { NULL, "Z", 0xc, 12, 11, -1, -1, -1, -1 },
    { NULL, "Z", 0xc, 13, 11, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xc, 14, 15, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0xc, 16, 15, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(okNameForGetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod:withBoolean:);
  methods[2].selector = @selector(okNameForRegularGetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod:withNSString:withBoolean:);
  methods[3].selector = @selector(okNameForIsGetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod:withNSString:withBoolean:);
  methods[4].selector = @selector(okNameForSetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod:withBoolean:);
  methods[5].selector = @selector(okNameForMutatorWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod:withNSString:withBoolean:);
  methods[6].selector = @selector(getDefaultValueWithComFasterxmlJacksonDatabindJavaType:);
  methods[7].selector = @selector(isCglibGetCallbacksWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod:);
  methods[8].selector = @selector(isGroovyMetaClassSetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod:);
  methods[9].selector = @selector(isGroovyMetaClassGetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod:);
  methods[10].selector = @selector(legacyManglePropertyNameWithNSString:withInt:);
  methods[11].selector = @selector(stdManglePropertyNameWithNSString:withInt:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "okNameForGetter", "LComFasterxmlJacksonDatabindIntrospectAnnotatedMethod;Z", "okNameForRegularGetter", "LComFasterxmlJacksonDatabindIntrospectAnnotatedMethod;LNSString;Z", "okNameForIsGetter", "okNameForSetter", (void *)&ComFasterxmlJacksonDatabindUtilBeanUtil__Annotations$0, "okNameForMutator", "getDefaultValue", "LComFasterxmlJacksonDatabindJavaType;", "isCglibGetCallbacks", "LComFasterxmlJacksonDatabindIntrospectAnnotatedMethod;", "isGroovyMetaClassSetter", "isGroovyMetaClassGetter", "legacyManglePropertyName", "LNSString;I", "stdManglePropertyName" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindUtilBeanUtil = { "BeanUtil", "com.fasterxml.jackson.databind.util", ptrTable, methods, NULL, 7, 0x1, 12, 0, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindUtilBeanUtil;
}

@end

void ComFasterxmlJacksonDatabindUtilBeanUtil_init(ComFasterxmlJacksonDatabindUtilBeanUtil *self) {
  NSObject_init(self);
}

ComFasterxmlJacksonDatabindUtilBeanUtil *new_ComFasterxmlJacksonDatabindUtilBeanUtil_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindUtilBeanUtil, init)
}

ComFasterxmlJacksonDatabindUtilBeanUtil *create_ComFasterxmlJacksonDatabindUtilBeanUtil_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindUtilBeanUtil, init)
}

NSString *ComFasterxmlJacksonDatabindUtilBeanUtil_okNameForGetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod_withBoolean_(ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *am, jboolean stdNaming) {
  ComFasterxmlJacksonDatabindUtilBeanUtil_initialize();
  NSString *name = [((ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *) nil_chk(am)) getName];
  NSString *str = ComFasterxmlJacksonDatabindUtilBeanUtil_okNameForIsGetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod_withNSString_withBoolean_(am, name, stdNaming);
  if (str == nil) {
    str = ComFasterxmlJacksonDatabindUtilBeanUtil_okNameForRegularGetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod_withNSString_withBoolean_(am, name, stdNaming);
  }
  return str;
}

NSString *ComFasterxmlJacksonDatabindUtilBeanUtil_okNameForRegularGetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod_withNSString_withBoolean_(ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *am, NSString *name, jboolean stdNaming) {
  ComFasterxmlJacksonDatabindUtilBeanUtil_initialize();
  if ([((NSString *) nil_chk(name)) java_hasPrefix:@"get"]) {
    if ([@"getCallbacks" isEqual:name]) {
      if (ComFasterxmlJacksonDatabindUtilBeanUtil_isCglibGetCallbacksWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod_(am)) {
        return nil;
      }
    }
    else if ([@"getMetaClass" isEqual:name]) {
      if (ComFasterxmlJacksonDatabindUtilBeanUtil_isGroovyMetaClassGetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod_(am)) {
        return nil;
      }
    }
    return stdNaming ? ComFasterxmlJacksonDatabindUtilBeanUtil_stdManglePropertyNameWithNSString_withInt_(name, 3) : ComFasterxmlJacksonDatabindUtilBeanUtil_legacyManglePropertyNameWithNSString_withInt_(name, 3);
  }
  return nil;
}

NSString *ComFasterxmlJacksonDatabindUtilBeanUtil_okNameForIsGetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod_withNSString_withBoolean_(ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *am, NSString *name, jboolean stdNaming) {
  ComFasterxmlJacksonDatabindUtilBeanUtil_initialize();
  if ([((NSString *) nil_chk(name)) java_hasPrefix:@"is"]) {
    IOSClass *rt = [((ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *) nil_chk(am)) getRawType];
    if (rt == JavaLangBoolean_class_() || rt == JreLoadStatic(JavaLangBoolean, TYPE)) {
      return stdNaming ? ComFasterxmlJacksonDatabindUtilBeanUtil_stdManglePropertyNameWithNSString_withInt_(name, 2) : ComFasterxmlJacksonDatabindUtilBeanUtil_legacyManglePropertyNameWithNSString_withInt_(name, 2);
    }
  }
  return nil;
}

NSString *ComFasterxmlJacksonDatabindUtilBeanUtil_okNameForSetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod_withBoolean_(ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *am, jboolean stdNaming) {
  ComFasterxmlJacksonDatabindUtilBeanUtil_initialize();
  NSString *name = ComFasterxmlJacksonDatabindUtilBeanUtil_okNameForMutatorWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod_withNSString_withBoolean_(am, @"set", stdNaming);
  if ((name != nil) && (![@"metaClass" isEqual:name] || !ComFasterxmlJacksonDatabindUtilBeanUtil_isGroovyMetaClassSetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod_(am))) {
    return name;
  }
  return nil;
}

NSString *ComFasterxmlJacksonDatabindUtilBeanUtil_okNameForMutatorWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod_withNSString_withBoolean_(ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *am, NSString *prefix, jboolean stdNaming) {
  ComFasterxmlJacksonDatabindUtilBeanUtil_initialize();
  NSString *name = [((ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *) nil_chk(am)) getName];
  if ([((NSString *) nil_chk(name)) java_hasPrefix:prefix]) {
    return stdNaming ? ComFasterxmlJacksonDatabindUtilBeanUtil_stdManglePropertyNameWithNSString_withInt_(name, [((NSString *) nil_chk(prefix)) java_length]) : ComFasterxmlJacksonDatabindUtilBeanUtil_legacyManglePropertyNameWithNSString_withInt_(name, [((NSString *) nil_chk(prefix)) java_length]);
  }
  return nil;
}

id ComFasterxmlJacksonDatabindUtilBeanUtil_getDefaultValueWithComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindJavaType *type) {
  ComFasterxmlJacksonDatabindUtilBeanUtil_initialize();
  IOSClass *cls = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(type)) getRawClass];
  IOSClass *prim = ComFasterxmlJacksonDatabindUtilClassUtil_primitiveTypeWithIOSClass_(cls);
  if (prim != nil) {
    return ComFasterxmlJacksonDatabindUtilClassUtil_defaultValueWithIOSClass_(prim);
  }
  if ([type isContainerType] || [type isReferenceType]) {
    return JreLoadEnum(ComFasterxmlJacksonAnnotationJsonInclude_Include, NON_EMPTY);
  }
  if (cls == NSString_class_()) {
    return @"";
  }
  if ([type isTypeOrSubTypeOfWithIOSClass:JavaUtilDate_class_()]) {
    return create_JavaUtilDate_initWithLong_(0LL);
  }
  if ([type isTypeOrSubTypeOfWithIOSClass:JavaUtilCalendar_class_()]) {
    JavaUtilCalendar *c = create_JavaUtilGregorianCalendar_init();
    [c setTimeInMillisWithLong:0LL];
    return c;
  }
  return nil;
}

jboolean ComFasterxmlJacksonDatabindUtilBeanUtil_isCglibGetCallbacksWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod_(ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *am) {
  ComFasterxmlJacksonDatabindUtilBeanUtil_initialize();
  IOSClass *rt = [((ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *) nil_chk(am)) getRawType];
  if ([((IOSClass *) nil_chk(rt)) isArray]) {
    IOSClass *compType = [rt getComponentType];
    NSString *pkgName = ComFasterxmlJacksonDatabindUtilClassUtil_getPackageNameWithIOSClass_(compType);
    if (pkgName != nil) {
      if ([pkgName java_contains:@".cglib"]) {
        return [pkgName java_hasPrefix:@"net.sf.cglib"] || [pkgName java_hasPrefix:@"org.hibernate.repackage.cglib"] || [pkgName java_hasPrefix:@"org.springframework.cglib"];
      }
    }
  }
  return false;
}

jboolean ComFasterxmlJacksonDatabindUtilBeanUtil_isGroovyMetaClassSetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod_(ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *am) {
  ComFasterxmlJacksonDatabindUtilBeanUtil_initialize();
  IOSClass *argType = [((ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *) nil_chk(am)) getRawParameterTypeWithInt:0];
  NSString *pkgName = ComFasterxmlJacksonDatabindUtilClassUtil_getPackageNameWithIOSClass_(argType);
  return (pkgName != nil) && [((NSString *) nil_chk(pkgName)) java_hasPrefix:@"groovy.lang"];
}

jboolean ComFasterxmlJacksonDatabindUtilBeanUtil_isGroovyMetaClassGetterWithComFasterxmlJacksonDatabindIntrospectAnnotatedMethod_(ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *am) {
  ComFasterxmlJacksonDatabindUtilBeanUtil_initialize();
  NSString *pkgName = ComFasterxmlJacksonDatabindUtilClassUtil_getPackageNameWithIOSClass_([((ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *) nil_chk(am)) getRawType]);
  return (pkgName != nil) && [((NSString *) nil_chk(pkgName)) java_hasPrefix:@"groovy.lang"];
}

NSString *ComFasterxmlJacksonDatabindUtilBeanUtil_legacyManglePropertyNameWithNSString_withInt_(NSString *basename, jint offset) {
  ComFasterxmlJacksonDatabindUtilBeanUtil_initialize();
  jint end = [((NSString *) nil_chk(basename)) java_length];
  if (end == offset) {
    return nil;
  }
  jchar c = [basename charAtWithInt:offset];
  jchar d = JavaLangCharacter_toLowerCaseWithChar_(c);
  if (c == d) {
    return [basename java_substring:offset];
  }
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_initWithInt_(end - offset);
  [sb appendWithChar:d];
  jint i = offset + 1;
  for (; i < end; ++i) {
    c = [basename charAtWithInt:i];
    d = JavaLangCharacter_toLowerCaseWithChar_(c);
    if (c == d) {
      [sb appendWithJavaLangCharSequence:basename withInt:i withInt:end];
      break;
    }
    [sb appendWithChar:d];
  }
  return [sb description];
}

NSString *ComFasterxmlJacksonDatabindUtilBeanUtil_stdManglePropertyNameWithNSString_withInt_(NSString *basename, jint offset) {
  ComFasterxmlJacksonDatabindUtilBeanUtil_initialize();
  jint end = [((NSString *) nil_chk(basename)) java_length];
  if (end == offset) {
    return nil;
  }
  jchar c0 = [basename charAtWithInt:offset];
  jchar c1 = JavaLangCharacter_toLowerCaseWithChar_(c0);
  if (c0 == c1) {
    return [basename java_substring:offset];
  }
  if ((offset + 1) < end) {
    if (JavaLangCharacter_isUpperCaseWithChar_([basename charAtWithInt:offset + 1])) {
      return [basename java_substring:offset];
    }
  }
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_initWithInt_(end - offset);
  [sb appendWithChar:c1];
  [sb appendWithJavaLangCharSequence:basename withInt:offset + 1 withInt:end];
  return [sb description];
}

IOSObjectArray *ComFasterxmlJacksonDatabindUtilBeanUtil__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindUtilBeanUtil)
