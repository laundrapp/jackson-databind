//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdStdKeySerializer")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindSerStdStdKeySerializer
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdStdKeySerializer 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdStdKeySerializer 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindSerStdStdKeySerializer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindSerStdStdKeySerializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdStdKeySerializer || defined(INCLUDE_ComFasterxmlJacksonDatabindSerStdStdKeySerializer))
#define ComFasterxmlJacksonDatabindSerStdStdKeySerializer_

#define RESTRICT_ComFasterxmlJacksonDatabindSerStdStdSerializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerStdStdSerializer 1
#include "com/fasterxml/jackson/databind/ser/std/StdSerializer.h"

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSClass;

/*!
 @brief Specialized serializer that can be used as the generic key serializer,
  when serializing <code>java.util.Map</code>s to JSON Objects.
 */
@interface ComFasterxmlJacksonDatabindSerStdStdKeySerializer : ComFasterxmlJacksonDatabindSerStdStdSerializer

#pragma mark Public

- (instancetype __nonnull)init;

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindSerStdStdSerializer:(ComFasterxmlJacksonDatabindSerStdStdSerializer *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0
                               withBoolean:(jboolean)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindSerStdStdKeySerializer)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdStdKeySerializer_init(ComFasterxmlJacksonDatabindSerStdStdKeySerializer *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdStdKeySerializer *new_ComFasterxmlJacksonDatabindSerStdStdKeySerializer_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdStdKeySerializer *create_ComFasterxmlJacksonDatabindSerStdStdKeySerializer_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerStdStdKeySerializer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdStdKeySerializer")
