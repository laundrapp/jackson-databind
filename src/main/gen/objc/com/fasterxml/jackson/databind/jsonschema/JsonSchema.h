//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/jsonschema/JsonSchema.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindJsonschemaJsonSchema")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindJsonschemaJsonSchema
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindJsonschemaJsonSchema 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindJsonschemaJsonSchema 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindJsonschemaJsonSchema

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindJsonschemaJsonSchema_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindJsonschemaJsonSchema || defined(INCLUDE_ComFasterxmlJacksonDatabindJsonschemaJsonSchema))
#define ComFasterxmlJacksonDatabindJsonschemaJsonSchema_

@class ComFasterxmlJacksonDatabindJsonNode;
@class ComFasterxmlJacksonDatabindNodeObjectNode;

/*!
 @brief Container for a logical JSON Schema instance.
 Internally schema data is stored as a JSON Tree
  (instance of <code>JsonNode</code> is the root
  of schema document)
 @author Ryan Heaton
 - seealso: <a href="http://json-schema.org/">JSON Schema</a>
 */
@interface ComFasterxmlJacksonDatabindJsonschemaJsonSchema : NSObject

#pragma mark Public

/*!
 @brief Main constructor for schema instances.
 <p>
  This is the creator constructor used by Jackson itself when
  deserializing instances. It is so-called delegating creator, 
  meaning that its argument will be bound by Jackson before
  constructor gets called.
 */
- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindNodeObjectNode:(ComFasterxmlJacksonDatabindNodeObjectNode *)schema;

- (jboolean)isEqual:(id)o;

/*!
 @brief Get the default schema node.
 @return The default schema node.
 */
+ (ComFasterxmlJacksonDatabindJsonNode *)getDefaultSchemaNode;

/*!
 @brief Method for accessing root JSON object of the contained schema.
 <p>
  Note: this method is specified with <code>JsonValue</code> annotation
  to represent serialization to use; same as if explicitly
  serializing returned object.
 @return Root node of the schema tree
 */
- (ComFasterxmlJacksonDatabindNodeObjectNode *)getSchemaNode;

- (NSUInteger)hash;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindJsonschemaJsonSchema)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindJsonschemaJsonSchema_initWithComFasterxmlJacksonDatabindNodeObjectNode_(ComFasterxmlJacksonDatabindJsonschemaJsonSchema *self, ComFasterxmlJacksonDatabindNodeObjectNode *schema);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindJsonschemaJsonSchema *new_ComFasterxmlJacksonDatabindJsonschemaJsonSchema_initWithComFasterxmlJacksonDatabindNodeObjectNode_(ComFasterxmlJacksonDatabindNodeObjectNode *schema) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindJsonschemaJsonSchema *create_ComFasterxmlJacksonDatabindJsonschemaJsonSchema_initWithComFasterxmlJacksonDatabindNodeObjectNode_(ComFasterxmlJacksonDatabindNodeObjectNode *schema);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindJsonNode *ComFasterxmlJacksonDatabindJsonschemaJsonSchema_getDefaultSchemaNode(void);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindJsonschemaJsonSchema)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindJsonschemaJsonSchema")
