//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/deser/NullValueProvider.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserNullValueProvider")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindDeserNullValueProvider
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserNullValueProvider 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserNullValueProvider 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindDeserNullValueProvider

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindDeserNullValueProvider_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserNullValueProvider || defined(INCLUDE_ComFasterxmlJacksonDatabindDeserNullValueProvider))
#define ComFasterxmlJacksonDatabindDeserNullValueProvider_

@class ComFasterxmlJacksonDatabindDeserializationContext;
@class ComFasterxmlJacksonDatabindUtilAccessPattern;

/*!
 @brief Helper interface implemented by classes that are to be used as
  null providers during deserialization.Most importantly implemented by 
 <code>com.fasterxml.jackson.databind.JsonDeserializer</code> (as a mix-in
  interface), but also by converters used to support more configurable
  null replacement.
 @since 2.9
 */
@protocol ComFasterxmlJacksonDatabindDeserNullValueProvider < JavaObject >

/*!
 @brief Method called to possibly convert incoming `null` token (read via
  underlying streaming input source) into other value of type accessor
  supports.May return `null`, or value compatible with type binding.
 <p>
  NOTE: if <code>getNullAccessPattern()</code> returns `ALWAYS_NULL` or
  `CONSTANT`, this method WILL NOT use provided `ctxt` and it may thus
  be passed as `null`.
 */
- (id)getNullValueWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt;

/*!
 @brief Accessor that may be used to determine if and when provider must be called to
  access null replacement value.
 */
- (ComFasterxmlJacksonDatabindUtilAccessPattern *)getNullAccessPattern;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindDeserNullValueProvider)

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindDeserNullValueProvider)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserNullValueProvider")
