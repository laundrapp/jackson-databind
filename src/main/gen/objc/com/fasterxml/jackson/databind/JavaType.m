//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/JavaType.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/type/ResolvedType.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/type/TypeBindings.h"
#include "com/fasterxml/jackson/databind/type/TypeFactory.h"
#include "java/lang/Deprecated.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/Throwable.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/reflect/Modifier.h"
#include "java/lang/reflect/Type.h"
#include "java/util/List.h"

inline jlong ComFasterxmlJacksonDatabindJavaType_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindJavaType_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindJavaType, serialVersionUID, jlong)

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindJavaType__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindJavaType__Annotations$1(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindJavaType__Annotations$2(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindJavaType__Annotations$3(void);

@implementation ComFasterxmlJacksonDatabindJavaType

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)raw
                                   withInt:(jint)additionalHash
                                    withId:(id)valueHandler
                                    withId:(id)typeHandler
                               withBoolean:(jboolean)asStatic {
  ComFasterxmlJacksonDatabindJavaType_initWithIOSClass_withInt_withId_withId_withBoolean_(self, raw, additionalHash, valueHandler, typeHandler, asStatic);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)base {
  ComFasterxmlJacksonDatabindJavaType_initWithComFasterxmlJacksonDatabindJavaType_(self, base);
  return self;
}

- (ComFasterxmlJacksonDatabindJavaType *)withTypeHandlerWithId:(id)h {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindJavaType *)withContentTypeHandlerWithId:(id)h {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindJavaType *)withValueHandlerWithId:(id)h {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindJavaType *)withContentValueHandlerWithId:(id)h {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindJavaType *)withHandlersFromWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)src {
  ComFasterxmlJacksonDatabindJavaType *type = self;
  id h = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(src)) getTypeHandler];
  if (h != _typeHandler_) {
    type = [type withTypeHandlerWithId:h];
  }
  h = [src getValueHandler];
  if (h != _valueHandler_) {
    type = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(type)) withValueHandlerWithId:h];
  }
  return type;
}

- (ComFasterxmlJacksonDatabindJavaType *)withContentTypeWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)contentType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindJavaType *)withStaticTyping {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindJavaType *)refineWithIOSClass:(IOSClass *)rawType
            withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)bindings
                    withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)superClass
               withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)superInterfaces {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindJavaType *)forcedNarrowByWithIOSClass:(IOSClass *)subclass {
  if (subclass == _class_) {
    return self;
  }
  return [self _narrowWithIOSClass:subclass];
}

- (ComFasterxmlJacksonDatabindJavaType *)_narrowWithIOSClass:(IOSClass *)subclass {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (IOSClass *)getRawClass {
  return _class_;
}

- (jboolean)hasRawClassWithIOSClass:(IOSClass *)clz {
  return _class_ == clz;
}

- (jboolean)hasContentType {
  return true;
}

- (jboolean)isTypeOrSubTypeOfWithIOSClass:(IOSClass *)clz {
  return (_class_ == clz) || [((IOSClass *) nil_chk(clz)) isAssignableFrom:_class_];
}

- (jboolean)isTypeOrSuperTypeOfWithIOSClass:(IOSClass *)clz {
  return (_class_ == clz) || [((IOSClass *) nil_chk(_class_)) isAssignableFrom:clz];
}

- (jboolean)isAbstract {
  return JavaLangReflectModifier_isAbstractWithInt_([((IOSClass *) nil_chk(_class_)) getModifiers]);
}

- (jboolean)isConcrete {
  jint mod = [((IOSClass *) nil_chk(_class_)) getModifiers];
  if ((mod & (JavaLangReflectModifier_INTERFACE | JavaLangReflectModifier_ABSTRACT)) == 0) {
    return true;
  }
  return [_class_ isPrimitive];
}

- (jboolean)isThrowable {
  return [JavaLangThrowable_class_() isAssignableFrom:_class_];
}

- (jboolean)isArrayType {
  return false;
}

- (jboolean)isEnumType {
  return [((IOSClass *) nil_chk(_class_)) isEnum];
}

- (jboolean)isInterface {
  return [((IOSClass *) nil_chk(_class_)) isInterface];
}

- (jboolean)isPrimitive {
  return [((IOSClass *) nil_chk(_class_)) isPrimitive];
}

- (jboolean)isFinal {
  return JavaLangReflectModifier_isFinalWithInt_([((IOSClass *) nil_chk(_class_)) getModifiers]);
}

- (jboolean)isContainerType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isCollectionLikeType {
  return false;
}

- (jboolean)isMapLikeType {
  return false;
}

- (jboolean)isJavaLangObject {
  return _class_ == NSObject_class_();
}

- (jboolean)useStaticType {
  return _asStatic_;
}

- (jboolean)hasGenericTypes {
  return [self containedTypeCount] > 0;
}

- (ComFasterxmlJacksonDatabindJavaType *)getKeyType {
  return nil;
}

- (ComFasterxmlJacksonDatabindJavaType *)getContentType {
  return nil;
}

- (ComFasterxmlJacksonDatabindJavaType *)getReferencedType {
  return nil;
}

- (jint)containedTypeCount {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindJavaType *)containedTypeWithInt:(jint)index {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)containedTypeNameWithInt:(jint)index {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (IOSClass *)getParameterSource {
  return nil;
}

- (ComFasterxmlJacksonDatabindJavaType *)containedTypeOrUnknownWithInt:(jint)index {
  ComFasterxmlJacksonDatabindJavaType *t = [self containedTypeWithInt:index];
  return (t == nil) ? ComFasterxmlJacksonDatabindTypeTypeFactory_unknownType() : t;
}

- (ComFasterxmlJacksonDatabindTypeTypeBindings *)getBindings {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindJavaType *)findSuperTypeWithIOSClass:(IOSClass *)erasedTarget {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindJavaType *)getSuperClass {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id<JavaUtilList>)getInterfaces {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (IOSObjectArray *)findTypeParametersWithIOSClass:(IOSClass *)expType {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)getValueHandler {
  return _valueHandler_;
}

- (id)getTypeHandler {
  return _typeHandler_;
}

- (id)getContentValueHandler {
  return nil;
}

- (id)getContentTypeHandler {
  return nil;
}

- (jboolean)hasValueHandler {
  return _valueHandler_ != nil;
}

- (jboolean)hasHandlers {
  return (_typeHandler_ != nil) || (_valueHandler_ != nil);
}

- (NSString *)getGenericSignature {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_initWithInt_(40);
  [self getGenericSignatureWithJavaLangStringBuilder:sb];
  return [sb description];
}

- (JavaLangStringBuilder *)getGenericSignatureWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getErasedSignature {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_initWithInt_(40);
  [self getErasedSignatureWithJavaLangStringBuilder:sb];
  return [sb description];
}

- (JavaLangStringBuilder *)getErasedSignatureWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)description {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)isEqual:(id)o {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSUInteger)hash {
  return _hash_;
}

- (NSString *)getTypeName {
  return JavaLangReflectType_getTypeName(self);
}

- (void)dealloc {
  RELEASE_(_class_);
  RELEASE_(_valueHandler_);
  RELEASE_(_typeHandler_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x4, -1, 2, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x401, 3, 4, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x401, 5, 4, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x401, 6, 4, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x401, 7, 4, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, 8, 2, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x401, 9, 2, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x401, 10, 11, -1, 12, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, 13, 14, -1, 15, 16, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x404, 17, 14, -1, 15, 18, -1 },
    { NULL, "LIOSClass;", 0x11, -1, -1, -1, 19, -1, -1 },
    { NULL, "Z", 0x11, 20, 14, -1, 21, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, 22, 14, -1, 21, -1, -1 },
    { NULL, "Z", 0x11, 23, 14, -1, 21, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x401, 24, 25, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 26, 25, -1, -1, 27, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 19, 28, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, 29, 25, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeTypeBindings;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x401, 30, 14, -1, 15, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x401, -1, -1, -1, 31, -1, -1 },
    { NULL, "[LComFasterxmlJacksonDatabindJavaType;", 0x401, 32, 14, -1, 33, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 34, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, 34, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x401, 35, 36, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x401, 37, 36, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x401, 38, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, 39, 4, -1, -1, -1, -1 },
    { NULL, "I", 0x11, 40, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:withInt:withId:withId:withBoolean:);
  methods[1].selector = @selector(initWithComFasterxmlJacksonDatabindJavaType:);
  methods[2].selector = @selector(withTypeHandlerWithId:);
  methods[3].selector = @selector(withContentTypeHandlerWithId:);
  methods[4].selector = @selector(withValueHandlerWithId:);
  methods[5].selector = @selector(withContentValueHandlerWithId:);
  methods[6].selector = @selector(withHandlersFromWithComFasterxmlJacksonDatabindJavaType:);
  methods[7].selector = @selector(withContentTypeWithComFasterxmlJacksonDatabindJavaType:);
  methods[8].selector = @selector(withStaticTyping);
  methods[9].selector = @selector(refineWithIOSClass:withComFasterxmlJacksonDatabindTypeTypeBindings:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindJavaTypeArray:);
  methods[10].selector = @selector(forcedNarrowByWithIOSClass:);
  methods[11].selector = @selector(_narrowWithIOSClass:);
  methods[12].selector = @selector(getRawClass);
  methods[13].selector = @selector(hasRawClassWithIOSClass:);
  methods[14].selector = @selector(hasContentType);
  methods[15].selector = @selector(isTypeOrSubTypeOfWithIOSClass:);
  methods[16].selector = @selector(isTypeOrSuperTypeOfWithIOSClass:);
  methods[17].selector = @selector(isAbstract);
  methods[18].selector = @selector(isConcrete);
  methods[19].selector = @selector(isThrowable);
  methods[20].selector = @selector(isArrayType);
  methods[21].selector = @selector(isEnumType);
  methods[22].selector = @selector(isInterface);
  methods[23].selector = @selector(isPrimitive);
  methods[24].selector = @selector(isFinal);
  methods[25].selector = @selector(isContainerType);
  methods[26].selector = @selector(isCollectionLikeType);
  methods[27].selector = @selector(isMapLikeType);
  methods[28].selector = @selector(isJavaLangObject);
  methods[29].selector = @selector(useStaticType);
  methods[30].selector = @selector(hasGenericTypes);
  methods[31].selector = @selector(getKeyType);
  methods[32].selector = @selector(getContentType);
  methods[33].selector = @selector(getReferencedType);
  methods[34].selector = @selector(containedTypeCount);
  methods[35].selector = @selector(containedTypeWithInt:);
  methods[36].selector = @selector(containedTypeNameWithInt:);
  methods[37].selector = @selector(getParameterSource);
  methods[38].selector = @selector(containedTypeOrUnknownWithInt:);
  methods[39].selector = @selector(getBindings);
  methods[40].selector = @selector(findSuperTypeWithIOSClass:);
  methods[41].selector = @selector(getSuperClass);
  methods[42].selector = @selector(getInterfaces);
  methods[43].selector = @selector(findTypeParametersWithIOSClass:);
  methods[44].selector = @selector(getValueHandler);
  methods[45].selector = @selector(getTypeHandler);
  methods[46].selector = @selector(getContentValueHandler);
  methods[47].selector = @selector(getContentTypeHandler);
  methods[48].selector = @selector(hasValueHandler);
  methods[49].selector = @selector(hasHandlers);
  methods[50].selector = @selector(getGenericSignature);
  methods[51].selector = @selector(getGenericSignatureWithJavaLangStringBuilder:);
  methods[52].selector = @selector(getErasedSignature);
  methods[53].selector = @selector(getErasedSignatureWithJavaLangStringBuilder:);
  methods[54].selector = @selector(description);
  methods[55].selector = @selector(isEqual:);
  methods[56].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindJavaType_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "_class_", "LIOSClass;", .constantValue.asLong = 0, 0x14, -1, -1, 41, -1 },
    { "_hash_", "I", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_valueHandler_", "LNSObject;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_typeHandler_", "LNSObject;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_asStatic_", "Z", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;ILNSObject;LNSObject;Z", "(Ljava/lang/Class<*>;ILjava/lang/Object;Ljava/lang/Object;Z)V", "LComFasterxmlJacksonDatabindJavaType;", "withTypeHandler", "LNSObject;", "withContentTypeHandler", "withValueHandler", "withContentValueHandler", "withHandlersFrom", "withContentType", "refine", "LIOSClass;LComFasterxmlJacksonDatabindTypeTypeBindings;LComFasterxmlJacksonDatabindJavaType;[LComFasterxmlJacksonDatabindJavaType;", "(Ljava/lang/Class<*>;Lcom/fasterxml/jackson/databind/type/TypeBindings;Lcom/fasterxml/jackson/databind/JavaType;[Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/JavaType;", "forcedNarrowBy", "LIOSClass;", "(Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/JavaType;", (void *)&ComFasterxmlJacksonDatabindJavaType__Annotations$0, "_narrow", (void *)&ComFasterxmlJacksonDatabindJavaType__Annotations$1, "()Ljava/lang/Class<*>;", "hasRawClass", "(Ljava/lang/Class<*>;)Z", "isTypeOrSubTypeOf", "isTypeOrSuperTypeOf", "containedType", "I", "containedTypeName", (void *)&ComFasterxmlJacksonDatabindJavaType__Annotations$2, (void *)&ComFasterxmlJacksonDatabindJavaType__Annotations$3, "containedTypeOrUnknown", "findSuperType", "()Ljava/util/List<Lcom/fasterxml/jackson/databind/JavaType;>;", "findTypeParameters", "(Ljava/lang/Class<*>;)[Lcom/fasterxml/jackson/databind/JavaType;", "<T:Ljava/lang/Object;>()TT;", "getGenericSignature", "LJavaLangStringBuilder;", "getErasedSignature", "toString", "equals", "hashCode", "Ljava/lang/Class<*>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindJavaType = { "JavaType", "com.fasterxml.jackson.databind", ptrTable, methods, fields, 7, 0x401, 57, 6, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindJavaType;
}

@end

void ComFasterxmlJacksonDatabindJavaType_initWithIOSClass_withInt_withId_withId_withBoolean_(ComFasterxmlJacksonDatabindJavaType *self, IOSClass *raw, jint additionalHash, id valueHandler, id typeHandler, jboolean asStatic) {
  ComFasterxmlJacksonCoreTypeResolvedType_init(self);
  JreStrongAssign(&self->_class_, raw);
  self->_hash_ = ((jint) [((NSString *) nil_chk([((IOSClass *) nil_chk(raw)) getName])) hash]) + additionalHash;
  JreStrongAssign(&self->_valueHandler_, valueHandler);
  JreStrongAssign(&self->_typeHandler_, typeHandler);
  self->_asStatic_ = asStatic;
}

void ComFasterxmlJacksonDatabindJavaType_initWithComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindJavaType *self, ComFasterxmlJacksonDatabindJavaType *base) {
  ComFasterxmlJacksonCoreTypeResolvedType_init(self);
  JreStrongAssign(&self->_class_, ((ComFasterxmlJacksonDatabindJavaType *) nil_chk(base))->_class_);
  self->_hash_ = base->_hash_;
  JreStrongAssign(&self->_valueHandler_, base->_valueHandler_);
  JreStrongAssign(&self->_typeHandler_, base->_typeHandler_);
  self->_asStatic_ = base->_asStatic_;
}

IOSObjectArray *ComFasterxmlJacksonDatabindJavaType__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindJavaType__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindJavaType__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindJavaType__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindJavaType)
