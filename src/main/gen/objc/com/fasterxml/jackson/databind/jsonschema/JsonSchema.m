//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/jsonschema/JsonSchema.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/annotation/JsonCreator.h"
#include "com/fasterxml/jackson/annotation/JsonValue.h"
#include "com/fasterxml/jackson/databind/JsonNode.h"
#include "com/fasterxml/jackson/databind/jsonschema/JsonSchema.h"
#include "com/fasterxml/jackson/databind/node/JsonNodeFactory.h"
#include "com/fasterxml/jackson/databind/node/ObjectNode.h"
#include "java/lang/Deprecated.h"
#include "java/lang/annotation/Annotation.h"

@interface ComFasterxmlJacksonDatabindJsonschemaJsonSchema () {
 @public
  ComFasterxmlJacksonDatabindNodeObjectNode *schema_;
}

@end

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindJsonschemaJsonSchema, schema_, ComFasterxmlJacksonDatabindNodeObjectNode *)

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindJsonschemaJsonSchema__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindJsonschemaJsonSchema__Annotations$1(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindJsonschemaJsonSchema__Annotations$2(void);

@implementation ComFasterxmlJacksonDatabindJsonschemaJsonSchema

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindNodeObjectNode:(ComFasterxmlJacksonDatabindNodeObjectNode *)schema {
  ComFasterxmlJacksonDatabindJsonschemaJsonSchema_initWithComFasterxmlJacksonDatabindNodeObjectNode_(self, schema);
  return self;
}

- (ComFasterxmlJacksonDatabindNodeObjectNode *)getSchemaNode {
  return schema_;
}

- (NSString *)description {
  return [((ComFasterxmlJacksonDatabindNodeObjectNode *) nil_chk(self->schema_)) description];
}

- (NSUInteger)hash {
  return ((jint) [((ComFasterxmlJacksonDatabindNodeObjectNode *) nil_chk(schema_)) hash]);
}

- (jboolean)isEqual:(id)o {
  if (o == self) return true;
  if (o == nil) return false;
  if (!([o isKindOfClass:[ComFasterxmlJacksonDatabindJsonschemaJsonSchema class]])) return false;
  ComFasterxmlJacksonDatabindJsonschemaJsonSchema *other = (ComFasterxmlJacksonDatabindJsonschemaJsonSchema *) cast_chk(o, [ComFasterxmlJacksonDatabindJsonschemaJsonSchema class]);
  if (schema_ == nil) {
    return other->schema_ == nil;
  }
  return [schema_ isEqual:other->schema_];
}

+ (ComFasterxmlJacksonDatabindJsonNode *)getDefaultSchemaNode {
  return ComFasterxmlJacksonDatabindJsonschemaJsonSchema_getDefaultSchemaNode();
}

- (void)dealloc {
  RELEASE_(schema_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, 1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeObjectNode;", 0x1, -1, -1, -1, -1, 2, -1 },
    { NULL, "LNSString;", 0x1, 3, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 4, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x9, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonDatabindNodeObjectNode:);
  methods[1].selector = @selector(getSchemaNode);
  methods[2].selector = @selector(description);
  methods[3].selector = @selector(hash);
  methods[4].selector = @selector(isEqual:);
  methods[5].selector = @selector(getDefaultSchemaNode);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "schema_", "LComFasterxmlJacksonDatabindNodeObjectNode;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindNodeObjectNode;", (void *)&ComFasterxmlJacksonDatabindJsonschemaJsonSchema__Annotations$0, (void *)&ComFasterxmlJacksonDatabindJsonschemaJsonSchema__Annotations$1, "toString", "hashCode", "equals", "LNSObject;", (void *)&ComFasterxmlJacksonDatabindJsonschemaJsonSchema__Annotations$2 };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindJsonschemaJsonSchema = { "JsonSchema", "com.fasterxml.jackson.databind.jsonschema", ptrTable, methods, fields, 7, 0x1, 6, 1, -1, -1, -1, -1, 7 };
  return &_ComFasterxmlJacksonDatabindJsonschemaJsonSchema;
}

@end

void ComFasterxmlJacksonDatabindJsonschemaJsonSchema_initWithComFasterxmlJacksonDatabindNodeObjectNode_(ComFasterxmlJacksonDatabindJsonschemaJsonSchema *self, ComFasterxmlJacksonDatabindNodeObjectNode *schema) {
  NSObject_init(self);
  JreStrongAssign(&self->schema_, schema);
}

ComFasterxmlJacksonDatabindJsonschemaJsonSchema *new_ComFasterxmlJacksonDatabindJsonschemaJsonSchema_initWithComFasterxmlJacksonDatabindNodeObjectNode_(ComFasterxmlJacksonDatabindNodeObjectNode *schema) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindJsonschemaJsonSchema, initWithComFasterxmlJacksonDatabindNodeObjectNode_, schema)
}

ComFasterxmlJacksonDatabindJsonschemaJsonSchema *create_ComFasterxmlJacksonDatabindJsonschemaJsonSchema_initWithComFasterxmlJacksonDatabindNodeObjectNode_(ComFasterxmlJacksonDatabindNodeObjectNode *schema) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindJsonschemaJsonSchema, initWithComFasterxmlJacksonDatabindNodeObjectNode_, schema)
}

ComFasterxmlJacksonDatabindJsonNode *ComFasterxmlJacksonDatabindJsonschemaJsonSchema_getDefaultSchemaNode() {
  ComFasterxmlJacksonDatabindJsonschemaJsonSchema_initialize();
  ComFasterxmlJacksonDatabindNodeObjectNode *objectNode = [((ComFasterxmlJacksonDatabindNodeJsonNodeFactory *) nil_chk(JreLoadStatic(ComFasterxmlJacksonDatabindNodeJsonNodeFactory, instance))) objectNode];
  [((ComFasterxmlJacksonDatabindNodeObjectNode *) nil_chk(objectNode)) putWithNSString:@"type" withNSString:@"any"];
  return objectNode;
}

IOSObjectArray *ComFasterxmlJacksonDatabindJsonschemaJsonSchema__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_ComFasterxmlJacksonAnnotationJsonCreator(JreLoadEnum(ComFasterxmlJacksonAnnotationJsonCreator_Mode, DEFAULT)) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindJsonschemaJsonSchema__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_ComFasterxmlJacksonAnnotationJsonValue(true) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindJsonschemaJsonSchema__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindJsonschemaJsonSchema)
