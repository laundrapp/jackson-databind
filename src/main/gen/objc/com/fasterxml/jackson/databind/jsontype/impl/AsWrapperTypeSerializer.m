//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeSerializer.java
//

#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/annotation/JsonTypeInfo.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/databind/BeanProperty.h"
#include "com/fasterxml/jackson/databind/jsontype/TypeIdResolver.h"
#include "com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeSerializer.h"
#include "com/fasterxml/jackson/databind/jsontype/impl/TypeSerializerBase.h"
#include "com/fasterxml/jackson/databind/util/ClassUtil.h"

@implementation ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver:(id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver>)idRes
                                        withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property {
  ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer_initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withComFasterxmlJacksonDatabindBeanProperty_(self, idRes, property);
  return self;
}

- (ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer *)forPropertyWithComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)prop {
  return (_property_ == prop) ? self : create_ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer_initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withComFasterxmlJacksonDatabindBeanProperty_(_idResolver_, prop);
}

- (ComFasterxmlJacksonAnnotationJsonTypeInfo_As *)getTypeInclusion {
  return JreLoadEnum(ComFasterxmlJacksonAnnotationJsonTypeInfo_As, WRAPPER_OBJECT);
}

- (NSString *)_validTypeIdWithNSString:(NSString *)typeId {
  return ComFasterxmlJacksonDatabindUtilClassUtil_nonNullStringWithNSString_(typeId);
}

- (void)_writeTypeIdWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
                                                withNSString:(NSString *)typeId {
  if (typeId != nil) {
    [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeTypeIdWithId:typeId];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonTypeInfo_As;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x14, 5, 6, 7, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver:withComFasterxmlJacksonDatabindBeanProperty:);
  methods[1].selector = @selector(forPropertyWithComFasterxmlJacksonDatabindBeanProperty:);
  methods[2].selector = @selector(getTypeInclusion);
  methods[3].selector = @selector(_validTypeIdWithNSString:);
  methods[4].selector = @selector(_writeTypeIdWithComFasterxmlJacksonCoreJsonGenerator:withNSString:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindJsontypeTypeIdResolver;LComFasterxmlJacksonDatabindBeanProperty;", "forProperty", "LComFasterxmlJacksonDatabindBeanProperty;", "_validTypeId", "LNSString;", "_writeTypeId", "LComFasterxmlJacksonCoreJsonGenerator;LNSString;", "LJavaIoIOException;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer = { "AsWrapperTypeSerializer", "com.fasterxml.jackson.databind.jsontype.impl", ptrTable, methods, NULL, 7, 0x1, 5, 0, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer;
}

@end

void ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer_initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withComFasterxmlJacksonDatabindBeanProperty_(ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer *self, id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver> idRes, id<ComFasterxmlJacksonDatabindBeanProperty> property) {
  ComFasterxmlJacksonDatabindJsontypeImplTypeSerializerBase_initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withComFasterxmlJacksonDatabindBeanProperty_(self, idRes, property);
}

ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer *new_ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer_initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withComFasterxmlJacksonDatabindBeanProperty_(id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver> idRes, id<ComFasterxmlJacksonDatabindBeanProperty> property) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer, initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withComFasterxmlJacksonDatabindBeanProperty_, idRes, property)
}

ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer *create_ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer_initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withComFasterxmlJacksonDatabindBeanProperty_(id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver> idRes, id<ComFasterxmlJacksonDatabindBeanProperty> property) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer, initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withComFasterxmlJacksonDatabindBeanProperty_, idRes, property)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeSerializer)
