//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/std/CalendarSerializer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdCalendarSerializer")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindSerStdCalendarSerializer
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdCalendarSerializer 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdCalendarSerializer 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindSerStdCalendarSerializer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindSerStdCalendarSerializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdCalendarSerializer || defined(INCLUDE_ComFasterxmlJacksonDatabindSerStdCalendarSerializer))
#define ComFasterxmlJacksonDatabindSerStdCalendarSerializer_

#define RESTRICT_ComFasterxmlJacksonDatabindSerStdDateTimeSerializerBase 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerStdDateTimeSerializerBase 1
#include "com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.h"

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSClass;
@class JavaLangBoolean;
@class JavaTextDateFormat;
@class JavaUtilCalendar;

/*!
 @brief Standard serializer for <code>java.util.Calendar</code>.
 As with other time/date types, is configurable to produce timestamps
  (standard Java 64-bit timestamp) or textual formats (usually ISO-8601).
 */
@interface ComFasterxmlJacksonDatabindSerStdCalendarSerializer : ComFasterxmlJacksonDatabindSerStdDateTimeSerializerBase

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithJavaLangBoolean:(JavaLangBoolean *)useTimestamp
                           withJavaTextDateFormat:(JavaTextDateFormat *)customFormat;

- (void)serializeWithId:(JavaUtilCalendar *)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

- (ComFasterxmlJacksonDatabindSerStdCalendarSerializer *)withFormatWithJavaLangBoolean:(JavaLangBoolean *)timestamp
                                                                withJavaTextDateFormat:(JavaTextDateFormat *)customFormat;

#pragma mark Protected

- (jlong)_timestampWithId:(JavaUtilCalendar *)value;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0
                       withJavaLangBoolean:(JavaLangBoolean *)arg1
                    withJavaTextDateFormat:(JavaTextDateFormat *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonDatabindSerStdCalendarSerializer)

inline ComFasterxmlJacksonDatabindSerStdCalendarSerializer *ComFasterxmlJacksonDatabindSerStdCalendarSerializer_get_instance(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdCalendarSerializer *ComFasterxmlJacksonDatabindSerStdCalendarSerializer_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindSerStdCalendarSerializer, instance, ComFasterxmlJacksonDatabindSerStdCalendarSerializer *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdCalendarSerializer_init(ComFasterxmlJacksonDatabindSerStdCalendarSerializer *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdCalendarSerializer *new_ComFasterxmlJacksonDatabindSerStdCalendarSerializer_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdCalendarSerializer *create_ComFasterxmlJacksonDatabindSerStdCalendarSerializer_init(void);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdCalendarSerializer_initWithJavaLangBoolean_withJavaTextDateFormat_(ComFasterxmlJacksonDatabindSerStdCalendarSerializer *self, JavaLangBoolean *useTimestamp, JavaTextDateFormat *customFormat);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdCalendarSerializer *new_ComFasterxmlJacksonDatabindSerStdCalendarSerializer_initWithJavaLangBoolean_withJavaTextDateFormat_(JavaLangBoolean *useTimestamp, JavaTextDateFormat *customFormat) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdCalendarSerializer *create_ComFasterxmlJacksonDatabindSerStdCalendarSerializer_initWithJavaLangBoolean_withJavaTextDateFormat_(JavaLangBoolean *useTimestamp, JavaTextDateFormat *customFormat);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerStdCalendarSerializer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdCalendarSerializer")
