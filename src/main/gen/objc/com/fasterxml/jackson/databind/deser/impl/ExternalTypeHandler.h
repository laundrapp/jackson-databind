//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/deser/impl/ExternalTypeHandler.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler || defined(INCLUDE_ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler))
#define ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_

@class ComFasterxmlJacksonCoreJsonParser;
@class ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_Builder;
@class ComFasterxmlJacksonDatabindDeserImplPropertyBasedCreator;
@class ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer;
@class ComFasterxmlJacksonDatabindDeserializationContext;
@class ComFasterxmlJacksonDatabindJavaType;
@class IOSObjectArray;
@protocol JavaUtilMap;

/*!
 @brief Helper class that is used to flatten JSON structure when using
  "external type id" (see <code>com.fasterxml.jackson.annotation.JsonTypeInfo.As</code>).
 This is needed to store temporary state and buffer tokens, as the structure is
  rearranged a bit so that actual type deserializer can resolve type and 
  finalize deserialization.
 */
@interface ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler : NSObject

#pragma mark Public

/*!
 @since 2.9
 */
+ (ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_Builder *)builderWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)beanType;

/*!
 @brief Method called after JSON Object closes, and has to ensure that all external
  type ids have been handled.
 */
- (id)completeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                             withId:(id)bean;

/*!
 @brief Variant called when creation of the POJO involves buffering of creator properties
  as well as property-based creator.
 */
- (id)completeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
withComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer:(ComFasterxmlJacksonDatabindDeserImplPropertyValueBuffer *)buffer
withComFasterxmlJacksonDatabindDeserImplPropertyBasedCreator:(ComFasterxmlJacksonDatabindDeserImplPropertyBasedCreator *)creator;

/*!
 @brief Method called to ask handler to handle value of given property,
  at point where parser points to the first token of the value.
 Handling can mean either resolving type id it contains (if it matches type
  property name), or by buffering the value for further use.
 @return True, if the given property was properly handled
 */
- (jboolean)handlePropertyValueWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
               withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                        withNSString:(NSString *)propName
                                                              withId:(id)bean;

/*!
 @brief Method called to see if given property/value pair is an external type
  id; and if so handle it.This is <b>only</b> to be called in case
  containing POJO has similarly named property as the external type id AND
  value is of scalar type:
  otherwise <code>handlePropertyValue</code> should be called instead.
 */
- (jboolean)handleTypePropertyValueWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                   withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                            withNSString:(NSString *)propName
                                                                  withId:(id)bean;

/*!
 @brief Method called to start collection process by creating non-blueprint
  instances.
 */
- (ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler *)start;

#pragma mark Protected

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindDeserImplExternalTypeHandler:(ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler *)h;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)beanType
withComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_ExtTypedPropertyArray:(IOSObjectArray *)properties
                                                      withJavaUtilMap:(id<JavaUtilMap>)nameToPropertyIndex
                                                    withNSStringArray:(IOSObjectArray *)typeIds
                  withComFasterxmlJacksonDatabindUtilTokenBufferArray:(IOSObjectArray *)tokens;

- (id)_deserializeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
  withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                withInt:(jint)index
                                           withNSString:(NSString *)typeId;

- (void)_deserializeAndSetWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
          withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                         withId:(id)bean
                                                        withInt:(jint)index
                                                   withNSString:(NSString *)typeId;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_ExtTypedPropertyArray_withJavaUtilMap_withNSStringArray_withComFasterxmlJacksonDatabindUtilTokenBufferArray_(ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler *self, ComFasterxmlJacksonDatabindJavaType *beanType, IOSObjectArray *properties, id<JavaUtilMap> nameToPropertyIndex, IOSObjectArray *typeIds, IOSObjectArray *tokens);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler *new_ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_ExtTypedPropertyArray_withJavaUtilMap_withNSStringArray_withComFasterxmlJacksonDatabindUtilTokenBufferArray_(ComFasterxmlJacksonDatabindJavaType *beanType, IOSObjectArray *properties, id<JavaUtilMap> nameToPropertyIndex, IOSObjectArray *typeIds, IOSObjectArray *tokens) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler *create_ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_ExtTypedPropertyArray_withJavaUtilMap_withNSStringArray_withComFasterxmlJacksonDatabindUtilTokenBufferArray_(ComFasterxmlJacksonDatabindJavaType *beanType, IOSObjectArray *properties, id<JavaUtilMap> nameToPropertyIndex, IOSObjectArray *typeIds, IOSObjectArray *tokens);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_initWithComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_(ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler *self, ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler *h);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler *new_ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_initWithComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_(ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler *h) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler *create_ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_initWithComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_(ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler *h);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_Builder *ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_builderWithComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindJavaType *beanType);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler)

#endif

#if !defined (ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_Builder_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler || defined(INCLUDE_ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_Builder))
#define ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_Builder_

@class ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap;
@class ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler;
@class ComFasterxmlJacksonDatabindDeserSettableBeanProperty;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsontypeTypeDeserializer;

@interface ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_Builder : NSObject

#pragma mark Public

- (void)addExternalWithComFasterxmlJacksonDatabindDeserSettableBeanProperty:(ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)property
                    withComFasterxmlJacksonDatabindJsontypeTypeDeserializer:(ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *)typeDeser;

/*!
 @brief Method called after all external properties have been assigned, to further
  link property with polymorphic value with possible property for type id
  itself.This is needed to support type ids as Creator properties.
 @since 2.8
 */
- (ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler *)buildWithComFasterxmlJacksonDatabindDeserImplBeanPropertyMap:(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *)otherProps;

#pragma mark Protected

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)t;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_Builder)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_Builder_initWithComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_Builder *self, ComFasterxmlJacksonDatabindJavaType *t);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_Builder *new_ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_Builder_initWithComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindJavaType *t) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_Builder *create_ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_Builder_initWithComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindJavaType *t);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler_Builder)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserImplExternalTypeHandler")
