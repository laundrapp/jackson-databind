//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/module/SimpleSerializers.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindModuleSimpleSerializers")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindModuleSimpleSerializers
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindModuleSimpleSerializers 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindModuleSimpleSerializers 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindModuleSimpleSerializers

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindModuleSimpleSerializers_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindModuleSimpleSerializers || defined(INCLUDE_ComFasterxmlJacksonDatabindModuleSimpleSerializers))
#define ComFasterxmlJacksonDatabindModuleSimpleSerializers_

#define RESTRICT_ComFasterxmlJacksonDatabindSerSerializers 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerSerializers_Base 1
#include "com/fasterxml/jackson/databind/ser/Serializers.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class ComFasterxmlJacksonDatabindBeanDescription;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsonSerializer;
@class ComFasterxmlJacksonDatabindJsontypeTypeSerializer;
@class ComFasterxmlJacksonDatabindSerializationConfig;
@class ComFasterxmlJacksonDatabindTypeArrayType;
@class ComFasterxmlJacksonDatabindTypeClassKey;
@class ComFasterxmlJacksonDatabindTypeCollectionLikeType;
@class ComFasterxmlJacksonDatabindTypeCollectionType;
@class ComFasterxmlJacksonDatabindTypeMapLikeType;
@class ComFasterxmlJacksonDatabindTypeMapType;
@class IOSClass;
@class JavaUtilHashMap;
@protocol JavaUtilList;

/*!
 @brief Simple implementation <code>Serializers</code> which allows registration of
  serializers based on raw (type erased class).
 It can work well for basic bean and scalar type serializers, but is not
  a good fit for handling generic types (like <code>Map</code>s and <code>Collection</code>s).
 <p>
  Type registrations are assumed to be general; meaning that registration of serializer
  for a super type will also be used for handling subtypes, unless an exact match
  is found first. As an example, handler for <code>CharSequence</code> would also be used
  serializing <code>StringBuilder</code> instances, unless a direct mapping was found.
 */
@interface ComFasterxmlJacksonDatabindModuleSimpleSerializers : ComFasterxmlJacksonDatabindSerSerializers_Base < JavaIoSerializable > {
 @public
  /*!
   @brief Class-based mappings that are used both for exact and
  sub-class matches.
   */
  JavaUtilHashMap *_classMappings_;
  /*!
   @brief Interface-based matches.
   */
  JavaUtilHashMap *_interfaceMappings_;
  /*!
   @brief Flag to help find "generic" enum serializer, if one has been registered.
   @since 2.3
   */
  jboolean _hasEnumSerializer_;
}

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @since 2.1
 */
- (instancetype __nonnull)initWithJavaUtilList:(id<JavaUtilList>)sers;

- (void)addSerializerWithIOSClass:(IOSClass *)type
withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)ser;

/*!
 @brief Method for adding given serializer for type that <code>JsonSerializer.handledType</code>
  specifies (which MUST return a non-null class; and can NOT be <code>Object</code>, as a
  sanity check).
 For serializers that do not declare handled type, use the variant that takes
  two arguments.
 @param ser
 */
- (void)addSerializerWithComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)ser;

/*!
 @since 2.1
 */
- (void)addSerializersWithJavaUtilList:(id<JavaUtilList>)sers;

- (ComFasterxmlJacksonDatabindJsonSerializer *)findArraySerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                        withComFasterxmlJacksonDatabindTypeArrayType:(ComFasterxmlJacksonDatabindTypeArrayType *)type
                                                                      withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                               withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)elementTypeSerializer
                                                                       withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)elementValueSerializer;

- (ComFasterxmlJacksonDatabindJsonSerializer *)findCollectionLikeSerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                        withComFasterxmlJacksonDatabindTypeCollectionLikeType:(ComFasterxmlJacksonDatabindTypeCollectionLikeType *)type
                                                                               withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                        withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)elementTypeSerializer
                                                                                withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)elementValueSerializer;

- (ComFasterxmlJacksonDatabindJsonSerializer *)findCollectionSerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                        withComFasterxmlJacksonDatabindTypeCollectionType:(ComFasterxmlJacksonDatabindTypeCollectionType *)type
                                                                           withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                    withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)elementTypeSerializer
                                                                            withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)elementValueSerializer;

- (ComFasterxmlJacksonDatabindJsonSerializer *)findMapLikeSerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                        withComFasterxmlJacksonDatabindTypeMapLikeType:(ComFasterxmlJacksonDatabindTypeMapLikeType *)type
                                                                        withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                         withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)keySerializer
                                                                 withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)elementTypeSerializer
                                                                         withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)elementValueSerializer;

- (ComFasterxmlJacksonDatabindJsonSerializer *)findMapSerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                        withComFasterxmlJacksonDatabindTypeMapType:(ComFasterxmlJacksonDatabindTypeMapType *)type
                                                                    withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                     withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)keySerializer
                                                             withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)elementTypeSerializer
                                                                     withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)elementValueSerializer;

- (ComFasterxmlJacksonDatabindJsonSerializer *)findSerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                        withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                                 withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc;

#pragma mark Protected

- (void)_addSerializerWithIOSClass:(IOSClass *)cls
withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)ser;

- (ComFasterxmlJacksonDatabindJsonSerializer *)_findInterfaceMappingWithIOSClass:(IOSClass *)cls
                                     withComFasterxmlJacksonDatabindTypeClassKey:(ComFasterxmlJacksonDatabindTypeClassKey *)key;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindModuleSimpleSerializers)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindModuleSimpleSerializers, _classMappings_, JavaUtilHashMap *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindModuleSimpleSerializers, _interfaceMappings_, JavaUtilHashMap *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindModuleSimpleSerializers_init(ComFasterxmlJacksonDatabindModuleSimpleSerializers *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindModuleSimpleSerializers *new_ComFasterxmlJacksonDatabindModuleSimpleSerializers_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindModuleSimpleSerializers *create_ComFasterxmlJacksonDatabindModuleSimpleSerializers_init(void);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindModuleSimpleSerializers_initWithJavaUtilList_(ComFasterxmlJacksonDatabindModuleSimpleSerializers *self, id<JavaUtilList> sers);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindModuleSimpleSerializers *new_ComFasterxmlJacksonDatabindModuleSimpleSerializers_initWithJavaUtilList_(id<JavaUtilList> sers) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindModuleSimpleSerializers *create_ComFasterxmlJacksonDatabindModuleSimpleSerializers_initWithJavaUtilList_(id<JavaUtilList> sers);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindModuleSimpleSerializers)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindModuleSimpleSerializers")
