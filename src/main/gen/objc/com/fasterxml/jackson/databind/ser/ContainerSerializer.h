//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/ContainerSerializer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerContainerSerializer")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindSerContainerSerializer
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerContainerSerializer 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerContainerSerializer 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindSerContainerSerializer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindSerContainerSerializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerContainerSerializer || defined(INCLUDE_ComFasterxmlJacksonDatabindSerContainerSerializer))
#define ComFasterxmlJacksonDatabindSerContainerSerializer_

#define RESTRICT_ComFasterxmlJacksonDatabindSerStdStdSerializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerStdStdSerializer 1
#include "com/fasterxml/jackson/databind/ser/std/StdSerializer.h"

@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsonSerializer;
@class ComFasterxmlJacksonDatabindJsontypeTypeSerializer;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSClass;
@protocol ComFasterxmlJacksonDatabindBeanProperty;

/*!
 @brief Intermediate base class for serializers used for serializing
  types that contain element(s) of other types, such as arrays, 
 <code>java.util.Collection</code>s (<code>Lists</code>, <code>Sets</code>
  etc) and <code>java.util.Map</code>s and iterable things
  (<code>java.util.Iterator</code>s).
 */
@interface ComFasterxmlJacksonDatabindSerContainerSerializer : ComFasterxmlJacksonDatabindSerStdStdSerializer

#pragma mark Public

/*!
 @brief Accessor for serializer used for serializing contents
  (List and array elements, Map values etc) of the
  container for which this serializer is used, if it is
  known statically.
 Note that for dynamic types this may return null; if so,
  caller has to instead use <code>getContentType()</code> and 
 <code>com.fasterxml.jackson.databind.SerializerProvider</code>.
 */
- (ComFasterxmlJacksonDatabindJsonSerializer *)getContentSerializer;

/*!
 @brief Accessor for finding declared (static) element type for
  type this serializer is used for.
 */
- (ComFasterxmlJacksonDatabindJavaType *)getContentType;

/*!
 @brief Method called to determine if the given value (of type handled by
  this serializer) contains exactly one element.
 <p>
  Note: although it might seem sensible to instead define something
  like "getElementCount()" method, this would not work well for
  containers that do not keep track of size (like linked lists may
  not).
 <p>
  Note, too, that as of now (2.9) this method is only called by serializer
  itself; and specifically is not used for non-array/collection types
  like <code>Map</code> or <code>Map.Entry</code> instances.
 */
- (jboolean)hasSingleElementWithId:(id)value;

/*!
 @brief Factory(-like) method that can be used to construct a new container
  serializer that uses specified <code>TypeSerializer</code> for decorating
  contained values with additional type information.
 @param vts Type serializer to use for contained values; can be null,     in which case 'this' serializer is returned as is
 @return Serializer instance that uses given type serializer for values if
     that is possible (or if not, just 'this' serializer)
 */
- (ComFasterxmlJacksonDatabindSerContainerSerializer *)withValueTypeSerializerWithComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)vts;

#pragma mark Protected

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)t;

/*!
 @brief Alternate constructor that is (alas!)
 needed to work
  around kinks of generic type handling
 @param t
 */
- (instancetype __nonnull)initWithIOSClass:(IOSClass *)t
                               withBoolean:(jboolean)dummy;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindSerContainerSerializer:(ComFasterxmlJacksonDatabindSerContainerSerializer *)src;

/*!
 @since 2.5
 */
- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)fullType;

/*!
 @brief Method that needs to be implemented to allow construction of a new
  serializer object with given <code>TypeSerializer</code>, used when
  addition type information is to be embedded.
 */
- (ComFasterxmlJacksonDatabindSerContainerSerializer *)_withValueTypeSerializerWithComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)vts;

/*!
 @brief Helper method used to encapsulate logic for determining whether there is
  a property annotation that overrides element type; if so, we can
  and need to statically find the serializer.
 @since 2.1
 */
- (jboolean)hasContentTypeAnnotationWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                          withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindSerContainerSerializer)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerContainerSerializer_initWithIOSClass_(ComFasterxmlJacksonDatabindSerContainerSerializer *self, IOSClass *t);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerContainerSerializer_initWithComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindSerContainerSerializer *self, ComFasterxmlJacksonDatabindJavaType *fullType);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerContainerSerializer_initWithIOSClass_withBoolean_(ComFasterxmlJacksonDatabindSerContainerSerializer *self, IOSClass *t, jboolean dummy);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerContainerSerializer_initWithComFasterxmlJacksonDatabindSerContainerSerializer_(ComFasterxmlJacksonDatabindSerContainerSerializer *self, ComFasterxmlJacksonDatabindSerContainerSerializer *src);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerContainerSerializer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerContainerSerializer")
