//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/node/JsonNodeType.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/databind/node/JsonNodeType.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"

__attribute__((unused)) static void ComFasterxmlJacksonDatabindNodeJsonNodeType_initWithNSString_withInt_(ComFasterxmlJacksonDatabindNodeJsonNodeType *self, NSString *__name, jint __ordinal);

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindNodeJsonNodeType)

ComFasterxmlJacksonDatabindNodeJsonNodeType *ComFasterxmlJacksonDatabindNodeJsonNodeType_values_[9];

@implementation ComFasterxmlJacksonDatabindNodeJsonNodeType

+ (IOSObjectArray *)values {
  return ComFasterxmlJacksonDatabindNodeJsonNodeType_values();
}

+ (ComFasterxmlJacksonDatabindNodeJsonNodeType *)valueOfWithNSString:(NSString *)name {
  return ComFasterxmlJacksonDatabindNodeJsonNodeType_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LComFasterxmlJacksonDatabindNodeJsonNodeType;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeJsonNodeType;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ARRAY", "LComFasterxmlJacksonDatabindNodeJsonNodeType;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "BINARY", "LComFasterxmlJacksonDatabindNodeJsonNodeType;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "BOOLEAN", "LComFasterxmlJacksonDatabindNodeJsonNodeType;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "MISSING", "LComFasterxmlJacksonDatabindNodeJsonNodeType;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "NULL", "LComFasterxmlJacksonDatabindNodeJsonNodeType;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "NUMBER", "LComFasterxmlJacksonDatabindNodeJsonNodeType;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "OBJECT", "LComFasterxmlJacksonDatabindNodeJsonNodeType;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
    { "POJO", "LComFasterxmlJacksonDatabindNodeJsonNodeType;", .constantValue.asLong = 0, 0x4019, -1, 9, -1, -1 },
    { "STRING", "LComFasterxmlJacksonDatabindNodeJsonNodeType;", .constantValue.asLong = 0, 0x4019, -1, 10, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(ComFasterxmlJacksonDatabindNodeJsonNodeType, ARRAY), &JreEnum(ComFasterxmlJacksonDatabindNodeJsonNodeType, BINARY), &JreEnum(ComFasterxmlJacksonDatabindNodeJsonNodeType, BOOLEAN), &JreEnum(ComFasterxmlJacksonDatabindNodeJsonNodeType, MISSING), &JreEnum(ComFasterxmlJacksonDatabindNodeJsonNodeType, NULL), &JreEnum(ComFasterxmlJacksonDatabindNodeJsonNodeType, NUMBER), &JreEnum(ComFasterxmlJacksonDatabindNodeJsonNodeType, OBJECT), &JreEnum(ComFasterxmlJacksonDatabindNodeJsonNodeType, POJO), &JreEnum(ComFasterxmlJacksonDatabindNodeJsonNodeType, STRING), "Ljava/lang/Enum<Lcom/fasterxml/jackson/databind/node/JsonNodeType;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindNodeJsonNodeType = { "JsonNodeType", "com.fasterxml.jackson.databind.node", ptrTable, methods, fields, 7, 0x4011, 2, 9, -1, -1, -1, 11, -1 };
  return &_ComFasterxmlJacksonDatabindNodeJsonNodeType;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindNodeJsonNodeType class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 9 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 9; i++) {
      ((void)(ComFasterxmlJacksonDatabindNodeJsonNodeType_values_[i] = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
      ComFasterxmlJacksonDatabindNodeJsonNodeType_initWithNSString_withInt_(e, JreEnumConstantName(ComFasterxmlJacksonDatabindNodeJsonNodeType_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindNodeJsonNodeType)
  }
}

@end

void ComFasterxmlJacksonDatabindNodeJsonNodeType_initWithNSString_withInt_(ComFasterxmlJacksonDatabindNodeJsonNodeType *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *ComFasterxmlJacksonDatabindNodeJsonNodeType_values() {
  ComFasterxmlJacksonDatabindNodeJsonNodeType_initialize();
  return [IOSObjectArray arrayWithObjects:ComFasterxmlJacksonDatabindNodeJsonNodeType_values_ count:9 type:ComFasterxmlJacksonDatabindNodeJsonNodeType_class_()];
}

ComFasterxmlJacksonDatabindNodeJsonNodeType *ComFasterxmlJacksonDatabindNodeJsonNodeType_valueOfWithNSString_(NSString *name) {
  ComFasterxmlJacksonDatabindNodeJsonNodeType_initialize();
  for (int i = 0; i < 9; i++) {
    ComFasterxmlJacksonDatabindNodeJsonNodeType *e = ComFasterxmlJacksonDatabindNodeJsonNodeType_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComFasterxmlJacksonDatabindNodeJsonNodeType *ComFasterxmlJacksonDatabindNodeJsonNodeType_fromOrdinal(NSUInteger ordinal) {
  ComFasterxmlJacksonDatabindNodeJsonNodeType_initialize();
  if (ordinal >= 9) {
    return nil;
  }
  return ComFasterxmlJacksonDatabindNodeJsonNodeType_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindNodeJsonNodeType)
