//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/introspect/AnnotationMap.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindIntrospectAnnotationMap")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindIntrospectAnnotationMap
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindIntrospectAnnotationMap 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindIntrospectAnnotationMap 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindIntrospectAnnotationMap

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindIntrospectAnnotationMap_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindIntrospectAnnotationMap || defined(INCLUDE_ComFasterxmlJacksonDatabindIntrospectAnnotationMap))
#define ComFasterxmlJacksonDatabindIntrospectAnnotationMap_

#define RESTRICT_ComFasterxmlJacksonDatabindUtilAnnotations 1
#define INCLUDE_ComFasterxmlJacksonDatabindUtilAnnotations 1
#include "com/fasterxml/jackson/databind/util/Annotations.h"

@class IOSClass;
@class IOSObjectArray;
@class JavaUtilHashMap;
@protocol JavaLangAnnotationAnnotation;
@protocol JavaLangIterable;

/*!
 @brief Simple helper class used to keep track of collection of
  Jackson Annotations associated with annotatable things
  (methods, constructors, classes).
 Note that only Jackson-owned annotations are tracked (for now?).
 */
@interface ComFasterxmlJacksonDatabindIntrospectAnnotationMap : NSObject < ComFasterxmlJacksonDatabindUtilAnnotations > {
 @public
  JavaUtilHashMap *_annotations_;
}

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @brief Method called to add specified annotation in the Map.
 @return True if the addition changed the contents, that is, this map did not
    already have specified annotation
 */
- (jboolean)addWithJavaLangAnnotationAnnotation:(id<JavaLangAnnotationAnnotation>)ann;

/*!
 @brief Method called to add specified annotation in the Map, but
  only if it didn't yet exist.
 */
- (jboolean)addIfNotPresentWithJavaLangAnnotationAnnotation:(id<JavaLangAnnotationAnnotation>)ann;

/*!
 @since 2.3
 */
- (id<JavaLangIterable>)annotations;

- (id<JavaLangAnnotationAnnotation>)getWithIOSClass:(IOSClass *)cls;

- (jboolean)hasWithIOSClass:(IOSClass *)cls;

/*!
 @brief Helper method that can be used for a "bulk" check to see if at least
  one of given annotation types is included within this map.
 @since 2.7
 */
- (jboolean)hasOneOfWithIOSClassArray:(IOSObjectArray *)annoClasses;

+ (ComFasterxmlJacksonDatabindIntrospectAnnotationMap *)mergeWithComFasterxmlJacksonDatabindIntrospectAnnotationMap:(ComFasterxmlJacksonDatabindIntrospectAnnotationMap *)primary
                                                             withComFasterxmlJacksonDatabindIntrospectAnnotationMap:(ComFasterxmlJacksonDatabindIntrospectAnnotationMap *)secondary;

+ (ComFasterxmlJacksonDatabindIntrospectAnnotationMap *)ofWithIOSClass:(IOSClass *)type
                                      withJavaLangAnnotationAnnotation:(id<JavaLangAnnotationAnnotation>)value;

- (jint)size;

- (NSString *)description;

#pragma mark Protected

- (jboolean)_addWithJavaLangAnnotationAnnotation:(id<JavaLangAnnotationAnnotation>)ann;

#pragma mark Package-Private

- (instancetype __nonnull)initWithJavaUtilHashMap:(JavaUtilHashMap *)a;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindIntrospectAnnotationMap)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindIntrospectAnnotationMap, _annotations_, JavaUtilHashMap *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindIntrospectAnnotationMap_init(ComFasterxmlJacksonDatabindIntrospectAnnotationMap *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindIntrospectAnnotationMap *new_ComFasterxmlJacksonDatabindIntrospectAnnotationMap_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindIntrospectAnnotationMap *create_ComFasterxmlJacksonDatabindIntrospectAnnotationMap_init(void);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindIntrospectAnnotationMap *ComFasterxmlJacksonDatabindIntrospectAnnotationMap_ofWithIOSClass_withJavaLangAnnotationAnnotation_(IOSClass *type, id<JavaLangAnnotationAnnotation> value);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindIntrospectAnnotationMap_initWithJavaUtilHashMap_(ComFasterxmlJacksonDatabindIntrospectAnnotationMap *self, JavaUtilHashMap *a);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindIntrospectAnnotationMap *new_ComFasterxmlJacksonDatabindIntrospectAnnotationMap_initWithJavaUtilHashMap_(JavaUtilHashMap *a) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindIntrospectAnnotationMap *create_ComFasterxmlJacksonDatabindIntrospectAnnotationMap_initWithJavaUtilHashMap_(JavaUtilHashMap *a);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindIntrospectAnnotationMap *ComFasterxmlJacksonDatabindIntrospectAnnotationMap_mergeWithComFasterxmlJacksonDatabindIntrospectAnnotationMap_withComFasterxmlJacksonDatabindIntrospectAnnotationMap_(ComFasterxmlJacksonDatabindIntrospectAnnotationMap *primary, ComFasterxmlJacksonDatabindIntrospectAnnotationMap *secondary);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindIntrospectAnnotationMap)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindIntrospectAnnotationMap")
