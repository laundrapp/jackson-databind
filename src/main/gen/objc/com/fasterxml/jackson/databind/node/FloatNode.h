//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/node/FloatNode.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeFloatNode")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindNodeFloatNode
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeFloatNode 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeFloatNode 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindNodeFloatNode

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindNodeFloatNode_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeFloatNode || defined(INCLUDE_ComFasterxmlJacksonDatabindNodeFloatNode))
#define ComFasterxmlJacksonDatabindNodeFloatNode_

#define RESTRICT_ComFasterxmlJacksonDatabindNodeNumericNode 1
#define INCLUDE_ComFasterxmlJacksonDatabindNodeNumericNode 1
#include "com/fasterxml/jackson/databind/node/NumericNode.h"

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonCoreJsonParser_NumberType;
@class ComFasterxmlJacksonCoreJsonToken;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class JavaMathBigDecimal;
@class JavaMathBigInteger;

/*!
 @brief <code>JsonNode</code> implementation for efficiently containing 32-bit
  `float` values.
 @since 2.2
 */
@interface ComFasterxmlJacksonDatabindNodeFloatNode : ComFasterxmlJacksonDatabindNodeNumericNode {
 @public
  jfloat _value_;
}

#pragma mark Public

- (instancetype __nonnull)initWithFloat:(jfloat)v;

- (NSString *)asText;

- (ComFasterxmlJacksonCoreJsonToken *)asToken;

- (JavaMathBigInteger *)bigIntegerValue;

- (jboolean)canConvertToInt;

- (jboolean)canConvertToLong;

- (JavaMathBigDecimal *)decimalValue;

- (jdouble)doubleValue;

- (jboolean)isEqual:(id)o;

- (jfloat)floatValue;

- (NSUInteger)hash;

- (jint)intValue;

- (jboolean)isFloat;

- (jboolean)isFloatingPointNumber;

- (jboolean)isNaN;

- (jlong)longValue;

- (ComFasterxmlJacksonCoreJsonParser_NumberType *)numberType;

- (NSNumber *)numberValue;

- (void)serializeWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
        withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

- (jshort)shortValue;

+ (ComFasterxmlJacksonDatabindNodeFloatNode *)valueOfWithFloat:(jfloat)v;

#pragma mark Package-Private

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindNodeFloatNode)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindNodeFloatNode_initWithFloat_(ComFasterxmlJacksonDatabindNodeFloatNode *self, jfloat v);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeFloatNode *new_ComFasterxmlJacksonDatabindNodeFloatNode_initWithFloat_(jfloat v) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeFloatNode *create_ComFasterxmlJacksonDatabindNodeFloatNode_initWithFloat_(jfloat v);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeFloatNode *ComFasterxmlJacksonDatabindNodeFloatNode_valueOfWithFloat_(jfloat v);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindNodeFloatNode)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeFloatNode")
