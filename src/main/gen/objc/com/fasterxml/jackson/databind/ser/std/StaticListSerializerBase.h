//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/std/StaticListSerializerBase.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdStaticListSerializerBase")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindSerStdStaticListSerializerBase
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdStaticListSerializerBase 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdStaticListSerializerBase 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindSerStdStaticListSerializerBase

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindSerStdStaticListSerializerBase_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdStaticListSerializerBase || defined(INCLUDE_ComFasterxmlJacksonDatabindSerStdStaticListSerializerBase))
#define ComFasterxmlJacksonDatabindSerStdStaticListSerializerBase_

#define RESTRICT_ComFasterxmlJacksonDatabindSerStdStdSerializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerStdStdSerializer 1
#include "com/fasterxml/jackson/databind/ser/std/StdSerializer.h"

#define RESTRICT_ComFasterxmlJacksonDatabindSerContextualSerializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerContextualSerializer 1
#include "com/fasterxml/jackson/databind/ser/ContextualSerializer.h"

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsonNode;
@class ComFasterxmlJacksonDatabindJsonSerializer;
@class ComFasterxmlJacksonDatabindJsontypeTypeSerializer;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSClass;
@class JavaLangBoolean;
@protocol ComFasterxmlJacksonDatabindBeanProperty;
@protocol ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonArrayFormatVisitor;
@protocol ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;
@protocol JavaLangReflectType;
@protocol JavaUtilCollection;

/*!
 @brief Intermediate base class for Lists, Collections and Arrays
  that contain static (non-dynamic) value types.
 */
@interface ComFasterxmlJacksonDatabindSerStdStaticListSerializerBase : ComFasterxmlJacksonDatabindSerStdStdSerializer < ComFasterxmlJacksonDatabindSerContextualSerializer > {
 @public
  /*!
   @brief Setting for specific local override for "unwrap single element arrays":
  true for enable unwrapping, false for preventing it, `null` for using
  global configuration.
   @since 2.6
   */
  JavaLangBoolean *_unwrapSingle_;
}

#pragma mark Public

/*!
 @since 2.9
 */
- (ComFasterxmlJacksonDatabindJsonSerializer *)_withResolvedWithComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)prop
                                                                                    withJavaLangBoolean:(JavaLangBoolean *)unwrapSingle;

- (void)acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint;

- (ComFasterxmlJacksonDatabindJsonSerializer *)createContextualWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)serializers
                                                                     withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property;

- (ComFasterxmlJacksonDatabindJsonNode *)getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                            withJavaLangReflectType:(id<JavaLangReflectType>)typeHint;

- (jboolean)isEmptyWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                              withId:(id<JavaUtilCollection>)value;

- (void)serializeWithTypeWithId:(id<JavaUtilCollection>)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer;

#pragma mark Protected

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)cls;

/*!
 @since 2.9
 */
- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindSerStdStaticListSerializerBase:(ComFasterxmlJacksonDatabindSerStdStaticListSerializerBase *)src
                                                                        withJavaLangBoolean:(JavaLangBoolean *)unwrapSingle;

- (void)acceptContentVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonArrayFormatVisitor:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonArrayFormatVisitor>)visitor;

- (ComFasterxmlJacksonDatabindJsonNode *)contentSchema;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindSerStdStaticListSerializerBase)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindSerStdStaticListSerializerBase, _unwrapSingle_, JavaLangBoolean *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdStaticListSerializerBase_initWithIOSClass_(ComFasterxmlJacksonDatabindSerStdStaticListSerializerBase *self, IOSClass *cls);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdStaticListSerializerBase_initWithComFasterxmlJacksonDatabindSerStdStaticListSerializerBase_withJavaLangBoolean_(ComFasterxmlJacksonDatabindSerStdStaticListSerializerBase *self, ComFasterxmlJacksonDatabindSerStdStaticListSerializerBase *src, JavaLangBoolean *unwrapSingle);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerStdStaticListSerializerBase)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdStaticListSerializerBase")
