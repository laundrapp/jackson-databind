//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/node/BinaryNode.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/Base64Variant.h"
#include "com/fasterxml/jackson/core/Base64Variants.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/core/JsonToken.h"
#include "com/fasterxml/jackson/databind/SerializationConfig.h"
#include "com/fasterxml/jackson/databind/SerializerProvider.h"
#include "com/fasterxml/jackson/databind/node/BinaryNode.h"
#include "com/fasterxml/jackson/databind/node/JsonNodeType.h"
#include "com/fasterxml/jackson/databind/node/ValueNode.h"
#include "java/lang/System.h"
#include "java/util/Arrays.h"

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindNodeBinaryNode)

ComFasterxmlJacksonDatabindNodeBinaryNode *ComFasterxmlJacksonDatabindNodeBinaryNode_EMPTY_BINARY_NODE;

@implementation ComFasterxmlJacksonDatabindNodeBinaryNode

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)data {
  ComFasterxmlJacksonDatabindNodeBinaryNode_initWithByteArray_(self, data);
  return self;
}

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)data
                                    withInt:(jint)offset
                                    withInt:(jint)length {
  ComFasterxmlJacksonDatabindNodeBinaryNode_initWithByteArray_withInt_withInt_(self, data, offset, length);
  return self;
}

+ (ComFasterxmlJacksonDatabindNodeBinaryNode *)valueOfWithByteArray:(IOSByteArray *)data {
  return ComFasterxmlJacksonDatabindNodeBinaryNode_valueOfWithByteArray_(data);
}

+ (ComFasterxmlJacksonDatabindNodeBinaryNode *)valueOfWithByteArray:(IOSByteArray *)data
                                                            withInt:(jint)offset
                                                            withInt:(jint)length {
  return ComFasterxmlJacksonDatabindNodeBinaryNode_valueOfWithByteArray_withInt_withInt_(data, offset, length);
}

- (ComFasterxmlJacksonDatabindNodeJsonNodeType *)getNodeType {
  return JreLoadEnum(ComFasterxmlJacksonDatabindNodeJsonNodeType, BINARY);
}

- (ComFasterxmlJacksonCoreJsonToken *)asToken {
  return JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_EMBEDDED_OBJECT);
}

- (IOSByteArray *)binaryValue {
  return _data_;
}

- (NSString *)asText {
  return [((ComFasterxmlJacksonCoreBase64Variant *) nil_chk(ComFasterxmlJacksonCoreBase64Variants_getDefaultVariant())) encodeWithByteArray:_data_ withBoolean:false];
}

- (void)serializeWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)jg
        withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(jg)) writeBinaryWithComFasterxmlJacksonCoreBase64Variant:[((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk([((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) getConfig])) getBase64Variant] withByteArray:_data_ withInt:0 withInt:((IOSByteArray *) nil_chk(_data_))->size_];
}

- (jboolean)isEqual:(id)o {
  if (o == self) return true;
  if (o == nil) return false;
  if (!([o isKindOfClass:[ComFasterxmlJacksonDatabindNodeBinaryNode class]])) {
    return false;
  }
  return JavaUtilArrays_equalsWithByteArray_withByteArray_(((ComFasterxmlJacksonDatabindNodeBinaryNode *) cast_chk(o, [ComFasterxmlJacksonDatabindNodeBinaryNode class]))->_data_, _data_);
}

- (NSUInteger)hash {
  return (_data_ == nil) ? -1 : ((IOSByteArray *) nil_chk(_data_))->size_;
}

- (NSString *)description {
  return [((ComFasterxmlJacksonCoreBase64Variant *) nil_chk(ComFasterxmlJacksonCoreBase64Variants_getDefaultVariant())) encodeWithByteArray:_data_ withBoolean:true];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

- (void)dealloc {
  RELEASE_(_data_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeBinaryNode;", 0x9, 2, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeBinaryNode;", 0x9, 2, 1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeJsonNodeType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 3, 4, 5, -1, -1, -1 },
    { NULL, "Z", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 8, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 9, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithByteArray:);
  methods[1].selector = @selector(initWithByteArray:withInt:withInt:);
  methods[2].selector = @selector(valueOfWithByteArray:);
  methods[3].selector = @selector(valueOfWithByteArray:withInt:withInt:);
  methods[4].selector = @selector(getNodeType);
  methods[5].selector = @selector(asToken);
  methods[6].selector = @selector(binaryValue);
  methods[7].selector = @selector(asText);
  methods[8].selector = @selector(serializeWithComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  methods[9].selector = @selector(isEqual:);
  methods[10].selector = @selector(hash);
  methods[11].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EMPTY_BINARY_NODE", "LComFasterxmlJacksonDatabindNodeBinaryNode;", .constantValue.asLong = 0, 0x18, -1, 10, -1, -1 },
    { "_data_", "[B", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[B", "[BII", "valueOf", "serialize", "LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;", "LJavaIoIOException;LComFasterxmlJacksonCoreJsonProcessingException;", "equals", "LNSObject;", "hashCode", "toString", &ComFasterxmlJacksonDatabindNodeBinaryNode_EMPTY_BINARY_NODE };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindNodeBinaryNode = { "BinaryNode", "com.fasterxml.jackson.databind.node", ptrTable, methods, fields, 7, 0x1, 12, 2, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindNodeBinaryNode;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindNodeBinaryNode class]) {
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindNodeBinaryNode_EMPTY_BINARY_NODE, new_ComFasterxmlJacksonDatabindNodeBinaryNode_initWithByteArray_([IOSByteArray arrayWithLength:0]));
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindNodeBinaryNode)
  }
}

@end

void ComFasterxmlJacksonDatabindNodeBinaryNode_initWithByteArray_(ComFasterxmlJacksonDatabindNodeBinaryNode *self, IOSByteArray *data) {
  ComFasterxmlJacksonDatabindNodeValueNode_init(self);
  JreStrongAssign(&self->_data_, data);
}

ComFasterxmlJacksonDatabindNodeBinaryNode *new_ComFasterxmlJacksonDatabindNodeBinaryNode_initWithByteArray_(IOSByteArray *data) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindNodeBinaryNode, initWithByteArray_, data)
}

ComFasterxmlJacksonDatabindNodeBinaryNode *create_ComFasterxmlJacksonDatabindNodeBinaryNode_initWithByteArray_(IOSByteArray *data) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindNodeBinaryNode, initWithByteArray_, data)
}

void ComFasterxmlJacksonDatabindNodeBinaryNode_initWithByteArray_withInt_withInt_(ComFasterxmlJacksonDatabindNodeBinaryNode *self, IOSByteArray *data, jint offset, jint length) {
  ComFasterxmlJacksonDatabindNodeValueNode_init(self);
  if (offset == 0 && length == ((IOSByteArray *) nil_chk(data))->size_) {
    JreStrongAssign(&self->_data_, data);
  }
  else {
    JreStrongAssignAndConsume(&self->_data_, [IOSByteArray newArrayWithLength:length]);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, offset, self->_data_, 0, length);
  }
}

ComFasterxmlJacksonDatabindNodeBinaryNode *new_ComFasterxmlJacksonDatabindNodeBinaryNode_initWithByteArray_withInt_withInt_(IOSByteArray *data, jint offset, jint length) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindNodeBinaryNode, initWithByteArray_withInt_withInt_, data, offset, length)
}

ComFasterxmlJacksonDatabindNodeBinaryNode *create_ComFasterxmlJacksonDatabindNodeBinaryNode_initWithByteArray_withInt_withInt_(IOSByteArray *data, jint offset, jint length) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindNodeBinaryNode, initWithByteArray_withInt_withInt_, data, offset, length)
}

ComFasterxmlJacksonDatabindNodeBinaryNode *ComFasterxmlJacksonDatabindNodeBinaryNode_valueOfWithByteArray_(IOSByteArray *data) {
  ComFasterxmlJacksonDatabindNodeBinaryNode_initialize();
  if (data == nil) {
    return nil;
  }
  if (data->size_ == 0) {
    return ComFasterxmlJacksonDatabindNodeBinaryNode_EMPTY_BINARY_NODE;
  }
  return create_ComFasterxmlJacksonDatabindNodeBinaryNode_initWithByteArray_(data);
}

ComFasterxmlJacksonDatabindNodeBinaryNode *ComFasterxmlJacksonDatabindNodeBinaryNode_valueOfWithByteArray_withInt_withInt_(IOSByteArray *data, jint offset, jint length) {
  ComFasterxmlJacksonDatabindNodeBinaryNode_initialize();
  if (data == nil) {
    return nil;
  }
  if (length == 0) {
    return ComFasterxmlJacksonDatabindNodeBinaryNode_EMPTY_BINARY_NODE;
  }
  return create_ComFasterxmlJacksonDatabindNodeBinaryNode_initWithByteArray_withInt_withInt_(data, offset, length);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindNodeBinaryNode)
