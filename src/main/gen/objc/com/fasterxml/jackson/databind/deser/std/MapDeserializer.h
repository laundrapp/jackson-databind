//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/deser/std/MapDeserializer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserStdMapDeserializer")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindDeserStdMapDeserializer
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserStdMapDeserializer 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserStdMapDeserializer 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindDeserStdMapDeserializer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindDeserStdMapDeserializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserStdMapDeserializer || defined(INCLUDE_ComFasterxmlJacksonDatabindDeserStdMapDeserializer))
#define ComFasterxmlJacksonDatabindDeserStdMapDeserializer_

#define RESTRICT_ComFasterxmlJacksonDatabindDeserStdContainerDeserializerBase 1
#define INCLUDE_ComFasterxmlJacksonDatabindDeserStdContainerDeserializerBase 1
#include "com/fasterxml/jackson/databind/deser/std/ContainerDeserializerBase.h"

#define RESTRICT_ComFasterxmlJacksonDatabindDeserContextualDeserializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindDeserContextualDeserializer 1
#include "com/fasterxml/jackson/databind/deser/ContextualDeserializer.h"

#define RESTRICT_ComFasterxmlJacksonDatabindDeserResolvableDeserializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindDeserResolvableDeserializer 1
#include "com/fasterxml/jackson/databind/deser/ResolvableDeserializer.h"

@class ComFasterxmlJacksonCoreJsonParser;
@class ComFasterxmlJacksonDatabindDeserImplPropertyBasedCreator;
@class ComFasterxmlJacksonDatabindDeserValueInstantiator;
@class ComFasterxmlJacksonDatabindDeserializationContext;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsonDeserializer;
@class ComFasterxmlJacksonDatabindJsontypeTypeDeserializer;
@class ComFasterxmlJacksonDatabindKeyDeserializer;
@class IOSClass;
@class IOSObjectArray;
@class JavaLangBoolean;
@protocol ComFasterxmlJacksonDatabindBeanProperty;
@protocol ComFasterxmlJacksonDatabindDeserNullValueProvider;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

/*!
 @brief Basic serializer that can take JSON "Object" structure and
  construct a <code>java.util.Map</code> instance, with typed contents.
 <p>
  Note: for untyped content (one indicated by passing Object.class
  as the type), <code>UntypedObjectDeserializer</code> is used instead.
  It can also construct <code>java.util.Map</code>s, but not with specific
  POJO types, only other containers and primitives/wrappers.
 */
@interface ComFasterxmlJacksonDatabindDeserStdMapDeserializer : ComFasterxmlJacksonDatabindDeserStdContainerDeserializerBase < ComFasterxmlJacksonDatabindDeserContextualDeserializer, ComFasterxmlJacksonDatabindDeserResolvableDeserializer > {
 @public
  /*!
   @brief Key deserializer to use; either passed via constructor
  (when indicated by annotations), or resolved when 
 <code>resolve</code> is called;
   */
  ComFasterxmlJacksonDatabindKeyDeserializer *_keyDeserializer_;
  /*!
   @brief Flag set to indicate that the key type is 
 <code>java.lang.String</code> (or <code>java.lang.Object</code>, for
  which String is acceptable), <b>and</b> that the
  default Jackson key deserializer would be used.
   If both are true, can optimize handling.
   */
  jboolean _standardStringKey_;
  /*!
   @brief Value deserializer.
   */
  ComFasterxmlJacksonDatabindJsonDeserializer *_valueDeserializer_;
  /*!
   @brief If value instances have polymorphic type information, this
  is the type deserializer that can handle it
   */
  ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *_valueTypeDeserializer_;
  ComFasterxmlJacksonDatabindDeserValueInstantiator *_valueInstantiator_;
  /*!
   @brief Deserializer that is used iff delegate-based creator is
  to be used for deserializing from JSON Object.
   */
  ComFasterxmlJacksonDatabindJsonDeserializer *_delegateDeserializer_;
  /*!
   @brief If the Map is to be instantiated using non-default constructor
  or factory method
  that takes one or more named properties as argument(s),
  this creator is used for instantiation.
   */
  ComFasterxmlJacksonDatabindDeserImplPropertyBasedCreator *_propertyBasedCreator_;
  jboolean _hasDefaultCreator_;
  id<JavaUtilSet> _ignorableProperties_;
}

#pragma mark Public

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)mapType
                withComFasterxmlJacksonDatabindDeserValueInstantiator:(ComFasterxmlJacksonDatabindDeserValueInstantiator *)valueInstantiator
                       withComFasterxmlJacksonDatabindKeyDeserializer:(ComFasterxmlJacksonDatabindKeyDeserializer *)keyDeser
                      withComFasterxmlJacksonDatabindJsonDeserializer:(ComFasterxmlJacksonDatabindJsonDeserializer *)valueDeser
              withComFasterxmlJacksonDatabindJsontypeTypeDeserializer:(ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *)valueTypeDeser;

- (id<JavaUtilMap>)_deserializeUsingCreatorWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                           withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt;

/*!
 @brief Method called to finalize setup of this deserializer,
  when it is known for which property deserializer is needed for.
 */
- (ComFasterxmlJacksonDatabindJsonDeserializer *)createContextualWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                           withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property;

- (id<JavaUtilMap>)deserializeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
              withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt;

- (id<JavaUtilMap>)deserializeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
              withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                             withId:(id<JavaUtilMap>)result;

- (id)deserializeWithTypeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
         withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
       withComFasterxmlJacksonDatabindJsontypeTypeDeserializer:(ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *)typeDeserializer;

- (ComFasterxmlJacksonDatabindJsonDeserializer *)getContentDeserializer;

- (IOSClass *)getMapClass;

- (id<JavaUtilMap>)getNullValue;

- (id<JavaUtilMap>)getNullValueWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)arg0;

- (ComFasterxmlJacksonDatabindDeserValueInstantiator *)getValueInstantiator;

- (ComFasterxmlJacksonDatabindJavaType *)getValueType;

/*!
 @brief Turns out that these are expensive enough to create so that caching
  does make sense.
 <p>
  IMPORTANT: but, note, that instances CAN NOT BE CACHED if there is
  a value type deserializer; this caused an issue with 2.4.4 of
  JAXB Annotations (failing a test).
  It is also possible that some other settings could make deserializers
  un-cacheable; but on the other hand, caching can make a big positive
  difference with performance... so it's a hard choice.
 @since 2.4.4
 */
- (jboolean)isCachable;

- (void)resolveWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt;

- (void)setIgnorablePropertiesWithJavaUtilSet:(id<JavaUtilSet>)ignorable;

- (void)setIgnorablePropertiesWithNSStringArray:(IOSObjectArray *)ignorable;

#pragma mark Protected

/*!
 @brief Copy-constructor that can be used by sub-classes to allow
  copy-on-write styling copying of settings of an existing instance.
 */
- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindDeserStdMapDeserializer:(ComFasterxmlJacksonDatabindDeserStdMapDeserializer *)src;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindDeserStdMapDeserializer:(ComFasterxmlJacksonDatabindDeserStdMapDeserializer *)src
                                      withComFasterxmlJacksonDatabindKeyDeserializer:(ComFasterxmlJacksonDatabindKeyDeserializer *)keyDeser
                                     withComFasterxmlJacksonDatabindJsonDeserializer:(ComFasterxmlJacksonDatabindJsonDeserializer *)valueDeser
                             withComFasterxmlJacksonDatabindJsontypeTypeDeserializer:(ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *)valueTypeDeser
                               withComFasterxmlJacksonDatabindDeserNullValueProvider:(id<ComFasterxmlJacksonDatabindDeserNullValueProvider>)nuller
                                                                     withJavaUtilSet:(id<JavaUtilSet>)ignorable;

- (id<JavaUtilMap>)_deserializeFromArrayWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)arg0
                        withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)arg1;

- (id<JavaUtilMap>)_deserializeFromEmptyWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)arg0
                        withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)arg1;

- (id<JavaUtilMap>)_deserializeWrappedValueWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)arg0
                           withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)arg1;

/*!
 @brief Helper method used to check whether we can just use the default key
  deserialization, where JSON String becomes Java String.
 */
- (jboolean)_isStdKeyDeserWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)mapType
                   withComFasterxmlJacksonDatabindKeyDeserializer:(ComFasterxmlJacksonDatabindKeyDeserializer *)keyDeser;

- (void)_readAndBindWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
    withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                          withJavaUtilMap:(id<JavaUtilMap>)result;

/*!
 @brief Optimized method used when keys can be deserialized as plain old 
 <code>java.lang.String</code>s, and there is no custom deserialized
  specified.
 */
- (void)_readAndBindStringKeyMapWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                      withJavaUtilMap:(id<JavaUtilMap>)result;

/*!
 @since 2.9
 */
- (void)_readAndUpdateWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
      withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                            withJavaUtilMap:(id<JavaUtilMap>)result;

/*!
 @brief Optimized method used when keys can be deserialized as plain old 
 <code>java.lang.String</code>s, and there is no custom deserialized
  specified.
 @since 2.9
 */
- (void)_readAndUpdateStringKeyMapWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                  withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                        withJavaUtilMap:(id<JavaUtilMap>)result;

/*!
 @brief Fluent factory method used to create a copy with slightly
  different settings.When sub-classing, MUST be overridden.
 */
- (ComFasterxmlJacksonDatabindDeserStdMapDeserializer *)withResolvedWithComFasterxmlJacksonDatabindKeyDeserializer:(ComFasterxmlJacksonDatabindKeyDeserializer *)keyDeser
                                                           withComFasterxmlJacksonDatabindJsontypeTypeDeserializer:(ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *)valueTypeDeser
                                                                   withComFasterxmlJacksonDatabindJsonDeserializer:(ComFasterxmlJacksonDatabindJsonDeserializer *)valueDeser
                                                             withComFasterxmlJacksonDatabindDeserNullValueProvider:(id<ComFasterxmlJacksonDatabindDeserNullValueProvider>)nuller
                                                                                                   withJavaUtilSet:(id<JavaUtilSet>)ignorable;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindDeserStdContainerDeserializerBase:(ComFasterxmlJacksonDatabindDeserStdContainerDeserializerBase *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindDeserStdContainerDeserializerBase:(ComFasterxmlJacksonDatabindDeserStdContainerDeserializerBase *)arg0
                                         withComFasterxmlJacksonDatabindDeserNullValueProvider:(id<ComFasterxmlJacksonDatabindDeserNullValueProvider>)arg1
                                                                           withJavaLangBoolean:(JavaLangBoolean *)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)arg0
                withComFasterxmlJacksonDatabindDeserNullValueProvider:(id<ComFasterxmlJacksonDatabindDeserNullValueProvider>)arg1
                                                  withJavaLangBoolean:(JavaLangBoolean *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindDeserStdMapDeserializer)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserStdMapDeserializer, _keyDeserializer_, ComFasterxmlJacksonDatabindKeyDeserializer *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserStdMapDeserializer, _valueDeserializer_, ComFasterxmlJacksonDatabindJsonDeserializer *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserStdMapDeserializer, _valueTypeDeserializer_, ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserStdMapDeserializer, _valueInstantiator_, ComFasterxmlJacksonDatabindDeserValueInstantiator *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserStdMapDeserializer, _delegateDeserializer_, ComFasterxmlJacksonDatabindJsonDeserializer *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserStdMapDeserializer, _propertyBasedCreator_, ComFasterxmlJacksonDatabindDeserImplPropertyBasedCreator *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserStdMapDeserializer, _ignorableProperties_, id<JavaUtilSet>)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindDeserStdMapDeserializer_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindDeserValueInstantiator_withComFasterxmlJacksonDatabindKeyDeserializer_withComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindJsontypeTypeDeserializer_(ComFasterxmlJacksonDatabindDeserStdMapDeserializer *self, ComFasterxmlJacksonDatabindJavaType *mapType, ComFasterxmlJacksonDatabindDeserValueInstantiator *valueInstantiator, ComFasterxmlJacksonDatabindKeyDeserializer *keyDeser, ComFasterxmlJacksonDatabindJsonDeserializer *valueDeser, ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *valueTypeDeser);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserStdMapDeserializer *new_ComFasterxmlJacksonDatabindDeserStdMapDeserializer_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindDeserValueInstantiator_withComFasterxmlJacksonDatabindKeyDeserializer_withComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindJsontypeTypeDeserializer_(ComFasterxmlJacksonDatabindJavaType *mapType, ComFasterxmlJacksonDatabindDeserValueInstantiator *valueInstantiator, ComFasterxmlJacksonDatabindKeyDeserializer *keyDeser, ComFasterxmlJacksonDatabindJsonDeserializer *valueDeser, ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *valueTypeDeser) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserStdMapDeserializer *create_ComFasterxmlJacksonDatabindDeserStdMapDeserializer_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindDeserValueInstantiator_withComFasterxmlJacksonDatabindKeyDeserializer_withComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindJsontypeTypeDeserializer_(ComFasterxmlJacksonDatabindJavaType *mapType, ComFasterxmlJacksonDatabindDeserValueInstantiator *valueInstantiator, ComFasterxmlJacksonDatabindKeyDeserializer *keyDeser, ComFasterxmlJacksonDatabindJsonDeserializer *valueDeser, ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *valueTypeDeser);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindDeserStdMapDeserializer_initWithComFasterxmlJacksonDatabindDeserStdMapDeserializer_(ComFasterxmlJacksonDatabindDeserStdMapDeserializer *self, ComFasterxmlJacksonDatabindDeserStdMapDeserializer *src);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserStdMapDeserializer *new_ComFasterxmlJacksonDatabindDeserStdMapDeserializer_initWithComFasterxmlJacksonDatabindDeserStdMapDeserializer_(ComFasterxmlJacksonDatabindDeserStdMapDeserializer *src) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserStdMapDeserializer *create_ComFasterxmlJacksonDatabindDeserStdMapDeserializer_initWithComFasterxmlJacksonDatabindDeserStdMapDeserializer_(ComFasterxmlJacksonDatabindDeserStdMapDeserializer *src);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindDeserStdMapDeserializer_initWithComFasterxmlJacksonDatabindDeserStdMapDeserializer_withComFasterxmlJacksonDatabindKeyDeserializer_withComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindJsontypeTypeDeserializer_withComFasterxmlJacksonDatabindDeserNullValueProvider_withJavaUtilSet_(ComFasterxmlJacksonDatabindDeserStdMapDeserializer *self, ComFasterxmlJacksonDatabindDeserStdMapDeserializer *src, ComFasterxmlJacksonDatabindKeyDeserializer *keyDeser, ComFasterxmlJacksonDatabindJsonDeserializer *valueDeser, ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *valueTypeDeser, id<ComFasterxmlJacksonDatabindDeserNullValueProvider> nuller, id<JavaUtilSet> ignorable);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserStdMapDeserializer *new_ComFasterxmlJacksonDatabindDeserStdMapDeserializer_initWithComFasterxmlJacksonDatabindDeserStdMapDeserializer_withComFasterxmlJacksonDatabindKeyDeserializer_withComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindJsontypeTypeDeserializer_withComFasterxmlJacksonDatabindDeserNullValueProvider_withJavaUtilSet_(ComFasterxmlJacksonDatabindDeserStdMapDeserializer *src, ComFasterxmlJacksonDatabindKeyDeserializer *keyDeser, ComFasterxmlJacksonDatabindJsonDeserializer *valueDeser, ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *valueTypeDeser, id<ComFasterxmlJacksonDatabindDeserNullValueProvider> nuller, id<JavaUtilSet> ignorable) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserStdMapDeserializer *create_ComFasterxmlJacksonDatabindDeserStdMapDeserializer_initWithComFasterxmlJacksonDatabindDeserStdMapDeserializer_withComFasterxmlJacksonDatabindKeyDeserializer_withComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindJsontypeTypeDeserializer_withComFasterxmlJacksonDatabindDeserNullValueProvider_withJavaUtilSet_(ComFasterxmlJacksonDatabindDeserStdMapDeserializer *src, ComFasterxmlJacksonDatabindKeyDeserializer *keyDeser, ComFasterxmlJacksonDatabindJsonDeserializer *valueDeser, ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *valueTypeDeser, id<ComFasterxmlJacksonDatabindDeserNullValueProvider> nuller, id<JavaUtilSet> ignorable);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindDeserStdMapDeserializer)

#endif

#if !defined (ComFasterxmlJacksonDatabindDeserStdMapDeserializer_MapReferring_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserStdMapDeserializer || defined(INCLUDE_ComFasterxmlJacksonDatabindDeserStdMapDeserializer_MapReferring))
#define ComFasterxmlJacksonDatabindDeserStdMapDeserializer_MapReferring_

#define RESTRICT_ComFasterxmlJacksonDatabindDeserImplReadableObjectId 1
#define INCLUDE_ComFasterxmlJacksonDatabindDeserImplReadableObjectId_Referring 1
#include "com/fasterxml/jackson/databind/deser/impl/ReadableObjectId.h"

@class ComFasterxmlJacksonDatabindDeserStdMapDeserializer_MapReferringAccumulator;
@class ComFasterxmlJacksonDatabindDeserUnresolvedForwardReference;
@class ComFasterxmlJacksonDatabindJavaType;
@class IOSClass;
@protocol JavaUtilMap;

/*!
 @brief Helper class to maintain processing order of value.
 The resolved object associated with <code>key</code> comes before the values in 
 <code>next</code>.
 */
@interface ComFasterxmlJacksonDatabindDeserStdMapDeserializer_MapReferring : ComFasterxmlJacksonDatabindDeserImplReadableObjectId_Referring {
 @public
  id<JavaUtilMap> next_;
  id key_;
}

#pragma mark Public

- (void)handleResolvedForwardReferenceWithId:(id)id_
                                      withId:(id)value;

#pragma mark Package-Private

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindDeserStdMapDeserializer_MapReferringAccumulator:(ComFasterxmlJacksonDatabindDeserStdMapDeserializer_MapReferringAccumulator *)parent
                                              withComFasterxmlJacksonDatabindDeserUnresolvedForwardReference:(ComFasterxmlJacksonDatabindDeserUnresolvedForwardReference *)ref
                                                                                                withIOSClass:(IOSClass *)valueType
                                                                                                      withId:(id)key;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindDeserUnresolvedForwardReference:(ComFasterxmlJacksonDatabindDeserUnresolvedForwardReference *)arg0
                                                     withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindDeserUnresolvedForwardReference:(ComFasterxmlJacksonDatabindDeserUnresolvedForwardReference *)arg0
                                                                                withIOSClass:(IOSClass *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindDeserStdMapDeserializer_MapReferring)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserStdMapDeserializer_MapReferring, next_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserStdMapDeserializer_MapReferring, key_, id)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindDeserStdMapDeserializer_MapReferring_initWithComFasterxmlJacksonDatabindDeserStdMapDeserializer_MapReferringAccumulator_withComFasterxmlJacksonDatabindDeserUnresolvedForwardReference_withIOSClass_withId_(ComFasterxmlJacksonDatabindDeserStdMapDeserializer_MapReferring *self, ComFasterxmlJacksonDatabindDeserStdMapDeserializer_MapReferringAccumulator *parent, ComFasterxmlJacksonDatabindDeserUnresolvedForwardReference *ref, IOSClass *valueType, id key);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserStdMapDeserializer_MapReferring *new_ComFasterxmlJacksonDatabindDeserStdMapDeserializer_MapReferring_initWithComFasterxmlJacksonDatabindDeserStdMapDeserializer_MapReferringAccumulator_withComFasterxmlJacksonDatabindDeserUnresolvedForwardReference_withIOSClass_withId_(ComFasterxmlJacksonDatabindDeserStdMapDeserializer_MapReferringAccumulator *parent, ComFasterxmlJacksonDatabindDeserUnresolvedForwardReference *ref, IOSClass *valueType, id key) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserStdMapDeserializer_MapReferring *create_ComFasterxmlJacksonDatabindDeserStdMapDeserializer_MapReferring_initWithComFasterxmlJacksonDatabindDeserStdMapDeserializer_MapReferringAccumulator_withComFasterxmlJacksonDatabindDeserUnresolvedForwardReference_withIOSClass_withId_(ComFasterxmlJacksonDatabindDeserStdMapDeserializer_MapReferringAccumulator *parent, ComFasterxmlJacksonDatabindDeserUnresolvedForwardReference *ref, IOSClass *valueType, id key);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindDeserStdMapDeserializer_MapReferring)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserStdMapDeserializer")
