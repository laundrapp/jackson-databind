//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/impl/StringCollectionSerializer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/core/JsonToken.h"
#include "com/fasterxml/jackson/core/type/WritableTypeId.h"
#include "com/fasterxml/jackson/databind/BeanProperty.h"
#include "com/fasterxml/jackson/databind/JsonNode.h"
#include "com/fasterxml/jackson/databind/JsonSerializer.h"
#include "com/fasterxml/jackson/databind/SerializationFeature.h"
#include "com/fasterxml/jackson/databind/SerializerProvider.h"
#include "com/fasterxml/jackson/databind/annotation/JacksonStdImpl.h"
#include "com/fasterxml/jackson/databind/jsonFormatVisitors/JsonArrayFormatVisitor.h"
#include "com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatTypes.h"
#include "com/fasterxml/jackson/databind/jsontype/TypeSerializer.h"
#include "com/fasterxml/jackson/databind/node/ObjectNode.h"
#include "com/fasterxml/jackson/databind/ser/impl/StringCollectionSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/StaticListSerializerBase.h"
#include "java/lang/Boolean.h"
#include "java/lang/Exception.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Collection.h"

@interface ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer ()

- (void)serializeContentsWithJavaUtilCollection:(id<JavaUtilCollection>)value
       withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

@end

__attribute__((unused)) static void ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer_serializeContentsWithJavaUtilCollection_withComFasterxmlJacksonCoreJsonGenerator_withComFasterxmlJacksonDatabindSerializerProvider_(ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer *self, id<JavaUtilCollection> value, ComFasterxmlJacksonCoreJsonGenerator *g, ComFasterxmlJacksonDatabindSerializerProvider *provider);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer__Annotations$0(void);

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer)

ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer *ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer_instance;

@implementation ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindSerImplStringCollectionSerializer:(ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer *)src
                                                                           withJavaLangBoolean:(JavaLangBoolean *)unwrapSingle {
  ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer_initWithComFasterxmlJacksonDatabindSerImplStringCollectionSerializer_withJavaLangBoolean_(self, src, unwrapSingle);
  return self;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)_withResolvedWithComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)prop
                                                                                    withJavaLangBoolean:(JavaLangBoolean *)unwrapSingle {
  return create_ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer_initWithComFasterxmlJacksonDatabindSerImplStringCollectionSerializer_withJavaLangBoolean_(self, unwrapSingle);
}

- (ComFasterxmlJacksonDatabindJsonNode *)contentSchema {
  return [self createSchemaNodeWithNSString:@"string" withBoolean:true];
}

- (void)acceptContentVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonArrayFormatVisitor:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonArrayFormatVisitor>)visitor {
  [((id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonArrayFormatVisitor>) nil_chk(visitor)) itemsFormatWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatTypes:JreLoadEnum(ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatTypes, STRING)];
}

- (void)serializeWithId:(id<JavaUtilCollection>)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) setCurrentValueWithId:value];
  jint len = [((id<JavaUtilCollection>) nil_chk(value)) size];
  if (len == 1) {
    if (((_unwrapSingle_ == nil) && [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) isEnabledWithComFasterxmlJacksonDatabindSerializationFeature:JreLoadEnum(ComFasterxmlJacksonDatabindSerializationFeature, WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED)]) || (_unwrapSingle_ == JreLoadStatic(JavaLangBoolean, TRUE))) {
      ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer_serializeContentsWithJavaUtilCollection_withComFasterxmlJacksonCoreJsonGenerator_withComFasterxmlJacksonDatabindSerializerProvider_(self, value, g, provider);
      return;
    }
  }
  [g writeStartArrayWithInt:len];
  ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer_serializeContentsWithJavaUtilCollection_withComFasterxmlJacksonCoreJsonGenerator_withComFasterxmlJacksonDatabindSerializerProvider_(self, value, g, provider);
  [g writeEndArray];
}

- (void)serializeWithTypeWithId:(id<JavaUtilCollection>)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer {
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) setCurrentValueWithId:value];
  ComFasterxmlJacksonCoreTypeWritableTypeId *typeIdDef = [((ComFasterxmlJacksonDatabindJsontypeTypeSerializer *) nil_chk(typeSer)) writeTypePrefixWithComFasterxmlJacksonCoreJsonGenerator:g withComFasterxmlJacksonCoreTypeWritableTypeId:[typeSer typeIdWithId:value withComFasterxmlJacksonCoreJsonToken:JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_ARRAY)]];
  ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer_serializeContentsWithJavaUtilCollection_withComFasterxmlJacksonCoreJsonGenerator_withComFasterxmlJacksonDatabindSerializerProvider_(self, value, g, provider);
  [typeSer writeTypeSuffixWithComFasterxmlJacksonCoreJsonGenerator:g withComFasterxmlJacksonCoreTypeWritableTypeId:typeIdDef];
}

- (void)serializeContentsWithJavaUtilCollection:(id<JavaUtilCollection>)value
       withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer_serializeContentsWithJavaUtilCollection_withComFasterxmlJacksonCoreJsonGenerator_withComFasterxmlJacksonDatabindSerializerProvider_(self, value, g, provider);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 1, 2, -1, 3, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 4, 5, 6, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, 9, 10, -1, -1 },
    { NULL, "V", 0x1, 11, 12, 9, 13, -1, -1 },
    { NULL, "V", 0x12, 14, 8, 9, 10, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithComFasterxmlJacksonDatabindSerImplStringCollectionSerializer:withJavaLangBoolean:);
  methods[2].selector = @selector(_withResolvedWithComFasterxmlJacksonDatabindBeanProperty:withJavaLangBoolean:);
  methods[3].selector = @selector(contentSchema);
  methods[4].selector = @selector(acceptContentVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonArrayFormatVisitor:);
  methods[5].selector = @selector(serializeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  methods[6].selector = @selector(serializeWithTypeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindJsontypeTypeSerializer:);
  methods[7].selector = @selector(serializeContentsWithJavaUtilCollection:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "instance", "LComFasterxmlJacksonDatabindSerImplStringCollectionSerializer;", .constantValue.asLong = 0, 0x19, -1, 15, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindSerImplStringCollectionSerializer;LJavaLangBoolean;", "_withResolved", "LComFasterxmlJacksonDatabindBeanProperty;LJavaLangBoolean;", "(Lcom/fasterxml/jackson/databind/BeanProperty;Ljava/lang/Boolean;)Lcom/fasterxml/jackson/databind/JsonSerializer<*>;", "acceptContentVisitor", "LComFasterxmlJacksonDatabindJsonFormatVisitorsJsonArrayFormatVisitor;", "LComFasterxmlJacksonDatabindJsonMappingException;", "serialize", "LJavaUtilCollection;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;", "LJavaIoIOException;", "(Ljava/util/Collection<Ljava/lang/String;>;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;)V", "serializeWithType", "LJavaUtilCollection;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindJsontypeTypeSerializer;", "(Ljava/util/Collection<Ljava/lang/String;>;Lcom/fasterxml/jackson/core/JsonGenerator;Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/jsontype/TypeSerializer;)V", "serializeContents", &ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer_instance, "Lcom/fasterxml/jackson/databind/ser/std/StaticListSerializerBase<Ljava/util/Collection<Ljava/lang/String;>;>;", (void *)&ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer__Annotations$0 };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer = { "StringCollectionSerializer", "com.fasterxml.jackson.databind.ser.impl", ptrTable, methods, fields, 7, 0x1, 8, 1, -1, -1, -1, 16, 17 };
  return &_ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer class]) {
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer_instance, new_ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer_init());
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer)
  }
}

@end

void ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer_init(ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer *self) {
  ComFasterxmlJacksonDatabindSerStdStaticListSerializerBase_initWithIOSClass_(self, JavaUtilCollection_class_());
}

ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer *new_ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer, init)
}

ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer *create_ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer, init)
}

void ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer_initWithComFasterxmlJacksonDatabindSerImplStringCollectionSerializer_withJavaLangBoolean_(ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer *self, ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer *src, JavaLangBoolean *unwrapSingle) {
  ComFasterxmlJacksonDatabindSerStdStaticListSerializerBase_initWithComFasterxmlJacksonDatabindSerStdStaticListSerializerBase_withJavaLangBoolean_(self, src, unwrapSingle);
}

ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer *new_ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer_initWithComFasterxmlJacksonDatabindSerImplStringCollectionSerializer_withJavaLangBoolean_(ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer *src, JavaLangBoolean *unwrapSingle) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer, initWithComFasterxmlJacksonDatabindSerImplStringCollectionSerializer_withJavaLangBoolean_, src, unwrapSingle)
}

ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer *create_ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer_initWithComFasterxmlJacksonDatabindSerImplStringCollectionSerializer_withJavaLangBoolean_(ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer *src, JavaLangBoolean *unwrapSingle) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer, initWithComFasterxmlJacksonDatabindSerImplStringCollectionSerializer_withJavaLangBoolean_, src, unwrapSingle)
}

void ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer_serializeContentsWithJavaUtilCollection_withComFasterxmlJacksonCoreJsonGenerator_withComFasterxmlJacksonDatabindSerializerProvider_(ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer *self, id<JavaUtilCollection> value, ComFasterxmlJacksonCoreJsonGenerator *g, ComFasterxmlJacksonDatabindSerializerProvider *provider) {
  jint i = 0;
  @try {
    for (NSString * __strong str in nil_chk(value)) {
      if (str == nil) {
        [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) defaultSerializeNullWithComFasterxmlJacksonCoreJsonGenerator:g];
      }
      else {
        [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeStringWithNSString:str];
      }
      ++i;
    }
  }
  @catch (JavaLangException *e) {
    [self wrapAndThrowWithComFasterxmlJacksonDatabindSerializerProvider:provider withJavaLangThrowable:e withId:value withInt:i];
  }
}

IOSObjectArray *ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_ComFasterxmlJacksonDatabindAnnotationJacksonStdImpl() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerImplStringCollectionSerializer)
