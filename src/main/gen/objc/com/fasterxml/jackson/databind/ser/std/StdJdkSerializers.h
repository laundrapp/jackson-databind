//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/std/StdJdkSerializers.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdStdJdkSerializers")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindSerStdStdJdkSerializers
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdStdJdkSerializers 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdStdJdkSerializers 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindSerStdStdJdkSerializers

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdStdJdkSerializers || defined(INCLUDE_ComFasterxmlJacksonDatabindSerStdStdJdkSerializers))
#define ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_

@protocol JavaUtilCollection;

/*!
 @brief Class that providers access to serializers user for non-structured JDK types that
  are serializer as scalars; some using basic <code>ToStringSerializer</code>,
  others explicit serializers.
 */
@interface ComFasterxmlJacksonDatabindSerStdStdJdkSerializers : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @brief Method called by <code>BasicSerializerFactory</code> to access
  all serializers this class provides.
 */
+ (id<JavaUtilCollection>)all;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindSerStdStdJdkSerializers)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_init(ComFasterxmlJacksonDatabindSerStdStdJdkSerializers *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdStdJdkSerializers *new_ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdStdJdkSerializers *create_ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_init(void);

FOUNDATION_EXPORT id<JavaUtilCollection> ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_all(void);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerStdStdJdkSerializers)

#endif

#if !defined (ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicBooleanSerializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdStdJdkSerializers || defined(INCLUDE_ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicBooleanSerializer))
#define ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicBooleanSerializer_

#define RESTRICT_ComFasterxmlJacksonDatabindSerStdStdScalarSerializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerStdStdScalarSerializer 1
#include "com/fasterxml/jackson/databind/ser/std/StdScalarSerializer.h"

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsonNode;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSClass;
@class JavaUtilConcurrentAtomicAtomicBoolean;
@protocol ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;
@protocol JavaLangReflectType;

@interface ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicBooleanSerializer : ComFasterxmlJacksonDatabindSerStdStdScalarSerializer

#pragma mark Public

- (instancetype __nonnull)init;

- (void)acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint;

- (ComFasterxmlJacksonDatabindJsonNode *)getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                            withJavaLangReflectType:(id<JavaLangReflectType>)typeHint;

- (void)serializeWithId:(JavaUtilConcurrentAtomicAtomicBoolean *)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0
                               withBoolean:(jboolean)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicBooleanSerializer)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicBooleanSerializer_init(ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicBooleanSerializer *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicBooleanSerializer *new_ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicBooleanSerializer_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicBooleanSerializer *create_ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicBooleanSerializer_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicBooleanSerializer)

#endif

#if !defined (ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicIntegerSerializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdStdJdkSerializers || defined(INCLUDE_ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicIntegerSerializer))
#define ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicIntegerSerializer_

#define RESTRICT_ComFasterxmlJacksonDatabindSerStdStdScalarSerializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerStdStdScalarSerializer 1
#include "com/fasterxml/jackson/databind/ser/std/StdScalarSerializer.h"

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsonNode;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSClass;
@class JavaUtilConcurrentAtomicAtomicInteger;
@protocol ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;
@protocol JavaLangReflectType;

@interface ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicIntegerSerializer : ComFasterxmlJacksonDatabindSerStdStdScalarSerializer

#pragma mark Public

- (instancetype __nonnull)init;

- (void)acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint;

- (ComFasterxmlJacksonDatabindJsonNode *)getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                            withJavaLangReflectType:(id<JavaLangReflectType>)typeHint;

- (void)serializeWithId:(JavaUtilConcurrentAtomicAtomicInteger *)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0
                               withBoolean:(jboolean)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicIntegerSerializer)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicIntegerSerializer_init(ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicIntegerSerializer *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicIntegerSerializer *new_ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicIntegerSerializer_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicIntegerSerializer *create_ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicIntegerSerializer_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicIntegerSerializer)

#endif

#if !defined (ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicLongSerializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdStdJdkSerializers || defined(INCLUDE_ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicLongSerializer))
#define ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicLongSerializer_

#define RESTRICT_ComFasterxmlJacksonDatabindSerStdStdScalarSerializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerStdStdScalarSerializer 1
#include "com/fasterxml/jackson/databind/ser/std/StdScalarSerializer.h"

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsonNode;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSClass;
@class JavaUtilConcurrentAtomicAtomicLong;
@protocol ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;
@protocol JavaLangReflectType;

@interface ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicLongSerializer : ComFasterxmlJacksonDatabindSerStdStdScalarSerializer

#pragma mark Public

- (instancetype __nonnull)init;

- (void)acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint;

- (ComFasterxmlJacksonDatabindJsonNode *)getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                            withJavaLangReflectType:(id<JavaLangReflectType>)typeHint;

- (void)serializeWithId:(JavaUtilConcurrentAtomicAtomicLong *)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0
                               withBoolean:(jboolean)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicLongSerializer)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicLongSerializer_init(ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicLongSerializer *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicLongSerializer *new_ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicLongSerializer_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicLongSerializer *create_ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicLongSerializer_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerStdStdJdkSerializers_AtomicLongSerializer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdStdJdkSerializers")
