//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/impl/SimpleFilterProvider.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/databind/ser/BeanPropertyFilter.h"
#include "com/fasterxml/jackson/databind/ser/FilterProvider.h"
#include "com/fasterxml/jackson/databind/ser/PropertyFilter.h"
#include "com/fasterxml/jackson/databind/ser/impl/SimpleBeanPropertyFilter.h"
#include "com/fasterxml/jackson/databind/ser/impl/SimpleFilterProvider.h"
#include "java/lang/Deprecated.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/Map.h"
#include "java/util/Set.h"

@interface ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider ()

+ (id<JavaUtilMap>)_convertWithJavaUtilMap:(id<JavaUtilMap>)filters;

+ (id<ComFasterxmlJacksonDatabindSerPropertyFilter>)_convertWithComFasterxmlJacksonDatabindSerBeanPropertyFilter:(id<ComFasterxmlJacksonDatabindSerBeanPropertyFilter>)f;

@end

inline jlong ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider, serialVersionUID, jlong)

__attribute__((unused)) static id<JavaUtilMap> ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider__convertWithJavaUtilMap_(id<JavaUtilMap> filters);

__attribute__((unused)) static id<ComFasterxmlJacksonDatabindSerPropertyFilter> ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider__convertWithComFasterxmlJacksonDatabindSerBeanPropertyFilter_(id<ComFasterxmlJacksonDatabindSerBeanPropertyFilter> f);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider__Annotations$1(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider__Annotations$2(void);

@implementation ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithJavaUtilMap:(id<JavaUtilMap>)mapping {
  ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider_initWithJavaUtilMap_(self, mapping);
  return self;
}

+ (id<JavaUtilMap>)_convertWithJavaUtilMap:(id<JavaUtilMap>)filters {
  return ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider__convertWithJavaUtilMap_(filters);
}

+ (id<ComFasterxmlJacksonDatabindSerPropertyFilter>)_convertWithComFasterxmlJacksonDatabindSerBeanPropertyFilter:(id<ComFasterxmlJacksonDatabindSerBeanPropertyFilter>)f {
  return ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider__convertWithComFasterxmlJacksonDatabindSerBeanPropertyFilter_(f);
}

- (ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider *)setDefaultFilterWithComFasterxmlJacksonDatabindSerBeanPropertyFilter:(id<ComFasterxmlJacksonDatabindSerBeanPropertyFilter>)f {
  JreStrongAssign(&_defaultFilter_, ComFasterxmlJacksonDatabindSerImplSimpleBeanPropertyFilter_fromWithComFasterxmlJacksonDatabindSerBeanPropertyFilter_(f));
  return self;
}

- (ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider *)setDefaultFilterWithComFasterxmlJacksonDatabindSerPropertyFilter:(id<ComFasterxmlJacksonDatabindSerPropertyFilter>)f {
  JreStrongAssign(&_defaultFilter_, f);
  return self;
}

- (ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider *)setDefaultFilterWithComFasterxmlJacksonDatabindSerImplSimpleBeanPropertyFilter:(ComFasterxmlJacksonDatabindSerImplSimpleBeanPropertyFilter *)f {
  JreStrongAssign(&_defaultFilter_, f);
  return self;
}

- (id<ComFasterxmlJacksonDatabindSerPropertyFilter>)getDefaultFilter {
  return _defaultFilter_;
}

- (ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider *)setFailOnUnknownIdWithBoolean:(jboolean)state {
  _cfgFailOnUnknownId_ = state;
  return self;
}

- (jboolean)willFailOnUnknownId {
  return _cfgFailOnUnknownId_;
}

- (ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider *)addFilterWithNSString:(NSString *)id_
                             withComFasterxmlJacksonDatabindSerBeanPropertyFilter:(id<ComFasterxmlJacksonDatabindSerBeanPropertyFilter>)filter {
  [((id<JavaUtilMap>) nil_chk(_filtersById_)) putWithId:id_ withId:ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider__convertWithComFasterxmlJacksonDatabindSerBeanPropertyFilter_(filter)];
  return self;
}

- (ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider *)addFilterWithNSString:(NSString *)id_
                                 withComFasterxmlJacksonDatabindSerPropertyFilter:(id<ComFasterxmlJacksonDatabindSerPropertyFilter>)filter {
  [((id<JavaUtilMap>) nil_chk(_filtersById_)) putWithId:id_ withId:filter];
  return self;
}

- (ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider *)addFilterWithNSString:(NSString *)id_
                   withComFasterxmlJacksonDatabindSerImplSimpleBeanPropertyFilter:(ComFasterxmlJacksonDatabindSerImplSimpleBeanPropertyFilter *)filter {
  [((id<JavaUtilMap>) nil_chk(_filtersById_)) putWithId:id_ withId:filter];
  return self;
}

- (id<ComFasterxmlJacksonDatabindSerPropertyFilter>)removeFilterWithNSString:(NSString *)id_ {
  return [((id<JavaUtilMap>) nil_chk(_filtersById_)) removeWithId:id_];
}

- (id<ComFasterxmlJacksonDatabindSerBeanPropertyFilter>)findFilterWithId:(id)filterId {
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Access to deprecated filters not supported");
}

- (id<ComFasterxmlJacksonDatabindSerPropertyFilter>)findPropertyFilterWithId:(id)filterId
                                                                      withId:(id)valueToFilter {
  id<ComFasterxmlJacksonDatabindSerPropertyFilter> f = [((id<JavaUtilMap>) nil_chk(_filtersById_)) getWithId:filterId];
  if (f == nil) {
    f = _defaultFilter_;
    if (f == nil && _cfgFailOnUnknownId_) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$$C", @"No filter configured with id '", filterId, @"' (type ", [[nil_chk(filterId) java_getClass] getName], ')'));
    }
  }
  return f;
}

- (void)dealloc {
  RELEASE_(_filtersById_);
  RELEASE_(_defaultFilter_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x1a, 2, 0, -1, 3, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerPropertyFilter;", 0x1a, 2, 4, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerImplSimpleFilterProvider;", 0x1, 5, 4, -1, -1, 6, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerImplSimpleFilterProvider;", 0x1, 5, 7, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerImplSimpleFilterProvider;", 0x1, 5, 8, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerPropertyFilter;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerImplSimpleFilterProvider;", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerImplSimpleFilterProvider;", 0x1, 11, 12, -1, -1, 13, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerImplSimpleFilterProvider;", 0x1, 11, 14, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerImplSimpleFilterProvider;", 0x1, 11, 15, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerPropertyFilter;", 0x1, 16, 17, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerBeanPropertyFilter;", 0x1, 18, 19, -1, -1, 20, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerPropertyFilter;", 0x1, 21, 22, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithJavaUtilMap:);
  methods[2].selector = @selector(_convertWithJavaUtilMap:);
  methods[3].selector = @selector(_convertWithComFasterxmlJacksonDatabindSerBeanPropertyFilter:);
  methods[4].selector = @selector(setDefaultFilterWithComFasterxmlJacksonDatabindSerBeanPropertyFilter:);
  methods[5].selector = @selector(setDefaultFilterWithComFasterxmlJacksonDatabindSerPropertyFilter:);
  methods[6].selector = @selector(setDefaultFilterWithComFasterxmlJacksonDatabindSerImplSimpleBeanPropertyFilter:);
  methods[7].selector = @selector(getDefaultFilter);
  methods[8].selector = @selector(setFailOnUnknownIdWithBoolean:);
  methods[9].selector = @selector(willFailOnUnknownId);
  methods[10].selector = @selector(addFilterWithNSString:withComFasterxmlJacksonDatabindSerBeanPropertyFilter:);
  methods[11].selector = @selector(addFilterWithNSString:withComFasterxmlJacksonDatabindSerPropertyFilter:);
  methods[12].selector = @selector(addFilterWithNSString:withComFasterxmlJacksonDatabindSerImplSimpleBeanPropertyFilter:);
  methods[13].selector = @selector(removeFilterWithNSString:);
  methods[14].selector = @selector(findFilterWithId:);
  methods[15].selector = @selector(findPropertyFilterWithId:withId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "_filtersById_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x14, -1, -1, 23, -1 },
    { "_defaultFilter_", "LComFasterxmlJacksonDatabindSerPropertyFilter;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_cfgFailOnUnknownId_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LJavaUtilMap;", "(Ljava/util/Map<Ljava/lang/String;*>;)V", "_convert", "(Ljava/util/Map<Ljava/lang/String;*>;)Ljava/util/Map<Ljava/lang/String;Lcom/fasterxml/jackson/databind/ser/PropertyFilter;>;", "LComFasterxmlJacksonDatabindSerBeanPropertyFilter;", "setDefaultFilter", (void *)&ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider__Annotations$0, "LComFasterxmlJacksonDatabindSerPropertyFilter;", "LComFasterxmlJacksonDatabindSerImplSimpleBeanPropertyFilter;", "setFailOnUnknownId", "Z", "addFilter", "LNSString;LComFasterxmlJacksonDatabindSerBeanPropertyFilter;", (void *)&ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider__Annotations$1, "LNSString;LComFasterxmlJacksonDatabindSerPropertyFilter;", "LNSString;LComFasterxmlJacksonDatabindSerImplSimpleBeanPropertyFilter;", "removeFilter", "LNSString;", "findFilter", "LNSObject;", (void *)&ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider__Annotations$2, "findPropertyFilter", "LNSObject;LNSObject;", "Ljava/util/Map<Ljava/lang/String;Lcom/fasterxml/jackson/databind/ser/PropertyFilter;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider = { "SimpleFilterProvider", "com.fasterxml.jackson.databind.ser.impl", ptrTable, methods, fields, 7, 0x1, 16, 4, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider;
}

@end

void ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider_init(ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider *self) {
  ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider_initWithJavaUtilMap_(self, create_JavaUtilHashMap_init());
}

ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider *new_ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider, init)
}

ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider *create_ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider, init)
}

void ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider_initWithJavaUtilMap_(ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider *self, id<JavaUtilMap> mapping) {
  ComFasterxmlJacksonDatabindSerFilterProvider_init(self);
  self->_cfgFailOnUnknownId_ = true;
  for (id __strong ob in nil_chk([((id<JavaUtilMap>) nil_chk(mapping)) values])) {
    if (!([ComFasterxmlJacksonDatabindSerPropertyFilter_class_() isInstance:ob])) {
      JreStrongAssign(&self->_filtersById_, ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider__convertWithJavaUtilMap_(mapping));
      return;
    }
  }
  JreStrongAssign(&self->_filtersById_, mapping);
}

ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider *new_ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider_initWithJavaUtilMap_(id<JavaUtilMap> mapping) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider, initWithJavaUtilMap_, mapping)
}

ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider *create_ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider_initWithJavaUtilMap_(id<JavaUtilMap> mapping) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider, initWithJavaUtilMap_, mapping)
}

id<JavaUtilMap> ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider__convertWithJavaUtilMap_(id<JavaUtilMap> filters) {
  ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider_initialize();
  JavaUtilHashMap *result = create_JavaUtilHashMap_init();
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(filters)) entrySet])) {
    id f = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getValue];
    if ([ComFasterxmlJacksonDatabindSerPropertyFilter_class_() isInstance:f]) {
      [result putWithId:[entry_ getKey] withId:(id<ComFasterxmlJacksonDatabindSerPropertyFilter>) cast_check(f, ComFasterxmlJacksonDatabindSerPropertyFilter_class_())];
    }
    else if ([ComFasterxmlJacksonDatabindSerBeanPropertyFilter_class_() isInstance:f]) {
      [result putWithId:[entry_ getKey] withId:ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider__convertWithComFasterxmlJacksonDatabindSerBeanPropertyFilter_((id<ComFasterxmlJacksonDatabindSerBeanPropertyFilter>) cast_check(f, ComFasterxmlJacksonDatabindSerBeanPropertyFilter_class_()))];
    }
    else {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$C", @"Unrecognized filter type (", [[nil_chk(f) java_getClass] getName], ')'));
    }
  }
  return result;
}

id<ComFasterxmlJacksonDatabindSerPropertyFilter> ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider__convertWithComFasterxmlJacksonDatabindSerBeanPropertyFilter_(id<ComFasterxmlJacksonDatabindSerBeanPropertyFilter> f) {
  ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider_initialize();
  return ComFasterxmlJacksonDatabindSerImplSimpleBeanPropertyFilter_fromWithComFasterxmlJacksonDatabindSerBeanPropertyFilter_(f);
}

IOSObjectArray *ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerImplSimpleFilterProvider)
