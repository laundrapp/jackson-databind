//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/node/MissingNode.java
//

#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/core/JsonToken.h"
#include "com/fasterxml/jackson/databind/JsonNode.h"
#include "com/fasterxml/jackson/databind/SerializerProvider.h"
#include "com/fasterxml/jackson/databind/jsontype/TypeSerializer.h"
#include "com/fasterxml/jackson/databind/node/JsonNodeType.h"
#include "com/fasterxml/jackson/databind/node/MissingNode.h"
#include "com/fasterxml/jackson/databind/node/ValueNode.h"

inline ComFasterxmlJacksonDatabindNodeMissingNode *ComFasterxmlJacksonDatabindNodeMissingNode_get_instance(void);
static ComFasterxmlJacksonDatabindNodeMissingNode *ComFasterxmlJacksonDatabindNodeMissingNode_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindNodeMissingNode, instance, ComFasterxmlJacksonDatabindNodeMissingNode *)

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindNodeMissingNode)

@implementation ComFasterxmlJacksonDatabindNodeMissingNode

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindNodeMissingNode_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)isMissingNode {
  return true;
}

- (ComFasterxmlJacksonDatabindJsonNode *)deepCopy {
  return self;
}

+ (ComFasterxmlJacksonDatabindNodeMissingNode *)getInstance {
  return ComFasterxmlJacksonDatabindNodeMissingNode_getInstance();
}

- (ComFasterxmlJacksonDatabindNodeJsonNodeType *)getNodeType {
  return JreLoadEnum(ComFasterxmlJacksonDatabindNodeJsonNodeType, MISSING);
}

- (ComFasterxmlJacksonCoreJsonToken *)asToken {
  return JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, NOT_AVAILABLE);
}

- (NSString *)asText {
  return @"";
}

- (NSString *)asTextWithNSString:(NSString *)defaultValue {
  return defaultValue;
}

- (void)serializeWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)jg
        withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(jg)) writeNull];
}

- (void)serializeWithTypeWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
                withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
            withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer {
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeNull];
}

- (jboolean)isEqual:(id)o {
  return o == self;
}

- (NSString *)description {
  return @"";
}

- (NSUInteger)hash {
  return [((ComFasterxmlJacksonDatabindNodeJsonNodeType *) nil_chk(JreLoadEnum(ComFasterxmlJacksonDatabindNodeJsonNodeType, MISSING))) ordinal];
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x1, -1, -1, -1, 0, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeMissingNode;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeJsonNodeType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 3, 4, 5, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, 5, -1, -1, -1 },
    { NULL, "Z", 0x1, 8, 9, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 10, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 11, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(isMissingNode);
  methods[2].selector = @selector(deepCopy);
  methods[3].selector = @selector(getInstance);
  methods[4].selector = @selector(getNodeType);
  methods[5].selector = @selector(asToken);
  methods[6].selector = @selector(asText);
  methods[7].selector = @selector(asTextWithNSString:);
  methods[8].selector = @selector(serializeWithComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  methods[9].selector = @selector(serializeWithTypeWithComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindJsontypeTypeSerializer:);
  methods[10].selector = @selector(isEqual:);
  methods[11].selector = @selector(description);
  methods[12].selector = @selector(hash);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "instance", "LComFasterxmlJacksonDatabindNodeMissingNode;", .constantValue.asLong = 0, 0x1a, -1, 12, -1, -1 },
  };
  static const void *ptrTable[] = { "<T:Lcom/fasterxml/jackson/databind/JsonNode;>()TT;", "asText", "LNSString;", "serialize", "LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;", "LJavaIoIOException;LComFasterxmlJacksonCoreJsonProcessingException;", "serializeWithType", "LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindJsontypeTypeSerializer;", "equals", "LNSObject;", "toString", "hashCode", &ComFasterxmlJacksonDatabindNodeMissingNode_instance };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindNodeMissingNode = { "MissingNode", "com.fasterxml.jackson.databind.node", ptrTable, methods, fields, 7, 0x11, 13, 1, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindNodeMissingNode;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindNodeMissingNode class]) {
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindNodeMissingNode_instance, new_ComFasterxmlJacksonDatabindNodeMissingNode_init());
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindNodeMissingNode)
  }
}

@end

void ComFasterxmlJacksonDatabindNodeMissingNode_init(ComFasterxmlJacksonDatabindNodeMissingNode *self) {
  ComFasterxmlJacksonDatabindNodeValueNode_init(self);
}

ComFasterxmlJacksonDatabindNodeMissingNode *new_ComFasterxmlJacksonDatabindNodeMissingNode_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindNodeMissingNode, init)
}

ComFasterxmlJacksonDatabindNodeMissingNode *create_ComFasterxmlJacksonDatabindNodeMissingNode_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindNodeMissingNode, init)
}

ComFasterxmlJacksonDatabindNodeMissingNode *ComFasterxmlJacksonDatabindNodeMissingNode_getInstance() {
  ComFasterxmlJacksonDatabindNodeMissingNode_initialize();
  return ComFasterxmlJacksonDatabindNodeMissingNode_instance;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindNodeMissingNode)
