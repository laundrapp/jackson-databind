//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/MappingJsonFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindMappingJsonFactory")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindMappingJsonFactory
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindMappingJsonFactory 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindMappingJsonFactory 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindMappingJsonFactory

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindMappingJsonFactory_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindMappingJsonFactory || defined(INCLUDE_ComFasterxmlJacksonDatabindMappingJsonFactory))
#define ComFasterxmlJacksonDatabindMappingJsonFactory_

#define RESTRICT_ComFasterxmlJacksonCoreJsonFactory 1
#define INCLUDE_ComFasterxmlJacksonCoreJsonFactory 1
#include "com/fasterxml/jackson/core/JsonFactory.h"

@class ComFasterxmlJacksonCoreFormatMatchStrength;
@class ComFasterxmlJacksonCoreObjectCodec;
@class ComFasterxmlJacksonDatabindObjectMapper;
@protocol ComFasterxmlJacksonCoreFormatInputAccessor;

/*!
 @brief Sub-class of <code>JsonFactory</code> that will create a proper 
 <code>ObjectCodec</code> to allow seam-less conversions between
  JSON content and Java objects (POJOs).
 The only addition to regular <code>JsonFactory</code> currently
  is that <code>ObjectMapper</code> is constructed and passed as
  the codec to use.
 */
@interface ComFasterxmlJacksonDatabindMappingJsonFactory : ComFasterxmlJacksonCoreJsonFactory

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonFactory:(ComFasterxmlJacksonCoreJsonFactory *)src
                         withComFasterxmlJacksonDatabindObjectMapper:(ComFasterxmlJacksonDatabindObjectMapper *)mapper;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindObjectMapper:(ComFasterxmlJacksonDatabindObjectMapper *)mapper;

- (ComFasterxmlJacksonCoreJsonFactory *)copy__ OBJC_METHOD_FAMILY_NONE;

/*!
 @brief We'll override the method to return more specific type; co-variance
  helps here
 */
- (ComFasterxmlJacksonDatabindObjectMapper *)getCodec;

/*!
 @brief Sub-classes need to override this method
 */
- (NSString *)getFormatName;

/*!
 @brief Sub-classes need to override this method
 */
- (ComFasterxmlJacksonCoreFormatMatchStrength *)hasFormatWithComFasterxmlJacksonCoreFormatInputAccessor:(id<ComFasterxmlJacksonCoreFormatInputAccessor>)acc;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonFactory:(ComFasterxmlJacksonCoreJsonFactory *)arg0
                              withComFasterxmlJacksonCoreObjectCodec:(ComFasterxmlJacksonCoreObjectCodec *)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreObjectCodec:(ComFasterxmlJacksonCoreObjectCodec *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindMappingJsonFactory)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindMappingJsonFactory_init(ComFasterxmlJacksonDatabindMappingJsonFactory *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindMappingJsonFactory *new_ComFasterxmlJacksonDatabindMappingJsonFactory_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindMappingJsonFactory *create_ComFasterxmlJacksonDatabindMappingJsonFactory_init(void);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindMappingJsonFactory_initWithComFasterxmlJacksonDatabindObjectMapper_(ComFasterxmlJacksonDatabindMappingJsonFactory *self, ComFasterxmlJacksonDatabindObjectMapper *mapper);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindMappingJsonFactory *new_ComFasterxmlJacksonDatabindMappingJsonFactory_initWithComFasterxmlJacksonDatabindObjectMapper_(ComFasterxmlJacksonDatabindObjectMapper *mapper) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindMappingJsonFactory *create_ComFasterxmlJacksonDatabindMappingJsonFactory_initWithComFasterxmlJacksonDatabindObjectMapper_(ComFasterxmlJacksonDatabindObjectMapper *mapper);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindMappingJsonFactory_initWithComFasterxmlJacksonCoreJsonFactory_withComFasterxmlJacksonDatabindObjectMapper_(ComFasterxmlJacksonDatabindMappingJsonFactory *self, ComFasterxmlJacksonCoreJsonFactory *src, ComFasterxmlJacksonDatabindObjectMapper *mapper);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindMappingJsonFactory *new_ComFasterxmlJacksonDatabindMappingJsonFactory_initWithComFasterxmlJacksonCoreJsonFactory_withComFasterxmlJacksonDatabindObjectMapper_(ComFasterxmlJacksonCoreJsonFactory *src, ComFasterxmlJacksonDatabindObjectMapper *mapper) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindMappingJsonFactory *create_ComFasterxmlJacksonDatabindMappingJsonFactory_initWithComFasterxmlJacksonCoreJsonFactory_withComFasterxmlJacksonDatabindObjectMapper_(ComFasterxmlJacksonCoreJsonFactory *src, ComFasterxmlJacksonDatabindObjectMapper *mapper);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindMappingJsonFactory)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindMappingJsonFactory")
