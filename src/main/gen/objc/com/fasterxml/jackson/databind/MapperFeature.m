//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/MapperFeature.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/databind/MapperFeature.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"

@interface ComFasterxmlJacksonDatabindMapperFeature () {
 @public
  jboolean _defaultState_;
  jint _mask_;
}

@end

__attribute__((unused)) static void ComFasterxmlJacksonDatabindMapperFeature_initWithBoolean_withNSString_withInt_(ComFasterxmlJacksonDatabindMapperFeature *self, jboolean defaultState, NSString *__name, jint __ordinal);

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindMapperFeature)

ComFasterxmlJacksonDatabindMapperFeature *ComFasterxmlJacksonDatabindMapperFeature_values_[25];

@implementation ComFasterxmlJacksonDatabindMapperFeature

- (jboolean)enabledByDefault {
  return _defaultState_;
}

- (jint)getMask {
  return _mask_;
}

- (jboolean)enabledInWithInt:(jint)flags {
  return (flags & _mask_) != 0;
}

+ (IOSObjectArray *)values {
  return ComFasterxmlJacksonDatabindMapperFeature_values();
}

+ (ComFasterxmlJacksonDatabindMapperFeature *)valueOfWithNSString:(NSString *)name {
  return ComFasterxmlJacksonDatabindMapperFeature_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "[LComFasterxmlJacksonDatabindMapperFeature;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindMapperFeature;", 0x9, 2, 3, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(enabledByDefault);
  methods[1].selector = @selector(getMask);
  methods[2].selector = @selector(enabledInWithInt:);
  methods[3].selector = @selector(values);
  methods[4].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "USE_ANNOTATIONS", "LComFasterxmlJacksonDatabindMapperFeature;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
    { "USE_GETTERS_AS_SETTERS", "LComFasterxmlJacksonDatabindMapperFeature;", .constantValue.asLong = 0, 0x4019, -1, 5, -1, -1 },
    { "PROPAGATE_TRANSIENT_MARKER", "LComFasterxmlJacksonDatabindMapperFeature;", .constantValue.asLong = 0, 0x4019, -1, 6, -1, -1 },
    { "AUTO_DETECT_CREATORS", "LComFasterxmlJacksonDatabindMapperFeature;", .constantValue.asLong = 0, 0x4019, -1, 7, -1, -1 },
    { "AUTO_DETECT_FIELDS", "LComFasterxmlJacksonDatabindMapperFeature;", .constantValue.asLong = 0, 0x4019, -1, 8, -1, -1 },
    { "AUTO_DETECT_GETTERS", "LComFasterxmlJacksonDatabindMapperFeature;", .constantValue.asLong = 0, 0x4019, -1, 9, -1, -1 },
    { "AUTO_DETECT_IS_GETTERS", "LComFasterxmlJacksonDatabindMapperFeature;", .constantValue.asLong = 0, 0x4019, -1, 10, -1, -1 },
    { "AUTO_DETECT_SETTERS", "LComFasterxmlJacksonDatabindMapperFeature;", .constantValue.asLong = 0, 0x4019, -1, 11, -1, -1 },
    { "REQUIRE_SETTERS_FOR_GETTERS", "LComFasterxmlJacksonDatabindMapperFeature;", .constantValue.asLong = 0, 0x4019, -1, 12, -1, -1 },
    { "ALLOW_FINAL_FIELDS_AS_MUTATORS", "LComFasterxmlJacksonDatabindMapperFeature;", .constantValue.asLong = 0, 0x4019, -1, 13, -1, -1 },
    { "INFER_PROPERTY_MUTATORS", "LComFasterxmlJacksonDatabindMapperFeature;", .constantValue.asLong = 0, 0x4019, -1, 14, -1, -1 },
    { "INFER_CREATOR_FROM_CONSTRUCTOR_PROPERTIES", "LComFasterxmlJacksonDatabindMapperFeature;", .constantValue.asLong = 0, 0x4019, -1, 15, -1, -1 },
    { "CAN_OVERRIDE_ACCESS_MODIFIERS", "LComFasterxmlJacksonDatabindMapperFeature;", .constantValue.asLong = 0, 0x4019, -1, 16, -1, -1 },
    { "OVERRIDE_PUBLIC_ACCESS_MODIFIERS", "LComFasterxmlJacksonDatabindMapperFeature;", .constantValue.asLong = 0, 0x4019, -1, 17, -1, -1 },
    { "USE_STATIC_TYPING", "LComFasterxmlJacksonDatabindMapperFeature;", .constantValue.asLong = 0, 0x4019, -1, 18, -1, -1 },
    { "DEFAULT_VIEW_INCLUSION", "LComFasterxmlJacksonDatabindMapperFeature;", .constantValue.asLong = 0, 0x4019, -1, 19, -1, -1 },
    { "SORT_PROPERTIES_ALPHABETICALLY", "LComFasterxmlJacksonDatabindMapperFeature;", .constantValue.asLong = 0, 0x4019, -1, 20, -1, -1 },
    { "ACCEPT_CASE_INSENSITIVE_PROPERTIES", "LComFasterxmlJacksonDatabindMapperFeature;", .constantValue.asLong = 0, 0x4019, -1, 21, -1, -1 },
    { "ACCEPT_CASE_INSENSITIVE_ENUMS", "LComFasterxmlJacksonDatabindMapperFeature;", .constantValue.asLong = 0, 0x4019, -1, 22, -1, -1 },
    { "USE_WRAPPER_NAME_AS_PROPERTY_NAME", "LComFasterxmlJacksonDatabindMapperFeature;", .constantValue.asLong = 0, 0x4019, -1, 23, -1, -1 },
    { "USE_STD_BEAN_NAMING", "LComFasterxmlJacksonDatabindMapperFeature;", .constantValue.asLong = 0, 0x4019, -1, 24, -1, -1 },
    { "ALLOW_EXPLICIT_PROPERTY_RENAMING", "LComFasterxmlJacksonDatabindMapperFeature;", .constantValue.asLong = 0, 0x4019, -1, 25, -1, -1 },
    { "ALLOW_COERCION_OF_SCALARS", "LComFasterxmlJacksonDatabindMapperFeature;", .constantValue.asLong = 0, 0x4019, -1, 26, -1, -1 },
    { "IGNORE_DUPLICATE_MODULE_REGISTRATIONS", "LComFasterxmlJacksonDatabindMapperFeature;", .constantValue.asLong = 0, 0x4019, -1, 27, -1, -1 },
    { "IGNORE_MERGE_FOR_UNMERGEABLE", "LComFasterxmlJacksonDatabindMapperFeature;", .constantValue.asLong = 0, 0x4019, -1, 28, -1, -1 },
    { "_defaultState_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_mask_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "enabledIn", "I", "valueOf", "LNSString;", &JreEnum(ComFasterxmlJacksonDatabindMapperFeature, USE_ANNOTATIONS), &JreEnum(ComFasterxmlJacksonDatabindMapperFeature, USE_GETTERS_AS_SETTERS), &JreEnum(ComFasterxmlJacksonDatabindMapperFeature, PROPAGATE_TRANSIENT_MARKER), &JreEnum(ComFasterxmlJacksonDatabindMapperFeature, AUTO_DETECT_CREATORS), &JreEnum(ComFasterxmlJacksonDatabindMapperFeature, AUTO_DETECT_FIELDS), &JreEnum(ComFasterxmlJacksonDatabindMapperFeature, AUTO_DETECT_GETTERS), &JreEnum(ComFasterxmlJacksonDatabindMapperFeature, AUTO_DETECT_IS_GETTERS), &JreEnum(ComFasterxmlJacksonDatabindMapperFeature, AUTO_DETECT_SETTERS), &JreEnum(ComFasterxmlJacksonDatabindMapperFeature, REQUIRE_SETTERS_FOR_GETTERS), &JreEnum(ComFasterxmlJacksonDatabindMapperFeature, ALLOW_FINAL_FIELDS_AS_MUTATORS), &JreEnum(ComFasterxmlJacksonDatabindMapperFeature, INFER_PROPERTY_MUTATORS), &JreEnum(ComFasterxmlJacksonDatabindMapperFeature, INFER_CREATOR_FROM_CONSTRUCTOR_PROPERTIES), &JreEnum(ComFasterxmlJacksonDatabindMapperFeature, CAN_OVERRIDE_ACCESS_MODIFIERS), &JreEnum(ComFasterxmlJacksonDatabindMapperFeature, OVERRIDE_PUBLIC_ACCESS_MODIFIERS), &JreEnum(ComFasterxmlJacksonDatabindMapperFeature, USE_STATIC_TYPING), &JreEnum(ComFasterxmlJacksonDatabindMapperFeature, DEFAULT_VIEW_INCLUSION), &JreEnum(ComFasterxmlJacksonDatabindMapperFeature, SORT_PROPERTIES_ALPHABETICALLY), &JreEnum(ComFasterxmlJacksonDatabindMapperFeature, ACCEPT_CASE_INSENSITIVE_PROPERTIES), &JreEnum(ComFasterxmlJacksonDatabindMapperFeature, ACCEPT_CASE_INSENSITIVE_ENUMS), &JreEnum(ComFasterxmlJacksonDatabindMapperFeature, USE_WRAPPER_NAME_AS_PROPERTY_NAME), &JreEnum(ComFasterxmlJacksonDatabindMapperFeature, USE_STD_BEAN_NAMING), &JreEnum(ComFasterxmlJacksonDatabindMapperFeature, ALLOW_EXPLICIT_PROPERTY_RENAMING), &JreEnum(ComFasterxmlJacksonDatabindMapperFeature, ALLOW_COERCION_OF_SCALARS), &JreEnum(ComFasterxmlJacksonDatabindMapperFeature, IGNORE_DUPLICATE_MODULE_REGISTRATIONS), &JreEnum(ComFasterxmlJacksonDatabindMapperFeature, IGNORE_MERGE_FOR_UNMERGEABLE), "Ljava/lang/Enum<Lcom/fasterxml/jackson/databind/MapperFeature;>;Lcom/fasterxml/jackson/databind/cfg/ConfigFeature;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindMapperFeature = { "MapperFeature", "com.fasterxml.jackson.databind", ptrTable, methods, fields, 7, 0x4011, 5, 27, -1, -1, -1, 29, -1 };
  return &_ComFasterxmlJacksonDatabindMapperFeature;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindMapperFeature class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 25 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    ((void) (JreEnum(ComFasterxmlJacksonDatabindMapperFeature, USE_ANNOTATIONS) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonDatabindMapperFeature_initWithBoolean_withNSString_withInt_(e, true, @"USE_ANNOTATIONS", 0);
    ((void) (JreEnum(ComFasterxmlJacksonDatabindMapperFeature, USE_GETTERS_AS_SETTERS) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonDatabindMapperFeature_initWithBoolean_withNSString_withInt_(e, true, @"USE_GETTERS_AS_SETTERS", 1);
    ((void) (JreEnum(ComFasterxmlJacksonDatabindMapperFeature, PROPAGATE_TRANSIENT_MARKER) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonDatabindMapperFeature_initWithBoolean_withNSString_withInt_(e, false, @"PROPAGATE_TRANSIENT_MARKER", 2);
    ((void) (JreEnum(ComFasterxmlJacksonDatabindMapperFeature, AUTO_DETECT_CREATORS) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonDatabindMapperFeature_initWithBoolean_withNSString_withInt_(e, true, @"AUTO_DETECT_CREATORS", 3);
    ((void) (JreEnum(ComFasterxmlJacksonDatabindMapperFeature, AUTO_DETECT_FIELDS) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonDatabindMapperFeature_initWithBoolean_withNSString_withInt_(e, true, @"AUTO_DETECT_FIELDS", 4);
    ((void) (JreEnum(ComFasterxmlJacksonDatabindMapperFeature, AUTO_DETECT_GETTERS) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonDatabindMapperFeature_initWithBoolean_withNSString_withInt_(e, true, @"AUTO_DETECT_GETTERS", 5);
    ((void) (JreEnum(ComFasterxmlJacksonDatabindMapperFeature, AUTO_DETECT_IS_GETTERS) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonDatabindMapperFeature_initWithBoolean_withNSString_withInt_(e, true, @"AUTO_DETECT_IS_GETTERS", 6);
    ((void) (JreEnum(ComFasterxmlJacksonDatabindMapperFeature, AUTO_DETECT_SETTERS) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonDatabindMapperFeature_initWithBoolean_withNSString_withInt_(e, true, @"AUTO_DETECT_SETTERS", 7);
    ((void) (JreEnum(ComFasterxmlJacksonDatabindMapperFeature, REQUIRE_SETTERS_FOR_GETTERS) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonDatabindMapperFeature_initWithBoolean_withNSString_withInt_(e, false, @"REQUIRE_SETTERS_FOR_GETTERS", 8);
    ((void) (JreEnum(ComFasterxmlJacksonDatabindMapperFeature, ALLOW_FINAL_FIELDS_AS_MUTATORS) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonDatabindMapperFeature_initWithBoolean_withNSString_withInt_(e, true, @"ALLOW_FINAL_FIELDS_AS_MUTATORS", 9);
    ((void) (JreEnum(ComFasterxmlJacksonDatabindMapperFeature, INFER_PROPERTY_MUTATORS) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonDatabindMapperFeature_initWithBoolean_withNSString_withInt_(e, true, @"INFER_PROPERTY_MUTATORS", 10);
    ((void) (JreEnum(ComFasterxmlJacksonDatabindMapperFeature, INFER_CREATOR_FROM_CONSTRUCTOR_PROPERTIES) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonDatabindMapperFeature_initWithBoolean_withNSString_withInt_(e, true, @"INFER_CREATOR_FROM_CONSTRUCTOR_PROPERTIES", 11);
    ((void) (JreEnum(ComFasterxmlJacksonDatabindMapperFeature, CAN_OVERRIDE_ACCESS_MODIFIERS) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonDatabindMapperFeature_initWithBoolean_withNSString_withInt_(e, true, @"CAN_OVERRIDE_ACCESS_MODIFIERS", 12);
    ((void) (JreEnum(ComFasterxmlJacksonDatabindMapperFeature, OVERRIDE_PUBLIC_ACCESS_MODIFIERS) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonDatabindMapperFeature_initWithBoolean_withNSString_withInt_(e, true, @"OVERRIDE_PUBLIC_ACCESS_MODIFIERS", 13);
    ((void) (JreEnum(ComFasterxmlJacksonDatabindMapperFeature, USE_STATIC_TYPING) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonDatabindMapperFeature_initWithBoolean_withNSString_withInt_(e, false, @"USE_STATIC_TYPING", 14);
    ((void) (JreEnum(ComFasterxmlJacksonDatabindMapperFeature, DEFAULT_VIEW_INCLUSION) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonDatabindMapperFeature_initWithBoolean_withNSString_withInt_(e, true, @"DEFAULT_VIEW_INCLUSION", 15);
    ((void) (JreEnum(ComFasterxmlJacksonDatabindMapperFeature, SORT_PROPERTIES_ALPHABETICALLY) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonDatabindMapperFeature_initWithBoolean_withNSString_withInt_(e, false, @"SORT_PROPERTIES_ALPHABETICALLY", 16);
    ((void) (JreEnum(ComFasterxmlJacksonDatabindMapperFeature, ACCEPT_CASE_INSENSITIVE_PROPERTIES) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonDatabindMapperFeature_initWithBoolean_withNSString_withInt_(e, false, @"ACCEPT_CASE_INSENSITIVE_PROPERTIES", 17);
    ((void) (JreEnum(ComFasterxmlJacksonDatabindMapperFeature, ACCEPT_CASE_INSENSITIVE_ENUMS) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonDatabindMapperFeature_initWithBoolean_withNSString_withInt_(e, false, @"ACCEPT_CASE_INSENSITIVE_ENUMS", 18);
    ((void) (JreEnum(ComFasterxmlJacksonDatabindMapperFeature, USE_WRAPPER_NAME_AS_PROPERTY_NAME) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonDatabindMapperFeature_initWithBoolean_withNSString_withInt_(e, false, @"USE_WRAPPER_NAME_AS_PROPERTY_NAME", 19);
    ((void) (JreEnum(ComFasterxmlJacksonDatabindMapperFeature, USE_STD_BEAN_NAMING) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonDatabindMapperFeature_initWithBoolean_withNSString_withInt_(e, false, @"USE_STD_BEAN_NAMING", 20);
    ((void) (JreEnum(ComFasterxmlJacksonDatabindMapperFeature, ALLOW_EXPLICIT_PROPERTY_RENAMING) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonDatabindMapperFeature_initWithBoolean_withNSString_withInt_(e, false, @"ALLOW_EXPLICIT_PROPERTY_RENAMING", 21);
    ((void) (JreEnum(ComFasterxmlJacksonDatabindMapperFeature, ALLOW_COERCION_OF_SCALARS) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonDatabindMapperFeature_initWithBoolean_withNSString_withInt_(e, true, @"ALLOW_COERCION_OF_SCALARS", 22);
    ((void) (JreEnum(ComFasterxmlJacksonDatabindMapperFeature, IGNORE_DUPLICATE_MODULE_REGISTRATIONS) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonDatabindMapperFeature_initWithBoolean_withNSString_withInt_(e, true, @"IGNORE_DUPLICATE_MODULE_REGISTRATIONS", 23);
    ((void) (JreEnum(ComFasterxmlJacksonDatabindMapperFeature, IGNORE_MERGE_FOR_UNMERGEABLE) = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
    ComFasterxmlJacksonDatabindMapperFeature_initWithBoolean_withNSString_withInt_(e, true, @"IGNORE_MERGE_FOR_UNMERGEABLE", 24);
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindMapperFeature)
  }
}

@end

void ComFasterxmlJacksonDatabindMapperFeature_initWithBoolean_withNSString_withInt_(ComFasterxmlJacksonDatabindMapperFeature *self, jboolean defaultState, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
  self->_defaultState_ = defaultState;
  self->_mask_ = (JreLShift32(1, [self ordinal]));
}

IOSObjectArray *ComFasterxmlJacksonDatabindMapperFeature_values() {
  ComFasterxmlJacksonDatabindMapperFeature_initialize();
  return [IOSObjectArray arrayWithObjects:ComFasterxmlJacksonDatabindMapperFeature_values_ count:25 type:ComFasterxmlJacksonDatabindMapperFeature_class_()];
}

ComFasterxmlJacksonDatabindMapperFeature *ComFasterxmlJacksonDatabindMapperFeature_valueOfWithNSString_(NSString *name) {
  ComFasterxmlJacksonDatabindMapperFeature_initialize();
  for (int i = 0; i < 25; i++) {
    ComFasterxmlJacksonDatabindMapperFeature *e = ComFasterxmlJacksonDatabindMapperFeature_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComFasterxmlJacksonDatabindMapperFeature *ComFasterxmlJacksonDatabindMapperFeature_fromOrdinal(NSUInteger ordinal) {
  ComFasterxmlJacksonDatabindMapperFeature_initialize();
  if (ordinal >= 25) {
    return nil;
  }
  return ComFasterxmlJacksonDatabindMapperFeature_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindMapperFeature)
