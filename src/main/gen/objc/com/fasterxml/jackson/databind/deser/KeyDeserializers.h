//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/deser/KeyDeserializers.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserKeyDeserializers")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindDeserKeyDeserializers
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserKeyDeserializers 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserKeyDeserializers 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindDeserKeyDeserializers

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindDeserKeyDeserializers_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserKeyDeserializers || defined(INCLUDE_ComFasterxmlJacksonDatabindDeserKeyDeserializers))
#define ComFasterxmlJacksonDatabindDeserKeyDeserializers_

@class ComFasterxmlJacksonDatabindBeanDescription;
@class ComFasterxmlJacksonDatabindDeserializationConfig;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindKeyDeserializer;

/*!
 @brief Interface that defines API for simple extensions that can provide additional deserializers
  for deserializer Map keys of various types, from JSON property names.
 Access is by a single callback method; instance is to either return
  a configured <code>KeyDeserializer</code> for specified type, or null to indicate that it
  does not support handling of the type. In latter case, further calls can be made
  for other providers; in former case returned key deserializer is used for handling of
  key instances of specified type.
 */
@protocol ComFasterxmlJacksonDatabindDeserKeyDeserializers < JavaObject >

- (ComFasterxmlJacksonDatabindKeyDeserializer *)findKeyDeserializerWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                      withComFasterxmlJacksonDatabindDeserializationConfig:(ComFasterxmlJacksonDatabindDeserializationConfig *)config
                                                            withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindDeserKeyDeserializers)

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindDeserKeyDeserializers)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserKeyDeserializers")
