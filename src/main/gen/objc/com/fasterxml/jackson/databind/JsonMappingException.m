//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/JsonMappingException.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/annotation/JsonIgnore.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/core/JsonLocation.h"
#include "com/fasterxml/jackson/core/JsonParser.h"
#include "com/fasterxml/jackson/core/JsonProcessingException.h"
#include "com/fasterxml/jackson/databind/DeserializationContext.h"
#include "com/fasterxml/jackson/databind/JsonMappingException.h"
#include "com/fasterxml/jackson/databind/SerializerProvider.h"
#include "java/io/Closeable.h"
#include "java/io/IOException.h"
#include "java/lang/Deprecated.h"
#include "java/lang/NullPointerException.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/Throwable.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Collections.h"
#include "java/util/Iterator.h"
#include "java/util/LinkedList.h"
#include "java/util/List.h"

inline jlong ComFasterxmlJacksonDatabindJsonMappingException_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindJsonMappingException_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindJsonMappingException, serialVersionUID, jlong)

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindJsonMappingException__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindJsonMappingException__Annotations$1(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindJsonMappingException__Annotations$2(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindJsonMappingException__Annotations$3(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindJsonMappingException__Annotations$4(void);

inline jlong ComFasterxmlJacksonDatabindJsonMappingException_Reference_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindJsonMappingException_Reference_serialVersionUID 2LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindJsonMappingException_Reference, serialVersionUID, jlong)

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindJsonMappingException_Reference__Annotations$0(void);

@implementation ComFasterxmlJacksonDatabindJsonMappingException

- (instancetype __nonnull)initWithNSString:(NSString *)msg {
  ComFasterxmlJacksonDatabindJsonMappingException_initWithNSString_(self, msg);
  return self;
}

- (instancetype __nonnull)initWithNSString:(NSString *)msg
                     withJavaLangThrowable:(JavaLangThrowable *)rootCause {
  ComFasterxmlJacksonDatabindJsonMappingException_initWithNSString_withJavaLangThrowable_(self, msg, rootCause);
  return self;
}

- (instancetype __nonnull)initWithNSString:(NSString *)msg
   withComFasterxmlJacksonCoreJsonLocation:(ComFasterxmlJacksonCoreJsonLocation *)loc {
  ComFasterxmlJacksonDatabindJsonMappingException_initWithNSString_withComFasterxmlJacksonCoreJsonLocation_(self, msg, loc);
  return self;
}

- (instancetype __nonnull)initWithNSString:(NSString *)msg
   withComFasterxmlJacksonCoreJsonLocation:(ComFasterxmlJacksonCoreJsonLocation *)loc
                     withJavaLangThrowable:(JavaLangThrowable *)rootCause {
  ComFasterxmlJacksonDatabindJsonMappingException_initWithNSString_withComFasterxmlJacksonCoreJsonLocation_withJavaLangThrowable_(self, msg, loc, rootCause);
  return self;
}

- (instancetype __nonnull)initWithJavaIoCloseable:(id<JavaIoCloseable>)processor
                                     withNSString:(NSString *)msg {
  ComFasterxmlJacksonDatabindJsonMappingException_initWithJavaIoCloseable_withNSString_(self, processor, msg);
  return self;
}

- (instancetype __nonnull)initWithJavaIoCloseable:(id<JavaIoCloseable>)processor
                                     withNSString:(NSString *)msg
                            withJavaLangThrowable:(JavaLangThrowable *)problem {
  ComFasterxmlJacksonDatabindJsonMappingException_initWithJavaIoCloseable_withNSString_withJavaLangThrowable_(self, processor, msg, problem);
  return self;
}

- (instancetype __nonnull)initWithJavaIoCloseable:(id<JavaIoCloseable>)processor
                                     withNSString:(NSString *)msg
          withComFasterxmlJacksonCoreJsonLocation:(ComFasterxmlJacksonCoreJsonLocation *)loc {
  ComFasterxmlJacksonDatabindJsonMappingException_initWithJavaIoCloseable_withNSString_withComFasterxmlJacksonCoreJsonLocation_(self, processor, msg, loc);
  return self;
}

+ (ComFasterxmlJacksonDatabindJsonMappingException *)fromWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                                                                                  withNSString:(NSString *)msg {
  return ComFasterxmlJacksonDatabindJsonMappingException_fromWithComFasterxmlJacksonCoreJsonParser_withNSString_(p, msg);
}

+ (ComFasterxmlJacksonDatabindJsonMappingException *)fromWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                                                                                  withNSString:(NSString *)msg
                                                                         withJavaLangThrowable:(JavaLangThrowable *)problem {
  return ComFasterxmlJacksonDatabindJsonMappingException_fromWithComFasterxmlJacksonCoreJsonParser_withNSString_withJavaLangThrowable_(p, msg, problem);
}

+ (ComFasterxmlJacksonDatabindJsonMappingException *)fromWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
                                                                                     withNSString:(NSString *)msg {
  return ComFasterxmlJacksonDatabindJsonMappingException_fromWithComFasterxmlJacksonCoreJsonGenerator_withNSString_(g, msg);
}

+ (ComFasterxmlJacksonDatabindJsonMappingException *)fromWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
                                                                                     withNSString:(NSString *)msg
                                                                            withJavaLangThrowable:(JavaLangThrowable *)problem {
  return ComFasterxmlJacksonDatabindJsonMappingException_fromWithComFasterxmlJacksonCoreJsonGenerator_withNSString_withJavaLangThrowable_(g, msg, problem);
}

+ (ComFasterxmlJacksonDatabindJsonMappingException *)fromWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                                                  withNSString:(NSString *)msg {
  return ComFasterxmlJacksonDatabindJsonMappingException_fromWithComFasterxmlJacksonDatabindDeserializationContext_withNSString_(ctxt, msg);
}

+ (ComFasterxmlJacksonDatabindJsonMappingException *)fromWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                                                  withNSString:(NSString *)msg
                                                                                         withJavaLangThrowable:(JavaLangThrowable *)t {
  return ComFasterxmlJacksonDatabindJsonMappingException_fromWithComFasterxmlJacksonDatabindDeserializationContext_withNSString_withJavaLangThrowable_(ctxt, msg, t);
}

+ (ComFasterxmlJacksonDatabindJsonMappingException *)fromWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)ctxt
                                                                                              withNSString:(NSString *)msg {
  return ComFasterxmlJacksonDatabindJsonMappingException_fromWithComFasterxmlJacksonDatabindSerializerProvider_withNSString_(ctxt, msg);
}

+ (ComFasterxmlJacksonDatabindJsonMappingException *)fromWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)ctxt
                                                                                              withNSString:(NSString *)msg
                                                                                     withJavaLangThrowable:(JavaLangThrowable *)problem {
  return ComFasterxmlJacksonDatabindJsonMappingException_fromWithComFasterxmlJacksonDatabindSerializerProvider_withNSString_withJavaLangThrowable_(ctxt, msg, problem);
}

+ (ComFasterxmlJacksonDatabindJsonMappingException *)fromUnexpectedIOEWithJavaIoIOException:(JavaIoIOException *)src {
  return ComFasterxmlJacksonDatabindJsonMappingException_fromUnexpectedIOEWithJavaIoIOException_(src);
}

+ (ComFasterxmlJacksonDatabindJsonMappingException *)wrapWithPathWithJavaLangThrowable:(JavaLangThrowable *)src
                                                                                withId:(id)refFrom
                                                                          withNSString:(NSString *)refFieldName {
  return ComFasterxmlJacksonDatabindJsonMappingException_wrapWithPathWithJavaLangThrowable_withId_withNSString_(src, refFrom, refFieldName);
}

+ (ComFasterxmlJacksonDatabindJsonMappingException *)wrapWithPathWithJavaLangThrowable:(JavaLangThrowable *)src
                                                                                withId:(id)refFrom
                                                                               withInt:(jint)index {
  return ComFasterxmlJacksonDatabindJsonMappingException_wrapWithPathWithJavaLangThrowable_withId_withInt_(src, refFrom, index);
}

+ (ComFasterxmlJacksonDatabindJsonMappingException *)wrapWithPathWithJavaLangThrowable:(JavaLangThrowable *)src
                         withComFasterxmlJacksonDatabindJsonMappingException_Reference:(ComFasterxmlJacksonDatabindJsonMappingException_Reference *)ref {
  return ComFasterxmlJacksonDatabindJsonMappingException_wrapWithPathWithJavaLangThrowable_withComFasterxmlJacksonDatabindJsonMappingException_Reference_(src, ref);
}

- (id<JavaUtilList>)getPath {
  if (_path_ == nil) {
    return JavaUtilCollections_emptyList();
  }
  return JavaUtilCollections_unmodifiableListWithJavaUtilList_(_path_);
}

- (NSString *)getPathReference {
  return [((JavaLangStringBuilder *) nil_chk([self getPathReferenceWithJavaLangStringBuilder:create_JavaLangStringBuilder_init()])) description];
}

- (JavaLangStringBuilder *)getPathReferenceWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
  [self _appendPathDescWithJavaLangStringBuilder:sb];
  return sb;
}

- (void)prependPathWithId:(id)referrer
             withNSString:(NSString *)fieldName {
  ComFasterxmlJacksonDatabindJsonMappingException_Reference *ref = create_ComFasterxmlJacksonDatabindJsonMappingException_Reference_initWithId_withNSString_(referrer, fieldName);
  [self prependPathWithComFasterxmlJacksonDatabindJsonMappingException_Reference:ref];
}

- (void)prependPathWithId:(id)referrer
                  withInt:(jint)index {
  ComFasterxmlJacksonDatabindJsonMappingException_Reference *ref = create_ComFasterxmlJacksonDatabindJsonMappingException_Reference_initWithId_withInt_(referrer, index);
  [self prependPathWithComFasterxmlJacksonDatabindJsonMappingException_Reference:ref];
}

- (void)prependPathWithComFasterxmlJacksonDatabindJsonMappingException_Reference:(ComFasterxmlJacksonDatabindJsonMappingException_Reference *)r {
  if (_path_ == nil) {
    JreStrongAssignAndConsume(&_path_, new_JavaUtilLinkedList_init());
  }
  if ([_path_ size] < ComFasterxmlJacksonDatabindJsonMappingException_MAX_REFS_TO_LIST) {
    [((JavaUtilLinkedList *) nil_chk(_path_)) addFirstWithId:r];
  }
}

- (id)getProcessor {
  return _processor_;
}

- (NSString *)getLocalizedMessage {
  return [self _buildMessage];
}

- (NSString *)getMessage {
  return [self _buildMessage];
}

- (NSString *)_buildMessage {
  NSString *msg = [super getMessage];
  if (_path_ == nil) {
    return msg;
  }
  JavaLangStringBuilder *sb = (msg == nil) ? create_JavaLangStringBuilder_init() : create_JavaLangStringBuilder_initWithNSString_(msg);
  [sb appendWithNSString:@" (through reference chain: "];
  sb = [self getPathReferenceWithJavaLangStringBuilder:sb];
  [((JavaLangStringBuilder *) nil_chk(sb)) appendWithChar:')'];
  return [sb description];
}

- (NSString *)description {
  return JreStrcat("$$$", [[self java_getClass] getName], @": ", [self getMessage]);
}

- (void)_appendPathDescWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
  if (_path_ == nil) {
    return;
  }
  id<JavaUtilIterator> it = [_path_ iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    [((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:[((ComFasterxmlJacksonDatabindJsonMappingException_Reference *) nil_chk([it next])) description]];
    if ([it hasNext]) {
      [sb appendWithNSString:@"->"];
    }
  }
}

- (void)dealloc {
  RELEASE_(_path_);
  RELEASE_(_processor_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, 1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, 3, -1 },
    { NULL, NULL, 0x1, -1, 4, -1, -1, 5, -1 },
    { NULL, NULL, 0x1, -1, 6, -1, -1, 7, -1 },
    { NULL, NULL, 0x1, -1, 8, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 9, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 10, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonMappingException;", 0x9, 11, 12, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonMappingException;", 0x9, 11, 13, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonMappingException;", 0x9, 11, 14, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonMappingException;", 0x9, 11, 15, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonMappingException;", 0x9, 11, 16, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonMappingException;", 0x9, 11, 17, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonMappingException;", 0x9, 11, 18, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonMappingException;", 0x9, 11, 19, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonMappingException;", 0x9, 20, 21, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonMappingException;", 0x9, 22, 23, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonMappingException;", 0x9, 22, 24, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonMappingException;", 0x9, 22, 25, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 26, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuilder;", 0x1, 27, 28, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 29, 30, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 29, 31, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 29, 32, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, 33, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 34, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 35, 28, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:);
  methods[1].selector = @selector(initWithNSString:withJavaLangThrowable:);
  methods[2].selector = @selector(initWithNSString:withComFasterxmlJacksonCoreJsonLocation:);
  methods[3].selector = @selector(initWithNSString:withComFasterxmlJacksonCoreJsonLocation:withJavaLangThrowable:);
  methods[4].selector = @selector(initWithJavaIoCloseable:withNSString:);
  methods[5].selector = @selector(initWithJavaIoCloseable:withNSString:withJavaLangThrowable:);
  methods[6].selector = @selector(initWithJavaIoCloseable:withNSString:withComFasterxmlJacksonCoreJsonLocation:);
  methods[7].selector = @selector(fromWithComFasterxmlJacksonCoreJsonParser:withNSString:);
  methods[8].selector = @selector(fromWithComFasterxmlJacksonCoreJsonParser:withNSString:withJavaLangThrowable:);
  methods[9].selector = @selector(fromWithComFasterxmlJacksonCoreJsonGenerator:withNSString:);
  methods[10].selector = @selector(fromWithComFasterxmlJacksonCoreJsonGenerator:withNSString:withJavaLangThrowable:);
  methods[11].selector = @selector(fromWithComFasterxmlJacksonDatabindDeserializationContext:withNSString:);
  methods[12].selector = @selector(fromWithComFasterxmlJacksonDatabindDeserializationContext:withNSString:withJavaLangThrowable:);
  methods[13].selector = @selector(fromWithComFasterxmlJacksonDatabindSerializerProvider:withNSString:);
  methods[14].selector = @selector(fromWithComFasterxmlJacksonDatabindSerializerProvider:withNSString:withJavaLangThrowable:);
  methods[15].selector = @selector(fromUnexpectedIOEWithJavaIoIOException:);
  methods[16].selector = @selector(wrapWithPathWithJavaLangThrowable:withId:withNSString:);
  methods[17].selector = @selector(wrapWithPathWithJavaLangThrowable:withId:withInt:);
  methods[18].selector = @selector(wrapWithPathWithJavaLangThrowable:withComFasterxmlJacksonDatabindJsonMappingException_Reference:);
  methods[19].selector = @selector(getPath);
  methods[20].selector = @selector(getPathReference);
  methods[21].selector = @selector(getPathReferenceWithJavaLangStringBuilder:);
  methods[22].selector = @selector(prependPathWithId:withNSString:);
  methods[23].selector = @selector(prependPathWithId:withInt:);
  methods[24].selector = @selector(prependPathWithComFasterxmlJacksonDatabindJsonMappingException_Reference:);
  methods[25].selector = @selector(getProcessor);
  methods[26].selector = @selector(getLocalizedMessage);
  methods[27].selector = @selector(getMessage);
  methods[28].selector = @selector(_buildMessage);
  methods[29].selector = @selector(description);
  methods[30].selector = @selector(_appendPathDescWithJavaLangStringBuilder:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindJsonMappingException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "MAX_REFS_TO_LIST", "I", .constantValue.asInt = ComFasterxmlJacksonDatabindJsonMappingException_MAX_REFS_TO_LIST, 0x18, -1, -1, -1, -1 },
    { "_path_", "LJavaUtilLinkedList;", .constantValue.asLong = 0, 0x4, -1, -1, 36, -1 },
    { "_processor_", "LJavaIoCloseable;", .constantValue.asLong = 0, 0x84, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;", (void *)&ComFasterxmlJacksonDatabindJsonMappingException__Annotations$0, "LNSString;LJavaLangThrowable;", (void *)&ComFasterxmlJacksonDatabindJsonMappingException__Annotations$1, "LNSString;LComFasterxmlJacksonCoreJsonLocation;", (void *)&ComFasterxmlJacksonDatabindJsonMappingException__Annotations$2, "LNSString;LComFasterxmlJacksonCoreJsonLocation;LJavaLangThrowable;", (void *)&ComFasterxmlJacksonDatabindJsonMappingException__Annotations$3, "LJavaIoCloseable;LNSString;", "LJavaIoCloseable;LNSString;LJavaLangThrowable;", "LJavaIoCloseable;LNSString;LComFasterxmlJacksonCoreJsonLocation;", "from", "LComFasterxmlJacksonCoreJsonParser;LNSString;", "LComFasterxmlJacksonCoreJsonParser;LNSString;LJavaLangThrowable;", "LComFasterxmlJacksonCoreJsonGenerator;LNSString;", "LComFasterxmlJacksonCoreJsonGenerator;LNSString;LJavaLangThrowable;", "LComFasterxmlJacksonDatabindDeserializationContext;LNSString;", "LComFasterxmlJacksonDatabindDeserializationContext;LNSString;LJavaLangThrowable;", "LComFasterxmlJacksonDatabindSerializerProvider;LNSString;", "LComFasterxmlJacksonDatabindSerializerProvider;LNSString;LJavaLangThrowable;", "fromUnexpectedIOE", "LJavaIoIOException;", "wrapWithPath", "LJavaLangThrowable;LNSObject;LNSString;", "LJavaLangThrowable;LNSObject;I", "LJavaLangThrowable;LComFasterxmlJacksonDatabindJsonMappingException_Reference;", "()Ljava/util/List<Lcom/fasterxml/jackson/databind/JsonMappingException$Reference;>;", "getPathReference", "LJavaLangStringBuilder;", "prependPath", "LNSObject;LNSString;", "LNSObject;I", "LComFasterxmlJacksonDatabindJsonMappingException_Reference;", (void *)&ComFasterxmlJacksonDatabindJsonMappingException__Annotations$4, "toString", "_appendPathDesc", "Ljava/util/LinkedList<Lcom/fasterxml/jackson/databind/JsonMappingException$Reference;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindJsonMappingException = { "JsonMappingException", "com.fasterxml.jackson.databind", ptrTable, methods, fields, 7, 0x1, 31, 4, -1, 32, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindJsonMappingException;
}

@end

void ComFasterxmlJacksonDatabindJsonMappingException_initWithNSString_(ComFasterxmlJacksonDatabindJsonMappingException *self, NSString *msg) {
  ComFasterxmlJacksonCoreJsonProcessingException_initWithNSString_(self, msg);
}

ComFasterxmlJacksonDatabindJsonMappingException *new_ComFasterxmlJacksonDatabindJsonMappingException_initWithNSString_(NSString *msg) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindJsonMappingException, initWithNSString_, msg)
}

ComFasterxmlJacksonDatabindJsonMappingException *create_ComFasterxmlJacksonDatabindJsonMappingException_initWithNSString_(NSString *msg) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindJsonMappingException, initWithNSString_, msg)
}

void ComFasterxmlJacksonDatabindJsonMappingException_initWithNSString_withJavaLangThrowable_(ComFasterxmlJacksonDatabindJsonMappingException *self, NSString *msg, JavaLangThrowable *rootCause) {
  ComFasterxmlJacksonCoreJsonProcessingException_initWithNSString_withJavaLangThrowable_(self, msg, rootCause);
}

ComFasterxmlJacksonDatabindJsonMappingException *new_ComFasterxmlJacksonDatabindJsonMappingException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *rootCause) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindJsonMappingException, initWithNSString_withJavaLangThrowable_, msg, rootCause)
}

ComFasterxmlJacksonDatabindJsonMappingException *create_ComFasterxmlJacksonDatabindJsonMappingException_initWithNSString_withJavaLangThrowable_(NSString *msg, JavaLangThrowable *rootCause) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindJsonMappingException, initWithNSString_withJavaLangThrowable_, msg, rootCause)
}

void ComFasterxmlJacksonDatabindJsonMappingException_initWithNSString_withComFasterxmlJacksonCoreJsonLocation_(ComFasterxmlJacksonDatabindJsonMappingException *self, NSString *msg, ComFasterxmlJacksonCoreJsonLocation *loc) {
  ComFasterxmlJacksonCoreJsonProcessingException_initWithNSString_withComFasterxmlJacksonCoreJsonLocation_(self, msg, loc);
}

ComFasterxmlJacksonDatabindJsonMappingException *new_ComFasterxmlJacksonDatabindJsonMappingException_initWithNSString_withComFasterxmlJacksonCoreJsonLocation_(NSString *msg, ComFasterxmlJacksonCoreJsonLocation *loc) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindJsonMappingException, initWithNSString_withComFasterxmlJacksonCoreJsonLocation_, msg, loc)
}

ComFasterxmlJacksonDatabindJsonMappingException *create_ComFasterxmlJacksonDatabindJsonMappingException_initWithNSString_withComFasterxmlJacksonCoreJsonLocation_(NSString *msg, ComFasterxmlJacksonCoreJsonLocation *loc) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindJsonMappingException, initWithNSString_withComFasterxmlJacksonCoreJsonLocation_, msg, loc)
}

void ComFasterxmlJacksonDatabindJsonMappingException_initWithNSString_withComFasterxmlJacksonCoreJsonLocation_withJavaLangThrowable_(ComFasterxmlJacksonDatabindJsonMappingException *self, NSString *msg, ComFasterxmlJacksonCoreJsonLocation *loc, JavaLangThrowable *rootCause) {
  ComFasterxmlJacksonCoreJsonProcessingException_initWithNSString_withComFasterxmlJacksonCoreJsonLocation_withJavaLangThrowable_(self, msg, loc, rootCause);
}

ComFasterxmlJacksonDatabindJsonMappingException *new_ComFasterxmlJacksonDatabindJsonMappingException_initWithNSString_withComFasterxmlJacksonCoreJsonLocation_withJavaLangThrowable_(NSString *msg, ComFasterxmlJacksonCoreJsonLocation *loc, JavaLangThrowable *rootCause) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindJsonMappingException, initWithNSString_withComFasterxmlJacksonCoreJsonLocation_withJavaLangThrowable_, msg, loc, rootCause)
}

ComFasterxmlJacksonDatabindJsonMappingException *create_ComFasterxmlJacksonDatabindJsonMappingException_initWithNSString_withComFasterxmlJacksonCoreJsonLocation_withJavaLangThrowable_(NSString *msg, ComFasterxmlJacksonCoreJsonLocation *loc, JavaLangThrowable *rootCause) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindJsonMappingException, initWithNSString_withComFasterxmlJacksonCoreJsonLocation_withJavaLangThrowable_, msg, loc, rootCause)
}

void ComFasterxmlJacksonDatabindJsonMappingException_initWithJavaIoCloseable_withNSString_(ComFasterxmlJacksonDatabindJsonMappingException *self, id<JavaIoCloseable> processor, NSString *msg) {
  ComFasterxmlJacksonCoreJsonProcessingException_initWithNSString_(self, msg);
  JreStrongAssign(&self->_processor_, processor);
  if ([processor isKindOfClass:[ComFasterxmlJacksonCoreJsonParser class]]) {
    JreStrongAssign(&self->_location_, [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(((ComFasterxmlJacksonCoreJsonParser *) cast_chk(processor, [ComFasterxmlJacksonCoreJsonParser class])))) getTokenLocation]);
  }
}

ComFasterxmlJacksonDatabindJsonMappingException *new_ComFasterxmlJacksonDatabindJsonMappingException_initWithJavaIoCloseable_withNSString_(id<JavaIoCloseable> processor, NSString *msg) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindJsonMappingException, initWithJavaIoCloseable_withNSString_, processor, msg)
}

ComFasterxmlJacksonDatabindJsonMappingException *create_ComFasterxmlJacksonDatabindJsonMappingException_initWithJavaIoCloseable_withNSString_(id<JavaIoCloseable> processor, NSString *msg) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindJsonMappingException, initWithJavaIoCloseable_withNSString_, processor, msg)
}

void ComFasterxmlJacksonDatabindJsonMappingException_initWithJavaIoCloseable_withNSString_withJavaLangThrowable_(ComFasterxmlJacksonDatabindJsonMappingException *self, id<JavaIoCloseable> processor, NSString *msg, JavaLangThrowable *problem) {
  ComFasterxmlJacksonCoreJsonProcessingException_initWithNSString_withJavaLangThrowable_(self, msg, problem);
  JreStrongAssign(&self->_processor_, processor);
  if ([processor isKindOfClass:[ComFasterxmlJacksonCoreJsonParser class]]) {
    JreStrongAssign(&self->_location_, [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(((ComFasterxmlJacksonCoreJsonParser *) cast_chk(processor, [ComFasterxmlJacksonCoreJsonParser class])))) getTokenLocation]);
  }
}

ComFasterxmlJacksonDatabindJsonMappingException *new_ComFasterxmlJacksonDatabindJsonMappingException_initWithJavaIoCloseable_withNSString_withJavaLangThrowable_(id<JavaIoCloseable> processor, NSString *msg, JavaLangThrowable *problem) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindJsonMappingException, initWithJavaIoCloseable_withNSString_withJavaLangThrowable_, processor, msg, problem)
}

ComFasterxmlJacksonDatabindJsonMappingException *create_ComFasterxmlJacksonDatabindJsonMappingException_initWithJavaIoCloseable_withNSString_withJavaLangThrowable_(id<JavaIoCloseable> processor, NSString *msg, JavaLangThrowable *problem) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindJsonMappingException, initWithJavaIoCloseable_withNSString_withJavaLangThrowable_, processor, msg, problem)
}

void ComFasterxmlJacksonDatabindJsonMappingException_initWithJavaIoCloseable_withNSString_withComFasterxmlJacksonCoreJsonLocation_(ComFasterxmlJacksonDatabindJsonMappingException *self, id<JavaIoCloseable> processor, NSString *msg, ComFasterxmlJacksonCoreJsonLocation *loc) {
  ComFasterxmlJacksonCoreJsonProcessingException_initWithNSString_withComFasterxmlJacksonCoreJsonLocation_(self, msg, loc);
  JreStrongAssign(&self->_processor_, processor);
}

ComFasterxmlJacksonDatabindJsonMappingException *new_ComFasterxmlJacksonDatabindJsonMappingException_initWithJavaIoCloseable_withNSString_withComFasterxmlJacksonCoreJsonLocation_(id<JavaIoCloseable> processor, NSString *msg, ComFasterxmlJacksonCoreJsonLocation *loc) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindJsonMappingException, initWithJavaIoCloseable_withNSString_withComFasterxmlJacksonCoreJsonLocation_, processor, msg, loc)
}

ComFasterxmlJacksonDatabindJsonMappingException *create_ComFasterxmlJacksonDatabindJsonMappingException_initWithJavaIoCloseable_withNSString_withComFasterxmlJacksonCoreJsonLocation_(id<JavaIoCloseable> processor, NSString *msg, ComFasterxmlJacksonCoreJsonLocation *loc) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindJsonMappingException, initWithJavaIoCloseable_withNSString_withComFasterxmlJacksonCoreJsonLocation_, processor, msg, loc)
}

ComFasterxmlJacksonDatabindJsonMappingException *ComFasterxmlJacksonDatabindJsonMappingException_fromWithComFasterxmlJacksonCoreJsonParser_withNSString_(ComFasterxmlJacksonCoreJsonParser *p, NSString *msg) {
  ComFasterxmlJacksonDatabindJsonMappingException_initialize();
  return create_ComFasterxmlJacksonDatabindJsonMappingException_initWithJavaIoCloseable_withNSString_(p, msg);
}

ComFasterxmlJacksonDatabindJsonMappingException *ComFasterxmlJacksonDatabindJsonMappingException_fromWithComFasterxmlJacksonCoreJsonParser_withNSString_withJavaLangThrowable_(ComFasterxmlJacksonCoreJsonParser *p, NSString *msg, JavaLangThrowable *problem) {
  ComFasterxmlJacksonDatabindJsonMappingException_initialize();
  return create_ComFasterxmlJacksonDatabindJsonMappingException_initWithJavaIoCloseable_withNSString_withJavaLangThrowable_(p, msg, problem);
}

ComFasterxmlJacksonDatabindJsonMappingException *ComFasterxmlJacksonDatabindJsonMappingException_fromWithComFasterxmlJacksonCoreJsonGenerator_withNSString_(ComFasterxmlJacksonCoreJsonGenerator *g, NSString *msg) {
  ComFasterxmlJacksonDatabindJsonMappingException_initialize();
  return create_ComFasterxmlJacksonDatabindJsonMappingException_initWithJavaIoCloseable_withNSString_withJavaLangThrowable_(g, msg, nil);
}

ComFasterxmlJacksonDatabindJsonMappingException *ComFasterxmlJacksonDatabindJsonMappingException_fromWithComFasterxmlJacksonCoreJsonGenerator_withNSString_withJavaLangThrowable_(ComFasterxmlJacksonCoreJsonGenerator *g, NSString *msg, JavaLangThrowable *problem) {
  ComFasterxmlJacksonDatabindJsonMappingException_initialize();
  return create_ComFasterxmlJacksonDatabindJsonMappingException_initWithJavaIoCloseable_withNSString_withJavaLangThrowable_(g, msg, problem);
}

ComFasterxmlJacksonDatabindJsonMappingException *ComFasterxmlJacksonDatabindJsonMappingException_fromWithComFasterxmlJacksonDatabindDeserializationContext_withNSString_(ComFasterxmlJacksonDatabindDeserializationContext *ctxt, NSString *msg) {
  ComFasterxmlJacksonDatabindJsonMappingException_initialize();
  return create_ComFasterxmlJacksonDatabindJsonMappingException_initWithJavaIoCloseable_withNSString_([((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) getParser], msg);
}

ComFasterxmlJacksonDatabindJsonMappingException *ComFasterxmlJacksonDatabindJsonMappingException_fromWithComFasterxmlJacksonDatabindDeserializationContext_withNSString_withJavaLangThrowable_(ComFasterxmlJacksonDatabindDeserializationContext *ctxt, NSString *msg, JavaLangThrowable *t) {
  ComFasterxmlJacksonDatabindJsonMappingException_initialize();
  return create_ComFasterxmlJacksonDatabindJsonMappingException_initWithJavaIoCloseable_withNSString_withJavaLangThrowable_([((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) getParser], msg, t);
}

ComFasterxmlJacksonDatabindJsonMappingException *ComFasterxmlJacksonDatabindJsonMappingException_fromWithComFasterxmlJacksonDatabindSerializerProvider_withNSString_(ComFasterxmlJacksonDatabindSerializerProvider *ctxt, NSString *msg) {
  ComFasterxmlJacksonDatabindJsonMappingException_initialize();
  return create_ComFasterxmlJacksonDatabindJsonMappingException_initWithJavaIoCloseable_withNSString_([((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(ctxt)) getGenerator], msg);
}

ComFasterxmlJacksonDatabindJsonMappingException *ComFasterxmlJacksonDatabindJsonMappingException_fromWithComFasterxmlJacksonDatabindSerializerProvider_withNSString_withJavaLangThrowable_(ComFasterxmlJacksonDatabindSerializerProvider *ctxt, NSString *msg, JavaLangThrowable *problem) {
  ComFasterxmlJacksonDatabindJsonMappingException_initialize();
  return create_ComFasterxmlJacksonDatabindJsonMappingException_initWithJavaIoCloseable_withNSString_withJavaLangThrowable_([((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(ctxt)) getGenerator], msg, problem);
}

ComFasterxmlJacksonDatabindJsonMappingException *ComFasterxmlJacksonDatabindJsonMappingException_fromUnexpectedIOEWithJavaIoIOException_(JavaIoIOException *src) {
  ComFasterxmlJacksonDatabindJsonMappingException_initialize();
  return create_ComFasterxmlJacksonDatabindJsonMappingException_initWithJavaIoCloseable_withNSString_(nil, NSString_java_formatWithNSString_withNSObjectArray_(@"Unexpected IOException (of type %s): %s", [IOSObjectArray arrayWithObjects:(id[]){ [[((JavaIoIOException *) nil_chk(src)) java_getClass] getName], [src getMessage] } count:2 type:NSObject_class_()]));
}

ComFasterxmlJacksonDatabindJsonMappingException *ComFasterxmlJacksonDatabindJsonMappingException_wrapWithPathWithJavaLangThrowable_withId_withNSString_(JavaLangThrowable *src, id refFrom, NSString *refFieldName) {
  ComFasterxmlJacksonDatabindJsonMappingException_initialize();
  return ComFasterxmlJacksonDatabindJsonMappingException_wrapWithPathWithJavaLangThrowable_withComFasterxmlJacksonDatabindJsonMappingException_Reference_(src, create_ComFasterxmlJacksonDatabindJsonMappingException_Reference_initWithId_withNSString_(refFrom, refFieldName));
}

ComFasterxmlJacksonDatabindJsonMappingException *ComFasterxmlJacksonDatabindJsonMappingException_wrapWithPathWithJavaLangThrowable_withId_withInt_(JavaLangThrowable *src, id refFrom, jint index) {
  ComFasterxmlJacksonDatabindJsonMappingException_initialize();
  return ComFasterxmlJacksonDatabindJsonMappingException_wrapWithPathWithJavaLangThrowable_withComFasterxmlJacksonDatabindJsonMappingException_Reference_(src, create_ComFasterxmlJacksonDatabindJsonMappingException_Reference_initWithId_withInt_(refFrom, index));
}

ComFasterxmlJacksonDatabindJsonMappingException *ComFasterxmlJacksonDatabindJsonMappingException_wrapWithPathWithJavaLangThrowable_withComFasterxmlJacksonDatabindJsonMappingException_Reference_(JavaLangThrowable *src, ComFasterxmlJacksonDatabindJsonMappingException_Reference *ref) {
  ComFasterxmlJacksonDatabindJsonMappingException_initialize();
  ComFasterxmlJacksonDatabindJsonMappingException *jme;
  if ([src isKindOfClass:[ComFasterxmlJacksonDatabindJsonMappingException class]]) {
    jme = (ComFasterxmlJacksonDatabindJsonMappingException *) cast_chk(src, [ComFasterxmlJacksonDatabindJsonMappingException class]);
  }
  else {
    NSString *msg = [((JavaLangThrowable *) nil_chk(src)) getMessage];
    if (msg == nil || [msg java_length] == 0) {
      msg = JreStrcat("$$C", @"(was ", [[src java_getClass] getName], ')');
    }
    id<JavaIoCloseable> proc = nil;
    if ([src isKindOfClass:[ComFasterxmlJacksonCoreJsonProcessingException class]]) {
      id proc0 = [((ComFasterxmlJacksonCoreJsonProcessingException *) cast_chk(src, [ComFasterxmlJacksonCoreJsonProcessingException class])) getProcessor];
      if ([JavaIoCloseable_class_() isInstance:proc0]) {
        proc = (id<JavaIoCloseable>) cast_check(proc0, JavaIoCloseable_class_());
      }
    }
    jme = create_ComFasterxmlJacksonDatabindJsonMappingException_initWithJavaIoCloseable_withNSString_withJavaLangThrowable_(proc, msg, src);
  }
  [((ComFasterxmlJacksonDatabindJsonMappingException *) nil_chk(jme)) prependPathWithComFasterxmlJacksonDatabindJsonMappingException_Reference:ref];
  return jme;
}

IOSObjectArray *ComFasterxmlJacksonDatabindJsonMappingException__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindJsonMappingException__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindJsonMappingException__Annotations$2() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindJsonMappingException__Annotations$3() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindJsonMappingException__Annotations$4() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_ComFasterxmlJacksonAnnotationJsonIgnore(true) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindJsonMappingException)

@implementation ComFasterxmlJacksonDatabindJsonMappingException_Reference

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindJsonMappingException_Reference_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithId:(id)from {
  ComFasterxmlJacksonDatabindJsonMappingException_Reference_initWithId_(self, from);
  return self;
}

- (instancetype __nonnull)initWithId:(id)from
                        withNSString:(NSString *)fieldName {
  ComFasterxmlJacksonDatabindJsonMappingException_Reference_initWithId_withNSString_(self, from, fieldName);
  return self;
}

- (instancetype __nonnull)initWithId:(id)from
                             withInt:(jint)index {
  ComFasterxmlJacksonDatabindJsonMappingException_Reference_initWithId_withInt_(self, from, index);
  return self;
}

- (void)setFieldNameWithNSString:(NSString *)n {
  JreStrongAssign(&_fieldName_, n);
}

- (void)setIndexWithInt:(jint)ix {
  _index_ = ix;
}

- (void)setDescriptionWithNSString:(NSString *)d {
  JreStrongAssign(&_desc_, d);
}

- (id)getFrom {
  return _from_;
}

- (NSString *)getFieldName {
  return _fieldName_;
}

- (jint)getIndex {
  return _index_;
}

- (NSString *)getDescription {
  if (_desc_ == nil) {
    JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
    if (_from_ == nil) {
      [sb appendWithNSString:@"UNKNOWN"];
    }
    else {
      IOSClass *cls = ([_from_ isKindOfClass:[IOSClass class]]) ? (IOSClass *) cast_chk(_from_, [IOSClass class]) : [_from_ java_getClass];
      jint arrays = 0;
      while ([((IOSClass *) nil_chk(cls)) isArray]) {
        cls = [cls getComponentType];
        ++arrays;
      }
      [sb appendWithNSString:[cls getName]];
      while (--arrays >= 0) {
        [sb appendWithNSString:@"[]"];
      }
    }
    [sb appendWithChar:'['];
    if (_fieldName_ != nil) {
      [sb appendWithChar:'"'];
      [sb appendWithNSString:_fieldName_];
      [sb appendWithChar:'"'];
    }
    else if (_index_ >= 0) {
      [sb appendWithInt:_index_];
    }
    else {
      [sb appendWithChar:'?'];
    }
    [sb appendWithChar:']'];
    JreStrongAssign(&_desc_, [sb description]);
  }
  return _desc_;
}

- (NSString *)description {
  return [self getDescription];
}

- (id)writeReplace {
  [self getDescription];
  return self;
}

- (void)dealloc {
  RELEASE_(_from_);
  RELEASE_(_fieldName_);
  RELEASE_(_desc_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 3, 4, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x0, 7, 4, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, 8, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 9, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x0, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithId:);
  methods[2].selector = @selector(initWithId:withNSString:);
  methods[3].selector = @selector(initWithId:withInt:);
  methods[4].selector = @selector(setFieldNameWithNSString:);
  methods[5].selector = @selector(setIndexWithInt:);
  methods[6].selector = @selector(setDescriptionWithNSString:);
  methods[7].selector = @selector(getFrom);
  methods[8].selector = @selector(getFieldName);
  methods[9].selector = @selector(getIndex);
  methods[10].selector = @selector(getDescription);
  methods[11].selector = @selector(description);
  methods[12].selector = @selector(writeReplace);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindJsonMappingException_Reference_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "_from_", "LNSObject;", .constantValue.asLong = 0, 0x84, -1, -1, -1, -1 },
    { "_fieldName_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_index_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_desc_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSObject;", "LNSObject;LNSString;", "LNSObject;I", "setFieldName", "LNSString;", "setIndex", "I", "setDescription", (void *)&ComFasterxmlJacksonDatabindJsonMappingException_Reference__Annotations$0, "toString", "LComFasterxmlJacksonDatabindJsonMappingException;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindJsonMappingException_Reference = { "Reference", "com.fasterxml.jackson.databind", ptrTable, methods, fields, 7, 0x9, 13, 5, 10, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindJsonMappingException_Reference;
}

@end

void ComFasterxmlJacksonDatabindJsonMappingException_Reference_init(ComFasterxmlJacksonDatabindJsonMappingException_Reference *self) {
  NSObject_init(self);
  self->_index_ = -1;
}

ComFasterxmlJacksonDatabindJsonMappingException_Reference *new_ComFasterxmlJacksonDatabindJsonMappingException_Reference_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindJsonMappingException_Reference, init)
}

ComFasterxmlJacksonDatabindJsonMappingException_Reference *create_ComFasterxmlJacksonDatabindJsonMappingException_Reference_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindJsonMappingException_Reference, init)
}

void ComFasterxmlJacksonDatabindJsonMappingException_Reference_initWithId_(ComFasterxmlJacksonDatabindJsonMappingException_Reference *self, id from) {
  NSObject_init(self);
  self->_index_ = -1;
  JreStrongAssign(&self->_from_, from);
}

ComFasterxmlJacksonDatabindJsonMappingException_Reference *new_ComFasterxmlJacksonDatabindJsonMappingException_Reference_initWithId_(id from) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindJsonMappingException_Reference, initWithId_, from)
}

ComFasterxmlJacksonDatabindJsonMappingException_Reference *create_ComFasterxmlJacksonDatabindJsonMappingException_Reference_initWithId_(id from) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindJsonMappingException_Reference, initWithId_, from)
}

void ComFasterxmlJacksonDatabindJsonMappingException_Reference_initWithId_withNSString_(ComFasterxmlJacksonDatabindJsonMappingException_Reference *self, id from, NSString *fieldName) {
  NSObject_init(self);
  self->_index_ = -1;
  JreStrongAssign(&self->_from_, from);
  if (fieldName == nil) {
    @throw create_JavaLangNullPointerException_initWithNSString_(@"Cannot pass null fieldName");
  }
  JreStrongAssign(&self->_fieldName_, fieldName);
}

ComFasterxmlJacksonDatabindJsonMappingException_Reference *new_ComFasterxmlJacksonDatabindJsonMappingException_Reference_initWithId_withNSString_(id from, NSString *fieldName) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindJsonMappingException_Reference, initWithId_withNSString_, from, fieldName)
}

ComFasterxmlJacksonDatabindJsonMappingException_Reference *create_ComFasterxmlJacksonDatabindJsonMappingException_Reference_initWithId_withNSString_(id from, NSString *fieldName) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindJsonMappingException_Reference, initWithId_withNSString_, from, fieldName)
}

void ComFasterxmlJacksonDatabindJsonMappingException_Reference_initWithId_withInt_(ComFasterxmlJacksonDatabindJsonMappingException_Reference *self, id from, jint index) {
  NSObject_init(self);
  self->_index_ = -1;
  JreStrongAssign(&self->_from_, from);
  self->_index_ = index;
}

ComFasterxmlJacksonDatabindJsonMappingException_Reference *new_ComFasterxmlJacksonDatabindJsonMappingException_Reference_initWithId_withInt_(id from, jint index) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindJsonMappingException_Reference, initWithId_withInt_, from, index)
}

ComFasterxmlJacksonDatabindJsonMappingException_Reference *create_ComFasterxmlJacksonDatabindJsonMappingException_Reference_initWithId_withInt_(id from, jint index) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindJsonMappingException_Reference, initWithId_withInt_, from, index)
}

IOSObjectArray *ComFasterxmlJacksonDatabindJsonMappingException_Reference__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_ComFasterxmlJacksonAnnotationJsonIgnore(true) } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindJsonMappingException_Reference)
