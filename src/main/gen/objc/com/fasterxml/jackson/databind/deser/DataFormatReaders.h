//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/deser/DataFormatReaders.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserDataFormatReaders")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindDeserDataFormatReaders
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserDataFormatReaders 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserDataFormatReaders 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindDeserDataFormatReaders

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindDeserDataFormatReaders_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserDataFormatReaders || defined(INCLUDE_ComFasterxmlJacksonDatabindDeserDataFormatReaders))
#define ComFasterxmlJacksonDatabindDeserDataFormatReaders_

@class ComFasterxmlJacksonCoreFormatMatchStrength;
@class ComFasterxmlJacksonDatabindDeserDataFormatReaders_Match;
@class ComFasterxmlJacksonDatabindDeserializationConfig;
@class ComFasterxmlJacksonDatabindJavaType;
@class IOSByteArray;
@class IOSObjectArray;
@class JavaIoInputStream;
@protocol JavaUtilCollection;

/*!
 @brief Alternative to <code>DataFormatDetector</code> that needs to be used when
  using data-binding.
 @since 2.1
 */
@interface ComFasterxmlJacksonDatabindDeserDataFormatReaders : NSObject {
 @public
  /*!
   @brief Ordered list of readers which both represent data formats to
  detect (in precedence order, starting with highest) and contain
  factories used for actual detection.
   */
  IOSObjectArray *_readers_;
  /*!
   @brief Strength of match we consider to be good enough to be used
  without checking any other formats.
   Default value is <code>MatchStrength.SOLID_MATCH</code>,
   */
  ComFasterxmlJacksonCoreFormatMatchStrength *_optimalMatch_;
  /*!
   @brief Strength of minimal match we accept as the answer, unless
  better matches are found.
   Default value is <code>MatchStrength.WEAK_MATCH</code>,
   */
  ComFasterxmlJacksonCoreFormatMatchStrength *_minimalMatch_;
  /*!
   @brief Maximum number of leading bytes of the input that we can read
  to determine data format.
   <p>
  Default value is <code>DEFAULT_MAX_INPUT_LOOKAHEAD</code>.
   */
  jint _maxInputLookahead_;
}

#pragma mark Public

- (instancetype __nonnull)initWithJavaUtilCollection:(id<JavaUtilCollection>)detectors;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindObjectReaderArray:(IOSObjectArray *)detectors;

/*!
 @brief Method to call to find format that given content (full document)
  has, as per configuration of this detector instance.
 @return Matcher object which contains result; never null, even in cases
     where no match (with specified minimal match strength) is found.
 */
- (ComFasterxmlJacksonDatabindDeserDataFormatReaders_Match *)findFormatWithByteArray:(IOSByteArray *)fullInputData;

/*!
 @brief Method to call to find format that given content (full document)
  has, as per configuration of this detector instance.
 @return Matcher object which contains result; never null, even in cases
     where no match (with specified minimal match strength) is found.
 @since 2.1
 */
- (ComFasterxmlJacksonDatabindDeserDataFormatReaders_Match *)findFormatWithByteArray:(IOSByteArray *)fullInputData
                                                                             withInt:(jint)offset
                                                                             withInt:(jint)len;

/*!
 @brief Method to call to find format that content (accessible via given 
 <code>InputStream</code>) given has, as per configuration of this detector
  instance.
 @return Matcher object which contains result; never null, even in cases
     where no match (with specified minimal match strength) is found.
 */
- (ComFasterxmlJacksonDatabindDeserDataFormatReaders_Match *)findFormatWithJavaIoInputStream:(JavaIoInputStream *)inArg;

- (NSString *)description;

- (ComFasterxmlJacksonDatabindDeserDataFormatReaders *)withWithComFasterxmlJacksonDatabindDeserializationConfig:(ComFasterxmlJacksonDatabindDeserializationConfig *)config;

- (ComFasterxmlJacksonDatabindDeserDataFormatReaders *)withWithComFasterxmlJacksonDatabindObjectReaderArray:(IOSObjectArray *)readers;

- (ComFasterxmlJacksonDatabindDeserDataFormatReaders *)withMaxInputLookaheadWithInt:(jint)lookaheadBytes;

- (ComFasterxmlJacksonDatabindDeserDataFormatReaders *)withMinimalMatchWithComFasterxmlJacksonCoreFormatMatchStrength:(ComFasterxmlJacksonCoreFormatMatchStrength *)minMatch;

- (ComFasterxmlJacksonDatabindDeserDataFormatReaders *)withOptimalMatchWithComFasterxmlJacksonCoreFormatMatchStrength:(ComFasterxmlJacksonCoreFormatMatchStrength *)optMatch;

- (ComFasterxmlJacksonDatabindDeserDataFormatReaders *)withTypeWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindDeserDataFormatReaders)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserDataFormatReaders, _readers_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserDataFormatReaders, _optimalMatch_, ComFasterxmlJacksonCoreFormatMatchStrength *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserDataFormatReaders, _minimalMatch_, ComFasterxmlJacksonCoreFormatMatchStrength *)

/*!
 @brief By default we will look ahead at most 64 bytes; in most cases,
  much less (4 bytes or so) is needed, but we will allow bit more
  leniency to support data formats that need more complex heuristics.
 */
inline jint ComFasterxmlJacksonDatabindDeserDataFormatReaders_get_DEFAULT_MAX_INPUT_LOOKAHEAD(void);
#define ComFasterxmlJacksonDatabindDeserDataFormatReaders_DEFAULT_MAX_INPUT_LOOKAHEAD 64
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindDeserDataFormatReaders, DEFAULT_MAX_INPUT_LOOKAHEAD, jint)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindDeserDataFormatReaders_initWithComFasterxmlJacksonDatabindObjectReaderArray_(ComFasterxmlJacksonDatabindDeserDataFormatReaders *self, IOSObjectArray *detectors);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserDataFormatReaders *new_ComFasterxmlJacksonDatabindDeserDataFormatReaders_initWithComFasterxmlJacksonDatabindObjectReaderArray_(IOSObjectArray *detectors) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserDataFormatReaders *create_ComFasterxmlJacksonDatabindDeserDataFormatReaders_initWithComFasterxmlJacksonDatabindObjectReaderArray_(IOSObjectArray *detectors);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindDeserDataFormatReaders_initWithJavaUtilCollection_(ComFasterxmlJacksonDatabindDeserDataFormatReaders *self, id<JavaUtilCollection> detectors);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserDataFormatReaders *new_ComFasterxmlJacksonDatabindDeserDataFormatReaders_initWithJavaUtilCollection_(id<JavaUtilCollection> detectors) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserDataFormatReaders *create_ComFasterxmlJacksonDatabindDeserDataFormatReaders_initWithJavaUtilCollection_(id<JavaUtilCollection> detectors);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindDeserDataFormatReaders)

#endif

#if !defined (ComFasterxmlJacksonDatabindDeserDataFormatReaders_AccessorForReader_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserDataFormatReaders || defined(INCLUDE_ComFasterxmlJacksonDatabindDeserDataFormatReaders_AccessorForReader))
#define ComFasterxmlJacksonDatabindDeserDataFormatReaders_AccessorForReader_

#define RESTRICT_ComFasterxmlJacksonCoreFormatInputAccessor 1
#define INCLUDE_ComFasterxmlJacksonCoreFormatInputAccessor_Std 1
#include "com/fasterxml/jackson/core/format/InputAccessor.h"

@class ComFasterxmlJacksonCoreFormatMatchStrength;
@class ComFasterxmlJacksonDatabindDeserDataFormatReaders;
@class ComFasterxmlJacksonDatabindDeserDataFormatReaders_Match;
@class ComFasterxmlJacksonDatabindObjectReader;
@class IOSByteArray;
@class JavaIoInputStream;

/*!
 @brief We need sub-class here as well, to be able to access efficiently.
 */
@interface ComFasterxmlJacksonDatabindDeserDataFormatReaders_AccessorForReader : ComFasterxmlJacksonCoreFormatInputAccessor_Std

#pragma mark Public

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindDeserDataFormatReaders:(ComFasterxmlJacksonDatabindDeserDataFormatReaders *)outer$
                                                                      withByteArray:(IOSByteArray *)inputDocument;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindDeserDataFormatReaders:(ComFasterxmlJacksonDatabindDeserDataFormatReaders *)outer$
                                                                      withByteArray:(IOSByteArray *)inputDocument
                                                                            withInt:(jint)start
                                                                            withInt:(jint)len;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindDeserDataFormatReaders:(ComFasterxmlJacksonDatabindDeserDataFormatReaders *)outer$
                                                              withJavaIoInputStream:(JavaIoInputStream *)inArg
                                                                      withByteArray:(IOSByteArray *)buffer;

- (ComFasterxmlJacksonDatabindDeserDataFormatReaders_Match *)createMatcherWithComFasterxmlJacksonDatabindObjectReader:(ComFasterxmlJacksonDatabindObjectReader *)match
                                                                       withComFasterxmlJacksonCoreFormatMatchStrength:(ComFasterxmlJacksonCoreFormatMatchStrength *)matchStrength;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)arg0
                                    withInt:(jint)arg1
                                    withInt:(jint)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)arg0
                                      withByteArray:(IOSByteArray *)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindDeserDataFormatReaders_AccessorForReader)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindDeserDataFormatReaders_AccessorForReader_initWithComFasterxmlJacksonDatabindDeserDataFormatReaders_withJavaIoInputStream_withByteArray_(ComFasterxmlJacksonDatabindDeserDataFormatReaders_AccessorForReader *self, ComFasterxmlJacksonDatabindDeserDataFormatReaders *outer$, JavaIoInputStream *inArg, IOSByteArray *buffer);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserDataFormatReaders_AccessorForReader *new_ComFasterxmlJacksonDatabindDeserDataFormatReaders_AccessorForReader_initWithComFasterxmlJacksonDatabindDeserDataFormatReaders_withJavaIoInputStream_withByteArray_(ComFasterxmlJacksonDatabindDeserDataFormatReaders *outer$, JavaIoInputStream *inArg, IOSByteArray *buffer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserDataFormatReaders_AccessorForReader *create_ComFasterxmlJacksonDatabindDeserDataFormatReaders_AccessorForReader_initWithComFasterxmlJacksonDatabindDeserDataFormatReaders_withJavaIoInputStream_withByteArray_(ComFasterxmlJacksonDatabindDeserDataFormatReaders *outer$, JavaIoInputStream *inArg, IOSByteArray *buffer);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindDeserDataFormatReaders_AccessorForReader_initWithComFasterxmlJacksonDatabindDeserDataFormatReaders_withByteArray_(ComFasterxmlJacksonDatabindDeserDataFormatReaders_AccessorForReader *self, ComFasterxmlJacksonDatabindDeserDataFormatReaders *outer$, IOSByteArray *inputDocument);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserDataFormatReaders_AccessorForReader *new_ComFasterxmlJacksonDatabindDeserDataFormatReaders_AccessorForReader_initWithComFasterxmlJacksonDatabindDeserDataFormatReaders_withByteArray_(ComFasterxmlJacksonDatabindDeserDataFormatReaders *outer$, IOSByteArray *inputDocument) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserDataFormatReaders_AccessorForReader *create_ComFasterxmlJacksonDatabindDeserDataFormatReaders_AccessorForReader_initWithComFasterxmlJacksonDatabindDeserDataFormatReaders_withByteArray_(ComFasterxmlJacksonDatabindDeserDataFormatReaders *outer$, IOSByteArray *inputDocument);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindDeserDataFormatReaders_AccessorForReader_initWithComFasterxmlJacksonDatabindDeserDataFormatReaders_withByteArray_withInt_withInt_(ComFasterxmlJacksonDatabindDeserDataFormatReaders_AccessorForReader *self, ComFasterxmlJacksonDatabindDeserDataFormatReaders *outer$, IOSByteArray *inputDocument, jint start, jint len);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserDataFormatReaders_AccessorForReader *new_ComFasterxmlJacksonDatabindDeserDataFormatReaders_AccessorForReader_initWithComFasterxmlJacksonDatabindDeserDataFormatReaders_withByteArray_withInt_withInt_(ComFasterxmlJacksonDatabindDeserDataFormatReaders *outer$, IOSByteArray *inputDocument, jint start, jint len) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserDataFormatReaders_AccessorForReader *create_ComFasterxmlJacksonDatabindDeserDataFormatReaders_AccessorForReader_initWithComFasterxmlJacksonDatabindDeserDataFormatReaders_withByteArray_withInt_withInt_(ComFasterxmlJacksonDatabindDeserDataFormatReaders *outer$, IOSByteArray *inputDocument, jint start, jint len);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindDeserDataFormatReaders_AccessorForReader)

#endif

#if !defined (ComFasterxmlJacksonDatabindDeserDataFormatReaders_Match_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserDataFormatReaders || defined(INCLUDE_ComFasterxmlJacksonDatabindDeserDataFormatReaders_Match))
#define ComFasterxmlJacksonDatabindDeserDataFormatReaders_Match_

@class ComFasterxmlJacksonCoreFormatMatchStrength;
@class ComFasterxmlJacksonCoreJsonParser;
@class ComFasterxmlJacksonDatabindObjectReader;
@class IOSByteArray;
@class JavaIoInputStream;

/*!
 @brief Result class, similar to <code>DataFormatMatcher</code>
 */
@interface ComFasterxmlJacksonDatabindDeserDataFormatReaders_Match : NSObject {
 @public
  JavaIoInputStream *_originalStream_;
  /*!
   @brief Content read during format matching process
   */
  IOSByteArray *_bufferedData_;
  /*!
   @brief Pointer to the first byte in buffer available for reading
   */
  jint _bufferedStart_;
  /*!
   @brief Number of bytes available in buffer.
   */
  jint _bufferedLength_;
  /*!
   @brief Factory that produced sufficient match (if any)
   */
  ComFasterxmlJacksonDatabindObjectReader *_match_;
  /*!
   @brief Strength of match with <code>_match</code>
   */
  ComFasterxmlJacksonCoreFormatMatchStrength *_matchStrength_;
}

#pragma mark Public

/*!
 @brief Convenience method for trying to construct a <code>JsonParser</code> for
  parsing content which is assumed to be in detected data format.
 If no match was found, returns null.
 */
- (ComFasterxmlJacksonCoreJsonParser *)createParserWithMatch;

/*!
 @brief Method to use for accessing input for which format detection has been done.
 This <b>must</b> be used instead of using stream passed to detector
  unless given stream itself can do buffering.
  Stream will return all content that was read during matching process, as well
  as remaining contents of the underlying stream.
 */
- (JavaIoInputStream *)getDataStream;

/*!
 @brief Accessor for getting brief textual name of matched format if any (null
  if none).Equivalent to:
 @code

    return hasMatch() ?
 getMatch().getFormatName() : null;
 
@endcode
 */
- (NSString *)getMatchedFormatName;

/*!
 @brief Method for accessing strength of the match, if any; if no match,
  will return <code>MatchStrength.INCONCLUSIVE</code>.
 */
- (ComFasterxmlJacksonCoreFormatMatchStrength *)getMatchStrength;

/*!
 @brief Accessor for <code>JsonFactory</code> that represents format that data matched.
 */
- (ComFasterxmlJacksonDatabindObjectReader *)getReader;

/*!
 @brief Accessor to use to see if any formats matched well enough with
  the input data.
 */
- (jboolean)hasMatch;

#pragma mark Protected

- (instancetype __nonnull)initWithJavaIoInputStream:(JavaIoInputStream *)inArg
                                      withByteArray:(IOSByteArray *)buffered
                                            withInt:(jint)bufferedStart
                                            withInt:(jint)bufferedLength
        withComFasterxmlJacksonDatabindObjectReader:(ComFasterxmlJacksonDatabindObjectReader *)match
     withComFasterxmlJacksonCoreFormatMatchStrength:(ComFasterxmlJacksonCoreFormatMatchStrength *)strength;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindDeserDataFormatReaders_Match)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserDataFormatReaders_Match, _originalStream_, JavaIoInputStream *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserDataFormatReaders_Match, _bufferedData_, IOSByteArray *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserDataFormatReaders_Match, _match_, ComFasterxmlJacksonDatabindObjectReader *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserDataFormatReaders_Match, _matchStrength_, ComFasterxmlJacksonCoreFormatMatchStrength *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindDeserDataFormatReaders_Match_initWithJavaIoInputStream_withByteArray_withInt_withInt_withComFasterxmlJacksonDatabindObjectReader_withComFasterxmlJacksonCoreFormatMatchStrength_(ComFasterxmlJacksonDatabindDeserDataFormatReaders_Match *self, JavaIoInputStream *inArg, IOSByteArray *buffered, jint bufferedStart, jint bufferedLength, ComFasterxmlJacksonDatabindObjectReader *match, ComFasterxmlJacksonCoreFormatMatchStrength *strength);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserDataFormatReaders_Match *new_ComFasterxmlJacksonDatabindDeserDataFormatReaders_Match_initWithJavaIoInputStream_withByteArray_withInt_withInt_withComFasterxmlJacksonDatabindObjectReader_withComFasterxmlJacksonCoreFormatMatchStrength_(JavaIoInputStream *inArg, IOSByteArray *buffered, jint bufferedStart, jint bufferedLength, ComFasterxmlJacksonDatabindObjectReader *match, ComFasterxmlJacksonCoreFormatMatchStrength *strength) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserDataFormatReaders_Match *create_ComFasterxmlJacksonDatabindDeserDataFormatReaders_Match_initWithJavaIoInputStream_withByteArray_withInt_withInt_withComFasterxmlJacksonDatabindObjectReader_withComFasterxmlJacksonCoreFormatMatchStrength_(JavaIoInputStream *inArg, IOSByteArray *buffered, jint bufferedStart, jint bufferedLength, ComFasterxmlJacksonDatabindObjectReader *match, ComFasterxmlJacksonCoreFormatMatchStrength *strength);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindDeserDataFormatReaders_Match)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserDataFormatReaders")
