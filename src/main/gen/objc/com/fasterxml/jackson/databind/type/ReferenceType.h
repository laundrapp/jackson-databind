//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/ReferenceType.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindTypeReferenceType")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindTypeReferenceType
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindTypeReferenceType 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindTypeReferenceType 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindTypeReferenceType

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindTypeReferenceType_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindTypeReferenceType || defined(INCLUDE_ComFasterxmlJacksonDatabindTypeReferenceType))
#define ComFasterxmlJacksonDatabindTypeReferenceType_

#define RESTRICT_ComFasterxmlJacksonDatabindTypeSimpleType 1
#define INCLUDE_ComFasterxmlJacksonDatabindTypeSimpleType 1
#include "com/fasterxml/jackson/databind/type/SimpleType.h"

@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindTypeTypeBase;
@class ComFasterxmlJacksonDatabindTypeTypeBindings;
@class IOSClass;
@class IOSObjectArray;
@class JavaLangStringBuilder;

/*!
 @brief Specialized <code>SimpleType</code> for types that are referential types,
  that is, values that can be dereferenced to another value (or null),
  of different type.
 Referenced type is accessible using <code>getContentType()</code>.
 @since 2.6
 */
@interface ComFasterxmlJacksonDatabindTypeReferenceType : ComFasterxmlJacksonDatabindTypeSimpleType {
 @public
  ComFasterxmlJacksonDatabindJavaType *_referencedType_;
  /*!
   @brief Essential type used for type ids, for example if type id is needed for
  referencing type with polymorphic handling.Typically initialized when
  a <code>SimpleType</code> is upgraded into reference type, but NOT changed
  if being sub-classed.
   @since 2.8
   */
  ComFasterxmlJacksonDatabindJavaType *_anchorType_;
}

#pragma mark Public

+ (ComFasterxmlJacksonDatabindTypeReferenceType *)constructWithIOSClass:(IOSClass *)cls
                                withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)refType;

/*!
 @since 2.7
 */
+ (ComFasterxmlJacksonDatabindTypeReferenceType *)constructWithIOSClass:(IOSClass *)cls
                        withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)bindings
                                withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)superClass
                           withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)superInts
                                withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)refType;

- (jboolean)isEqual:(id)o;

- (ComFasterxmlJacksonDatabindJavaType *)getAnchorType;

- (ComFasterxmlJacksonDatabindJavaType *)getContentType;

- (JavaLangStringBuilder *)getErasedSignatureWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (JavaLangStringBuilder *)getGenericSignatureWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (ComFasterxmlJacksonDatabindJavaType *)getReferencedType;

- (jboolean)hasContentType;

/*!
 @brief Convenience accessor that allows checking whether this is the anchor type
  itself; if not, it must be one of supertypes that is also a <code>ReferenceType</code>
 */
- (jboolean)isAnchorType;

- (jboolean)isReferenceType;

- (ComFasterxmlJacksonDatabindJavaType *)refineWithIOSClass:(IOSClass *)rawType
            withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)bindings
                    withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)superClass
               withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)superInterfaces;

- (NSString *)description;

/*!
 @brief Factory method that can be used to "upgrade" a basic type into collection-like
  one; usually done via <code>TypeModifier</code>
 @param baseType Resolved non-reference type (usually <code>SimpleType</code> ) that is being upgraded
 @param refdType Referenced type; usually the first and only type parameter, but not necessarily
 @since 2.7
 */
+ (ComFasterxmlJacksonDatabindTypeReferenceType *)upgradeFromWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)baseType
                                                             withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)refdType;

- (ComFasterxmlJacksonDatabindJavaType *)withContentTypeWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)contentType;

- (ComFasterxmlJacksonDatabindTypeReferenceType *)withContentTypeHandlerWithId:(id)h;

- (ComFasterxmlJacksonDatabindTypeReferenceType *)withContentValueHandlerWithId:(id)h;

- (ComFasterxmlJacksonDatabindTypeReferenceType *)withStaticTyping;

- (ComFasterxmlJacksonDatabindTypeReferenceType *)withTypeHandlerWithId:(id)h;

- (ComFasterxmlJacksonDatabindTypeReferenceType *)withValueHandlerWithId:(id)h;

#pragma mark Protected

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)cls
withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)bindings
   withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)superClass
withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)superInts
   withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)refType
   withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)anchorType
                                    withId:(id)valueHandler
                                    withId:(id)typeHandler
                               withBoolean:(jboolean)asStatic;

/*!
 @brief Constructor used when upgrading into this type (via <code>upgradeFrom</code>,
  the usual way for <code>ReferenceType</code>s to come into existence.
 Sets up what is considered the "base" reference type
 @since 2.7
 */
- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindTypeTypeBase:(ComFasterxmlJacksonDatabindTypeTypeBase *)base
                                  withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)refType;

- (ComFasterxmlJacksonDatabindJavaType *)_narrowWithIOSClass:(IOSClass *)subclass;

- (NSString *)buildCanonicalName;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindTypeTypeBase:(ComFasterxmlJacksonDatabindTypeTypeBase *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0
withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)arg1
   withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)arg2
withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)arg3 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0
withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)arg1
   withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)arg2
withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)arg3
                                    withId:(id)arg4
                                    withId:(id)arg5
                               withBoolean:(jboolean)arg6 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0
withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)arg1
   withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)arg2
withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)arg3
                                   withInt:(jint)arg4
                                    withId:(id)arg5
                                    withId:(id)arg6
                               withBoolean:(jboolean)arg7 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindTypeReferenceType)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindTypeReferenceType, _referencedType_, ComFasterxmlJacksonDatabindJavaType *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindTypeReferenceType, _anchorType_, ComFasterxmlJacksonDatabindJavaType *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindTypeReferenceType_initWithIOSClass_withComFasterxmlJacksonDatabindTypeTypeBindings_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaTypeArray_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_withId_withId_withBoolean_(ComFasterxmlJacksonDatabindTypeReferenceType *self, IOSClass *cls, ComFasterxmlJacksonDatabindTypeTypeBindings *bindings, ComFasterxmlJacksonDatabindJavaType *superClass, IOSObjectArray *superInts, ComFasterxmlJacksonDatabindJavaType *refType, ComFasterxmlJacksonDatabindJavaType *anchorType, id valueHandler, id typeHandler, jboolean asStatic);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindTypeReferenceType *new_ComFasterxmlJacksonDatabindTypeReferenceType_initWithIOSClass_withComFasterxmlJacksonDatabindTypeTypeBindings_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaTypeArray_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_withId_withId_withBoolean_(IOSClass *cls, ComFasterxmlJacksonDatabindTypeTypeBindings *bindings, ComFasterxmlJacksonDatabindJavaType *superClass, IOSObjectArray *superInts, ComFasterxmlJacksonDatabindJavaType *refType, ComFasterxmlJacksonDatabindJavaType *anchorType, id valueHandler, id typeHandler, jboolean asStatic) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindTypeReferenceType *create_ComFasterxmlJacksonDatabindTypeReferenceType_initWithIOSClass_withComFasterxmlJacksonDatabindTypeTypeBindings_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaTypeArray_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_withId_withId_withBoolean_(IOSClass *cls, ComFasterxmlJacksonDatabindTypeTypeBindings *bindings, ComFasterxmlJacksonDatabindJavaType *superClass, IOSObjectArray *superInts, ComFasterxmlJacksonDatabindJavaType *refType, ComFasterxmlJacksonDatabindJavaType *anchorType, id valueHandler, id typeHandler, jboolean asStatic);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindTypeReferenceType_initWithComFasterxmlJacksonDatabindTypeTypeBase_withComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindTypeReferenceType *self, ComFasterxmlJacksonDatabindTypeTypeBase *base, ComFasterxmlJacksonDatabindJavaType *refType);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindTypeReferenceType *new_ComFasterxmlJacksonDatabindTypeReferenceType_initWithComFasterxmlJacksonDatabindTypeTypeBase_withComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindTypeTypeBase *base, ComFasterxmlJacksonDatabindJavaType *refType) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindTypeReferenceType *create_ComFasterxmlJacksonDatabindTypeReferenceType_initWithComFasterxmlJacksonDatabindTypeTypeBase_withComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindTypeTypeBase *base, ComFasterxmlJacksonDatabindJavaType *refType);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindTypeReferenceType *ComFasterxmlJacksonDatabindTypeReferenceType_upgradeFromWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindJavaType *baseType, ComFasterxmlJacksonDatabindJavaType *refdType);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindTypeReferenceType *ComFasterxmlJacksonDatabindTypeReferenceType_constructWithIOSClass_withComFasterxmlJacksonDatabindTypeTypeBindings_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaTypeArray_withComFasterxmlJacksonDatabindJavaType_(IOSClass *cls, ComFasterxmlJacksonDatabindTypeTypeBindings *bindings, ComFasterxmlJacksonDatabindJavaType *superClass, IOSObjectArray *superInts, ComFasterxmlJacksonDatabindJavaType *refType);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindTypeReferenceType *ComFasterxmlJacksonDatabindTypeReferenceType_constructWithIOSClass_withComFasterxmlJacksonDatabindJavaType_(IOSClass *cls, ComFasterxmlJacksonDatabindJavaType *refType);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindTypeReferenceType)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindTypeReferenceType")
