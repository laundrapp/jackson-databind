//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/util/TokenBuffer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/Base64Variant.h"
#include "com/fasterxml/jackson/core/JsonGenerationException.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/core/JsonLocation.h"
#include "com/fasterxml/jackson/core/JsonParseException.h"
#include "com/fasterxml/jackson/core/JsonParser.h"
#include "com/fasterxml/jackson/core/JsonStreamContext.h"
#include "com/fasterxml/jackson/core/JsonToken.h"
#include "com/fasterxml/jackson/core/ObjectCodec.h"
#include "com/fasterxml/jackson/core/SerializableString.h"
#include "com/fasterxml/jackson/core/TreeNode.h"
#include "com/fasterxml/jackson/core/Version.h"
#include "com/fasterxml/jackson/core/base/ParserMinimalBase.h"
#include "com/fasterxml/jackson/core/json/JsonWriteContext.h"
#include "com/fasterxml/jackson/core/util/ByteArrayBuilder.h"
#include "com/fasterxml/jackson/databind/DeserializationContext.h"
#include "com/fasterxml/jackson/databind/DeserializationFeature.h"
#include "com/fasterxml/jackson/databind/JsonSerializable.h"
#include "com/fasterxml/jackson/databind/cfg/PackageVersion.h"
#include "com/fasterxml/jackson/databind/util/ClassUtil.h"
#include "com/fasterxml/jackson/databind/util/RawValue.h"
#include "com/fasterxml/jackson/databind/util/TokenBuffer.h"
#include "com/fasterxml/jackson/databind/util/TokenBufferReadContext.h"
#include "java/io/IOException.h"
#include "java/io/InputStream.h"
#include "java/io/OutputStream.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Math.h"
#include "java/lang/RuntimeException.h"
#include "java/lang/Short.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/System.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/math/BigDecimal.h"
#include "java/math/BigInteger.h"
#include "java/util/TreeMap.h"

@interface ComFasterxmlJacksonDatabindUtilTokenBuffer ()

- (void)_appendNativeIdsWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (void)_checkNativeIdsWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)jp;

@end

__attribute__((unused)) static void ComFasterxmlJacksonDatabindUtilTokenBuffer__appendNativeIdsWithJavaLangStringBuilder_(ComFasterxmlJacksonDatabindUtilTokenBuffer *self, JavaLangStringBuilder *sb);

__attribute__((unused)) static void ComFasterxmlJacksonDatabindUtilTokenBuffer_writeStartArray(ComFasterxmlJacksonDatabindUtilTokenBuffer *self);

__attribute__((unused)) static void ComFasterxmlJacksonDatabindUtilTokenBuffer_writeEndArray(ComFasterxmlJacksonDatabindUtilTokenBuffer *self);

__attribute__((unused)) static void ComFasterxmlJacksonDatabindUtilTokenBuffer_writeStartObject(ComFasterxmlJacksonDatabindUtilTokenBuffer *self);

__attribute__((unused)) static void ComFasterxmlJacksonDatabindUtilTokenBuffer_writeEndObject(ComFasterxmlJacksonDatabindUtilTokenBuffer *self);

__attribute__((unused)) static void ComFasterxmlJacksonDatabindUtilTokenBuffer_writeFieldNameWithNSString_(ComFasterxmlJacksonDatabindUtilTokenBuffer *self, NSString *name);

__attribute__((unused)) static void ComFasterxmlJacksonDatabindUtilTokenBuffer__checkNativeIdsWithComFasterxmlJacksonCoreJsonParser_(ComFasterxmlJacksonDatabindUtilTokenBuffer *self, ComFasterxmlJacksonCoreJsonParser *jp);

__attribute__((unused)) static void ComFasterxmlJacksonDatabindUtilTokenBuffer__appendWithComFasterxmlJacksonCoreJsonToken_(ComFasterxmlJacksonDatabindUtilTokenBuffer *self, ComFasterxmlJacksonCoreJsonToken *type);

__attribute__((unused)) static void ComFasterxmlJacksonDatabindUtilTokenBuffer__appendWithComFasterxmlJacksonCoreJsonToken_withId_(ComFasterxmlJacksonDatabindUtilTokenBuffer *self, ComFasterxmlJacksonCoreJsonToken *type, id value);

__attribute__((unused)) static void ComFasterxmlJacksonDatabindUtilTokenBuffer__appendValueWithComFasterxmlJacksonCoreJsonToken_(ComFasterxmlJacksonDatabindUtilTokenBuffer *self, ComFasterxmlJacksonCoreJsonToken *type);

__attribute__((unused)) static void ComFasterxmlJacksonDatabindUtilTokenBuffer__appendValueWithComFasterxmlJacksonCoreJsonToken_withId_(ComFasterxmlJacksonDatabindUtilTokenBuffer *self, ComFasterxmlJacksonCoreJsonToken *type, id value);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindUtilTokenBuffer__Annotations$0(void);

__attribute__((unused)) static NSNumber *ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser_getNumberValue(ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser *self);

__attribute__((unused)) static id ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser__currentObject(ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser *self);

__attribute__((unused)) static void ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser__checkIsNumber(ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser *self);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser__Annotations$0(void);

@interface ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment ()

- (void)setWithInt:(jint)index
withComFasterxmlJacksonCoreJsonToken:(ComFasterxmlJacksonCoreJsonToken *)tokenType;

- (void)setWithInt:(jint)index
withComFasterxmlJacksonCoreJsonToken:(ComFasterxmlJacksonCoreJsonToken *)tokenType
            withId:(id)objectId
            withId:(id)typeId;

- (void)setWithInt:(jint)index
withComFasterxmlJacksonCoreJsonToken:(ComFasterxmlJacksonCoreJsonToken *)tokenType
            withId:(id)value;

- (void)setWithInt:(jint)index
withComFasterxmlJacksonCoreJsonToken:(ComFasterxmlJacksonCoreJsonToken *)tokenType
            withId:(id)value
            withId:(id)objectId
            withId:(id)typeId;

- (void)assignNativeIdsWithInt:(jint)index
                        withId:(id)objectId
                        withId:(id)typeId;

/*!
 @since 2.3
 */
- (id)findObjectIdWithInt:(jint)index;

/*!
 @since 2.3
 */
- (id)findTypeIdWithInt:(jint)index;

- (jint)_typeIdIndexWithInt:(jint)i;

- (jint)_objectIdIndexWithInt:(jint)i;

@end

/*!
 @brief Static array used for fast conversion between token markers and
  matching <code>JsonToken</code> instances
 */
inline IOSObjectArray *ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_get_TOKEN_TYPES_BY_INDEX(void);
static IOSObjectArray *ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_TOKEN_TYPES_BY_INDEX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment, TOKEN_TYPES_BY_INDEX, IOSObjectArray *)

__attribute__((unused)) static void ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_setWithInt_withComFasterxmlJacksonCoreJsonToken_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *self, jint index, ComFasterxmlJacksonCoreJsonToken *tokenType);

__attribute__((unused)) static void ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_setWithInt_withComFasterxmlJacksonCoreJsonToken_withId_withId_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *self, jint index, ComFasterxmlJacksonCoreJsonToken *tokenType, id objectId, id typeId);

__attribute__((unused)) static void ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_setWithInt_withComFasterxmlJacksonCoreJsonToken_withId_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *self, jint index, ComFasterxmlJacksonCoreJsonToken *tokenType, id value);

__attribute__((unused)) static void ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_setWithInt_withComFasterxmlJacksonCoreJsonToken_withId_withId_withId_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *self, jint index, ComFasterxmlJacksonCoreJsonToken *tokenType, id value, id objectId, id typeId);

__attribute__((unused)) static void ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_assignNativeIdsWithInt_withId_withId_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *self, jint index, id objectId, id typeId);

__attribute__((unused)) static id ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_findObjectIdWithInt_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *self, jint index);

__attribute__((unused)) static id ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_findTypeIdWithInt_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *self, jint index);

__attribute__((unused)) static jint ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment__typeIdIndexWithInt_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *self, jint i);

__attribute__((unused)) static jint ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment__objectIdIndexWithInt_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *self, jint i);

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindUtilTokenBuffer)

jint ComFasterxmlJacksonDatabindUtilTokenBuffer_DEFAULT_GENERATOR_FEATURES;

@implementation ComFasterxmlJacksonDatabindUtilTokenBuffer

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreObjectCodec:(ComFasterxmlJacksonCoreObjectCodec *)codec
                                                         withBoolean:(jboolean)hasNativeIds {
  ComFasterxmlJacksonDatabindUtilTokenBuffer_initWithComFasterxmlJacksonCoreObjectCodec_withBoolean_(self, codec, hasNativeIds);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p {
  ComFasterxmlJacksonDatabindUtilTokenBuffer_initWithComFasterxmlJacksonCoreJsonParser_(self, p);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
              withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt {
  ComFasterxmlJacksonDatabindUtilTokenBuffer_initWithComFasterxmlJacksonCoreJsonParser_withComFasterxmlJacksonDatabindDeserializationContext_(self, p, ctxt);
  return self;
}

+ (ComFasterxmlJacksonDatabindUtilTokenBuffer *)asCopyOfValueWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p {
  return ComFasterxmlJacksonDatabindUtilTokenBuffer_asCopyOfValueWithComFasterxmlJacksonCoreJsonParser_(p);
}

- (ComFasterxmlJacksonDatabindUtilTokenBuffer *)overrideParentContextWithComFasterxmlJacksonCoreJsonStreamContext:(ComFasterxmlJacksonCoreJsonStreamContext *)ctxt {
  JreStrongAssign(&_parentContext_, ctxt);
  return self;
}

- (ComFasterxmlJacksonDatabindUtilTokenBuffer *)forceUseOfBigDecimalWithBoolean:(jboolean)b {
  _forceBigDecimal_ = b;
  return self;
}

- (ComFasterxmlJacksonCoreVersion *)version__ {
  return JreLoadStatic(ComFasterxmlJacksonDatabindCfgPackageVersion, VERSION);
}

- (ComFasterxmlJacksonCoreJsonParser *)asParser {
  return [self asParserWithComFasterxmlJacksonCoreObjectCodec:_objectCodec_];
}

- (ComFasterxmlJacksonCoreJsonParser *)asParserOnFirstToken {
  ComFasterxmlJacksonCoreJsonParser *p = [self asParserWithComFasterxmlJacksonCoreObjectCodec:_objectCodec_];
  [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(p)) nextToken];
  return p;
}

- (ComFasterxmlJacksonCoreJsonParser *)asParserWithComFasterxmlJacksonCoreObjectCodec:(ComFasterxmlJacksonCoreObjectCodec *)codec {
  return create_ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser_initWithComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_withComFasterxmlJacksonCoreObjectCodec_withBoolean_withBoolean_withComFasterxmlJacksonCoreJsonStreamContext_(_first_, codec, _hasNativeTypeIds_, _hasNativeObjectIds_, _parentContext_);
}

- (ComFasterxmlJacksonCoreJsonParser *)asParserWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)src {
  ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser *p = create_ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser_initWithComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_withComFasterxmlJacksonCoreObjectCodec_withBoolean_withBoolean_withComFasterxmlJacksonCoreJsonStreamContext_(_first_, [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(src)) getCodec], _hasNativeTypeIds_, _hasNativeObjectIds_, _parentContext_);
  [p setLocationWithComFasterxmlJacksonCoreJsonLocation:[src getTokenLocation]];
  return p;
}

- (ComFasterxmlJacksonCoreJsonToken *)firstToken {
  return [((ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *) nil_chk(_first_)) typeWithInt:0];
}

- (ComFasterxmlJacksonDatabindUtilTokenBuffer *)appendWithComFasterxmlJacksonDatabindUtilTokenBuffer:(ComFasterxmlJacksonDatabindUtilTokenBuffer *)other {
  if (!_hasNativeTypeIds_) {
    _hasNativeTypeIds_ = [((ComFasterxmlJacksonDatabindUtilTokenBuffer *) nil_chk(other)) canWriteTypeId];
  }
  if (!_hasNativeObjectIds_) {
    _hasNativeObjectIds_ = [((ComFasterxmlJacksonDatabindUtilTokenBuffer *) nil_chk(other)) canWriteObjectId];
  }
  _mayHaveNativeIds_ = (_hasNativeTypeIds_ | _hasNativeObjectIds_);
  ComFasterxmlJacksonCoreJsonParser *p = [((ComFasterxmlJacksonDatabindUtilTokenBuffer *) nil_chk(other)) asParser];
  while ([((ComFasterxmlJacksonCoreJsonParser *) nil_chk(p)) nextToken] != nil) {
    [self copyCurrentStructureWithComFasterxmlJacksonCoreJsonParser:p];
  }
  return self;
}

- (void)serializeWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen {
  ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *segment = _first_;
  jint ptr = -1;
  jboolean checkIds = _mayHaveNativeIds_;
  jboolean hasIds = checkIds && ([((ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *) nil_chk(segment)) hasIds]);
  while (true) {
    if (++ptr >= ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_TOKENS_PER_SEGMENT) {
      ptr = 0;
      segment = [((ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *) nil_chk(segment)) next];
      if (segment == nil) break;
      hasIds = (checkIds && ([segment hasIds]));
    }
    ComFasterxmlJacksonCoreJsonToken *t = [((ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *) nil_chk(segment)) typeWithInt:ptr];
    if (t == nil) break;
    if (hasIds) {
      id id_ = ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_findObjectIdWithInt_(segment, ptr);
      if (id_ != nil) {
        [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeObjectIdWithId:id_];
      }
      id_ = ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_findTypeIdWithInt_(segment, ptr);
      if (id_ != nil) {
        [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeTypeIdWithId:id_];
      }
    }
    switch ([t ordinal]) {
      case ComFasterxmlJacksonCoreJsonToken_Enum_START_OBJECT:
      [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeStartObject];
      break;
      case ComFasterxmlJacksonCoreJsonToken_Enum_END_OBJECT:
      [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeEndObject];
      break;
      case ComFasterxmlJacksonCoreJsonToken_Enum_START_ARRAY:
      [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeStartArray];
      break;
      case ComFasterxmlJacksonCoreJsonToken_Enum_END_ARRAY:
      [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeEndArray];
      break;
      case ComFasterxmlJacksonCoreJsonToken_Enum_FIELD_NAME:
      {
        id ob = [segment getWithInt:ptr];
        if ([ComFasterxmlJacksonCoreSerializableString_class_() isInstance:ob]) {
          [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeFieldNameWithComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>) cast_check(ob, ComFasterxmlJacksonCoreSerializableString_class_())];
        }
        else {
          [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeFieldNameWithNSString:(NSString *) cast_chk(ob, [NSString class])];
        }
      }
      break;
      case ComFasterxmlJacksonCoreJsonToken_Enum_VALUE_STRING:
      {
        id ob = [segment getWithInt:ptr];
        if ([ComFasterxmlJacksonCoreSerializableString_class_() isInstance:ob]) {
          [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeStringWithComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>) cast_check(ob, ComFasterxmlJacksonCoreSerializableString_class_())];
        }
        else {
          [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeStringWithNSString:(NSString *) cast_chk(ob, [NSString class])];
        }
      }
      break;
      case ComFasterxmlJacksonCoreJsonToken_Enum_VALUE_NUMBER_INT:
      {
        id n = [segment getWithInt:ptr];
        if ([n isKindOfClass:[JavaLangInteger class]]) {
          [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeNumberWithInt:[((JavaLangInteger *) nil_chk((JavaLangInteger *) cast_chk(n, [JavaLangInteger class]))) intValue]];
        }
        else if ([n isKindOfClass:[JavaMathBigInteger class]]) {
          [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeNumberWithJavaMathBigInteger:(JavaMathBigInteger *) cast_chk(n, [JavaMathBigInteger class])];
        }
        else if ([n isKindOfClass:[JavaLangLong class]]) {
          [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeNumberWithLong:[((JavaLangLong *) nil_chk((JavaLangLong *) cast_chk(n, [JavaLangLong class]))) longLongValue]];
        }
        else if ([n isKindOfClass:[JavaLangShort class]]) {
          [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeNumberWithShort:[((JavaLangShort *) nil_chk((JavaLangShort *) cast_chk(n, [JavaLangShort class]))) shortValue]];
        }
        else {
          [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeNumberWithInt:[((NSNumber *) nil_chk(((NSNumber *) cast_chk(n, [NSNumber class])))) intValue]];
        }
      }
      break;
      case ComFasterxmlJacksonCoreJsonToken_Enum_VALUE_NUMBER_FLOAT:
      {
        id n = [segment getWithInt:ptr];
        if ([n isKindOfClass:[JavaLangDouble class]]) {
          [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeNumberWithDouble:[((JavaLangDouble *) nil_chk(((JavaLangDouble *) cast_chk(n, [JavaLangDouble class])))) doubleValue]];
        }
        else if ([n isKindOfClass:[JavaMathBigDecimal class]]) {
          [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeNumberWithJavaMathBigDecimal:(JavaMathBigDecimal *) cast_chk(n, [JavaMathBigDecimal class])];
        }
        else if ([n isKindOfClass:[JavaLangFloat class]]) {
          [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeNumberWithFloat:[((JavaLangFloat *) nil_chk(((JavaLangFloat *) cast_chk(n, [JavaLangFloat class])))) floatValue]];
        }
        else if (n == nil) {
          [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeNull];
        }
        else if ([n isKindOfClass:[NSString class]]) {
          [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeNumberWithNSString:(NSString *) cast_chk(n, [NSString class])];
        }
        else {
          @throw create_ComFasterxmlJacksonCoreJsonGenerationException_initWithNSString_withComFasterxmlJacksonCoreJsonGenerator_(NSString_java_formatWithNSString_withNSObjectArray_(@"Unrecognized value type for VALUE_NUMBER_FLOAT: %s, cannot serialize", [IOSObjectArray arrayWithObjects:(id[]){ [[n java_getClass] getName] } count:1 type:NSObject_class_()]), gen);
        }
      }
      break;
      case ComFasterxmlJacksonCoreJsonToken_Enum_VALUE_TRUE:
      [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeBooleanWithBoolean:true];
      break;
      case ComFasterxmlJacksonCoreJsonToken_Enum_VALUE_FALSE:
      [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeBooleanWithBoolean:false];
      break;
      case ComFasterxmlJacksonCoreJsonToken_Enum_VALUE_NULL:
      [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeNull];
      break;
      case ComFasterxmlJacksonCoreJsonToken_Enum_VALUE_EMBEDDED_OBJECT:
      {
        id value = [segment getWithInt:ptr];
        if ([value isKindOfClass:[ComFasterxmlJacksonDatabindUtilRawValue class]]) {
          [((ComFasterxmlJacksonDatabindUtilRawValue *) nil_chk(((ComFasterxmlJacksonDatabindUtilRawValue *) cast_chk(value, [ComFasterxmlJacksonDatabindUtilRawValue class])))) serializeWithComFasterxmlJacksonCoreJsonGenerator:gen];
        }
        else if ([ComFasterxmlJacksonDatabindJsonSerializable_class_() isInstance:value]) {
          [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeObjectWithId:value];
        }
        else {
          [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeEmbeddedObjectWithId:value];
        }
      }
      break;
      default:
      @throw create_JavaLangRuntimeException_initWithNSString_(@"Internal error: should never end up through this code path");
    }
  }
}

- (ComFasterxmlJacksonDatabindUtilTokenBuffer *)deserializeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                                           withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt {
  if ([((ComFasterxmlJacksonCoreJsonParser *) nil_chk(p)) getCurrentTokenId] != [((ComFasterxmlJacksonCoreJsonToken *) nil_chk(JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, FIELD_NAME))) id__]) {
    [self copyCurrentStructureWithComFasterxmlJacksonCoreJsonParser:p];
    return self;
  }
  ComFasterxmlJacksonCoreJsonToken *t;
  ComFasterxmlJacksonDatabindUtilTokenBuffer_writeStartObject(self);
  do {
    [self copyCurrentStructureWithComFasterxmlJacksonCoreJsonParser:p];
  }
  while ((t = [p nextToken]) == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, FIELD_NAME));
  if (t != JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, END_OBJECT)) {
    [((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) reportWrongTokenExceptionWithIOSClass:ComFasterxmlJacksonDatabindUtilTokenBuffer_class_() withComFasterxmlJacksonCoreJsonToken:JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, END_OBJECT) withNSString:JreStrcat("$@", @"Expected END_OBJECT after copying contents of a JsonParser into TokenBuffer, got ", t) withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]];
  }
  ComFasterxmlJacksonDatabindUtilTokenBuffer_writeEndObject(self);
  return self;
}

- (NSString *)description {
  jint MAX_COUNT = 100;
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  [sb appendWithNSString:@"[TokenBuffer: "];
  ComFasterxmlJacksonCoreJsonParser *jp = [self asParser];
  jint count = 0;
  jboolean hasNativeIds = _hasNativeTypeIds_ || _hasNativeObjectIds_;
  while (true) {
    ComFasterxmlJacksonCoreJsonToken *t;
    @try {
      t = [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(jp)) nextToken];
      if (t == nil) break;
      if (hasNativeIds) {
        ComFasterxmlJacksonDatabindUtilTokenBuffer__appendNativeIdsWithJavaLangStringBuilder_(self, sb);
      }
      if (count < MAX_COUNT) {
        if (count > 0) {
          [sb appendWithNSString:@", "];
        }
        [sb appendWithNSString:[t description]];
        if (t == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, FIELD_NAME)) {
          [sb appendWithChar:'('];
          [sb appendWithNSString:[jp getCurrentName]];
          [sb appendWithChar:')'];
        }
      }
    }
    @catch (JavaIoIOException *ioe) {
      @throw create_JavaLangIllegalStateException_initWithJavaLangThrowable_(ioe);
    }
    ++count;
  }
  if (count >= MAX_COUNT) {
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([sb appendWithNSString:@" ... (truncated "])) appendWithInt:count - MAX_COUNT])) appendWithNSString:@" entries)"];
  }
  [sb appendWithChar:']'];
  return [sb description];
}

- (void)_appendNativeIdsWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb {
  ComFasterxmlJacksonDatabindUtilTokenBuffer__appendNativeIdsWithJavaLangStringBuilder_(self, sb);
}

- (ComFasterxmlJacksonCoreJsonGenerator *)enableWithComFasterxmlJacksonCoreJsonGenerator_Feature:(ComFasterxmlJacksonCoreJsonGenerator_Feature *)f {
  _generatorFeatures_ |= [((ComFasterxmlJacksonCoreJsonGenerator_Feature *) nil_chk(f)) getMask];
  return self;
}

- (ComFasterxmlJacksonCoreJsonGenerator *)disableWithComFasterxmlJacksonCoreJsonGenerator_Feature:(ComFasterxmlJacksonCoreJsonGenerator_Feature *)f {
  _generatorFeatures_ &= ~[((ComFasterxmlJacksonCoreJsonGenerator_Feature *) nil_chk(f)) getMask];
  return self;
}

- (jboolean)isEnabledWithComFasterxmlJacksonCoreJsonGenerator_Feature:(ComFasterxmlJacksonCoreJsonGenerator_Feature *)f {
  return (_generatorFeatures_ & [((ComFasterxmlJacksonCoreJsonGenerator_Feature *) nil_chk(f)) getMask]) != 0;
}

- (jint)getFeatureMask {
  return _generatorFeatures_;
}

- (ComFasterxmlJacksonCoreJsonGenerator *)setFeatureMaskWithInt:(jint)mask {
  _generatorFeatures_ = mask;
  return self;
}

- (ComFasterxmlJacksonCoreJsonGenerator *)overrideStdFeaturesWithInt:(jint)values
                                                             withInt:(jint)mask {
  jint oldState = [self getFeatureMask];
  _generatorFeatures_ = (oldState & ~mask) | (values & mask);
  return self;
}

- (ComFasterxmlJacksonCoreJsonGenerator *)useDefaultPrettyPrinter {
  return self;
}

- (ComFasterxmlJacksonCoreJsonGenerator *)setCodecWithComFasterxmlJacksonCoreObjectCodec:(ComFasterxmlJacksonCoreObjectCodec *)oc {
  JreStrongAssign(&_objectCodec_, oc);
  return self;
}

- (ComFasterxmlJacksonCoreObjectCodec *)getCodec {
  return _objectCodec_;
}

- (ComFasterxmlJacksonCoreJsonJsonWriteContext *)getOutputContext {
  return _writeContext_;
}

- (jboolean)canWriteBinaryNatively {
  return true;
}

- (void)flush {
}

- (void)close {
  _closed_ = true;
}

- (jboolean)isClosed {
  return _closed_;
}

- (void)writeStartArray {
  ComFasterxmlJacksonDatabindUtilTokenBuffer_writeStartArray(self);
}

- (void)writeEndArray {
  ComFasterxmlJacksonDatabindUtilTokenBuffer_writeEndArray(self);
}

- (void)writeStartObject {
  ComFasterxmlJacksonDatabindUtilTokenBuffer_writeStartObject(self);
}

- (void)writeStartObjectWithId:(id)forValue {
  [((ComFasterxmlJacksonCoreJsonJsonWriteContext *) nil_chk(_writeContext_)) writeValue];
  ComFasterxmlJacksonDatabindUtilTokenBuffer__appendWithComFasterxmlJacksonCoreJsonToken_(self, JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_OBJECT));
  ComFasterxmlJacksonCoreJsonJsonWriteContext *ctxt = [((ComFasterxmlJacksonCoreJsonJsonWriteContext *) nil_chk(_writeContext_)) createChildObjectContext];
  JreStrongAssign(&_writeContext_, ctxt);
  if (forValue != nil) {
    [((ComFasterxmlJacksonCoreJsonJsonWriteContext *) nil_chk(ctxt)) setCurrentValueWithId:forValue];
  }
}

- (void)writeEndObject {
  ComFasterxmlJacksonDatabindUtilTokenBuffer_writeEndObject(self);
}

- (void)writeFieldNameWithNSString:(NSString *)name {
  ComFasterxmlJacksonDatabindUtilTokenBuffer_writeFieldNameWithNSString_(self, name);
}

- (void)writeFieldNameWithComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>)name {
  [((ComFasterxmlJacksonCoreJsonJsonWriteContext *) nil_chk(_writeContext_)) writeFieldNameWithNSString:[((id<ComFasterxmlJacksonCoreSerializableString>) nil_chk(name)) getValue]];
  ComFasterxmlJacksonDatabindUtilTokenBuffer__appendWithComFasterxmlJacksonCoreJsonToken_withId_(self, JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, FIELD_NAME), name);
}

- (void)writeStringWithNSString:(NSString *)text {
  if (text == nil) {
    [self writeNull];
  }
  else {
    ComFasterxmlJacksonDatabindUtilTokenBuffer__appendValueWithComFasterxmlJacksonCoreJsonToken_withId_(self, JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_STRING), text);
  }
}

- (void)writeStringWithCharArray:(IOSCharArray *)text
                         withInt:(jint)offset
                         withInt:(jint)len {
  [self writeStringWithNSString:[NSString java_stringWithCharacters:text offset:offset length:len]];
}

- (void)writeStringWithComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>)text {
  if (text == nil) {
    [self writeNull];
  }
  else {
    ComFasterxmlJacksonDatabindUtilTokenBuffer__appendValueWithComFasterxmlJacksonCoreJsonToken_withId_(self, JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_STRING), text);
  }
}

- (void)writeRawUTF8StringWithByteArray:(IOSByteArray *)text
                                withInt:(jint)offset
                                withInt:(jint)length {
  [self _reportUnsupportedOperation];
}

- (void)writeUTF8StringWithByteArray:(IOSByteArray *)text
                             withInt:(jint)offset
                             withInt:(jint)length {
  [self _reportUnsupportedOperation];
}

- (void)writeRawWithNSString:(NSString *)text {
  [self _reportUnsupportedOperation];
}

- (void)writeRawWithNSString:(NSString *)text
                     withInt:(jint)offset
                     withInt:(jint)len {
  [self _reportUnsupportedOperation];
}

- (void)writeRawWithComFasterxmlJacksonCoreSerializableString:(id<ComFasterxmlJacksonCoreSerializableString>)text {
  [self _reportUnsupportedOperation];
}

- (void)writeRawWithCharArray:(IOSCharArray *)text
                      withInt:(jint)offset
                      withInt:(jint)len {
  [self _reportUnsupportedOperation];
}

- (void)writeRawWithChar:(jchar)c {
  [self _reportUnsupportedOperation];
}

- (void)writeRawValueWithNSString:(NSString *)text {
  ComFasterxmlJacksonDatabindUtilTokenBuffer__appendValueWithComFasterxmlJacksonCoreJsonToken_withId_(self, JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_EMBEDDED_OBJECT), create_ComFasterxmlJacksonDatabindUtilRawValue_initWithNSString_(text));
}

- (void)writeRawValueWithNSString:(NSString *)text
                          withInt:(jint)offset
                          withInt:(jint)len {
  if (offset > 0 || len != [((NSString *) nil_chk(text)) java_length]) {
    text = [((NSString *) nil_chk(text)) java_substring:offset endIndex:offset + len];
  }
  ComFasterxmlJacksonDatabindUtilTokenBuffer__appendValueWithComFasterxmlJacksonCoreJsonToken_withId_(self, JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_EMBEDDED_OBJECT), create_ComFasterxmlJacksonDatabindUtilRawValue_initWithNSString_(text));
}

- (void)writeRawValueWithCharArray:(IOSCharArray *)text
                           withInt:(jint)offset
                           withInt:(jint)len {
  ComFasterxmlJacksonDatabindUtilTokenBuffer__appendValueWithComFasterxmlJacksonCoreJsonToken_withId_(self, JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_EMBEDDED_OBJECT), [NSString java_stringWithCharacters:text offset:offset length:len]);
}

- (void)writeNumberWithShort:(jshort)i {
  ComFasterxmlJacksonDatabindUtilTokenBuffer__appendValueWithComFasterxmlJacksonCoreJsonToken_withId_(self, JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_NUMBER_INT), JavaLangShort_valueOfWithShort_(i));
}

- (void)writeNumberWithInt:(jint)i {
  ComFasterxmlJacksonDatabindUtilTokenBuffer__appendValueWithComFasterxmlJacksonCoreJsonToken_withId_(self, JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_NUMBER_INT), JavaLangInteger_valueOfWithInt_(i));
}

- (void)writeNumberWithLong:(jlong)l {
  ComFasterxmlJacksonDatabindUtilTokenBuffer__appendValueWithComFasterxmlJacksonCoreJsonToken_withId_(self, JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_NUMBER_INT), JavaLangLong_valueOfWithLong_(l));
}

- (void)writeNumberWithDouble:(jdouble)d {
  ComFasterxmlJacksonDatabindUtilTokenBuffer__appendValueWithComFasterxmlJacksonCoreJsonToken_withId_(self, JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_NUMBER_FLOAT), JavaLangDouble_valueOfWithDouble_(d));
}

- (void)writeNumberWithFloat:(jfloat)f {
  ComFasterxmlJacksonDatabindUtilTokenBuffer__appendValueWithComFasterxmlJacksonCoreJsonToken_withId_(self, JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_NUMBER_FLOAT), JavaLangFloat_valueOfWithFloat_(f));
}

- (void)writeNumberWithJavaMathBigDecimal:(JavaMathBigDecimal *)dec {
  if (dec == nil) {
    [self writeNull];
  }
  else {
    ComFasterxmlJacksonDatabindUtilTokenBuffer__appendValueWithComFasterxmlJacksonCoreJsonToken_withId_(self, JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_NUMBER_FLOAT), dec);
  }
}

- (void)writeNumberWithJavaMathBigInteger:(JavaMathBigInteger *)v {
  if (v == nil) {
    [self writeNull];
  }
  else {
    ComFasterxmlJacksonDatabindUtilTokenBuffer__appendValueWithComFasterxmlJacksonCoreJsonToken_withId_(self, JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_NUMBER_INT), v);
  }
}

- (void)writeNumberWithNSString:(NSString *)encodedValue {
  ComFasterxmlJacksonDatabindUtilTokenBuffer__appendValueWithComFasterxmlJacksonCoreJsonToken_withId_(self, JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_NUMBER_FLOAT), encodedValue);
}

- (void)writeBooleanWithBoolean:(jboolean)state {
  ComFasterxmlJacksonDatabindUtilTokenBuffer__appendValueWithComFasterxmlJacksonCoreJsonToken_(self, state ? JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_TRUE) : JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_FALSE));
}

- (void)writeNull {
  ComFasterxmlJacksonDatabindUtilTokenBuffer__appendValueWithComFasterxmlJacksonCoreJsonToken_(self, JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_NULL));
}

- (void)writeObjectWithId:(id)value {
  if (value == nil) {
    [self writeNull];
    return;
  }
  IOSClass *raw = [value java_getClass];
  if (raw == IOSClass_byteArray(1) || ([value isKindOfClass:[ComFasterxmlJacksonDatabindUtilRawValue class]])) {
    ComFasterxmlJacksonDatabindUtilTokenBuffer__appendValueWithComFasterxmlJacksonCoreJsonToken_withId_(self, JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_EMBEDDED_OBJECT), value);
    return;
  }
  if (_objectCodec_ == nil) {
    ComFasterxmlJacksonDatabindUtilTokenBuffer__appendValueWithComFasterxmlJacksonCoreJsonToken_withId_(self, JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_EMBEDDED_OBJECT), value);
  }
  else {
    [_objectCodec_ writeValueWithComFasterxmlJacksonCoreJsonGenerator:self withId:value];
  }
}

- (void)writeTreeWithComFasterxmlJacksonCoreTreeNode:(id<ComFasterxmlJacksonCoreTreeNode>)node {
  if (node == nil) {
    [self writeNull];
    return;
  }
  if (_objectCodec_ == nil) {
    ComFasterxmlJacksonDatabindUtilTokenBuffer__appendValueWithComFasterxmlJacksonCoreJsonToken_withId_(self, JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_EMBEDDED_OBJECT), node);
  }
  else {
    [_objectCodec_ writeTreeWithComFasterxmlJacksonCoreJsonGenerator:self withComFasterxmlJacksonCoreTreeNode:node];
  }
}

- (void)writeBinaryWithComFasterxmlJacksonCoreBase64Variant:(ComFasterxmlJacksonCoreBase64Variant *)b64variant
                                              withByteArray:(IOSByteArray *)data
                                                    withInt:(jint)offset
                                                    withInt:(jint)len {
  IOSByteArray *copy_ = [IOSByteArray arrayWithLength:len];
  JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(data, offset, copy_, 0, len);
  [self writeObjectWithId:copy_];
}

- (jint)writeBinaryWithComFasterxmlJacksonCoreBase64Variant:(ComFasterxmlJacksonCoreBase64Variant *)b64variant
                                      withJavaIoInputStream:(JavaIoInputStream *)data
                                                    withInt:(jint)dataLength {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jboolean)canWriteTypeId {
  return _hasNativeTypeIds_;
}

- (jboolean)canWriteObjectId {
  return _hasNativeObjectIds_;
}

- (void)writeTypeIdWithId:(id)id_ {
  JreStrongAssign(&_typeId_, id_);
  _hasNativeId_ = true;
}

- (void)writeObjectIdWithId:(id)id_ {
  JreStrongAssign(&_objectId_, id_);
  _hasNativeId_ = true;
}

- (void)writeEmbeddedObjectWithId:(id)object {
  ComFasterxmlJacksonDatabindUtilTokenBuffer__appendValueWithComFasterxmlJacksonCoreJsonToken_withId_(self, JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_EMBEDDED_OBJECT), object);
}

- (void)copyCurrentEventWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p {
  if (_mayHaveNativeIds_) {
    ComFasterxmlJacksonDatabindUtilTokenBuffer__checkNativeIdsWithComFasterxmlJacksonCoreJsonParser_(self, p);
  }
  switch ([[((ComFasterxmlJacksonCoreJsonParser *) nil_chk(p)) getCurrentToken] ordinal]) {
    case ComFasterxmlJacksonCoreJsonToken_Enum_START_OBJECT:
    ComFasterxmlJacksonDatabindUtilTokenBuffer_writeStartObject(self);
    break;
    case ComFasterxmlJacksonCoreJsonToken_Enum_END_OBJECT:
    ComFasterxmlJacksonDatabindUtilTokenBuffer_writeEndObject(self);
    break;
    case ComFasterxmlJacksonCoreJsonToken_Enum_START_ARRAY:
    ComFasterxmlJacksonDatabindUtilTokenBuffer_writeStartArray(self);
    break;
    case ComFasterxmlJacksonCoreJsonToken_Enum_END_ARRAY:
    ComFasterxmlJacksonDatabindUtilTokenBuffer_writeEndArray(self);
    break;
    case ComFasterxmlJacksonCoreJsonToken_Enum_FIELD_NAME:
    ComFasterxmlJacksonDatabindUtilTokenBuffer_writeFieldNameWithNSString_(self, [p getCurrentName]);
    break;
    case ComFasterxmlJacksonCoreJsonToken_Enum_VALUE_STRING:
    if ([p hasTextCharacters]) {
      [self writeStringWithCharArray:[p getTextCharacters] withInt:[p getTextOffset] withInt:[p getTextLength]];
    }
    else {
      [self writeStringWithNSString:[p getText]];
    }
    break;
    case ComFasterxmlJacksonCoreJsonToken_Enum_VALUE_NUMBER_INT:
    switch ([[p getNumberType] ordinal]) {
      case ComFasterxmlJacksonCoreJsonParser_NumberType_Enum_INT:
      [self writeNumberWithInt:[p getIntValue]];
      break;
      case ComFasterxmlJacksonCoreJsonParser_NumberType_Enum_BIG_INTEGER:
      [self writeNumberWithJavaMathBigInteger:[p getBigIntegerValue]];
      break;
      default:
      [self writeNumberWithLong:[p getLongValue]];
    }
    break;
    case ComFasterxmlJacksonCoreJsonToken_Enum_VALUE_NUMBER_FLOAT:
    if (_forceBigDecimal_) {
      [self writeNumberWithJavaMathBigDecimal:[p getDecimalValue]];
    }
    else {
      switch ([[p getNumberType] ordinal]) {
        case ComFasterxmlJacksonCoreJsonParser_NumberType_Enum_BIG_DECIMAL:
        [self writeNumberWithJavaMathBigDecimal:[p getDecimalValue]];
        break;
        case ComFasterxmlJacksonCoreJsonParser_NumberType_Enum_FLOAT:
        [self writeNumberWithFloat:[p getFloatValue]];
        break;
        default:
        [self writeNumberWithDouble:[p getDoubleValue]];
      }
    }
    break;
    case ComFasterxmlJacksonCoreJsonToken_Enum_VALUE_TRUE:
    [self writeBooleanWithBoolean:true];
    break;
    case ComFasterxmlJacksonCoreJsonToken_Enum_VALUE_FALSE:
    [self writeBooleanWithBoolean:false];
    break;
    case ComFasterxmlJacksonCoreJsonToken_Enum_VALUE_NULL:
    [self writeNull];
    break;
    case ComFasterxmlJacksonCoreJsonToken_Enum_VALUE_EMBEDDED_OBJECT:
    [self writeObjectWithId:[p getEmbeddedObject]];
    break;
    default:
    @throw create_JavaLangRuntimeException_initWithNSString_(@"Internal error: should never end up through this code path");
  }
}

- (void)copyCurrentStructureWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p {
  ComFasterxmlJacksonCoreJsonToken *t = [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(p)) getCurrentToken];
  if (t == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, FIELD_NAME)) {
    if (_mayHaveNativeIds_) {
      ComFasterxmlJacksonDatabindUtilTokenBuffer__checkNativeIdsWithComFasterxmlJacksonCoreJsonParser_(self, p);
    }
    ComFasterxmlJacksonDatabindUtilTokenBuffer_writeFieldNameWithNSString_(self, [p getCurrentName]);
    t = [p nextToken];
  }
  if (_mayHaveNativeIds_) {
    ComFasterxmlJacksonDatabindUtilTokenBuffer__checkNativeIdsWithComFasterxmlJacksonCoreJsonParser_(self, p);
  }
  switch ([t ordinal]) {
    case ComFasterxmlJacksonCoreJsonToken_Enum_START_ARRAY:
    ComFasterxmlJacksonDatabindUtilTokenBuffer_writeStartArray(self);
    while ([p nextToken] != JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, END_ARRAY)) {
      [self copyCurrentStructureWithComFasterxmlJacksonCoreJsonParser:p];
    }
    ComFasterxmlJacksonDatabindUtilTokenBuffer_writeEndArray(self);
    break;
    case ComFasterxmlJacksonCoreJsonToken_Enum_START_OBJECT:
    ComFasterxmlJacksonDatabindUtilTokenBuffer_writeStartObject(self);
    while ([p nextToken] != JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, END_OBJECT)) {
      [self copyCurrentStructureWithComFasterxmlJacksonCoreJsonParser:p];
    }
    ComFasterxmlJacksonDatabindUtilTokenBuffer_writeEndObject(self);
    break;
    default:
    [self copyCurrentEventWithComFasterxmlJacksonCoreJsonParser:p];
  }
}

- (void)_checkNativeIdsWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)jp {
  ComFasterxmlJacksonDatabindUtilTokenBuffer__checkNativeIdsWithComFasterxmlJacksonCoreJsonParser_(self, jp);
}

- (void)_appendWithComFasterxmlJacksonCoreJsonToken:(ComFasterxmlJacksonCoreJsonToken *)type {
  ComFasterxmlJacksonDatabindUtilTokenBuffer__appendWithComFasterxmlJacksonCoreJsonToken_(self, type);
}

- (void)_appendWithComFasterxmlJacksonCoreJsonToken:(ComFasterxmlJacksonCoreJsonToken *)type
                                             withId:(id)value {
  ComFasterxmlJacksonDatabindUtilTokenBuffer__appendWithComFasterxmlJacksonCoreJsonToken_withId_(self, type, value);
}

- (void)_appendValueWithComFasterxmlJacksonCoreJsonToken:(ComFasterxmlJacksonCoreJsonToken *)type {
  ComFasterxmlJacksonDatabindUtilTokenBuffer__appendValueWithComFasterxmlJacksonCoreJsonToken_(self, type);
}

- (void)_appendValueWithComFasterxmlJacksonCoreJsonToken:(ComFasterxmlJacksonCoreJsonToken *)type
                                                  withId:(id)value {
  ComFasterxmlJacksonDatabindUtilTokenBuffer__appendValueWithComFasterxmlJacksonCoreJsonToken_withId_(self, type, value);
}

- (void)_reportUnsupportedOperation {
  @throw create_JavaLangUnsupportedOperationException_initWithNSString_(@"Called operation not supported for TokenBuffer");
}

- (void)dealloc {
  RELEASE_(_objectCodec_);
  RELEASE_(_parentContext_);
  RELEASE_(_first_);
  RELEASE_(_last_);
  RELEASE_(_typeId_);
  RELEASE_(_objectId_);
  RELEASE_(_writeContext_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindUtilTokenBuffer;", 0x9, 3, 1, 4, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindUtilTokenBuffer;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindUtilTokenBuffer;", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreVersion;", 0x1, 9, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonParser;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonParser;", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonParser;", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonParser;", 0x1, 10, 1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindUtilTokenBuffer;", 0x1, 12, 13, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 15, 4, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindUtilTokenBuffer;", 0x1, 16, 2, 4, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 17, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x12, 18, 19, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonGenerator;", 0x1, 20, 21, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonGenerator;", 0x1, 22, 21, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 23, 21, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonGenerator;", 0x1, 24, 25, -1, -1, 26, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonGenerator;", 0x1, 27, 28, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonGenerator;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonGenerator;", 0x1, 29, 11, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreObjectCodec;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonJsonWriteContext;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x11, -1, -1, 4, -1, -1, -1 },
    { NULL, "V", 0x11, -1, -1, 4, -1, -1, -1 },
    { NULL, "V", 0x11, -1, -1, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 30, 31, 4, -1, -1, -1 },
    { NULL, "V", 0x11, -1, -1, 4, -1, -1, -1 },
    { NULL, "V", 0x11, 32, 33, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 32, 34, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 35, 33, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 35, 36, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 35, 34, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 37, 38, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 39, 38, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 40, 33, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 40, 41, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 40, 34, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 40, 36, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 40, 42, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 43, 33, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 43, 41, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 43, 36, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 44, 45, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 44, 25, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 44, 46, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 44, 47, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 44, 48, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 44, 49, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 44, 50, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 44, 33, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 51, 8, 4, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 52, 31, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 53, 54, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 55, 56, 4, -1, -1, -1 },
    { NULL, "I", 0x1, 55, 57, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 58, 31, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 59, 31, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 60, 31, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 61, 1, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 62, 1, 4, -1, -1, -1 },
    { NULL, "V", 0x12, 63, 1, 4, -1, -1, -1 },
    { NULL, "V", 0x14, 64, 65, -1, -1, -1, -1 },
    { NULL, "V", 0x14, 64, 66, -1, -1, -1, -1 },
    { NULL, "V", 0x14, 67, 65, -1, -1, -1, -1 },
    { NULL, "V", 0x14, 67, 66, -1, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonCoreObjectCodec:withBoolean:);
  methods[1].selector = @selector(initWithComFasterxmlJacksonCoreJsonParser:);
  methods[2].selector = @selector(initWithComFasterxmlJacksonCoreJsonParser:withComFasterxmlJacksonDatabindDeserializationContext:);
  methods[3].selector = @selector(asCopyOfValueWithComFasterxmlJacksonCoreJsonParser:);
  methods[4].selector = @selector(overrideParentContextWithComFasterxmlJacksonCoreJsonStreamContext:);
  methods[5].selector = @selector(forceUseOfBigDecimalWithBoolean:);
  methods[6].selector = @selector(version__);
  methods[7].selector = @selector(asParser);
  methods[8].selector = @selector(asParserOnFirstToken);
  methods[9].selector = @selector(asParserWithComFasterxmlJacksonCoreObjectCodec:);
  methods[10].selector = @selector(asParserWithComFasterxmlJacksonCoreJsonParser:);
  methods[11].selector = @selector(firstToken);
  methods[12].selector = @selector(appendWithComFasterxmlJacksonDatabindUtilTokenBuffer:);
  methods[13].selector = @selector(serializeWithComFasterxmlJacksonCoreJsonGenerator:);
  methods[14].selector = @selector(deserializeWithComFasterxmlJacksonCoreJsonParser:withComFasterxmlJacksonDatabindDeserializationContext:);
  methods[15].selector = @selector(description);
  methods[16].selector = @selector(_appendNativeIdsWithJavaLangStringBuilder:);
  methods[17].selector = @selector(enableWithComFasterxmlJacksonCoreJsonGenerator_Feature:);
  methods[18].selector = @selector(disableWithComFasterxmlJacksonCoreJsonGenerator_Feature:);
  methods[19].selector = @selector(isEnabledWithComFasterxmlJacksonCoreJsonGenerator_Feature:);
  methods[20].selector = @selector(getFeatureMask);
  methods[21].selector = @selector(setFeatureMaskWithInt:);
  methods[22].selector = @selector(overrideStdFeaturesWithInt:withInt:);
  methods[23].selector = @selector(useDefaultPrettyPrinter);
  methods[24].selector = @selector(setCodecWithComFasterxmlJacksonCoreObjectCodec:);
  methods[25].selector = @selector(getCodec);
  methods[26].selector = @selector(getOutputContext);
  methods[27].selector = @selector(canWriteBinaryNatively);
  methods[28].selector = @selector(flush);
  methods[29].selector = @selector(close);
  methods[30].selector = @selector(isClosed);
  methods[31].selector = @selector(writeStartArray);
  methods[32].selector = @selector(writeEndArray);
  methods[33].selector = @selector(writeStartObject);
  methods[34].selector = @selector(writeStartObjectWithId:);
  methods[35].selector = @selector(writeEndObject);
  methods[36].selector = @selector(writeFieldNameWithNSString:);
  methods[37].selector = @selector(writeFieldNameWithComFasterxmlJacksonCoreSerializableString:);
  methods[38].selector = @selector(writeStringWithNSString:);
  methods[39].selector = @selector(writeStringWithCharArray:withInt:withInt:);
  methods[40].selector = @selector(writeStringWithComFasterxmlJacksonCoreSerializableString:);
  methods[41].selector = @selector(writeRawUTF8StringWithByteArray:withInt:withInt:);
  methods[42].selector = @selector(writeUTF8StringWithByteArray:withInt:withInt:);
  methods[43].selector = @selector(writeRawWithNSString:);
  methods[44].selector = @selector(writeRawWithNSString:withInt:withInt:);
  methods[45].selector = @selector(writeRawWithComFasterxmlJacksonCoreSerializableString:);
  methods[46].selector = @selector(writeRawWithCharArray:withInt:withInt:);
  methods[47].selector = @selector(writeRawWithChar:);
  methods[48].selector = @selector(writeRawValueWithNSString:);
  methods[49].selector = @selector(writeRawValueWithNSString:withInt:withInt:);
  methods[50].selector = @selector(writeRawValueWithCharArray:withInt:withInt:);
  methods[51].selector = @selector(writeNumberWithShort:);
  methods[52].selector = @selector(writeNumberWithInt:);
  methods[53].selector = @selector(writeNumberWithLong:);
  methods[54].selector = @selector(writeNumberWithDouble:);
  methods[55].selector = @selector(writeNumberWithFloat:);
  methods[56].selector = @selector(writeNumberWithJavaMathBigDecimal:);
  methods[57].selector = @selector(writeNumberWithJavaMathBigInteger:);
  methods[58].selector = @selector(writeNumberWithNSString:);
  methods[59].selector = @selector(writeBooleanWithBoolean:);
  methods[60].selector = @selector(writeNull);
  methods[61].selector = @selector(writeObjectWithId:);
  methods[62].selector = @selector(writeTreeWithComFasterxmlJacksonCoreTreeNode:);
  methods[63].selector = @selector(writeBinaryWithComFasterxmlJacksonCoreBase64Variant:withByteArray:withInt:withInt:);
  methods[64].selector = @selector(writeBinaryWithComFasterxmlJacksonCoreBase64Variant:withJavaIoInputStream:withInt:);
  methods[65].selector = @selector(canWriteTypeId);
  methods[66].selector = @selector(canWriteObjectId);
  methods[67].selector = @selector(writeTypeIdWithId:);
  methods[68].selector = @selector(writeObjectIdWithId:);
  methods[69].selector = @selector(writeEmbeddedObjectWithId:);
  methods[70].selector = @selector(copyCurrentEventWithComFasterxmlJacksonCoreJsonParser:);
  methods[71].selector = @selector(copyCurrentStructureWithComFasterxmlJacksonCoreJsonParser:);
  methods[72].selector = @selector(_checkNativeIdsWithComFasterxmlJacksonCoreJsonParser:);
  methods[73].selector = @selector(_appendWithComFasterxmlJacksonCoreJsonToken:);
  methods[74].selector = @selector(_appendWithComFasterxmlJacksonCoreJsonToken:withId:);
  methods[75].selector = @selector(_appendValueWithComFasterxmlJacksonCoreJsonToken:);
  methods[76].selector = @selector(_appendValueWithComFasterxmlJacksonCoreJsonToken:withId:);
  methods[77].selector = @selector(_reportUnsupportedOperation);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_GENERATOR_FEATURES", "I", .constantValue.asLong = 0, 0x1c, -1, 68, -1, -1 },
    { "_objectCodec_", "LComFasterxmlJacksonCoreObjectCodec;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_parentContext_", "LComFasterxmlJacksonCoreJsonStreamContext;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_generatorFeatures_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_closed_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_hasNativeTypeIds_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_hasNativeObjectIds_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_mayHaveNativeIds_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_forceBigDecimal_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_first_", "LComFasterxmlJacksonDatabindUtilTokenBuffer_Segment;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_last_", "LComFasterxmlJacksonDatabindUtilTokenBuffer_Segment;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_appendAt_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_typeId_", "LNSObject;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_objectId_", "LNSObject;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_hasNativeId_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_writeContext_", "LComFasterxmlJacksonCoreJsonJsonWriteContext;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonCoreObjectCodec;Z", "LComFasterxmlJacksonCoreJsonParser;", "LComFasterxmlJacksonCoreJsonParser;LComFasterxmlJacksonDatabindDeserializationContext;", "asCopyOfValue", "LJavaIoIOException;", "overrideParentContext", "LComFasterxmlJacksonCoreJsonStreamContext;", "forceUseOfBigDecimal", "Z", "version", "asParser", "LComFasterxmlJacksonCoreObjectCodec;", "append", "LComFasterxmlJacksonDatabindUtilTokenBuffer;", "serialize", "LComFasterxmlJacksonCoreJsonGenerator;", "deserialize", "toString", "_appendNativeIds", "LJavaLangStringBuilder;", "enable", "LComFasterxmlJacksonCoreJsonGenerator_Feature;", "disable", "isEnabled", "setFeatureMask", "I", (void *)&ComFasterxmlJacksonDatabindUtilTokenBuffer__Annotations$0, "overrideStdFeatures", "II", "setCodec", "writeStartObject", "LNSObject;", "writeFieldName", "LNSString;", "LComFasterxmlJacksonCoreSerializableString;", "writeString", "[CII", "writeRawUTF8String", "[BII", "writeUTF8String", "writeRaw", "LNSString;II", "C", "writeRawValue", "writeNumber", "S", "J", "D", "F", "LJavaMathBigDecimal;", "LJavaMathBigInteger;", "writeBoolean", "writeObject", "writeTree", "LComFasterxmlJacksonCoreTreeNode;", "writeBinary", "LComFasterxmlJacksonCoreBase64Variant;[BII", "LComFasterxmlJacksonCoreBase64Variant;LJavaIoInputStream;I", "writeTypeId", "writeObjectId", "writeEmbeddedObject", "copyCurrentEvent", "copyCurrentStructure", "_checkNativeIds", "_append", "LComFasterxmlJacksonCoreJsonToken;", "LComFasterxmlJacksonCoreJsonToken;LNSObject;", "_appendValue", &ComFasterxmlJacksonDatabindUtilTokenBuffer_DEFAULT_GENERATOR_FEATURES, "LComFasterxmlJacksonDatabindUtilTokenBuffer_Parser;LComFasterxmlJacksonDatabindUtilTokenBuffer_Segment;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindUtilTokenBuffer = { "TokenBuffer", "com.fasterxml.jackson.databind.util", ptrTable, methods, fields, 7, 0x1, 78, 16, -1, 69, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindUtilTokenBuffer;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindUtilTokenBuffer class]) {
    ComFasterxmlJacksonDatabindUtilTokenBuffer_DEFAULT_GENERATOR_FEATURES = ComFasterxmlJacksonCoreJsonGenerator_Feature_collectDefaults();
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindUtilTokenBuffer)
  }
}

@end

void ComFasterxmlJacksonDatabindUtilTokenBuffer_initWithComFasterxmlJacksonCoreObjectCodec_withBoolean_(ComFasterxmlJacksonDatabindUtilTokenBuffer *self, ComFasterxmlJacksonCoreObjectCodec *codec, jboolean hasNativeIds) {
  ComFasterxmlJacksonCoreJsonGenerator_init(self);
  self->_hasNativeId_ = false;
  JreStrongAssign(&self->_objectCodec_, codec);
  self->_generatorFeatures_ = ComFasterxmlJacksonDatabindUtilTokenBuffer_DEFAULT_GENERATOR_FEATURES;
  JreStrongAssign(&self->_writeContext_, ComFasterxmlJacksonCoreJsonJsonWriteContext_createRootContextWithComFasterxmlJacksonCoreJsonDupDetector_(nil));
  JreStrongAssign(&self->_first_, JreStrongAssignAndConsume(&self->_last_, new_ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_init()));
  self->_appendAt_ = 0;
  self->_hasNativeTypeIds_ = hasNativeIds;
  self->_hasNativeObjectIds_ = hasNativeIds;
  self->_mayHaveNativeIds_ = (self->_hasNativeTypeIds_ | self->_hasNativeObjectIds_);
}

ComFasterxmlJacksonDatabindUtilTokenBuffer *new_ComFasterxmlJacksonDatabindUtilTokenBuffer_initWithComFasterxmlJacksonCoreObjectCodec_withBoolean_(ComFasterxmlJacksonCoreObjectCodec *codec, jboolean hasNativeIds) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindUtilTokenBuffer, initWithComFasterxmlJacksonCoreObjectCodec_withBoolean_, codec, hasNativeIds)
}

ComFasterxmlJacksonDatabindUtilTokenBuffer *create_ComFasterxmlJacksonDatabindUtilTokenBuffer_initWithComFasterxmlJacksonCoreObjectCodec_withBoolean_(ComFasterxmlJacksonCoreObjectCodec *codec, jboolean hasNativeIds) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindUtilTokenBuffer, initWithComFasterxmlJacksonCoreObjectCodec_withBoolean_, codec, hasNativeIds)
}

void ComFasterxmlJacksonDatabindUtilTokenBuffer_initWithComFasterxmlJacksonCoreJsonParser_(ComFasterxmlJacksonDatabindUtilTokenBuffer *self, ComFasterxmlJacksonCoreJsonParser *p) {
  ComFasterxmlJacksonDatabindUtilTokenBuffer_initWithComFasterxmlJacksonCoreJsonParser_withComFasterxmlJacksonDatabindDeserializationContext_(self, p, nil);
}

ComFasterxmlJacksonDatabindUtilTokenBuffer *new_ComFasterxmlJacksonDatabindUtilTokenBuffer_initWithComFasterxmlJacksonCoreJsonParser_(ComFasterxmlJacksonCoreJsonParser *p) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindUtilTokenBuffer, initWithComFasterxmlJacksonCoreJsonParser_, p)
}

ComFasterxmlJacksonDatabindUtilTokenBuffer *create_ComFasterxmlJacksonDatabindUtilTokenBuffer_initWithComFasterxmlJacksonCoreJsonParser_(ComFasterxmlJacksonCoreJsonParser *p) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindUtilTokenBuffer, initWithComFasterxmlJacksonCoreJsonParser_, p)
}

void ComFasterxmlJacksonDatabindUtilTokenBuffer_initWithComFasterxmlJacksonCoreJsonParser_withComFasterxmlJacksonDatabindDeserializationContext_(ComFasterxmlJacksonDatabindUtilTokenBuffer *self, ComFasterxmlJacksonCoreJsonParser *p, ComFasterxmlJacksonDatabindDeserializationContext *ctxt) {
  ComFasterxmlJacksonCoreJsonGenerator_init(self);
  self->_hasNativeId_ = false;
  JreStrongAssign(&self->_objectCodec_, [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(p)) getCodec]);
  JreStrongAssign(&self->_parentContext_, [p getParsingContext]);
  self->_generatorFeatures_ = ComFasterxmlJacksonDatabindUtilTokenBuffer_DEFAULT_GENERATOR_FEATURES;
  JreStrongAssign(&self->_writeContext_, ComFasterxmlJacksonCoreJsonJsonWriteContext_createRootContextWithComFasterxmlJacksonCoreJsonDupDetector_(nil));
  JreStrongAssign(&self->_first_, JreStrongAssignAndConsume(&self->_last_, new_ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_init()));
  self->_appendAt_ = 0;
  self->_hasNativeTypeIds_ = [p canReadTypeId];
  self->_hasNativeObjectIds_ = [p canReadObjectId];
  self->_mayHaveNativeIds_ = (self->_hasNativeTypeIds_ | self->_hasNativeObjectIds_);
  self->_forceBigDecimal_ = (ctxt == nil) ? false : [((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) isEnabledWithComFasterxmlJacksonDatabindDeserializationFeature:JreLoadEnum(ComFasterxmlJacksonDatabindDeserializationFeature, USE_BIG_DECIMAL_FOR_FLOATS)];
}

ComFasterxmlJacksonDatabindUtilTokenBuffer *new_ComFasterxmlJacksonDatabindUtilTokenBuffer_initWithComFasterxmlJacksonCoreJsonParser_withComFasterxmlJacksonDatabindDeserializationContext_(ComFasterxmlJacksonCoreJsonParser *p, ComFasterxmlJacksonDatabindDeserializationContext *ctxt) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindUtilTokenBuffer, initWithComFasterxmlJacksonCoreJsonParser_withComFasterxmlJacksonDatabindDeserializationContext_, p, ctxt)
}

ComFasterxmlJacksonDatabindUtilTokenBuffer *create_ComFasterxmlJacksonDatabindUtilTokenBuffer_initWithComFasterxmlJacksonCoreJsonParser_withComFasterxmlJacksonDatabindDeserializationContext_(ComFasterxmlJacksonCoreJsonParser *p, ComFasterxmlJacksonDatabindDeserializationContext *ctxt) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindUtilTokenBuffer, initWithComFasterxmlJacksonCoreJsonParser_withComFasterxmlJacksonDatabindDeserializationContext_, p, ctxt)
}

ComFasterxmlJacksonDatabindUtilTokenBuffer *ComFasterxmlJacksonDatabindUtilTokenBuffer_asCopyOfValueWithComFasterxmlJacksonCoreJsonParser_(ComFasterxmlJacksonCoreJsonParser *p) {
  ComFasterxmlJacksonDatabindUtilTokenBuffer_initialize();
  ComFasterxmlJacksonDatabindUtilTokenBuffer *b = create_ComFasterxmlJacksonDatabindUtilTokenBuffer_initWithComFasterxmlJacksonCoreJsonParser_(p);
  [b copyCurrentStructureWithComFasterxmlJacksonCoreJsonParser:p];
  return b;
}

void ComFasterxmlJacksonDatabindUtilTokenBuffer__appendNativeIdsWithJavaLangStringBuilder_(ComFasterxmlJacksonDatabindUtilTokenBuffer *self, JavaLangStringBuilder *sb) {
  id objectId = ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_findObjectIdWithInt_(nil_chk(self->_last_), self->_appendAt_ - 1);
  if (objectId != nil) {
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:@"[objectId="])) appendWithNSString:NSString_java_valueOf_(objectId)])) appendWithChar:']'];
  }
  id typeId = ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_findTypeIdWithInt_(nil_chk(self->_last_), self->_appendAt_ - 1);
  if (typeId != nil) {
    [((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk([((JavaLangStringBuilder *) nil_chk(sb)) appendWithNSString:@"[typeId="])) appendWithNSString:NSString_java_valueOf_(typeId)])) appendWithChar:']'];
  }
}

void ComFasterxmlJacksonDatabindUtilTokenBuffer_writeStartArray(ComFasterxmlJacksonDatabindUtilTokenBuffer *self) {
  [((ComFasterxmlJacksonCoreJsonJsonWriteContext *) nil_chk(self->_writeContext_)) writeValue];
  ComFasterxmlJacksonDatabindUtilTokenBuffer__appendWithComFasterxmlJacksonCoreJsonToken_(self, JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_ARRAY));
  JreStrongAssign(&self->_writeContext_, [((ComFasterxmlJacksonCoreJsonJsonWriteContext *) nil_chk(self->_writeContext_)) createChildArrayContext]);
}

void ComFasterxmlJacksonDatabindUtilTokenBuffer_writeEndArray(ComFasterxmlJacksonDatabindUtilTokenBuffer *self) {
  ComFasterxmlJacksonDatabindUtilTokenBuffer__appendWithComFasterxmlJacksonCoreJsonToken_(self, JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, END_ARRAY));
  ComFasterxmlJacksonCoreJsonJsonWriteContext *c = [((ComFasterxmlJacksonCoreJsonJsonWriteContext *) nil_chk(self->_writeContext_)) getParent];
  if (c != nil) {
    JreStrongAssign(&self->_writeContext_, c);
  }
}

void ComFasterxmlJacksonDatabindUtilTokenBuffer_writeStartObject(ComFasterxmlJacksonDatabindUtilTokenBuffer *self) {
  [((ComFasterxmlJacksonCoreJsonJsonWriteContext *) nil_chk(self->_writeContext_)) writeValue];
  ComFasterxmlJacksonDatabindUtilTokenBuffer__appendWithComFasterxmlJacksonCoreJsonToken_(self, JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_OBJECT));
  JreStrongAssign(&self->_writeContext_, [((ComFasterxmlJacksonCoreJsonJsonWriteContext *) nil_chk(self->_writeContext_)) createChildObjectContext]);
}

void ComFasterxmlJacksonDatabindUtilTokenBuffer_writeEndObject(ComFasterxmlJacksonDatabindUtilTokenBuffer *self) {
  ComFasterxmlJacksonDatabindUtilTokenBuffer__appendWithComFasterxmlJacksonCoreJsonToken_(self, JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, END_OBJECT));
  ComFasterxmlJacksonCoreJsonJsonWriteContext *c = [((ComFasterxmlJacksonCoreJsonJsonWriteContext *) nil_chk(self->_writeContext_)) getParent];
  if (c != nil) {
    JreStrongAssign(&self->_writeContext_, c);
  }
}

void ComFasterxmlJacksonDatabindUtilTokenBuffer_writeFieldNameWithNSString_(ComFasterxmlJacksonDatabindUtilTokenBuffer *self, NSString *name) {
  [((ComFasterxmlJacksonCoreJsonJsonWriteContext *) nil_chk(self->_writeContext_)) writeFieldNameWithNSString:name];
  ComFasterxmlJacksonDatabindUtilTokenBuffer__appendWithComFasterxmlJacksonCoreJsonToken_withId_(self, JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, FIELD_NAME), name);
}

void ComFasterxmlJacksonDatabindUtilTokenBuffer__checkNativeIdsWithComFasterxmlJacksonCoreJsonParser_(ComFasterxmlJacksonDatabindUtilTokenBuffer *self, ComFasterxmlJacksonCoreJsonParser *jp) {
  if ((JreStrongAssign(&self->_typeId_, [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(jp)) getTypeId])) != nil) {
    self->_hasNativeId_ = true;
  }
  if ((JreStrongAssign(&self->_objectId_, [jp getObjectId])) != nil) {
    self->_hasNativeId_ = true;
  }
}

void ComFasterxmlJacksonDatabindUtilTokenBuffer__appendWithComFasterxmlJacksonCoreJsonToken_(ComFasterxmlJacksonDatabindUtilTokenBuffer *self, ComFasterxmlJacksonCoreJsonToken *type) {
  ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *next = self->_hasNativeId_ ? [((ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *) nil_chk(self->_last_)) appendWithInt:self->_appendAt_ withComFasterxmlJacksonCoreJsonToken:type withId:self->_objectId_ withId:self->_typeId_] : [((ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *) nil_chk(self->_last_)) appendWithInt:self->_appendAt_ withComFasterxmlJacksonCoreJsonToken:type];
  if (next == nil) {
    ++self->_appendAt_;
  }
  else {
    JreStrongAssign(&self->_last_, next);
    self->_appendAt_ = 1;
  }
}

void ComFasterxmlJacksonDatabindUtilTokenBuffer__appendWithComFasterxmlJacksonCoreJsonToken_withId_(ComFasterxmlJacksonDatabindUtilTokenBuffer *self, ComFasterxmlJacksonCoreJsonToken *type, id value) {
  ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *next = self->_hasNativeId_ ? [((ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *) nil_chk(self->_last_)) appendWithInt:self->_appendAt_ withComFasterxmlJacksonCoreJsonToken:type withId:value withId:self->_objectId_ withId:self->_typeId_] : [((ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *) nil_chk(self->_last_)) appendWithInt:self->_appendAt_ withComFasterxmlJacksonCoreJsonToken:type withId:value];
  if (next == nil) {
    ++self->_appendAt_;
  }
  else {
    JreStrongAssign(&self->_last_, next);
    self->_appendAt_ = 1;
  }
}

void ComFasterxmlJacksonDatabindUtilTokenBuffer__appendValueWithComFasterxmlJacksonCoreJsonToken_(ComFasterxmlJacksonDatabindUtilTokenBuffer *self, ComFasterxmlJacksonCoreJsonToken *type) {
  [((ComFasterxmlJacksonCoreJsonJsonWriteContext *) nil_chk(self->_writeContext_)) writeValue];
  ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *next = self->_hasNativeId_ ? [((ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *) nil_chk(self->_last_)) appendWithInt:self->_appendAt_ withComFasterxmlJacksonCoreJsonToken:type withId:self->_objectId_ withId:self->_typeId_] : [((ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *) nil_chk(self->_last_)) appendWithInt:self->_appendAt_ withComFasterxmlJacksonCoreJsonToken:type];
  if (next == nil) {
    ++self->_appendAt_;
  }
  else {
    JreStrongAssign(&self->_last_, next);
    self->_appendAt_ = 1;
  }
}

void ComFasterxmlJacksonDatabindUtilTokenBuffer__appendValueWithComFasterxmlJacksonCoreJsonToken_withId_(ComFasterxmlJacksonDatabindUtilTokenBuffer *self, ComFasterxmlJacksonCoreJsonToken *type, id value) {
  [((ComFasterxmlJacksonCoreJsonJsonWriteContext *) nil_chk(self->_writeContext_)) writeValue];
  ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *next = self->_hasNativeId_ ? [((ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *) nil_chk(self->_last_)) appendWithInt:self->_appendAt_ withComFasterxmlJacksonCoreJsonToken:type withId:value withId:self->_objectId_ withId:self->_typeId_] : [((ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *) nil_chk(self->_last_)) appendWithInt:self->_appendAt_ withComFasterxmlJacksonCoreJsonToken:type withId:value];
  if (next == nil) {
    ++self->_appendAt_;
  }
  else {
    JreStrongAssign(&self->_last_, next);
    self->_appendAt_ = 1;
  }
}

IOSObjectArray *ComFasterxmlJacksonDatabindUtilTokenBuffer__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindUtilTokenBuffer)

@implementation ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindUtilTokenBuffer_Segment:(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *)firstSeg
                                              withComFasterxmlJacksonCoreObjectCodec:(ComFasterxmlJacksonCoreObjectCodec *)codec
                                                                         withBoolean:(jboolean)hasNativeTypeIds
                                                                         withBoolean:(jboolean)hasNativeObjectIds {
  ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser_initWithComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_withComFasterxmlJacksonCoreObjectCodec_withBoolean_withBoolean_(self, firstSeg, codec, hasNativeTypeIds, hasNativeObjectIds);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindUtilTokenBuffer_Segment:(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *)firstSeg
                                              withComFasterxmlJacksonCoreObjectCodec:(ComFasterxmlJacksonCoreObjectCodec *)codec
                                                                         withBoolean:(jboolean)hasNativeTypeIds
                                                                         withBoolean:(jboolean)hasNativeObjectIds
                                        withComFasterxmlJacksonCoreJsonStreamContext:(ComFasterxmlJacksonCoreJsonStreamContext *)parentContext {
  ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser_initWithComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_withComFasterxmlJacksonCoreObjectCodec_withBoolean_withBoolean_withComFasterxmlJacksonCoreJsonStreamContext_(self, firstSeg, codec, hasNativeTypeIds, hasNativeObjectIds, parentContext);
  return self;
}

- (void)setLocationWithComFasterxmlJacksonCoreJsonLocation:(ComFasterxmlJacksonCoreJsonLocation *)l {
  JreStrongAssign(&_location_, l);
}

- (ComFasterxmlJacksonCoreObjectCodec *)getCodec {
  return _codec_;
}

- (void)setCodecWithComFasterxmlJacksonCoreObjectCodec:(ComFasterxmlJacksonCoreObjectCodec *)c {
  JreStrongAssign(&_codec_, c);
}

- (ComFasterxmlJacksonCoreVersion *)version__ {
  return JreLoadStatic(ComFasterxmlJacksonDatabindCfgPackageVersion, VERSION);
}

- (ComFasterxmlJacksonCoreJsonToken *)peekNextToken {
  if (_closed_) return nil;
  ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *seg = _segment_;
  jint ptr = _segmentPtr_ + 1;
  if (ptr >= ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_TOKENS_PER_SEGMENT) {
    ptr = 0;
    seg = (seg == nil) ? nil : [((ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *) nil_chk(seg)) next];
  }
  return (seg == nil) ? nil : [((ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *) nil_chk(seg)) typeWithInt:ptr];
}

- (void)close {
  if (!_closed_) {
    _closed_ = true;
  }
}

- (ComFasterxmlJacksonCoreJsonToken *)nextToken {
  if (_closed_ || (_segment_ == nil)) return nil;
  if (++_segmentPtr_ >= ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_TOKENS_PER_SEGMENT) {
    _segmentPtr_ = 0;
    JreStrongAssign(&_segment_, [((ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *) nil_chk(_segment_)) next]);
    if (_segment_ == nil) {
      return nil;
    }
  }
  JreStrongAssign(&_currToken_, [((ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *) nil_chk(_segment_)) typeWithInt:_segmentPtr_]);
  if (_currToken_ == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, FIELD_NAME)) {
    id ob = ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser__currentObject(self);
    NSString *name = ([ob isKindOfClass:[NSString class]]) ? ((NSString *) cast_chk(ob, [NSString class])) : [nil_chk(ob) description];
    [((ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *) nil_chk(_parsingContext_)) setCurrentNameWithNSString:name];
  }
  else if (_currToken_ == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_OBJECT)) {
    JreStrongAssign(&_parsingContext_, [((ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *) nil_chk(_parsingContext_)) createChildObjectContext]);
  }
  else if (_currToken_ == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_ARRAY)) {
    JreStrongAssign(&_parsingContext_, [((ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *) nil_chk(_parsingContext_)) createChildArrayContext]);
  }
  else if (_currToken_ == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, END_OBJECT) || _currToken_ == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, END_ARRAY)) {
    JreStrongAssign(&_parsingContext_, [((ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *) nil_chk(_parsingContext_)) parentOrCopy]);
  }
  return _currToken_;
}

- (NSString *)nextFieldName {
  if (_closed_ || (_segment_ == nil)) {
    return nil;
  }
  jint ptr = _segmentPtr_ + 1;
  if ((ptr < ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_TOKENS_PER_SEGMENT) && ([((ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *) nil_chk(_segment_)) typeWithInt:ptr] == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, FIELD_NAME))) {
    _segmentPtr_ = ptr;
    JreStrongAssign(&_currToken_, JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, FIELD_NAME));
    id ob = [((ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *) nil_chk(_segment_)) getWithInt:ptr];
    NSString *name = ([ob isKindOfClass:[NSString class]]) ? ((NSString *) cast_chk(ob, [NSString class])) : [nil_chk(ob) description];
    [((ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *) nil_chk(_parsingContext_)) setCurrentNameWithNSString:name];
    return name;
  }
  return ([self nextToken] == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, FIELD_NAME)) ? [self getCurrentName] : nil;
}

- (jboolean)isClosed {
  return _closed_;
}

- (ComFasterxmlJacksonCoreJsonStreamContext *)getParsingContext {
  return _parsingContext_;
}

- (ComFasterxmlJacksonCoreJsonLocation *)getTokenLocation {
  return [self getCurrentLocation];
}

- (ComFasterxmlJacksonCoreJsonLocation *)getCurrentLocation {
  return (_location_ == nil) ? JreLoadStatic(ComFasterxmlJacksonCoreJsonLocation, NA) : _location_;
}

- (NSString *)getCurrentName {
  if (_currToken_ == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_OBJECT) || _currToken_ == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_ARRAY)) {
    ComFasterxmlJacksonCoreJsonStreamContext *parent = [((ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *) nil_chk(_parsingContext_)) getParent];
    return [((ComFasterxmlJacksonCoreJsonStreamContext *) nil_chk(parent)) getCurrentName];
  }
  return [((ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *) nil_chk(_parsingContext_)) getCurrentName];
}

- (void)overrideCurrentNameWithNSString:(NSString *)name {
  ComFasterxmlJacksonCoreJsonStreamContext *ctxt = _parsingContext_;
  if (_currToken_ == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_OBJECT) || _currToken_ == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_ARRAY)) {
    ctxt = [((ComFasterxmlJacksonCoreJsonStreamContext *) nil_chk(ctxt)) getParent];
  }
  if ([ctxt isKindOfClass:[ComFasterxmlJacksonDatabindUtilTokenBufferReadContext class]]) {
    @try {
      [((ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *) nil_chk(((ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *) cast_chk(ctxt, [ComFasterxmlJacksonDatabindUtilTokenBufferReadContext class])))) setCurrentNameWithNSString:name];
    }
    @catch (JavaIoIOException *e) {
      @throw create_JavaLangRuntimeException_initWithJavaLangThrowable_(e);
    }
  }
}

- (NSString *)getText {
  if (_currToken_ == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_STRING) || _currToken_ == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, FIELD_NAME)) {
    id ob = ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser__currentObject(self);
    if ([ob isKindOfClass:[NSString class]]) {
      return (NSString *) cast_chk(ob, [NSString class]);
    }
    return ComFasterxmlJacksonDatabindUtilClassUtil_nullOrToStringWithId_(ob);
  }
  if (_currToken_ == nil) {
    return nil;
  }
  switch ([_currToken_ ordinal]) {
    case ComFasterxmlJacksonCoreJsonToken_Enum_VALUE_NUMBER_INT:
    case ComFasterxmlJacksonCoreJsonToken_Enum_VALUE_NUMBER_FLOAT:
    return ComFasterxmlJacksonDatabindUtilClassUtil_nullOrToStringWithId_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser__currentObject(self));
    default:
    return [_currToken_ asString];
  }
}

- (IOSCharArray *)getTextCharacters {
  NSString *str = [self getText];
  return (str == nil) ? nil : [((NSString *) nil_chk(str)) java_toCharArray];
}

- (jint)getTextLength {
  NSString *str = [self getText];
  return (str == nil) ? 0 : [((NSString *) nil_chk(str)) java_length];
}

- (jint)getTextOffset {
  return 0;
}

- (jboolean)hasTextCharacters {
  return false;
}

- (jboolean)isNaN {
  if (_currToken_ == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_NUMBER_FLOAT)) {
    id value = ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser__currentObject(self);
    if ([value isKindOfClass:[JavaLangDouble class]]) {
      JavaLangDouble *v = (JavaLangDouble *) cast_chk(value, [JavaLangDouble class]);
      return [((JavaLangDouble *) nil_chk(v)) isNaN] || [v isInfinite];
    }
    if ([value isKindOfClass:[JavaLangFloat class]]) {
      JavaLangFloat *v = (JavaLangFloat *) cast_chk(value, [JavaLangFloat class]);
      return [((JavaLangFloat *) nil_chk(v)) isNaN] || [v isInfinite];
    }
  }
  return false;
}

- (JavaMathBigInteger *)getBigIntegerValue {
  NSNumber *n = ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser_getNumberValue(self);
  if ([n isKindOfClass:[JavaMathBigInteger class]]) {
    return (JavaMathBigInteger *) cast_chk(n, [JavaMathBigInteger class]);
  }
  if ([self getNumberType] == JreLoadEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, BIG_DECIMAL)) {
    return [((JavaMathBigDecimal *) nil_chk(((JavaMathBigDecimal *) cast_chk(n, [JavaMathBigDecimal class])))) toBigInteger];
  }
  return JavaMathBigInteger_valueOfWithLong_([((NSNumber *) nil_chk(n)) longLongValue]);
}

- (JavaMathBigDecimal *)getDecimalValue {
  NSNumber *n = ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser_getNumberValue(self);
  if ([n isKindOfClass:[JavaMathBigDecimal class]]) {
    return (JavaMathBigDecimal *) cast_chk(n, [JavaMathBigDecimal class]);
  }
  switch ([[self getNumberType] ordinal]) {
    case ComFasterxmlJacksonCoreJsonParser_NumberType_Enum_INT:
    case ComFasterxmlJacksonCoreJsonParser_NumberType_Enum_LONG:
    return JavaMathBigDecimal_valueOfWithLong_([((NSNumber *) nil_chk(n)) longLongValue]);
    case ComFasterxmlJacksonCoreJsonParser_NumberType_Enum_BIG_INTEGER:
    return create_JavaMathBigDecimal_initWithJavaMathBigInteger_((JavaMathBigInteger *) cast_chk(n, [JavaMathBigInteger class]));
    default:
    ;
  }
  return JavaMathBigDecimal_valueOfWithDouble_([((NSNumber *) nil_chk(n)) doubleValue]);
}

- (jdouble)getDoubleValue {
  return [((NSNumber *) nil_chk(ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser_getNumberValue(self))) doubleValue];
}

- (jfloat)getFloatValue {
  return [((NSNumber *) nil_chk(ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser_getNumberValue(self))) floatValue];
}

- (jint)getIntValue {
  if (_currToken_ == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_NUMBER_INT)) {
    return [((NSNumber *) nil_chk(((NSNumber *) cast_chk(ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser__currentObject(self), [NSNumber class])))) intValue];
  }
  return [((NSNumber *) nil_chk(ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser_getNumberValue(self))) intValue];
}

- (jlong)getLongValue {
  return [((NSNumber *) nil_chk(ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser_getNumberValue(self))) longLongValue];
}

- (ComFasterxmlJacksonCoreJsonParser_NumberType *)getNumberType {
  NSNumber *n = ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser_getNumberValue(self);
  if ([n isKindOfClass:[JavaLangInteger class]]) return JreLoadEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, INT);
  if ([n isKindOfClass:[JavaLangLong class]]) return JreLoadEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, LONG);
  if ([n isKindOfClass:[JavaLangDouble class]]) return JreLoadEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, DOUBLE);
  if ([n isKindOfClass:[JavaMathBigDecimal class]]) return JreLoadEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, BIG_DECIMAL);
  if ([n isKindOfClass:[JavaMathBigInteger class]]) return JreLoadEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, BIG_INTEGER);
  if ([n isKindOfClass:[JavaLangFloat class]]) return JreLoadEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, FLOAT);
  if ([n isKindOfClass:[JavaLangShort class]]) return JreLoadEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, INT);
  return nil;
}

- (NSNumber *)getNumberValue {
  return ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser_getNumberValue(self);
}

- (id)getEmbeddedObject {
  if (_currToken_ == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_EMBEDDED_OBJECT)) {
    return ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser__currentObject(self);
  }
  return nil;
}

- (IOSByteArray *)getBinaryValueWithComFasterxmlJacksonCoreBase64Variant:(ComFasterxmlJacksonCoreBase64Variant *)b64variant {
  if (_currToken_ == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_EMBEDDED_OBJECT)) {
    id ob = ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser__currentObject(self);
    if ([ob isKindOfClass:[IOSByteArray class]]) {
      return (IOSByteArray *) cast_chk(ob, [IOSByteArray class]);
    }
  }
  if (_currToken_ != JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_STRING)) {
    @throw nil_chk([self _constructErrorWithNSString:JreStrcat("$@$", @"Current token (", _currToken_, @") not VALUE_STRING (or VALUE_EMBEDDED_OBJECT with byte[]), cannot access as binary")]);
  }
  NSString *str = [self getText];
  if (str == nil) {
    return nil;
  }
  ComFasterxmlJacksonCoreUtilByteArrayBuilder *builder = _byteBuilder_;
  if (builder == nil) {
    JreStrongAssign(&_byteBuilder_, builder = create_ComFasterxmlJacksonCoreUtilByteArrayBuilder_initWithInt_(100));
  }
  else {
    [((ComFasterxmlJacksonCoreUtilByteArrayBuilder *) nil_chk(_byteBuilder_)) reset];
  }
  [self _decodeBase64WithNSString:str withComFasterxmlJacksonCoreUtilByteArrayBuilder:builder withComFasterxmlJacksonCoreBase64Variant:b64variant];
  return [builder toByteArray];
}

- (jint)readBinaryValueWithComFasterxmlJacksonCoreBase64Variant:(ComFasterxmlJacksonCoreBase64Variant *)b64variant
                                         withJavaIoOutputStream:(JavaIoOutputStream *)outArg {
  IOSByteArray *data = [self getBinaryValueWithComFasterxmlJacksonCoreBase64Variant:b64variant];
  if (data != nil) {
    [((JavaIoOutputStream *) nil_chk(outArg)) writeWithByteArray:data withInt:0 withInt:data->size_];
    return data->size_;
  }
  return 0;
}

- (jboolean)canReadObjectId {
  return _hasNativeObjectIds_;
}

- (jboolean)canReadTypeId {
  return _hasNativeTypeIds_;
}

- (id)getTypeId {
  return ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_findTypeIdWithInt_(nil_chk(_segment_), _segmentPtr_);
}

- (id)getObjectId {
  return ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_findObjectIdWithInt_(nil_chk(_segment_), _segmentPtr_);
}

- (id)_currentObject {
  return ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser__currentObject(self);
}

- (void)_checkIsNumber {
  ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser__checkIsNumber(self);
}

- (void)_handleEOF {
  [self _throwInternal];
}

- (void)dealloc {
  RELEASE_(_codec_);
  RELEASE_(_segment_);
  RELEASE_(_parsingContext_);
  RELEASE_(_byteBuilder_);
  RELEASE_(_location_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, 1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreObjectCodec;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreVersion;", 0x1, 7, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, -1, -1, 8, -1, -1, -1 },
    { NULL, "V", 0x1, -1, -1, 8, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, -1, -1, 8, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, 8, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonStreamContext;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonLocation;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonLocation;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[C", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaMathBigInteger;", 0x1, -1, -1, 8, -1, -1, -1 },
    { NULL, "LJavaMathBigDecimal;", 0x1, -1, -1, 8, -1, -1, -1 },
    { NULL, "D", 0x1, -1, -1, 8, -1, -1, -1 },
    { NULL, "F", 0x1, -1, -1, 8, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, 8, -1, -1, -1 },
    { NULL, "J", 0x1, -1, -1, 8, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonParser_NumberType;", 0x1, -1, -1, 8, -1, -1, -1 },
    { NULL, "LNSNumber;", 0x11, -1, -1, 8, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "[B", 0x1, 11, 12, 13, -1, -1, -1 },
    { NULL, "I", 0x1, 14, 15, 8, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x14, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x14, -1, -1, 16, -1, -1, -1 },
    { NULL, "V", 0x4, -1, -1, 16, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonDatabindUtilTokenBuffer_Segment:withComFasterxmlJacksonCoreObjectCodec:withBoolean:withBoolean:);
  methods[1].selector = @selector(initWithComFasterxmlJacksonDatabindUtilTokenBuffer_Segment:withComFasterxmlJacksonCoreObjectCodec:withBoolean:withBoolean:withComFasterxmlJacksonCoreJsonStreamContext:);
  methods[2].selector = @selector(setLocationWithComFasterxmlJacksonCoreJsonLocation:);
  methods[3].selector = @selector(getCodec);
  methods[4].selector = @selector(setCodecWithComFasterxmlJacksonCoreObjectCodec:);
  methods[5].selector = @selector(version__);
  methods[6].selector = @selector(peekNextToken);
  methods[7].selector = @selector(close);
  methods[8].selector = @selector(nextToken);
  methods[9].selector = @selector(nextFieldName);
  methods[10].selector = @selector(isClosed);
  methods[11].selector = @selector(getParsingContext);
  methods[12].selector = @selector(getTokenLocation);
  methods[13].selector = @selector(getCurrentLocation);
  methods[14].selector = @selector(getCurrentName);
  methods[15].selector = @selector(overrideCurrentNameWithNSString:);
  methods[16].selector = @selector(getText);
  methods[17].selector = @selector(getTextCharacters);
  methods[18].selector = @selector(getTextLength);
  methods[19].selector = @selector(getTextOffset);
  methods[20].selector = @selector(hasTextCharacters);
  methods[21].selector = @selector(isNaN);
  methods[22].selector = @selector(getBigIntegerValue);
  methods[23].selector = @selector(getDecimalValue);
  methods[24].selector = @selector(getDoubleValue);
  methods[25].selector = @selector(getFloatValue);
  methods[26].selector = @selector(getIntValue);
  methods[27].selector = @selector(getLongValue);
  methods[28].selector = @selector(getNumberType);
  methods[29].selector = @selector(getNumberValue);
  methods[30].selector = @selector(getEmbeddedObject);
  methods[31].selector = @selector(getBinaryValueWithComFasterxmlJacksonCoreBase64Variant:);
  methods[32].selector = @selector(readBinaryValueWithComFasterxmlJacksonCoreBase64Variant:withJavaIoOutputStream:);
  methods[33].selector = @selector(canReadObjectId);
  methods[34].selector = @selector(canReadTypeId);
  methods[35].selector = @selector(getTypeId);
  methods[36].selector = @selector(getObjectId);
  methods[37].selector = @selector(_currentObject);
  methods[38].selector = @selector(_checkIsNumber);
  methods[39].selector = @selector(_handleEOF);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_codec_", "LComFasterxmlJacksonCoreObjectCodec;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_hasNativeTypeIds_", "Z", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_hasNativeObjectIds_", "Z", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_hasNativeIds_", "Z", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_segment_", "LComFasterxmlJacksonDatabindUtilTokenBuffer_Segment;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_segmentPtr_", "I", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_parsingContext_", "LComFasterxmlJacksonDatabindUtilTokenBufferReadContext;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_closed_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_byteBuilder_", "LComFasterxmlJacksonCoreUtilByteArrayBuilder;", .constantValue.asLong = 0, 0x84, -1, -1, -1, -1 },
    { "_location_", "LComFasterxmlJacksonCoreJsonLocation;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindUtilTokenBuffer_Segment;LComFasterxmlJacksonCoreObjectCodec;ZZ", (void *)&ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser__Annotations$0, "LComFasterxmlJacksonDatabindUtilTokenBuffer_Segment;LComFasterxmlJacksonCoreObjectCodec;ZZLComFasterxmlJacksonCoreJsonStreamContext;", "setLocation", "LComFasterxmlJacksonCoreJsonLocation;", "setCodec", "LComFasterxmlJacksonCoreObjectCodec;", "version", "LJavaIoIOException;", "overrideCurrentName", "LNSString;", "getBinaryValue", "LComFasterxmlJacksonCoreBase64Variant;", "LJavaIoIOException;LComFasterxmlJacksonCoreJsonParseException;", "readBinaryValue", "LComFasterxmlJacksonCoreBase64Variant;LJavaIoOutputStream;", "LComFasterxmlJacksonCoreJsonParseException;", "LComFasterxmlJacksonDatabindUtilTokenBuffer;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser = { "Parser", "com.fasterxml.jackson.databind.util", ptrTable, methods, fields, 7, 0x1c, 40, 10, 17, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser;
}

@end

void ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser_initWithComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_withComFasterxmlJacksonCoreObjectCodec_withBoolean_withBoolean_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser *self, ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *firstSeg, ComFasterxmlJacksonCoreObjectCodec *codec, jboolean hasNativeTypeIds, jboolean hasNativeObjectIds) {
  ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser_initWithComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_withComFasterxmlJacksonCoreObjectCodec_withBoolean_withBoolean_withComFasterxmlJacksonCoreJsonStreamContext_(self, firstSeg, codec, hasNativeTypeIds, hasNativeObjectIds, nil);
}

ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser *new_ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser_initWithComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_withComFasterxmlJacksonCoreObjectCodec_withBoolean_withBoolean_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *firstSeg, ComFasterxmlJacksonCoreObjectCodec *codec, jboolean hasNativeTypeIds, jboolean hasNativeObjectIds) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser, initWithComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_withComFasterxmlJacksonCoreObjectCodec_withBoolean_withBoolean_, firstSeg, codec, hasNativeTypeIds, hasNativeObjectIds)
}

ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser *create_ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser_initWithComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_withComFasterxmlJacksonCoreObjectCodec_withBoolean_withBoolean_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *firstSeg, ComFasterxmlJacksonCoreObjectCodec *codec, jboolean hasNativeTypeIds, jboolean hasNativeObjectIds) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser, initWithComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_withComFasterxmlJacksonCoreObjectCodec_withBoolean_withBoolean_, firstSeg, codec, hasNativeTypeIds, hasNativeObjectIds)
}

void ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser_initWithComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_withComFasterxmlJacksonCoreObjectCodec_withBoolean_withBoolean_withComFasterxmlJacksonCoreJsonStreamContext_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser *self, ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *firstSeg, ComFasterxmlJacksonCoreObjectCodec *codec, jboolean hasNativeTypeIds, jboolean hasNativeObjectIds, ComFasterxmlJacksonCoreJsonStreamContext *parentContext) {
  ComFasterxmlJacksonCoreBaseParserMinimalBase_initWithInt_(self, 0);
  JreStrongAssign(&self->_location_, nil);
  JreStrongAssign(&self->_segment_, firstSeg);
  self->_segmentPtr_ = -1;
  JreStrongAssign(&self->_codec_, codec);
  JreStrongAssign(&self->_parsingContext_, ComFasterxmlJacksonDatabindUtilTokenBufferReadContext_createRootContextWithComFasterxmlJacksonCoreJsonStreamContext_(parentContext));
  self->_hasNativeTypeIds_ = hasNativeTypeIds;
  self->_hasNativeObjectIds_ = hasNativeObjectIds;
  self->_hasNativeIds_ = (hasNativeTypeIds | hasNativeObjectIds);
}

ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser *new_ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser_initWithComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_withComFasterxmlJacksonCoreObjectCodec_withBoolean_withBoolean_withComFasterxmlJacksonCoreJsonStreamContext_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *firstSeg, ComFasterxmlJacksonCoreObjectCodec *codec, jboolean hasNativeTypeIds, jboolean hasNativeObjectIds, ComFasterxmlJacksonCoreJsonStreamContext *parentContext) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser, initWithComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_withComFasterxmlJacksonCoreObjectCodec_withBoolean_withBoolean_withComFasterxmlJacksonCoreJsonStreamContext_, firstSeg, codec, hasNativeTypeIds, hasNativeObjectIds, parentContext)
}

ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser *create_ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser_initWithComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_withComFasterxmlJacksonCoreObjectCodec_withBoolean_withBoolean_withComFasterxmlJacksonCoreJsonStreamContext_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *firstSeg, ComFasterxmlJacksonCoreObjectCodec *codec, jboolean hasNativeTypeIds, jboolean hasNativeObjectIds, ComFasterxmlJacksonCoreJsonStreamContext *parentContext) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser, initWithComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_withComFasterxmlJacksonCoreObjectCodec_withBoolean_withBoolean_withComFasterxmlJacksonCoreJsonStreamContext_, firstSeg, codec, hasNativeTypeIds, hasNativeObjectIds, parentContext)
}

NSNumber *ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser_getNumberValue(ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser *self) {
  ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser__checkIsNumber(self);
  id value = ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser__currentObject(self);
  if ([value isKindOfClass:[NSNumber class]]) {
    return (NSNumber *) cast_chk(value, [NSNumber class]);
  }
  if ([value isKindOfClass:[NSString class]]) {
    NSString *str = (NSString *) cast_chk(value, [NSString class]);
    if ([((NSString *) nil_chk(str)) java_indexOf:'.'] >= 0) {
      return JavaLangDouble_valueOfWithDouble_(JavaLangDouble_parseDoubleWithNSString_(str));
    }
    return JavaLangLong_valueOfWithLong_(JavaLangLong_parseLongWithNSString_(str));
  }
  if (value == nil) {
    return nil;
  }
  @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$", @"Internal error: entry should be a Number, but is of type ", [[value java_getClass] getName]));
}

id ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser__currentObject(ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser *self) {
  return [((ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *) nil_chk(self->_segment_)) getWithInt:self->_segmentPtr_];
}

void ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser__checkIsNumber(ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser *self) {
  if (self->_currToken_ == nil || ![self->_currToken_ isNumeric]) {
    @throw nil_chk([self _constructErrorWithNSString:JreStrcat("$@$", @"Current token (", self->_currToken_, @") not numeric, cannot use numeric value accessors")]);
  }
}

IOSObjectArray *ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindUtilTokenBuffer_Parser)

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment)

@implementation ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComFasterxmlJacksonCoreJsonToken *)typeWithInt:(jint)index {
  jlong l = _tokenTypes_;
  if (index > 0) {
    JreRShiftAssignLong(&l, (JreLShift32(index, 2)));
  }
  jint ix = ((jint) l) & (jint) 0xF;
  return IOSObjectArray_Get(nil_chk(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_TOKEN_TYPES_BY_INDEX), ix);
}

- (jint)rawTypeWithInt:(jint)index {
  jlong l = _tokenTypes_;
  if (index > 0) {
    JreRShiftAssignLong(&l, (JreLShift32(index, 2)));
  }
  jint ix = ((jint) l) & (jint) 0xF;
  return ix;
}

- (id)getWithInt:(jint)index {
  return IOSObjectArray_Get(nil_chk(_tokens_), index);
}

- (ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *)next {
  return _next_;
}

- (jboolean)hasIds {
  return _nativeIds_ != nil;
}

- (ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *)appendWithInt:(jint)index
                                 withComFasterxmlJacksonCoreJsonToken:(ComFasterxmlJacksonCoreJsonToken *)tokenType {
  if (index < ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_TOKENS_PER_SEGMENT) {
    ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_setWithInt_withComFasterxmlJacksonCoreJsonToken_(self, index, tokenType);
    return nil;
  }
  JreStrongAssignAndConsume(&_next_, new_ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_init());
  ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_setWithInt_withComFasterxmlJacksonCoreJsonToken_(_next_, 0, tokenType);
  return _next_;
}

- (ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *)appendWithInt:(jint)index
                                 withComFasterxmlJacksonCoreJsonToken:(ComFasterxmlJacksonCoreJsonToken *)tokenType
                                                               withId:(id)objectId
                                                               withId:(id)typeId {
  if (index < ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_TOKENS_PER_SEGMENT) {
    ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_setWithInt_withComFasterxmlJacksonCoreJsonToken_withId_withId_(self, index, tokenType, objectId, typeId);
    return nil;
  }
  JreStrongAssignAndConsume(&_next_, new_ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_init());
  ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_setWithInt_withComFasterxmlJacksonCoreJsonToken_withId_withId_(_next_, 0, tokenType, objectId, typeId);
  return _next_;
}

- (ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *)appendWithInt:(jint)index
                                 withComFasterxmlJacksonCoreJsonToken:(ComFasterxmlJacksonCoreJsonToken *)tokenType
                                                               withId:(id)value {
  if (index < ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_TOKENS_PER_SEGMENT) {
    ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_setWithInt_withComFasterxmlJacksonCoreJsonToken_withId_(self, index, tokenType, value);
    return nil;
  }
  JreStrongAssignAndConsume(&_next_, new_ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_init());
  ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_setWithInt_withComFasterxmlJacksonCoreJsonToken_withId_(_next_, 0, tokenType, value);
  return _next_;
}

- (ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *)appendWithInt:(jint)index
                                 withComFasterxmlJacksonCoreJsonToken:(ComFasterxmlJacksonCoreJsonToken *)tokenType
                                                               withId:(id)value
                                                               withId:(id)objectId
                                                               withId:(id)typeId {
  if (index < ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_TOKENS_PER_SEGMENT) {
    ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_setWithInt_withComFasterxmlJacksonCoreJsonToken_withId_withId_withId_(self, index, tokenType, value, objectId, typeId);
    return nil;
  }
  JreStrongAssignAndConsume(&_next_, new_ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_init());
  ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_setWithInt_withComFasterxmlJacksonCoreJsonToken_withId_withId_withId_(_next_, 0, tokenType, value, objectId, typeId);
  return _next_;
}

- (void)setWithInt:(jint)index
withComFasterxmlJacksonCoreJsonToken:(ComFasterxmlJacksonCoreJsonToken *)tokenType {
  ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_setWithInt_withComFasterxmlJacksonCoreJsonToken_(self, index, tokenType);
}

- (void)setWithInt:(jint)index
withComFasterxmlJacksonCoreJsonToken:(ComFasterxmlJacksonCoreJsonToken *)tokenType
            withId:(id)objectId
            withId:(id)typeId {
  ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_setWithInt_withComFasterxmlJacksonCoreJsonToken_withId_withId_(self, index, tokenType, objectId, typeId);
}

- (void)setWithInt:(jint)index
withComFasterxmlJacksonCoreJsonToken:(ComFasterxmlJacksonCoreJsonToken *)tokenType
            withId:(id)value {
  ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_setWithInt_withComFasterxmlJacksonCoreJsonToken_withId_(self, index, tokenType, value);
}

- (void)setWithInt:(jint)index
withComFasterxmlJacksonCoreJsonToken:(ComFasterxmlJacksonCoreJsonToken *)tokenType
            withId:(id)value
            withId:(id)objectId
            withId:(id)typeId {
  ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_setWithInt_withComFasterxmlJacksonCoreJsonToken_withId_withId_withId_(self, index, tokenType, value, objectId, typeId);
}

- (void)assignNativeIdsWithInt:(jint)index
                        withId:(id)objectId
                        withId:(id)typeId {
  ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_assignNativeIdsWithInt_withId_withId_(self, index, objectId, typeId);
}

- (id)findObjectIdWithInt:(jint)index {
  return ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_findObjectIdWithInt_(self, index);
}

- (id)findTypeIdWithInt:(jint)index {
  return ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_findTypeIdWithInt_(self, index);
}

- (jint)_typeIdIndexWithInt:(jint)i {
  return ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment__typeIdIndexWithInt_(self, i);
}

- (jint)_objectIdIndexWithInt:(jint)i {
  return ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment__objectIdIndexWithInt_(self, i);
}

- (void)dealloc {
  RELEASE_(_next_);
  RELEASE_(_tokens_);
  RELEASE_(_nativeIds_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 2, 1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 3, 1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindUtilTokenBuffer_Segment;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindUtilTokenBuffer_Segment;", 0x1, 4, 5, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindUtilTokenBuffer_Segment;", 0x1, 4, 6, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindUtilTokenBuffer_Segment;", 0x1, 4, 7, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindUtilTokenBuffer_Segment;", 0x1, 4, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 5, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x2, 9, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x12, 10, 11, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, 12, 1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x2, 13, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x12, 14, 1, -1, -1, -1, -1 },
    { NULL, "I", 0x12, 15, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(typeWithInt:);
  methods[2].selector = @selector(rawTypeWithInt:);
  methods[3].selector = @selector(getWithInt:);
  methods[4].selector = @selector(next);
  methods[5].selector = @selector(hasIds);
  methods[6].selector = @selector(appendWithInt:withComFasterxmlJacksonCoreJsonToken:);
  methods[7].selector = @selector(appendWithInt:withComFasterxmlJacksonCoreJsonToken:withId:withId:);
  methods[8].selector = @selector(appendWithInt:withComFasterxmlJacksonCoreJsonToken:withId:);
  methods[9].selector = @selector(appendWithInt:withComFasterxmlJacksonCoreJsonToken:withId:withId:withId:);
  methods[10].selector = @selector(setWithInt:withComFasterxmlJacksonCoreJsonToken:);
  methods[11].selector = @selector(setWithInt:withComFasterxmlJacksonCoreJsonToken:withId:withId:);
  methods[12].selector = @selector(setWithInt:withComFasterxmlJacksonCoreJsonToken:withId:);
  methods[13].selector = @selector(setWithInt:withComFasterxmlJacksonCoreJsonToken:withId:withId:withId:);
  methods[14].selector = @selector(assignNativeIdsWithInt:withId:withId:);
  methods[15].selector = @selector(findObjectIdWithInt:);
  methods[16].selector = @selector(findTypeIdWithInt:);
  methods[17].selector = @selector(_typeIdIndexWithInt:);
  methods[18].selector = @selector(_objectIdIndexWithInt:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TOKENS_PER_SEGMENT", "I", .constantValue.asInt = ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_TOKENS_PER_SEGMENT, 0x19, -1, -1, -1, -1 },
    { "TOKEN_TYPES_BY_INDEX", "[LComFasterxmlJacksonCoreJsonToken;", .constantValue.asLong = 0, 0x1a, -1, 16, -1, -1 },
    { "_next_", "LComFasterxmlJacksonDatabindUtilTokenBuffer_Segment;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_tokenTypes_", "J", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_tokens_", "[LNSObject;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_nativeIds_", "LJavaUtilTreeMap;", .constantValue.asLong = 0, 0x4, -1, -1, 17, -1 },
  };
  static const void *ptrTable[] = { "type", "I", "rawType", "get", "append", "ILComFasterxmlJacksonCoreJsonToken;", "ILComFasterxmlJacksonCoreJsonToken;LNSObject;LNSObject;", "ILComFasterxmlJacksonCoreJsonToken;LNSObject;", "ILComFasterxmlJacksonCoreJsonToken;LNSObject;LNSObject;LNSObject;", "set", "assignNativeIds", "ILNSObject;LNSObject;", "findObjectId", "findTypeId", "_typeIdIndex", "_objectIdIndex", &ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_TOKEN_TYPES_BY_INDEX, "Ljava/util/TreeMap<Ljava/lang/Integer;Ljava/lang/Object;>;", "LComFasterxmlJacksonDatabindUtilTokenBuffer;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment = { "Segment", "com.fasterxml.jackson.databind.util", ptrTable, methods, fields, 7, 0x1c, 19, 6, 18, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment class]) {
    {
      JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_TOKEN_TYPES_BY_INDEX, [IOSObjectArray newArrayWithLength:16 type:ComFasterxmlJacksonCoreJsonToken_class_()]);
      IOSObjectArray *t = ComFasterxmlJacksonCoreJsonToken_values();
      JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(t, 1, ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_TOKEN_TYPES_BY_INDEX, 1, JavaLangMath_minWithInt_withInt_(15, ((IOSObjectArray *) nil_chk(t))->size_ - 1));
    }
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment)
  }
}

@end

void ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_init(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *self) {
  NSObject_init(self);
  JreStrongAssignAndConsume(&self->_tokens_, [IOSObjectArray newArrayWithLength:ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_TOKENS_PER_SEGMENT type:NSObject_class_()]);
}

ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *new_ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment, init)
}

ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *create_ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment, init)
}

void ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_setWithInt_withComFasterxmlJacksonCoreJsonToken_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *self, jint index, ComFasterxmlJacksonCoreJsonToken *tokenType) {
  jlong typeCode = [((ComFasterxmlJacksonCoreJsonToken *) nil_chk(tokenType)) ordinal];
  if (index > 0) {
    JreLShiftAssignLong(&typeCode, (JreLShift32(index, 2)));
  }
  self->_tokenTypes_ |= typeCode;
}

void ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_setWithInt_withComFasterxmlJacksonCoreJsonToken_withId_withId_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *self, jint index, ComFasterxmlJacksonCoreJsonToken *tokenType, id objectId, id typeId) {
  jlong typeCode = [((ComFasterxmlJacksonCoreJsonToken *) nil_chk(tokenType)) ordinal];
  if (index > 0) {
    JreLShiftAssignLong(&typeCode, (JreLShift32(index, 2)));
  }
  self->_tokenTypes_ |= typeCode;
  ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_assignNativeIdsWithInt_withId_withId_(self, index, objectId, typeId);
}

void ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_setWithInt_withComFasterxmlJacksonCoreJsonToken_withId_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *self, jint index, ComFasterxmlJacksonCoreJsonToken *tokenType, id value) {
  IOSObjectArray_Set(nil_chk(self->_tokens_), index, value);
  jlong typeCode = [((ComFasterxmlJacksonCoreJsonToken *) nil_chk(tokenType)) ordinal];
  if (index > 0) {
    JreLShiftAssignLong(&typeCode, (JreLShift32(index, 2)));
  }
  self->_tokenTypes_ |= typeCode;
}

void ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_setWithInt_withComFasterxmlJacksonCoreJsonToken_withId_withId_withId_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *self, jint index, ComFasterxmlJacksonCoreJsonToken *tokenType, id value, id objectId, id typeId) {
  IOSObjectArray_Set(nil_chk(self->_tokens_), index, value);
  jlong typeCode = [((ComFasterxmlJacksonCoreJsonToken *) nil_chk(tokenType)) ordinal];
  if (index > 0) {
    JreLShiftAssignLong(&typeCode, (JreLShift32(index, 2)));
  }
  self->_tokenTypes_ |= typeCode;
  ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_assignNativeIdsWithInt_withId_withId_(self, index, objectId, typeId);
}

void ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_assignNativeIdsWithInt_withId_withId_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *self, jint index, id objectId, id typeId) {
  if (self->_nativeIds_ == nil) {
    JreStrongAssignAndConsume(&self->_nativeIds_, new_JavaUtilTreeMap_init());
  }
  if (objectId != nil) {
    [self->_nativeIds_ putWithId:JavaLangInteger_valueOfWithInt_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment__objectIdIndexWithInt_(self, index)) withId:objectId];
  }
  if (typeId != nil) {
    [((JavaUtilTreeMap *) nil_chk(self->_nativeIds_)) putWithId:JavaLangInteger_valueOfWithInt_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment__typeIdIndexWithInt_(self, index)) withId:typeId];
  }
}

id ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_findObjectIdWithInt_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *self, jint index) {
  return (self->_nativeIds_ == nil) ? nil : [((JavaUtilTreeMap *) nil_chk(self->_nativeIds_)) getWithId:JavaLangInteger_valueOfWithInt_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment__objectIdIndexWithInt_(self, index))];
}

id ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment_findTypeIdWithInt_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *self, jint index) {
  return (self->_nativeIds_ == nil) ? nil : [((JavaUtilTreeMap *) nil_chk(self->_nativeIds_)) getWithId:JavaLangInteger_valueOfWithInt_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment__typeIdIndexWithInt_(self, index))];
}

jint ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment__typeIdIndexWithInt_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *self, jint i) {
  return i + i;
}

jint ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment__objectIdIndexWithInt_(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment *self, jint i) {
  return i + i + 1;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindUtilTokenBuffer_Segment)
