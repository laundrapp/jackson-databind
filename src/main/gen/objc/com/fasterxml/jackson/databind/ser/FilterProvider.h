//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/FilterProvider.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerFilterProvider")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindSerFilterProvider
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerFilterProvider 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerFilterProvider 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindSerFilterProvider

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindSerFilterProvider_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerFilterProvider || defined(INCLUDE_ComFasterxmlJacksonDatabindSerFilterProvider))
#define ComFasterxmlJacksonDatabindSerFilterProvider_

@protocol ComFasterxmlJacksonDatabindSerBeanPropertyFilter;
@protocol ComFasterxmlJacksonDatabindSerPropertyFilter;

/*!
 @brief Interface for objects that providers instances of <code>PropertyFilter</code>
  that match given ids.A provider is configured to be used during serialization,
  to find filter to used based on id specified by <code>com.fasterxml.jackson.annotation.JsonFilter</code>
  annotation on bean class.
 */
@interface ComFasterxmlJacksonDatabindSerFilterProvider : NSObject

#pragma mark Public

- (instancetype __nonnull)init;

/*!
 @brief Lookup method used to find <code>BeanPropertyFilter</code> that has specified id.
 Note that id is typically a <code>java.lang.String</code>, but is not necessarily
  limited to that; that is, while standard components use String, custom
  implementation can choose other kinds of keys.
 @return Filter registered with specified id, if one defined; null if
    none found.
 */
- (id<ComFasterxmlJacksonDatabindSerBeanPropertyFilter>)findFilterWithId:(id)filterId;

/*!
 @brief Lookup method used to find <code>PropertyFilter</code> that has specified id.
 Note that id is typically a <code>java.lang.String</code>, but is not necessarily
  limited to that; that is, while standard components use String, custom
  implementation can choose other kinds of keys.
 <p>
  This method is the replacement for <code>findFilter</code> starting with 2.3.
 <p>
  Note that the default implementation is designed to support short-term
  backwards compatibility, and will call the deprecated <code>findFilter</code>
  method, then wrap filter if one found as <code>PropertyFilter</code>.
  It should be overridden by up-to-date implementations
 @param filterId Id of the filter to fetch
 @param valueToFilter Object being filtered (usually POJO, but may be a <code>java.util.Map</code> ,
     or in future a container),  <b> if available </b> ; not available when generating    schemas.
 @return Filter to use, if any.
 @since 2.3
 */
- (id<ComFasterxmlJacksonDatabindSerPropertyFilter>)findPropertyFilterWithId:(id)filterId
                                                                      withId:(id)valueToFilter;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindSerFilterProvider)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerFilterProvider_init(ComFasterxmlJacksonDatabindSerFilterProvider *self);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerFilterProvider)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerFilterProvider")
