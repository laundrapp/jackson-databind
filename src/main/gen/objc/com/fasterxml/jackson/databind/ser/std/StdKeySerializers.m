//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/std/StdKeySerializers.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/Base64Variant.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/core/SerializableString.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/JsonSerializer.h"
#include "com/fasterxml/jackson/databind/SerializationConfig.h"
#include "com/fasterxml/jackson/databind/SerializationFeature.h"
#include "com/fasterxml/jackson/databind/SerializerProvider.h"
#include "com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper.h"
#include "com/fasterxml/jackson/databind/ser/impl/PropertySerializerMap.h"
#include "com/fasterxml/jackson/databind/ser/std/StdKeySerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/StdKeySerializers.h"
#include "com/fasterxml/jackson/databind/ser/std/StdSerializer.h"
#include "com/fasterxml/jackson/databind/util/ClassUtil.h"
#include "com/fasterxml/jackson/databind/util/EnumValues.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Enum.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/Calendar.h"
#include "java/util/Date.h"
#include "java/util/UUID.h"

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindSerStdStdKeySerializers__Annotations$0(void);

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindSerStdStdKeySerializers)

ComFasterxmlJacksonDatabindJsonSerializer *ComFasterxmlJacksonDatabindSerStdStdKeySerializers_DEFAULT_KEY_SERIALIZER;
ComFasterxmlJacksonDatabindJsonSerializer *ComFasterxmlJacksonDatabindSerStdStdKeySerializers_DEFAULT_STRING_SERIALIZER;

@implementation ComFasterxmlJacksonDatabindSerStdStdKeySerializers

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindSerStdStdKeySerializers_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (ComFasterxmlJacksonDatabindJsonSerializer *)getStdKeySerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                                                        withIOSClass:(IOSClass *)rawKeyType
                                                                                                         withBoolean:(jboolean)useDefault {
  return ComFasterxmlJacksonDatabindSerStdStdKeySerializers_getStdKeySerializerWithComFasterxmlJacksonDatabindSerializationConfig_withIOSClass_withBoolean_(config, rawKeyType, useDefault);
}

+ (ComFasterxmlJacksonDatabindJsonSerializer *)getFallbackKeySerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                                                             withIOSClass:(IOSClass *)rawKeyType {
  return ComFasterxmlJacksonDatabindSerStdStdKeySerializers_getFallbackKeySerializerWithComFasterxmlJacksonDatabindSerializationConfig_withIOSClass_(config, rawKeyType);
}

+ (ComFasterxmlJacksonDatabindJsonSerializer *)getDefault {
  return ComFasterxmlJacksonDatabindSerStdStdKeySerializers_getDefault();
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x9, 3, 4, -1, 5, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x9, -1, -1, -1, 6, 7, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(getStdKeySerializerWithComFasterxmlJacksonDatabindSerializationConfig:withIOSClass:withBoolean:);
  methods[2].selector = @selector(getFallbackKeySerializerWithComFasterxmlJacksonDatabindSerializationConfig:withIOSClass:);
  methods[3].selector = @selector(getDefault);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "DEFAULT_KEY_SERIALIZER", "LComFasterxmlJacksonDatabindJsonSerializer;", .constantValue.asLong = 0, 0x1c, -1, 8, 9, -1 },
    { "DEFAULT_STRING_SERIALIZER", "LComFasterxmlJacksonDatabindJsonSerializer;", .constantValue.asLong = 0, 0x1c, -1, 10, 9, -1 },
  };
  static const void *ptrTable[] = { "getStdKeySerializer", "LComFasterxmlJacksonDatabindSerializationConfig;LIOSClass;Z", "(Lcom/fasterxml/jackson/databind/SerializationConfig;Ljava/lang/Class<*>;Z)Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", "getFallbackKeySerializer", "LComFasterxmlJacksonDatabindSerializationConfig;LIOSClass;", "(Lcom/fasterxml/jackson/databind/SerializationConfig;Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", "()Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", (void *)&ComFasterxmlJacksonDatabindSerStdStdKeySerializers__Annotations$0, &ComFasterxmlJacksonDatabindSerStdStdKeySerializers_DEFAULT_KEY_SERIALIZER, "Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", &ComFasterxmlJacksonDatabindSerStdStdKeySerializers_DEFAULT_STRING_SERIALIZER, "LComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default;LComFasterxmlJacksonDatabindSerStdStdKeySerializers_Dynamic;LComFasterxmlJacksonDatabindSerStdStdKeySerializers_StringKeySerializer;LComFasterxmlJacksonDatabindSerStdStdKeySerializers_EnumKeySerializer;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerStdStdKeySerializers = { "StdKeySerializers", "com.fasterxml.jackson.databind.ser.std", ptrTable, methods, fields, 7, 0x401, 4, 2, -1, 11, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindSerStdStdKeySerializers;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindSerStdStdKeySerializers class]) {
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindSerStdStdKeySerializers_DEFAULT_KEY_SERIALIZER, new_ComFasterxmlJacksonDatabindSerStdStdKeySerializer_init());
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindSerStdStdKeySerializers_DEFAULT_STRING_SERIALIZER, new_ComFasterxmlJacksonDatabindSerStdStdKeySerializers_StringKeySerializer_init());
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindSerStdStdKeySerializers)
  }
}

@end

void ComFasterxmlJacksonDatabindSerStdStdKeySerializers_init(ComFasterxmlJacksonDatabindSerStdStdKeySerializers *self) {
  NSObject_init(self);
}

ComFasterxmlJacksonDatabindJsonSerializer *ComFasterxmlJacksonDatabindSerStdStdKeySerializers_getStdKeySerializerWithComFasterxmlJacksonDatabindSerializationConfig_withIOSClass_withBoolean_(ComFasterxmlJacksonDatabindSerializationConfig *config, IOSClass *rawKeyType, jboolean useDefault) {
  ComFasterxmlJacksonDatabindSerStdStdKeySerializers_initialize();
  if ((rawKeyType == nil) || (rawKeyType == NSObject_class_())) {
    return create_ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Dynamic_init();
  }
  if (rawKeyType == NSString_class_()) {
    return ComFasterxmlJacksonDatabindSerStdStdKeySerializers_DEFAULT_STRING_SERIALIZER;
  }
  if ([((IOSClass *) nil_chk(rawKeyType)) isPrimitive]) {
    rawKeyType = ComFasterxmlJacksonDatabindUtilClassUtil_wrapperTypeWithIOSClass_(rawKeyType);
  }
  if (rawKeyType == JavaLangInteger_class_()) {
    return create_ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_initWithInt_withIOSClass_(ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_TYPE_INTEGER, rawKeyType);
  }
  if (rawKeyType == JavaLangLong_class_()) {
    return create_ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_initWithInt_withIOSClass_(ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_TYPE_LONG, rawKeyType);
  }
  if ([((IOSClass *) nil_chk(rawKeyType)) isPrimitive] || [NSNumber_class_() isAssignableFrom:rawKeyType]) {
    return create_ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_initWithInt_withIOSClass_(ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_TYPE_TO_STRING, rawKeyType);
  }
  if (rawKeyType == IOSClass_class_()) {
    return create_ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_initWithInt_withIOSClass_(ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_TYPE_CLASS, rawKeyType);
  }
  if ([JavaUtilDate_class_() isAssignableFrom:rawKeyType]) {
    return create_ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_initWithInt_withIOSClass_(ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_TYPE_DATE, rawKeyType);
  }
  if ([JavaUtilCalendar_class_() isAssignableFrom:rawKeyType]) {
    return create_ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_initWithInt_withIOSClass_(ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_TYPE_CALENDAR, rawKeyType);
  }
  if (rawKeyType == JavaUtilUUID_class_()) {
    return create_ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_initWithInt_withIOSClass_(ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_TYPE_TO_STRING, rawKeyType);
  }
  if (rawKeyType == IOSClass_byteArray(1)) {
    return create_ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_initWithInt_withIOSClass_(ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_TYPE_BYTE_ARRAY, rawKeyType);
  }
  if (useDefault) {
    return create_ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_initWithInt_withIOSClass_(ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_TYPE_TO_STRING, rawKeyType);
  }
  return nil;
}

ComFasterxmlJacksonDatabindJsonSerializer *ComFasterxmlJacksonDatabindSerStdStdKeySerializers_getFallbackKeySerializerWithComFasterxmlJacksonDatabindSerializationConfig_withIOSClass_(ComFasterxmlJacksonDatabindSerializationConfig *config, IOSClass *rawKeyType) {
  ComFasterxmlJacksonDatabindSerStdStdKeySerializers_initialize();
  if (rawKeyType != nil) {
    if (rawKeyType == JavaLangEnum_class_()) {
      return create_ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Dynamic_init();
    }
    if ([rawKeyType isEnum]) {
      return ComFasterxmlJacksonDatabindSerStdStdKeySerializers_EnumKeySerializer_constructWithIOSClass_withComFasterxmlJacksonDatabindUtilEnumValues_(rawKeyType, ComFasterxmlJacksonDatabindUtilEnumValues_constructFromNameWithComFasterxmlJacksonDatabindCfgMapperConfig_withIOSClass_(config, rawKeyType));
    }
  }
  return create_ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_initWithInt_withIOSClass_(ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_TYPE_TO_STRING, rawKeyType);
}

ComFasterxmlJacksonDatabindJsonSerializer *ComFasterxmlJacksonDatabindSerStdStdKeySerializers_getDefault() {
  ComFasterxmlJacksonDatabindSerStdStdKeySerializers_initialize();
  return ComFasterxmlJacksonDatabindSerStdStdKeySerializers_DEFAULT_KEY_SERIALIZER;
}

IOSObjectArray *ComFasterxmlJacksonDatabindSerStdStdKeySerializers__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerStdStdKeySerializers)

@implementation ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default

- (instancetype __nonnull)initWithInt:(jint)typeId
                         withIOSClass:(IOSClass *)type {
  ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_initWithInt_withIOSClass_(self, typeId, type);
  return self;
}

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  switch (_typeId_) {
    case ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_TYPE_DATE:
    [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) defaultSerializeDateKeyWithJavaUtilDate:(JavaUtilDate *) cast_chk(value, [JavaUtilDate class]) withComFasterxmlJacksonCoreJsonGenerator:g];
    break;
    case ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_TYPE_CALENDAR:
    [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) defaultSerializeDateKeyWithLong:[((JavaUtilCalendar *) nil_chk(((JavaUtilCalendar *) cast_chk(value, [JavaUtilCalendar class])))) getTimeInMillis] withComFasterxmlJacksonCoreJsonGenerator:g];
    break;
    case ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_TYPE_CLASS:
    [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeFieldNameWithNSString:[((IOSClass *) nil_chk(((IOSClass *) cast_chk(value, [IOSClass class])))) getName]];
    break;
    case ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_TYPE_ENUM:
    {
      NSString *key;
      if ([((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) isEnabledWithComFasterxmlJacksonDatabindSerializationFeature:JreLoadEnum(ComFasterxmlJacksonDatabindSerializationFeature, WRITE_ENUMS_USING_TO_STRING)]) {
        key = [nil_chk(value) description];
      }
      else {
        JavaLangEnum *e = (JavaLangEnum *) cast_chk(value, [JavaLangEnum class]);
        if ([provider isEnabledWithComFasterxmlJacksonDatabindSerializationFeature:JreLoadEnum(ComFasterxmlJacksonDatabindSerializationFeature, WRITE_ENUMS_USING_INDEX)]) {
          key = NSString_java_valueOfInt_([((JavaLangEnum *) nil_chk(e)) ordinal]);
        }
        else {
          key = [((JavaLangEnum *) nil_chk(e)) name];
        }
      }
      [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeFieldNameWithNSString:key];
    }
    break;
    case ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_TYPE_INTEGER:
    case ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_TYPE_LONG:
    [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeFieldIdWithLong:[((NSNumber *) nil_chk(((NSNumber *) cast_chk(value, [NSNumber class])))) longLongValue]];
    break;
    case ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_TYPE_BYTE_ARRAY:
    {
      NSString *encoded = [((ComFasterxmlJacksonCoreBase64Variant *) nil_chk([((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk([((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) getConfig])) getBase64Variant])) encodeWithByteArray:(IOSByteArray *) cast_chk(value, [IOSByteArray class])];
      [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeFieldNameWithNSString:encoded];
    }
    break;
    case ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_TYPE_TO_STRING:
    default:
    [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeFieldNameWithNSString:[nil_chk(value) description]];
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withIOSClass:);
  methods[1].selector = @selector(serializeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TYPE_DATE", "I", .constantValue.asInt = ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_TYPE_DATE, 0x18, -1, -1, -1, -1 },
    { "TYPE_CALENDAR", "I", .constantValue.asInt = ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_TYPE_CALENDAR, 0x18, -1, -1, -1, -1 },
    { "TYPE_CLASS", "I", .constantValue.asInt = ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_TYPE_CLASS, 0x18, -1, -1, -1, -1 },
    { "TYPE_ENUM", "I", .constantValue.asInt = ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_TYPE_ENUM, 0x18, -1, -1, -1, -1 },
    { "TYPE_INTEGER", "I", .constantValue.asInt = ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_TYPE_INTEGER, 0x18, -1, -1, -1, -1 },
    { "TYPE_LONG", "I", .constantValue.asInt = ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_TYPE_LONG, 0x18, -1, -1, -1, -1 },
    { "TYPE_BYTE_ARRAY", "I", .constantValue.asInt = ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_TYPE_BYTE_ARRAY, 0x18, -1, -1, -1, -1 },
    { "TYPE_TO_STRING", "I", .constantValue.asInt = ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_TYPE_TO_STRING, 0x18, -1, -1, -1, -1 },
    { "_typeId_", "I", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ILIOSClass;", "(ILjava/lang/Class<*>;)V", "serialize", "LNSObject;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;", "LJavaIoIOException;", "LComFasterxmlJacksonDatabindSerStdStdKeySerializers;", "Lcom/fasterxml/jackson/databind/ser/std/StdSerializer<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default = { "Default", "com.fasterxml.jackson.databind.ser.std", ptrTable, methods, fields, 7, 0x9, 2, 9, 5, -1, -1, 6, -1 };
  return &_ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default;
}

@end

void ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_initWithInt_withIOSClass_(ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default *self, jint typeId, IOSClass *type) {
  ComFasterxmlJacksonDatabindSerStdStdSerializer_initWithIOSClass_withBoolean_(self, type, false);
  self->_typeId_ = typeId;
}

ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default *new_ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_initWithInt_withIOSClass_(jint typeId, IOSClass *type) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default, initWithInt_withIOSClass_, typeId, type)
}

ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default *create_ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_initWithInt_withIOSClass_(jint typeId, IOSClass *type) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default, initWithInt_withIOSClass_, typeId, type)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default)

@implementation ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Dynamic

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Dynamic_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)readResolve {
  JreStrongAssign(&_dynamicSerializers_, ComFasterxmlJacksonDatabindSerImplPropertySerializerMap_emptyForProperties());
  return self;
}

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  IOSClass *cls = [nil_chk(value) java_getClass];
  ComFasterxmlJacksonDatabindSerImplPropertySerializerMap *m = _dynamicSerializers_;
  ComFasterxmlJacksonDatabindJsonSerializer *ser = [((ComFasterxmlJacksonDatabindSerImplPropertySerializerMap *) nil_chk(m)) serializerForWithIOSClass:cls];
  if (ser == nil) {
    ser = [self _findAndAddDynamicWithComFasterxmlJacksonDatabindSerImplPropertySerializerMap:m withIOSClass:cls withComFasterxmlJacksonDatabindSerializerProvider:provider];
  }
  [((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk(ser)) serializeWithId:value withComFasterxmlJacksonCoreJsonGenerator:g withComFasterxmlJacksonDatabindSerializerProvider:provider];
}

- (void)acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint {
  [self visitStringFormatWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:visitor withComFasterxmlJacksonDatabindJavaType:typeHint];
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)_findAndAddDynamicWithComFasterxmlJacksonDatabindSerImplPropertySerializerMap:(ComFasterxmlJacksonDatabindSerImplPropertySerializerMap *)map
                                                                                                                withIOSClass:(IOSClass *)type
                                                                           withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  if (type == NSObject_class_()) {
    ComFasterxmlJacksonDatabindJsonSerializer *ser = create_ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_initWithInt_withIOSClass_(ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Default_TYPE_TO_STRING, type);
    JreStrongAssign(&_dynamicSerializers_, [((ComFasterxmlJacksonDatabindSerImplPropertySerializerMap *) nil_chk(map)) newWithWithIOSClass:type withComFasterxmlJacksonDatabindJsonSerializer:ser]);
    return ser;
  }
  ComFasterxmlJacksonDatabindSerImplPropertySerializerMap_SerializerAndMapResult *result = [((ComFasterxmlJacksonDatabindSerImplPropertySerializerMap *) nil_chk(map)) findAndAddKeySerializerWithIOSClass:type withComFasterxmlJacksonDatabindSerializerProvider:provider withComFasterxmlJacksonDatabindBeanProperty:nil];
  if (map != ((ComFasterxmlJacksonDatabindSerImplPropertySerializerMap_SerializerAndMapResult *) nil_chk(result))->map_) {
    JreStrongAssign(&_dynamicSerializers_, result->map_);
  }
  return result->serializer_;
}

- (void)dealloc {
  RELEASE_(_dynamicSerializers_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 5, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x4, 6, 7, 5, 8, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(readResolve);
  methods[2].selector = @selector(serializeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  methods[3].selector = @selector(acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:withComFasterxmlJacksonDatabindJavaType:);
  methods[4].selector = @selector(_findAndAddDynamicWithComFasterxmlJacksonDatabindSerImplPropertySerializerMap:withIOSClass:withComFasterxmlJacksonDatabindSerializerProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_dynamicSerializers_", "LComFasterxmlJacksonDatabindSerImplPropertySerializerMap;", .constantValue.asLong = 0, 0x84, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "serialize", "LNSObject;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;", "LJavaIoIOException;", "acceptJsonFormatVisitor", "LComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;LComFasterxmlJacksonDatabindJavaType;", "LComFasterxmlJacksonDatabindJsonMappingException;", "_findAndAddDynamic", "LComFasterxmlJacksonDatabindSerImplPropertySerializerMap;LIOSClass;LComFasterxmlJacksonDatabindSerializerProvider;", "(Lcom/fasterxml/jackson/databind/ser/impl/PropertySerializerMap;Ljava/lang/Class<*>;Lcom/fasterxml/jackson/databind/SerializerProvider;)Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", "LComFasterxmlJacksonDatabindSerStdStdKeySerializers;", "Lcom/fasterxml/jackson/databind/ser/std/StdSerializer<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Dynamic = { "Dynamic", "com.fasterxml.jackson.databind.ser.std", ptrTable, methods, fields, 7, 0x9, 5, 1, 9, -1, -1, 10, -1 };
  return &_ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Dynamic;
}

@end

void ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Dynamic_init(ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Dynamic *self) {
  ComFasterxmlJacksonDatabindSerStdStdSerializer_initWithIOSClass_withBoolean_(self, NSString_class_(), false);
  JreStrongAssign(&self->_dynamicSerializers_, ComFasterxmlJacksonDatabindSerImplPropertySerializerMap_emptyForProperties());
}

ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Dynamic *new_ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Dynamic_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Dynamic, init)
}

ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Dynamic *create_ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Dynamic_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Dynamic, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerStdStdKeySerializers_Dynamic)

@implementation ComFasterxmlJacksonDatabindSerStdStdKeySerializers_StringKeySerializer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindSerStdStdKeySerializers_StringKeySerializer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeFieldNameWithNSString:(NSString *) cast_chk(value, [NSString class])];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(serializeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "serialize", "LNSObject;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;", "LJavaIoIOException;", "LComFasterxmlJacksonDatabindSerStdStdKeySerializers;", "Lcom/fasterxml/jackson/databind/ser/std/StdSerializer<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerStdStdKeySerializers_StringKeySerializer = { "StringKeySerializer", "com.fasterxml.jackson.databind.ser.std", ptrTable, methods, NULL, 7, 0x9, 2, 0, 3, -1, -1, 4, -1 };
  return &_ComFasterxmlJacksonDatabindSerStdStdKeySerializers_StringKeySerializer;
}

@end

void ComFasterxmlJacksonDatabindSerStdStdKeySerializers_StringKeySerializer_init(ComFasterxmlJacksonDatabindSerStdStdKeySerializers_StringKeySerializer *self) {
  ComFasterxmlJacksonDatabindSerStdStdSerializer_initWithIOSClass_withBoolean_(self, NSString_class_(), false);
}

ComFasterxmlJacksonDatabindSerStdStdKeySerializers_StringKeySerializer *new_ComFasterxmlJacksonDatabindSerStdStdKeySerializers_StringKeySerializer_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerStdStdKeySerializers_StringKeySerializer, init)
}

ComFasterxmlJacksonDatabindSerStdStdKeySerializers_StringKeySerializer *create_ComFasterxmlJacksonDatabindSerStdStdKeySerializers_StringKeySerializer_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerStdStdKeySerializers_StringKeySerializer, init)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerStdStdKeySerializers_StringKeySerializer)

@implementation ComFasterxmlJacksonDatabindSerStdStdKeySerializers_EnumKeySerializer

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)enumType
withComFasterxmlJacksonDatabindUtilEnumValues:(ComFasterxmlJacksonDatabindUtilEnumValues *)values {
  ComFasterxmlJacksonDatabindSerStdStdKeySerializers_EnumKeySerializer_initWithIOSClass_withComFasterxmlJacksonDatabindUtilEnumValues_(self, enumType, values);
  return self;
}

+ (ComFasterxmlJacksonDatabindSerStdStdKeySerializers_EnumKeySerializer *)constructWithIOSClass:(IOSClass *)enumType
                                                  withComFasterxmlJacksonDatabindUtilEnumValues:(ComFasterxmlJacksonDatabindUtilEnumValues *)enumValues {
  return ComFasterxmlJacksonDatabindSerStdStdKeySerializers_EnumKeySerializer_constructWithIOSClass_withComFasterxmlJacksonDatabindUtilEnumValues_(enumType, enumValues);
}

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)serializers {
  if ([((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(serializers)) isEnabledWithComFasterxmlJacksonDatabindSerializationFeature:JreLoadEnum(ComFasterxmlJacksonDatabindSerializationFeature, WRITE_ENUMS_USING_TO_STRING)]) {
    [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeFieldNameWithNSString:[nil_chk(value) description]];
    return;
  }
  JavaLangEnum *en = (JavaLangEnum *) cast_chk(value, [JavaLangEnum class]);
  if ([serializers isEnabledWithComFasterxmlJacksonDatabindSerializationFeature:JreLoadEnum(ComFasterxmlJacksonDatabindSerializationFeature, WRITE_ENUMS_USING_INDEX)]) {
    [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeFieldNameWithNSString:NSString_java_valueOfInt_([((JavaLangEnum *) nil_chk(en)) ordinal])];
    return;
  }
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeFieldNameWithComFasterxmlJacksonCoreSerializableString:[((ComFasterxmlJacksonDatabindUtilEnumValues *) nil_chk(_values_)) serializedValueForWithJavaLangEnum:en]];
}

- (void)dealloc {
  RELEASE_(_values_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerStdStdKeySerializers_EnumKeySerializer;", 0x9, 2, 0, -1, 3, -1, -1 },
    { NULL, "V", 0x1, 4, 5, 6, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:withComFasterxmlJacksonDatabindUtilEnumValues:);
  methods[1].selector = @selector(constructWithIOSClass:withComFasterxmlJacksonDatabindUtilEnumValues:);
  methods[2].selector = @selector(serializeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_values_", "LComFasterxmlJacksonDatabindUtilEnumValues;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;LComFasterxmlJacksonDatabindUtilEnumValues;", "(Ljava/lang/Class<*>;Lcom/fasterxml/jackson/databind/util/EnumValues;)V", "construct", "(Ljava/lang/Class<*>;Lcom/fasterxml/jackson/databind/util/EnumValues;)Lcom/fasterxml/jackson/databind/ser/std/StdKeySerializers$EnumKeySerializer;", "serialize", "LNSObject;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;", "LJavaIoIOException;", "LComFasterxmlJacksonDatabindSerStdStdKeySerializers;", "Lcom/fasterxml/jackson/databind/ser/std/StdSerializer<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerStdStdKeySerializers_EnumKeySerializer = { "EnumKeySerializer", "com.fasterxml.jackson.databind.ser.std", ptrTable, methods, fields, 7, 0x9, 3, 1, 7, -1, -1, 8, -1 };
  return &_ComFasterxmlJacksonDatabindSerStdStdKeySerializers_EnumKeySerializer;
}

@end

void ComFasterxmlJacksonDatabindSerStdStdKeySerializers_EnumKeySerializer_initWithIOSClass_withComFasterxmlJacksonDatabindUtilEnumValues_(ComFasterxmlJacksonDatabindSerStdStdKeySerializers_EnumKeySerializer *self, IOSClass *enumType, ComFasterxmlJacksonDatabindUtilEnumValues *values) {
  ComFasterxmlJacksonDatabindSerStdStdSerializer_initWithIOSClass_withBoolean_(self, enumType, false);
  JreStrongAssign(&self->_values_, values);
}

ComFasterxmlJacksonDatabindSerStdStdKeySerializers_EnumKeySerializer *new_ComFasterxmlJacksonDatabindSerStdStdKeySerializers_EnumKeySerializer_initWithIOSClass_withComFasterxmlJacksonDatabindUtilEnumValues_(IOSClass *enumType, ComFasterxmlJacksonDatabindUtilEnumValues *values) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerStdStdKeySerializers_EnumKeySerializer, initWithIOSClass_withComFasterxmlJacksonDatabindUtilEnumValues_, enumType, values)
}

ComFasterxmlJacksonDatabindSerStdStdKeySerializers_EnumKeySerializer *create_ComFasterxmlJacksonDatabindSerStdStdKeySerializers_EnumKeySerializer_initWithIOSClass_withComFasterxmlJacksonDatabindUtilEnumValues_(IOSClass *enumType, ComFasterxmlJacksonDatabindUtilEnumValues *values) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerStdStdKeySerializers_EnumKeySerializer, initWithIOSClass_withComFasterxmlJacksonDatabindUtilEnumValues_, enumType, values)
}

ComFasterxmlJacksonDatabindSerStdStdKeySerializers_EnumKeySerializer *ComFasterxmlJacksonDatabindSerStdStdKeySerializers_EnumKeySerializer_constructWithIOSClass_withComFasterxmlJacksonDatabindUtilEnumValues_(IOSClass *enumType, ComFasterxmlJacksonDatabindUtilEnumValues *enumValues) {
  ComFasterxmlJacksonDatabindSerStdStdKeySerializers_EnumKeySerializer_initialize();
  return create_ComFasterxmlJacksonDatabindSerStdStdKeySerializers_EnumKeySerializer_initWithIOSClass_withComFasterxmlJacksonDatabindUtilEnumValues_(enumType, enumValues);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerStdStdKeySerializers_EnumKeySerializer)
