//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/std/NumberSerializer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/core/JsonParser.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/JsonNode.h"
#include "com/fasterxml/jackson/databind/SerializerProvider.h"
#include "com/fasterxml/jackson/databind/annotation/JacksonStdImpl.h"
#include "com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper.h"
#include "com/fasterxml/jackson/databind/jsonFormatVisitors/JsonNumberFormatVisitor.h"
#include "com/fasterxml/jackson/databind/node/ObjectNode.h"
#include "com/fasterxml/jackson/databind/ser/std/NumberSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/StdScalarSerializer.h"
#include "java/lang/Byte.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Short.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/reflect/Type.h"
#include "java/math/BigDecimal.h"
#include "java/math/BigInteger.h"

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindSerStdNumberSerializer__Annotations$0(void);

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindSerStdNumberSerializer)

ComFasterxmlJacksonDatabindSerStdNumberSerializer *ComFasterxmlJacksonDatabindSerStdNumberSerializer_instance;

@implementation ComFasterxmlJacksonDatabindSerStdNumberSerializer

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)rawType {
  ComFasterxmlJacksonDatabindSerStdNumberSerializer_initWithIOSClass_(self, rawType);
  return self;
}

- (void)serializeWithId:(NSNumber *)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  if ([value isKindOfClass:[JavaMathBigDecimal class]]) {
    [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeNumberWithJavaMathBigDecimal:(JavaMathBigDecimal *) cast_chk(value, [JavaMathBigDecimal class])];
  }
  else if ([value isKindOfClass:[JavaMathBigInteger class]]) {
    [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeNumberWithJavaMathBigInteger:(JavaMathBigInteger *) cast_chk(value, [JavaMathBigInteger class])];
  }
  else if ([value isKindOfClass:[JavaLangLong class]]) {
    [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeNumberWithLong:[((NSNumber *) nil_chk(value)) longLongValue]];
  }
  else if ([value isKindOfClass:[JavaLangDouble class]]) {
    [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeNumberWithDouble:[((NSNumber *) nil_chk(value)) doubleValue]];
  }
  else if ([value isKindOfClass:[JavaLangFloat class]]) {
    [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeNumberWithFloat:[((NSNumber *) nil_chk(value)) floatValue]];
  }
  else if ([value isKindOfClass:[JavaLangInteger class]] || [value isKindOfClass:[JavaLangByte class]] || [value isKindOfClass:[JavaLangShort class]]) {
    [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeNumberWithInt:[((NSNumber *) nil_chk(value)) intValue]];
  }
  else {
    [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeNumberWithNSString:[((NSNumber *) nil_chk(value)) description]];
  }
}

- (ComFasterxmlJacksonDatabindJsonNode *)getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                            withJavaLangReflectType:(id<JavaLangReflectType>)typeHint {
  return [self createSchemaNodeWithNSString:_isInt_ ? @"integer" : @"number" withBoolean:true];
}

- (void)acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint {
  if (_isInt_) {
    [self visitIntFormatWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:visitor withComFasterxmlJacksonDatabindJavaType:typeHint withComFasterxmlJacksonCoreJsonParser_NumberType:JreLoadEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, BIG_INTEGER)];
  }
  else {
    IOSClass *h = [self handledType];
    if (h == JavaMathBigDecimal_class_()) {
      [self visitFloatFormatWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:visitor withComFasterxmlJacksonDatabindJavaType:typeHint withComFasterxmlJacksonCoreJsonParser_NumberType:JreLoadEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, BIG_DECIMAL)];
    }
    else {
      [((id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>) nil_chk(visitor)) expectNumberFormatWithComFasterxmlJacksonDatabindJavaType:typeHint];
    }
  }
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 7, 8, 9, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:);
  methods[1].selector = @selector(serializeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  methods[2].selector = @selector(getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:withJavaLangReflectType:);
  methods[3].selector = @selector(acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:withComFasterxmlJacksonDatabindJavaType:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "instance", "LComFasterxmlJacksonDatabindSerStdNumberSerializer;", .constantValue.asLong = 0, 0x19, -1, 10, -1, -1 },
    { "_isInt_", "Z", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;", "(Ljava/lang/Class<+Ljava/lang/Number;>;)V", "serialize", "LNSNumber;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;", "LJavaIoIOException;", "getSchema", "LComFasterxmlJacksonDatabindSerializerProvider;LJavaLangReflectType;", "acceptJsonFormatVisitor", "LComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;LComFasterxmlJacksonDatabindJavaType;", "LComFasterxmlJacksonDatabindJsonMappingException;", &ComFasterxmlJacksonDatabindSerStdNumberSerializer_instance, "Lcom/fasterxml/jackson/databind/ser/std/StdScalarSerializer<Ljava/lang/Number;>;", (void *)&ComFasterxmlJacksonDatabindSerStdNumberSerializer__Annotations$0 };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerStdNumberSerializer = { "NumberSerializer", "com.fasterxml.jackson.databind.ser.std", ptrTable, methods, fields, 7, 0x1, 4, 2, -1, -1, -1, 11, 12 };
  return &_ComFasterxmlJacksonDatabindSerStdNumberSerializer;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindSerStdNumberSerializer class]) {
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindSerStdNumberSerializer_instance, new_ComFasterxmlJacksonDatabindSerStdNumberSerializer_initWithIOSClass_(NSNumber_class_()));
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindSerStdNumberSerializer)
  }
}

@end

void ComFasterxmlJacksonDatabindSerStdNumberSerializer_initWithIOSClass_(ComFasterxmlJacksonDatabindSerStdNumberSerializer *self, IOSClass *rawType) {
  ComFasterxmlJacksonDatabindSerStdStdScalarSerializer_initWithIOSClass_withBoolean_(self, rawType, false);
  self->_isInt_ = (rawType == JavaMathBigInteger_class_());
}

ComFasterxmlJacksonDatabindSerStdNumberSerializer *new_ComFasterxmlJacksonDatabindSerStdNumberSerializer_initWithIOSClass_(IOSClass *rawType) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerStdNumberSerializer, initWithIOSClass_, rawType)
}

ComFasterxmlJacksonDatabindSerStdNumberSerializer *create_ComFasterxmlJacksonDatabindSerStdNumberSerializer_initWithIOSClass_(IOSClass *rawType) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerStdNumberSerializer, initWithIOSClass_, rawType)
}

IOSObjectArray *ComFasterxmlJacksonDatabindSerStdNumberSerializer__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_ComFasterxmlJacksonDatabindAnnotationJacksonStdImpl() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerStdNumberSerializer)
