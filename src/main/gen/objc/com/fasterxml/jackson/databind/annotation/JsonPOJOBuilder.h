//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/annotation/JsonPOJOBuilder.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder || defined(INCLUDE_ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder))
#define ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_

#define RESTRICT_JavaLangAnnotationAnnotation 1
#define INCLUDE_JavaLangAnnotationAnnotation 1
#include "java/lang/annotation/Annotation.h"

@class IOSClass;

/*!
 @brief Annotation used to configure details of a Builder class:
  instances of which are used as Builders for deserialized
  POJO values, instead of POJOs being instantiated using
  constructors or factory methods.
 Note that this annotation is NOT used to define what is
  the Builder class for a POJO: rather, this is determined
  by <code>JsonDeserialize.builder</code> property of <code>JsonDeserialize</code>.
 <p>
  Annotation is typically used if the naming convention
  of a Builder class is different from defaults:
 <ul>
  <li>By default, setters are expected to have names like `withName()` (for property "name");
      override by <code>withPrefix()</code> property.
   </li>
  </ul>
 <p>
  In addition to configuration using this annotation, note that many other configuration
  annotations are also applied to Builders, for example 
 <code>com.fasterxml.jackson.annotation.JsonIgnoreProperties</code> can be used to ignore
  "unknown" properties.
 @since 2.0
 */
@protocol ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder < JavaLangAnnotationAnnotation >

@property (readonly) NSString *buildMethodName;
@property (readonly) NSString *withPrefix;

- (jboolean)isEqual:(id)obj;

- (NSUInteger)hash;

@end

@interface ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder : NSObject < ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder > {
 @public
  NSString *buildMethodName_;
  NSString *withPrefix_;
}

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder)

/*!
 @since 2.9
 */
inline NSString *ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_get_DEFAULT_BUILD_METHOD(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_DEFAULT_BUILD_METHOD;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder, DEFAULT_BUILD_METHOD, NSString *)

/*!
 @since 2.9
 */
inline NSString *ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_get_DEFAULT_WITH_PREFIX(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT NSString *ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_DEFAULT_WITH_PREFIX;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder, DEFAULT_WITH_PREFIX, NSString *)

FOUNDATION_EXPORT id<ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder> create_ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder(NSString *buildMethodName, NSString *withPrefix);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder)

#endif

#if !defined (ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_Value_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder || defined(INCLUDE_ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_Value))
#define ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_Value_

@protocol ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder;

/*!
 @brief Simple value container for containing values read from 
 <code>JsonPOJOBuilder</code> annotation instance.
 */
@interface ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_Value : NSObject {
 @public
  NSString *buildMethodName_;
  NSString *withPrefix_;
}

#pragma mark Public

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder:(id<ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder>)ann;

- (instancetype __nonnull)initWithNSString:(NSString *)buildMethodName
                              withNSString:(NSString *)withPrefix;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_Value)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_Value, buildMethodName_, NSString *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_Value, withPrefix_, NSString *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_Value_initWithComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_(ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_Value *self, id<ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder> ann);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_Value *new_ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_Value_initWithComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_(id<ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder> ann) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_Value *create_ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_Value_initWithComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_(id<ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder> ann);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_Value_initWithNSString_withNSString_(ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_Value *self, NSString *buildMethodName, NSString *withPrefix);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_Value *new_ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_Value_initWithNSString_withNSString_(NSString *buildMethodName, NSString *withPrefix) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_Value *create_ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_Value_initWithNSString_withNSString_(NSString *buildMethodName, NSString *withPrefix);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_Value)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder")
