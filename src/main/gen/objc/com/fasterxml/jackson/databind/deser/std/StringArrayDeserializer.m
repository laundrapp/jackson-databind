//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/annotation/JsonFormat.h"
#include "com/fasterxml/jackson/core/JsonParser.h"
#include "com/fasterxml/jackson/core/JsonToken.h"
#include "com/fasterxml/jackson/databind/BeanProperty.h"
#include "com/fasterxml/jackson/databind/DeserializationConfig.h"
#include "com/fasterxml/jackson/databind/DeserializationContext.h"
#include "com/fasterxml/jackson/databind/DeserializationFeature.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/JsonDeserializer.h"
#include "com/fasterxml/jackson/databind/JsonMappingException.h"
#include "com/fasterxml/jackson/databind/annotation/JacksonStdImpl.h"
#include "com/fasterxml/jackson/databind/deser/NullValueProvider.h"
#include "com/fasterxml/jackson/databind/deser/impl/NullsConstantProvider.h"
#include "com/fasterxml/jackson/databind/deser/std/StdDeserializer.h"
#include "com/fasterxml/jackson/databind/deser/std/StringArrayDeserializer.h"
#include "com/fasterxml/jackson/databind/jsontype/TypeDeserializer.h"
#include "com/fasterxml/jackson/databind/util/AccessPattern.h"
#include "com/fasterxml/jackson/databind/util/ObjectBuffer.h"
#include "java/lang/Boolean.h"
#include "java/lang/Exception.h"
#include "java/lang/System.h"
#include "java/lang/annotation/Annotation.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

@interface ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer ()

- (IOSObjectArray *)handleNonArrayWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                  withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt;

@end

inline jlong ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_serialVersionUID 2LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer, serialVersionUID, jlong)

inline IOSObjectArray *ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_get_NO_STRINGS(void);
static IOSObjectArray *ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_NO_STRINGS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer, NO_STRINGS, IOSObjectArray *)

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer__deserializeCustomWithComFasterxmlJacksonCoreJsonParser_withComFasterxmlJacksonDatabindDeserializationContext_withNSStringArray_(ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer *self, ComFasterxmlJacksonCoreJsonParser *p, ComFasterxmlJacksonDatabindDeserializationContext *ctxt, IOSObjectArray *old);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_handleNonArrayWithComFasterxmlJacksonCoreJsonParser_withComFasterxmlJacksonDatabindDeserializationContext_(ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer *self, ComFasterxmlJacksonCoreJsonParser *p, ComFasterxmlJacksonDatabindDeserializationContext *ctxt);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer__Annotations$0(void);

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer)

ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer *ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_instance;

@implementation ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJsonDeserializer:(ComFasterxmlJacksonDatabindJsonDeserializer *)deser
                        withComFasterxmlJacksonDatabindDeserNullValueProvider:(id<ComFasterxmlJacksonDatabindDeserNullValueProvider>)nuller
                                                          withJavaLangBoolean:(JavaLangBoolean *)unwrapSingle {
  ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_initWithComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindDeserNullValueProvider_withJavaLangBoolean_(self, deser, nuller, unwrapSingle);
  return self;
}

- (JavaLangBoolean *)supportsUpdateWithComFasterxmlJacksonDatabindDeserializationConfig:(ComFasterxmlJacksonDatabindDeserializationConfig *)config {
  return JreLoadStatic(JavaLangBoolean, TRUE);
}

- (ComFasterxmlJacksonDatabindUtilAccessPattern *)getEmptyAccessPattern {
  return JreLoadEnum(ComFasterxmlJacksonDatabindUtilAccessPattern, CONSTANT);
}

- (id)getEmptyValueWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt {
  return ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_NO_STRINGS;
}

- (ComFasterxmlJacksonDatabindJsonDeserializer *)createContextualWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                           withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property {
  ComFasterxmlJacksonDatabindJsonDeserializer *deser = _elementDeserializer_;
  deser = [self findConvertingContentDeserializerWithComFasterxmlJacksonDatabindDeserializationContext:ctxt withComFasterxmlJacksonDatabindBeanProperty:property withComFasterxmlJacksonDatabindJsonDeserializer:deser];
  ComFasterxmlJacksonDatabindJavaType *type = [((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) constructTypeWithIOSClass:NSString_class_()];
  if (deser == nil) {
    deser = [ctxt findContextualValueDeserializerWithComFasterxmlJacksonDatabindJavaType:type withComFasterxmlJacksonDatabindBeanProperty:property];
  }
  else {
    deser = [ctxt handleSecondaryContextualizationWithComFasterxmlJacksonDatabindJsonDeserializer:deser withComFasterxmlJacksonDatabindBeanProperty:property withComFasterxmlJacksonDatabindJavaType:type];
  }
  JavaLangBoolean *unwrapSingle = [self findFormatFeatureWithComFasterxmlJacksonDatabindDeserializationContext:ctxt withComFasterxmlJacksonDatabindBeanProperty:property withIOSClass:IOSClass_arrayType(NSString_class_(), 1) withComFasterxmlJacksonAnnotationJsonFormat_Feature:JreLoadEnum(ComFasterxmlJacksonAnnotationJsonFormat_Feature, ACCEPT_SINGLE_VALUE_AS_ARRAY)];
  id<ComFasterxmlJacksonDatabindDeserNullValueProvider> nuller = [self findContentNullProviderWithComFasterxmlJacksonDatabindDeserializationContext:ctxt withComFasterxmlJacksonDatabindBeanProperty:property withComFasterxmlJacksonDatabindJsonDeserializer:deser];
  if ((deser != nil) && [self isDefaultDeserializerWithComFasterxmlJacksonDatabindJsonDeserializer:deser]) {
    deser = nil;
  }
  if ((_elementDeserializer_ == deser) && (_unwrapSingle_ == unwrapSingle) && (_nullProvider_ == nuller)) {
    return self;
  }
  return create_ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_initWithComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindDeserNullValueProvider_withJavaLangBoolean_(deser, nuller, unwrapSingle);
}

- (IOSObjectArray *)deserializeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
               withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt {
  if (![((ComFasterxmlJacksonCoreJsonParser *) nil_chk(p)) isExpectedStartArrayToken]) {
    return ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_handleNonArrayWithComFasterxmlJacksonCoreJsonParser_withComFasterxmlJacksonDatabindDeserializationContext_(self, p, ctxt);
  }
  if (_elementDeserializer_ != nil) {
    return ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer__deserializeCustomWithComFasterxmlJacksonCoreJsonParser_withComFasterxmlJacksonDatabindDeserializationContext_withNSStringArray_(self, p, ctxt, nil);
  }
  ComFasterxmlJacksonDatabindUtilObjectBuffer *buffer = [((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) leaseObjectBuffer];
  IOSObjectArray *chunk = [((ComFasterxmlJacksonDatabindUtilObjectBuffer *) nil_chk(buffer)) resetAndStart];
  jint ix = 0;
  @try {
    while (true) {
      NSString *value = [p nextTextValue];
      if (value == nil) {
        ComFasterxmlJacksonCoreJsonToken *t = [p getCurrentToken];
        if (t == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, END_ARRAY)) {
          break;
        }
        if (t == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_NULL)) {
          if (_skipNullValues_) {
            continue;
          }
          value = (NSString *) cast_chk([((id<ComFasterxmlJacksonDatabindDeserNullValueProvider>) nil_chk(_nullProvider_)) getNullValueWithComFasterxmlJacksonDatabindDeserializationContext:ctxt], [NSString class]);
        }
        else {
          value = [self _parseStringWithComFasterxmlJacksonCoreJsonParser:p withComFasterxmlJacksonDatabindDeserializationContext:ctxt];
        }
      }
      if (ix >= ((IOSObjectArray *) nil_chk(chunk))->size_) {
        chunk = [buffer appendCompletedChunkWithNSObjectArray:chunk];
        ix = 0;
      }
      IOSObjectArray_Set(nil_chk(chunk), ix++, value);
    }
  }
  @catch (JavaLangException *e) {
    @throw nil_chk(ComFasterxmlJacksonDatabindJsonMappingException_wrapWithPathWithJavaLangThrowable_withId_withInt_(e, chunk, [buffer bufferedSize] + ix));
  }
  IOSObjectArray *result = [buffer completeAndClearBufferWithNSObjectArray:chunk withInt:ix withIOSClass:NSString_class_()];
  [ctxt returnObjectBufferWithComFasterxmlJacksonDatabindUtilObjectBuffer:buffer];
  return result;
}

- (IOSObjectArray *)_deserializeCustomWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                      withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                          withNSStringArray:(IOSObjectArray *)old {
  return ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer__deserializeCustomWithComFasterxmlJacksonCoreJsonParser_withComFasterxmlJacksonDatabindDeserializationContext_withNSStringArray_(self, p, ctxt, old);
}

- (id)deserializeWithTypeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
         withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
       withComFasterxmlJacksonDatabindJsontypeTypeDeserializer:(ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *)typeDeserializer {
  return [((ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *) nil_chk(typeDeserializer)) deserializeTypedFromArrayWithComFasterxmlJacksonCoreJsonParser:p withComFasterxmlJacksonDatabindDeserializationContext:ctxt];
}

- (IOSObjectArray *)deserializeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
               withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                              withId:(IOSObjectArray *)intoValue {
  if (![((ComFasterxmlJacksonCoreJsonParser *) nil_chk(p)) isExpectedStartArrayToken]) {
    IOSObjectArray *arr = ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_handleNonArrayWithComFasterxmlJacksonCoreJsonParser_withComFasterxmlJacksonDatabindDeserializationContext_(self, p, ctxt);
    if (arr == nil) {
      return intoValue;
    }
    jint offset = ((IOSObjectArray *) nil_chk(intoValue))->size_;
    IOSObjectArray *result = [IOSObjectArray arrayWithLength:offset + arr->size_ type:NSString_class_()];
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(intoValue, 0, result, 0, offset);
    JavaLangSystem_arraycopyWithId_withInt_withId_withInt_withInt_(arr, 0, result, offset, arr->size_);
    return result;
  }
  if (_elementDeserializer_ != nil) {
    return ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer__deserializeCustomWithComFasterxmlJacksonCoreJsonParser_withComFasterxmlJacksonDatabindDeserializationContext_withNSStringArray_(self, p, ctxt, intoValue);
  }
  ComFasterxmlJacksonDatabindUtilObjectBuffer *buffer = [((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) leaseObjectBuffer];
  jint ix = ((IOSObjectArray *) nil_chk(intoValue))->size_;
  IOSObjectArray *chunk = [((ComFasterxmlJacksonDatabindUtilObjectBuffer *) nil_chk(buffer)) resetAndStartWithNSObjectArray:intoValue withInt:ix];
  @try {
    while (true) {
      NSString *value = [p nextTextValue];
      if (value == nil) {
        ComFasterxmlJacksonCoreJsonToken *t = [p getCurrentToken];
        if (t == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, END_ARRAY)) {
          break;
        }
        if (t == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_NULL)) {
          if (_skipNullValues_) {
            return ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_NO_STRINGS;
          }
          value = (NSString *) cast_chk([((id<ComFasterxmlJacksonDatabindDeserNullValueProvider>) nil_chk(_nullProvider_)) getNullValueWithComFasterxmlJacksonDatabindDeserializationContext:ctxt], [NSString class]);
        }
        else {
          value = [self _parseStringWithComFasterxmlJacksonCoreJsonParser:p withComFasterxmlJacksonDatabindDeserializationContext:ctxt];
        }
      }
      if (ix >= ((IOSObjectArray *) nil_chk(chunk))->size_) {
        chunk = [buffer appendCompletedChunkWithNSObjectArray:chunk];
        ix = 0;
      }
      IOSObjectArray_Set(nil_chk(chunk), ix++, value);
    }
  }
  @catch (JavaLangException *e) {
    @throw nil_chk(ComFasterxmlJacksonDatabindJsonMappingException_wrapWithPathWithJavaLangThrowable_withId_withInt_(e, chunk, [buffer bufferedSize] + ix));
  }
  IOSObjectArray *result = [buffer completeAndClearBufferWithNSObjectArray:chunk withInt:ix withIOSClass:NSString_class_()];
  [ctxt returnObjectBufferWithComFasterxmlJacksonDatabindUtilObjectBuffer:buffer];
  return result;
}

- (IOSObjectArray *)handleNonArrayWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                  withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt {
  return ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_handleNonArrayWithComFasterxmlJacksonCoreJsonParser_withComFasterxmlJacksonDatabindDeserializationContext_(self, p, ctxt);
}

- (void)dealloc {
  RELEASE_(_elementDeserializer_);
  RELEASE_(_nullProvider_);
  RELEASE_(_unwrapSingle_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindUtilAccessPattern;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 4, 5, 6, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonDeserializer;", 0x1, 7, 8, 6, 9, -1, -1 },
    { NULL, "[LNSString;", 0x1, 10, 11, 12, -1, -1, -1 },
    { NULL, "[LNSString;", 0x14, 13, 14, 12, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 15, 16, 12, -1, -1, -1 },
    { NULL, "[LNSString;", 0x1, 10, 14, 12, -1, -1, -1 },
    { NULL, "[LNSString;", 0x12, 17, 11, 12, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithComFasterxmlJacksonDatabindJsonDeserializer:withComFasterxmlJacksonDatabindDeserNullValueProvider:withJavaLangBoolean:);
  methods[2].selector = @selector(supportsUpdateWithComFasterxmlJacksonDatabindDeserializationConfig:);
  methods[3].selector = @selector(getEmptyAccessPattern);
  methods[4].selector = @selector(getEmptyValueWithComFasterxmlJacksonDatabindDeserializationContext:);
  methods[5].selector = @selector(createContextualWithComFasterxmlJacksonDatabindDeserializationContext:withComFasterxmlJacksonDatabindBeanProperty:);
  methods[6].selector = @selector(deserializeWithComFasterxmlJacksonCoreJsonParser:withComFasterxmlJacksonDatabindDeserializationContext:);
  methods[7].selector = @selector(_deserializeCustomWithComFasterxmlJacksonCoreJsonParser:withComFasterxmlJacksonDatabindDeserializationContext:withNSStringArray:);
  methods[8].selector = @selector(deserializeWithTypeWithComFasterxmlJacksonCoreJsonParser:withComFasterxmlJacksonDatabindDeserializationContext:withComFasterxmlJacksonDatabindJsontypeTypeDeserializer:);
  methods[9].selector = @selector(deserializeWithComFasterxmlJacksonCoreJsonParser:withComFasterxmlJacksonDatabindDeserializationContext:withId:);
  methods[10].selector = @selector(handleNonArrayWithComFasterxmlJacksonCoreJsonParser:withComFasterxmlJacksonDatabindDeserializationContext:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "NO_STRINGS", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 18, -1, -1 },
    { "instance", "LComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer;", .constantValue.asLong = 0, 0x19, -1, 19, -1, -1 },
    { "_elementDeserializer_", "LComFasterxmlJacksonDatabindJsonDeserializer;", .constantValue.asLong = 0, 0x4, -1, -1, 20, -1 },
    { "_nullProvider_", "LComFasterxmlJacksonDatabindDeserNullValueProvider;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_unwrapSingle_", "LJavaLangBoolean;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_skipNullValues_", "Z", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindJsonDeserializer;LComFasterxmlJacksonDatabindDeserNullValueProvider;LJavaLangBoolean;", "(Lcom/fasterxml/jackson/databind/JsonDeserializer<*>;Lcom/fasterxml/jackson/databind/deser/NullValueProvider;Ljava/lang/Boolean;)V", "supportsUpdate", "LComFasterxmlJacksonDatabindDeserializationConfig;", "getEmptyValue", "LComFasterxmlJacksonDatabindDeserializationContext;", "LComFasterxmlJacksonDatabindJsonMappingException;", "createContextual", "LComFasterxmlJacksonDatabindDeserializationContext;LComFasterxmlJacksonDatabindBeanProperty;", "(Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonDeserializer<*>;", "deserialize", "LComFasterxmlJacksonCoreJsonParser;LComFasterxmlJacksonDatabindDeserializationContext;", "LJavaIoIOException;", "_deserializeCustom", "LComFasterxmlJacksonCoreJsonParser;LComFasterxmlJacksonDatabindDeserializationContext;[LNSString;", "deserializeWithType", "LComFasterxmlJacksonCoreJsonParser;LComFasterxmlJacksonDatabindDeserializationContext;LComFasterxmlJacksonDatabindJsontypeTypeDeserializer;", "handleNonArray", &ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_NO_STRINGS, &ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_instance, "Lcom/fasterxml/jackson/databind/JsonDeserializer<Ljava/lang/String;>;", "Lcom/fasterxml/jackson/databind/deser/std/StdDeserializer<[Ljava/lang/String;>;Lcom/fasterxml/jackson/databind/deser/ContextualDeserializer;", (void *)&ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer__Annotations$0 };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer = { "StringArrayDeserializer", "com.fasterxml.jackson.databind.deser.std", ptrTable, methods, fields, 7, 0x11, 11, 7, -1, -1, -1, 21, 22 };
  return &_ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer class]) {
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_NO_STRINGS, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_instance, new_ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_init());
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer)
  }
}

@end

void ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_init(ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer *self) {
  ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_initWithComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindDeserNullValueProvider_withJavaLangBoolean_(self, nil, nil, nil);
}

ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer *new_ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer, init)
}

ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer *create_ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer, init)
}

void ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_initWithComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindDeserNullValueProvider_withJavaLangBoolean_(ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer *self, ComFasterxmlJacksonDatabindJsonDeserializer *deser, id<ComFasterxmlJacksonDatabindDeserNullValueProvider> nuller, JavaLangBoolean *unwrapSingle) {
  ComFasterxmlJacksonDatabindDeserStdStdDeserializer_initWithIOSClass_(self, IOSClass_arrayType(NSString_class_(), 1));
  JreStrongAssign(&self->_elementDeserializer_, deser);
  JreStrongAssign(&self->_nullProvider_, nuller);
  JreStrongAssign(&self->_unwrapSingle_, unwrapSingle);
  self->_skipNullValues_ = ComFasterxmlJacksonDatabindDeserImplNullsConstantProvider_isSkipperWithComFasterxmlJacksonDatabindDeserNullValueProvider_(nuller);
}

ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer *new_ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_initWithComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindDeserNullValueProvider_withJavaLangBoolean_(ComFasterxmlJacksonDatabindJsonDeserializer *deser, id<ComFasterxmlJacksonDatabindDeserNullValueProvider> nuller, JavaLangBoolean *unwrapSingle) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer, initWithComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindDeserNullValueProvider_withJavaLangBoolean_, deser, nuller, unwrapSingle)
}

ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer *create_ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_initWithComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindDeserNullValueProvider_withJavaLangBoolean_(ComFasterxmlJacksonDatabindJsonDeserializer *deser, id<ComFasterxmlJacksonDatabindDeserNullValueProvider> nuller, JavaLangBoolean *unwrapSingle) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer, initWithComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindDeserNullValueProvider_withJavaLangBoolean_, deser, nuller, unwrapSingle)
}

IOSObjectArray *ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer__deserializeCustomWithComFasterxmlJacksonCoreJsonParser_withComFasterxmlJacksonDatabindDeserializationContext_withNSStringArray_(ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer *self, ComFasterxmlJacksonCoreJsonParser *p, ComFasterxmlJacksonDatabindDeserializationContext *ctxt, IOSObjectArray *old) {
  ComFasterxmlJacksonDatabindUtilObjectBuffer *buffer = [((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) leaseObjectBuffer];
  jint ix;
  IOSObjectArray *chunk;
  if (old == nil) {
    ix = 0;
    chunk = [((ComFasterxmlJacksonDatabindUtilObjectBuffer *) nil_chk(buffer)) resetAndStart];
  }
  else {
    ix = old->size_;
    chunk = [((ComFasterxmlJacksonDatabindUtilObjectBuffer *) nil_chk(buffer)) resetAndStartWithNSObjectArray:old withInt:ix];
  }
  ComFasterxmlJacksonDatabindJsonDeserializer *deser = self->_elementDeserializer_;
  @try {
    while (true) {
      NSString *value;
      if ([((ComFasterxmlJacksonCoreJsonParser *) nil_chk(p)) nextTextValue] == nil) {
        ComFasterxmlJacksonCoreJsonToken *t = [p getCurrentToken];
        if (t == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, END_ARRAY)) {
          break;
        }
        if (t == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_NULL)) {
          if (self->_skipNullValues_) {
            continue;
          }
          value = (NSString *) cast_chk([((id<ComFasterxmlJacksonDatabindDeserNullValueProvider>) nil_chk(self->_nullProvider_)) getNullValueWithComFasterxmlJacksonDatabindDeserializationContext:ctxt], [NSString class]);
        }
        else {
          value = [((ComFasterxmlJacksonDatabindJsonDeserializer *) nil_chk(deser)) deserializeWithComFasterxmlJacksonCoreJsonParser:p withComFasterxmlJacksonDatabindDeserializationContext:ctxt];
        }
      }
      else {
        value = [((ComFasterxmlJacksonDatabindJsonDeserializer *) nil_chk(deser)) deserializeWithComFasterxmlJacksonCoreJsonParser:p withComFasterxmlJacksonDatabindDeserializationContext:ctxt];
      }
      if (ix >= ((IOSObjectArray *) nil_chk(chunk))->size_) {
        chunk = [buffer appendCompletedChunkWithNSObjectArray:chunk];
        ix = 0;
      }
      IOSObjectArray_Set(nil_chk(chunk), ix++, value);
    }
  }
  @catch (JavaLangException *e) {
    @throw nil_chk(ComFasterxmlJacksonDatabindJsonMappingException_wrapWithPathWithJavaLangThrowable_withId_withInt_(e, NSString_class_(), ix));
  }
  IOSObjectArray *result = [buffer completeAndClearBufferWithNSObjectArray:chunk withInt:ix withIOSClass:NSString_class_()];
  [ctxt returnObjectBufferWithComFasterxmlJacksonDatabindUtilObjectBuffer:buffer];
  return result;
}

IOSObjectArray *ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer_handleNonArrayWithComFasterxmlJacksonCoreJsonParser_withComFasterxmlJacksonDatabindDeserializationContext_(ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer *self, ComFasterxmlJacksonCoreJsonParser *p, ComFasterxmlJacksonDatabindDeserializationContext *ctxt) {
  jboolean canWrap = (self->_unwrapSingle_ == JreLoadStatic(JavaLangBoolean, TRUE)) || ((self->_unwrapSingle_ == nil) && [((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) isEnabledWithComFasterxmlJacksonDatabindDeserializationFeature:JreLoadEnum(ComFasterxmlJacksonDatabindDeserializationFeature, ACCEPT_SINGLE_VALUE_AS_ARRAY)]);
  if (canWrap) {
    NSString *value = [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(p)) hasTokenWithComFasterxmlJacksonCoreJsonToken:JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_NULL)] ? (NSString *) cast_chk([((id<ComFasterxmlJacksonDatabindDeserNullValueProvider>) nil_chk(self->_nullProvider_)) getNullValueWithComFasterxmlJacksonDatabindDeserializationContext:ctxt], [NSString class]) : [self _parseStringWithComFasterxmlJacksonCoreJsonParser:p withComFasterxmlJacksonDatabindDeserializationContext:ctxt];
    return [IOSObjectArray arrayWithObjects:(id[]){ value } count:1 type:NSString_class_()];
  }
  if ([((ComFasterxmlJacksonCoreJsonParser *) nil_chk(p)) hasTokenWithComFasterxmlJacksonCoreJsonToken:JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_STRING)] && [((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) isEnabledWithComFasterxmlJacksonDatabindDeserializationFeature:JreLoadEnum(ComFasterxmlJacksonDatabindDeserializationFeature, ACCEPT_EMPTY_STRING_AS_NULL_OBJECT)]) {
    NSString *str = [p getText];
    if ([((NSString *) nil_chk(str)) java_length] == 0) {
      return nil;
    }
  }
  return (IOSObjectArray *) cast_check([((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) handleUnexpectedTokenWithIOSClass:self->_valueClass_ withComFasterxmlJacksonCoreJsonParser:p], IOSClass_arrayType(NSString_class_(), 1));
}

IOSObjectArray *ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_ComFasterxmlJacksonDatabindAnnotationJacksonStdImpl() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindDeserStdStringArrayDeserializer)
