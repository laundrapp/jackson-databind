//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/deser/std/MapEntryDeserializer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonParser.h"
#include "com/fasterxml/jackson/core/JsonToken.h"
#include "com/fasterxml/jackson/databind/BeanProperty.h"
#include "com/fasterxml/jackson/databind/DeserializationContext.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/JsonDeserializer.h"
#include "com/fasterxml/jackson/databind/KeyDeserializer.h"
#include "com/fasterxml/jackson/databind/annotation/JacksonStdImpl.h"
#include "com/fasterxml/jackson/databind/deser/ContextualKeyDeserializer.h"
#include "com/fasterxml/jackson/databind/deser/std/ContainerDeserializerBase.h"
#include "com/fasterxml/jackson/databind/deser/std/MapEntryDeserializer.h"
#include "com/fasterxml/jackson/databind/jsontype/TypeDeserializer.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/AbstractMap.h"
#include "java/util/Map.h"

#pragma clang diagnostic ignored "-Wincomplete-implementation"

inline jlong ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer, serialVersionUID, jlong)

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer__Annotations$0(void);

@implementation ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                       withComFasterxmlJacksonDatabindKeyDeserializer:(ComFasterxmlJacksonDatabindKeyDeserializer *)keyDeser
                      withComFasterxmlJacksonDatabindJsonDeserializer:(ComFasterxmlJacksonDatabindJsonDeserializer *)valueDeser
              withComFasterxmlJacksonDatabindJsontypeTypeDeserializer:(ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *)valueTypeDeser {
  ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindKeyDeserializer_withComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindJsontypeTypeDeserializer_(self, type, keyDeser, valueDeser, valueTypeDeser);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer:(ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer *)src {
  ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_initWithComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_(self, src);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer:(ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer *)src
                                           withComFasterxmlJacksonDatabindKeyDeserializer:(ComFasterxmlJacksonDatabindKeyDeserializer *)keyDeser
                                          withComFasterxmlJacksonDatabindJsonDeserializer:(ComFasterxmlJacksonDatabindJsonDeserializer *)valueDeser
                                  withComFasterxmlJacksonDatabindJsontypeTypeDeserializer:(ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *)valueTypeDeser {
  ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_initWithComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_withComFasterxmlJacksonDatabindKeyDeserializer_withComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindJsontypeTypeDeserializer_(self, src, keyDeser, valueDeser, valueTypeDeser);
  return self;
}

- (ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer *)withResolvedWithComFasterxmlJacksonDatabindKeyDeserializer:(ComFasterxmlJacksonDatabindKeyDeserializer *)keyDeser
                                                                withComFasterxmlJacksonDatabindJsontypeTypeDeserializer:(ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *)valueTypeDeser
                                                                        withComFasterxmlJacksonDatabindJsonDeserializer:(ComFasterxmlJacksonDatabindJsonDeserializer *)valueDeser {
  if ((_keyDeserializer_ == keyDeser) && (_valueDeserializer_ == valueDeser) && (_valueTypeDeserializer_ == valueTypeDeser)) {
    return self;
  }
  return create_ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_initWithComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_withComFasterxmlJacksonDatabindKeyDeserializer_withComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindJsontypeTypeDeserializer_(self, keyDeser, valueDeser, valueTypeDeser);
}

- (ComFasterxmlJacksonDatabindJsonDeserializer *)createContextualWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                           withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property {
  ComFasterxmlJacksonDatabindKeyDeserializer *kd = _keyDeserializer_;
  if (kd == nil) {
    kd = [((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) findKeyDeserializerWithComFasterxmlJacksonDatabindJavaType:[((ComFasterxmlJacksonDatabindJavaType *) nil_chk(_containerType_)) containedTypeWithInt:0] withComFasterxmlJacksonDatabindBeanProperty:property];
  }
  else {
    if ([ComFasterxmlJacksonDatabindDeserContextualKeyDeserializer_class_() isInstance:kd]) {
      kd = [((id<ComFasterxmlJacksonDatabindDeserContextualKeyDeserializer>) cast_check(kd, ComFasterxmlJacksonDatabindDeserContextualKeyDeserializer_class_())) createContextualWithComFasterxmlJacksonDatabindDeserializationContext:ctxt withComFasterxmlJacksonDatabindBeanProperty:property];
    }
  }
  ComFasterxmlJacksonDatabindJsonDeserializer *vd = _valueDeserializer_;
  vd = [self findConvertingContentDeserializerWithComFasterxmlJacksonDatabindDeserializationContext:ctxt withComFasterxmlJacksonDatabindBeanProperty:property withComFasterxmlJacksonDatabindJsonDeserializer:vd];
  ComFasterxmlJacksonDatabindJavaType *contentType = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(_containerType_)) containedTypeWithInt:1];
  if (vd == nil) {
    vd = [((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) findContextualValueDeserializerWithComFasterxmlJacksonDatabindJavaType:contentType withComFasterxmlJacksonDatabindBeanProperty:property];
  }
  else {
    vd = [((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) handleSecondaryContextualizationWithComFasterxmlJacksonDatabindJsonDeserializer:vd withComFasterxmlJacksonDatabindBeanProperty:property withComFasterxmlJacksonDatabindJavaType:contentType];
  }
  ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *vtd = _valueTypeDeserializer_;
  if (vtd != nil) {
    vtd = [vtd forPropertyWithComFasterxmlJacksonDatabindBeanProperty:property];
  }
  return [self withResolvedWithComFasterxmlJacksonDatabindKeyDeserializer:kd withComFasterxmlJacksonDatabindJsontypeTypeDeserializer:vtd withComFasterxmlJacksonDatabindJsonDeserializer:vd];
}

- (ComFasterxmlJacksonDatabindJavaType *)getContentType {
  return [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(_containerType_)) containedTypeWithInt:1];
}

- (ComFasterxmlJacksonDatabindJsonDeserializer *)getContentDeserializer {
  return _valueDeserializer_;
}

- (id<JavaUtilMap_Entry>)deserializeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                    withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt {
  ComFasterxmlJacksonCoreJsonToken *t = [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(p)) getCurrentToken];
  if (t != JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_OBJECT) && t != JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, FIELD_NAME) && t != JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, END_OBJECT)) {
    return [self _deserializeFromEmptyWithComFasterxmlJacksonCoreJsonParser:p withComFasterxmlJacksonDatabindDeserializationContext:ctxt];
  }
  if (t == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_OBJECT)) {
    t = [p nextToken];
  }
  if (t != JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, FIELD_NAME)) {
    if (t == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, END_OBJECT)) {
      return [((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) reportInputMismatchWithComFasterxmlJacksonDatabindJsonDeserializer:self withNSString:@"Cannot deserialize a Map.Entry out of empty JSON Object" withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]];
    }
    return (id<JavaUtilMap_Entry>) cast_check([((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) handleUnexpectedTokenWithIOSClass:[self handledType] withComFasterxmlJacksonCoreJsonParser:p], JavaUtilMap_Entry_class_());
  }
  ComFasterxmlJacksonDatabindKeyDeserializer *keyDes = _keyDeserializer_;
  ComFasterxmlJacksonDatabindJsonDeserializer *valueDes = _valueDeserializer_;
  ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *typeDeser = _valueTypeDeserializer_;
  NSString *keyStr = [p getCurrentName];
  id key = [((ComFasterxmlJacksonDatabindKeyDeserializer *) nil_chk(keyDes)) deserializeKeyWithNSString:keyStr withComFasterxmlJacksonDatabindDeserializationContext:ctxt];
  id value = nil;
  t = [p nextToken];
  @try {
    if (t == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_NULL)) {
      value = [((ComFasterxmlJacksonDatabindJsonDeserializer *) nil_chk(valueDes)) getNullValueWithComFasterxmlJacksonDatabindDeserializationContext:ctxt];
    }
    else if (typeDeser == nil) {
      value = [((ComFasterxmlJacksonDatabindJsonDeserializer *) nil_chk(valueDes)) deserializeWithComFasterxmlJacksonCoreJsonParser:p withComFasterxmlJacksonDatabindDeserializationContext:ctxt];
    }
    else {
      value = [((ComFasterxmlJacksonDatabindJsonDeserializer *) nil_chk(valueDes)) deserializeWithTypeWithComFasterxmlJacksonCoreJsonParser:p withComFasterxmlJacksonDatabindDeserializationContext:ctxt withComFasterxmlJacksonDatabindJsontypeTypeDeserializer:typeDeser];
    }
  }
  @catch (JavaLangException *e) {
    [self wrapAndThrowWithJavaLangThrowable:e withId:JavaUtilMap_Entry_class_() withNSString:keyStr];
  }
  t = [p nextToken];
  if (t != JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, END_OBJECT)) {
    if (t == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, FIELD_NAME)) {
      [((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) reportInputMismatchWithComFasterxmlJacksonDatabindJsonDeserializer:self withNSString:@"Problem binding JSON into Map.Entry: more than one entry in JSON (second field: '%s')" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [p getCurrentName] } count:1 type:NSObject_class_()]];
    }
    else {
      [((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) reportInputMismatchWithComFasterxmlJacksonDatabindJsonDeserializer:self withNSString:JreStrcat("$@", @"Problem binding JSON into Map.Entry: unexpected content after JSON Object entry: ", t) withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]];
    }
    return nil;
  }
  return create_JavaUtilAbstractMap_SimpleEntry_initWithId_withId_(key, value);
}

- (id<JavaUtilMap_Entry>)deserializeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                    withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                   withId:(id<JavaUtilMap_Entry>)result {
  @throw create_JavaLangIllegalStateException_initWithNSString_(@"Cannot update Map.Entry values");
}

- (id)deserializeWithTypeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
         withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
       withComFasterxmlJacksonDatabindJsontypeTypeDeserializer:(ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *)typeDeserializer {
  return [((ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *) nil_chk(typeDeserializer)) deserializeTypedFromObjectWithComFasterxmlJacksonCoreJsonParser:p withComFasterxmlJacksonDatabindDeserializationContext:ctxt];
}

- (void)dealloc {
  RELEASE_(_keyDeserializer_);
  RELEASE_(_valueDeserializer_);
  RELEASE_(_valueTypeDeserializer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x4, -1, 2, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 3, -1, 4, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer;", 0x4, 5, 6, -1, 7, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonDeserializer;", 0x1, 8, 9, 10, 11, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonDeserializer;", 0x1, -1, -1, -1, 12, -1, -1 },
    { NULL, "LJavaUtilMap_Entry;", 0x1, 13, 14, 15, 16, -1, -1 },
    { NULL, "LJavaUtilMap_Entry;", 0x1, 13, 17, 15, 18, -1, -1 },
    { NULL, "LNSObject;", 0x1, 19, 20, 15, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindKeyDeserializer:withComFasterxmlJacksonDatabindJsonDeserializer:withComFasterxmlJacksonDatabindJsontypeTypeDeserializer:);
  methods[1].selector = @selector(initWithComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer:);
  methods[2].selector = @selector(initWithComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer:withComFasterxmlJacksonDatabindKeyDeserializer:withComFasterxmlJacksonDatabindJsonDeserializer:withComFasterxmlJacksonDatabindJsontypeTypeDeserializer:);
  methods[3].selector = @selector(withResolvedWithComFasterxmlJacksonDatabindKeyDeserializer:withComFasterxmlJacksonDatabindJsontypeTypeDeserializer:withComFasterxmlJacksonDatabindJsonDeserializer:);
  methods[4].selector = @selector(createContextualWithComFasterxmlJacksonDatabindDeserializationContext:withComFasterxmlJacksonDatabindBeanProperty:);
  methods[5].selector = @selector(getContentType);
  methods[6].selector = @selector(getContentDeserializer);
  methods[7].selector = @selector(deserializeWithComFasterxmlJacksonCoreJsonParser:withComFasterxmlJacksonDatabindDeserializationContext:);
  methods[8].selector = @selector(deserializeWithComFasterxmlJacksonCoreJsonParser:withComFasterxmlJacksonDatabindDeserializationContext:withId:);
  methods[9].selector = @selector(deserializeWithTypeWithComFasterxmlJacksonCoreJsonParser:withComFasterxmlJacksonDatabindDeserializationContext:withComFasterxmlJacksonDatabindJsontypeTypeDeserializer:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "_keyDeserializer_", "LComFasterxmlJacksonDatabindKeyDeserializer;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_valueDeserializer_", "LComFasterxmlJacksonDatabindJsonDeserializer;", .constantValue.asLong = 0, 0x14, -1, -1, 21, -1 },
    { "_valueTypeDeserializer_", "LComFasterxmlJacksonDatabindJsontypeTypeDeserializer;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindJavaType;LComFasterxmlJacksonDatabindKeyDeserializer;LComFasterxmlJacksonDatabindJsonDeserializer;LComFasterxmlJacksonDatabindJsontypeTypeDeserializer;", "(Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/KeyDeserializer;Lcom/fasterxml/jackson/databind/JsonDeserializer<Ljava/lang/Object;>;Lcom/fasterxml/jackson/databind/jsontype/TypeDeserializer;)V", "LComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer;", "LComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer;LComFasterxmlJacksonDatabindKeyDeserializer;LComFasterxmlJacksonDatabindJsonDeserializer;LComFasterxmlJacksonDatabindJsontypeTypeDeserializer;", "(Lcom/fasterxml/jackson/databind/deser/std/MapEntryDeserializer;Lcom/fasterxml/jackson/databind/KeyDeserializer;Lcom/fasterxml/jackson/databind/JsonDeserializer<Ljava/lang/Object;>;Lcom/fasterxml/jackson/databind/jsontype/TypeDeserializer;)V", "withResolved", "LComFasterxmlJacksonDatabindKeyDeserializer;LComFasterxmlJacksonDatabindJsontypeTypeDeserializer;LComFasterxmlJacksonDatabindJsonDeserializer;", "(Lcom/fasterxml/jackson/databind/KeyDeserializer;Lcom/fasterxml/jackson/databind/jsontype/TypeDeserializer;Lcom/fasterxml/jackson/databind/JsonDeserializer<*>;)Lcom/fasterxml/jackson/databind/deser/std/MapEntryDeserializer;", "createContextual", "LComFasterxmlJacksonDatabindDeserializationContext;LComFasterxmlJacksonDatabindBeanProperty;", "LComFasterxmlJacksonDatabindJsonMappingException;", "(Lcom/fasterxml/jackson/databind/DeserializationContext;Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonDeserializer<*>;", "()Lcom/fasterxml/jackson/databind/JsonDeserializer<Ljava/lang/Object;>;", "deserialize", "LComFasterxmlJacksonCoreJsonParser;LComFasterxmlJacksonDatabindDeserializationContext;", "LJavaIoIOException;", "(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)Ljava/util/Map$Entry<Ljava/lang/Object;Ljava/lang/Object;>;", "LComFasterxmlJacksonCoreJsonParser;LComFasterxmlJacksonDatabindDeserializationContext;LJavaUtilMap_Entry;", "(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;Ljava/util/Map$Entry<Ljava/lang/Object;Ljava/lang/Object;>;)Ljava/util/Map$Entry<Ljava/lang/Object;Ljava/lang/Object;>;", "deserializeWithType", "LComFasterxmlJacksonCoreJsonParser;LComFasterxmlJacksonDatabindDeserializationContext;LComFasterxmlJacksonDatabindJsontypeTypeDeserializer;", "Lcom/fasterxml/jackson/databind/JsonDeserializer<Ljava/lang/Object;>;", "Lcom/fasterxml/jackson/databind/deser/std/ContainerDeserializerBase<Ljava/util/Map$Entry<Ljava/lang/Object;Ljava/lang/Object;>;>;Lcom/fasterxml/jackson/databind/deser/ContextualDeserializer;", (void *)&ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer__Annotations$0 };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer = { "MapEntryDeserializer", "com.fasterxml.jackson.databind.deser.std", ptrTable, methods, fields, 7, 0x1, 10, 4, -1, -1, -1, 22, 23 };
  return &_ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer;
}

@end

void ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindKeyDeserializer_withComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindJsontypeTypeDeserializer_(ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer *self, ComFasterxmlJacksonDatabindJavaType *type, ComFasterxmlJacksonDatabindKeyDeserializer *keyDeser, ComFasterxmlJacksonDatabindJsonDeserializer *valueDeser, ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *valueTypeDeser) {
  ComFasterxmlJacksonDatabindDeserStdContainerDeserializerBase_initWithComFasterxmlJacksonDatabindJavaType_(self, type);
  if ([((ComFasterxmlJacksonDatabindJavaType *) nil_chk(type)) containedTypeCount] != 2) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@", @"Missing generic type information for ", type));
  }
  JreStrongAssign(&self->_keyDeserializer_, keyDeser);
  JreStrongAssign(&self->_valueDeserializer_, valueDeser);
  JreStrongAssign(&self->_valueTypeDeserializer_, valueTypeDeser);
}

ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer *new_ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindKeyDeserializer_withComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindJsontypeTypeDeserializer_(ComFasterxmlJacksonDatabindJavaType *type, ComFasterxmlJacksonDatabindKeyDeserializer *keyDeser, ComFasterxmlJacksonDatabindJsonDeserializer *valueDeser, ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *valueTypeDeser) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer, initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindKeyDeserializer_withComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindJsontypeTypeDeserializer_, type, keyDeser, valueDeser, valueTypeDeser)
}

ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer *create_ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindKeyDeserializer_withComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindJsontypeTypeDeserializer_(ComFasterxmlJacksonDatabindJavaType *type, ComFasterxmlJacksonDatabindKeyDeserializer *keyDeser, ComFasterxmlJacksonDatabindJsonDeserializer *valueDeser, ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *valueTypeDeser) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer, initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindKeyDeserializer_withComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindJsontypeTypeDeserializer_, type, keyDeser, valueDeser, valueTypeDeser)
}

void ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_initWithComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_(ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer *self, ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer *src) {
  ComFasterxmlJacksonDatabindDeserStdContainerDeserializerBase_initWithComFasterxmlJacksonDatabindDeserStdContainerDeserializerBase_(self, src);
  JreStrongAssign(&self->_keyDeserializer_, ((ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer *) nil_chk(src))->_keyDeserializer_);
  JreStrongAssign(&self->_valueDeserializer_, src->_valueDeserializer_);
  JreStrongAssign(&self->_valueTypeDeserializer_, src->_valueTypeDeserializer_);
}

ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer *new_ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_initWithComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_(ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer *src) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer, initWithComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_, src)
}

ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer *create_ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_initWithComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_(ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer *src) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer, initWithComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_, src)
}

void ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_initWithComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_withComFasterxmlJacksonDatabindKeyDeserializer_withComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindJsontypeTypeDeserializer_(ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer *self, ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer *src, ComFasterxmlJacksonDatabindKeyDeserializer *keyDeser, ComFasterxmlJacksonDatabindJsonDeserializer *valueDeser, ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *valueTypeDeser) {
  ComFasterxmlJacksonDatabindDeserStdContainerDeserializerBase_initWithComFasterxmlJacksonDatabindDeserStdContainerDeserializerBase_(self, src);
  JreStrongAssign(&self->_keyDeserializer_, keyDeser);
  JreStrongAssign(&self->_valueDeserializer_, valueDeser);
  JreStrongAssign(&self->_valueTypeDeserializer_, valueTypeDeser);
}

ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer *new_ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_initWithComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_withComFasterxmlJacksonDatabindKeyDeserializer_withComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindJsontypeTypeDeserializer_(ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer *src, ComFasterxmlJacksonDatabindKeyDeserializer *keyDeser, ComFasterxmlJacksonDatabindJsonDeserializer *valueDeser, ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *valueTypeDeser) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer, initWithComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_withComFasterxmlJacksonDatabindKeyDeserializer_withComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindJsontypeTypeDeserializer_, src, keyDeser, valueDeser, valueTypeDeser)
}

ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer *create_ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_initWithComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_withComFasterxmlJacksonDatabindKeyDeserializer_withComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindJsontypeTypeDeserializer_(ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer *src, ComFasterxmlJacksonDatabindKeyDeserializer *keyDeser, ComFasterxmlJacksonDatabindJsonDeserializer *valueDeser, ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *valueTypeDeser) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer, initWithComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer_withComFasterxmlJacksonDatabindKeyDeserializer_withComFasterxmlJacksonDatabindJsonDeserializer_withComFasterxmlJacksonDatabindJsontypeTypeDeserializer_, src, keyDeser, valueDeser, valueTypeDeser)
}

IOSObjectArray *ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_ComFasterxmlJacksonDatabindAnnotationJacksonStdImpl() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindDeserStdMapEntryDeserializer)
