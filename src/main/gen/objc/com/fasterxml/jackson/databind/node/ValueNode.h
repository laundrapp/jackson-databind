//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/node/ValueNode.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeValueNode")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindNodeValueNode
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeValueNode 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeValueNode 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindNodeValueNode

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindNodeValueNode_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeValueNode || defined(INCLUDE_ComFasterxmlJacksonDatabindNodeValueNode))
#define ComFasterxmlJacksonDatabindNodeValueNode_

#define RESTRICT_ComFasterxmlJacksonDatabindNodeBaseJsonNode 1
#define INCLUDE_ComFasterxmlJacksonDatabindNodeBaseJsonNode 1
#include "com/fasterxml/jackson/databind/node/BaseJsonNode.h"

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonCoreJsonPointer;
@class ComFasterxmlJacksonCoreJsonToken;
@class ComFasterxmlJacksonDatabindJsonNode;
@class ComFasterxmlJacksonDatabindJsontypeTypeSerializer;
@class ComFasterxmlJacksonDatabindNodeObjectNode;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@protocol JavaUtilList;

/*!
 @brief This intermediate base class is used for all leaf nodes, that is,
  all non-container (array or object) nodes, except for the
  "missing node".
 */
@interface ComFasterxmlJacksonDatabindNodeValueNode : ComFasterxmlJacksonDatabindNodeBaseJsonNode

#pragma mark Public

- (ComFasterxmlJacksonCoreJsonToken *)asToken;

/*!
 @brief All current value nodes are immutable, so we can just return
  them as is.
 */
- (ComFasterxmlJacksonDatabindJsonNode *)deepCopy;

- (ComFasterxmlJacksonDatabindNodeObjectNode *)findParentWithNSString:(NSString *)fieldName;

- (id<JavaUtilList>)findParentsWithNSString:(NSString *)fieldName
                           withJavaUtilList:(id<JavaUtilList>)foundSoFar;

- (ComFasterxmlJacksonDatabindJsonNode *)findValueWithNSString:(NSString *)fieldName;

- (id<JavaUtilList>)findValuesWithNSString:(NSString *)fieldName
                          withJavaUtilList:(id<JavaUtilList>)foundSoFar;

- (id<JavaUtilList>)findValuesAsTextWithNSString:(NSString *)fieldName
                                withJavaUtilList:(id<JavaUtilList>)foundSoFar;

- (ComFasterxmlJacksonDatabindJsonNode *)getWithInt:(jint)index;

- (ComFasterxmlJacksonDatabindJsonNode *)getWithNSString:(NSString *)fieldName;

- (jboolean)hasWithInt:(jint)index;

- (jboolean)hasWithNSString:(NSString *)fieldName;

- (jboolean)hasNonNullWithInt:(jint)index;

- (jboolean)hasNonNullWithNSString:(NSString *)fieldName;

- (ComFasterxmlJacksonDatabindJsonNode *)pathWithInt:(jint)index;

- (ComFasterxmlJacksonDatabindJsonNode *)pathWithNSString:(NSString *)fieldName;

- (void)serializeWithTypeWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
                withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
            withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer;

- (NSString *)description;

#pragma mark Protected

- (instancetype __nonnull)init;

- (ComFasterxmlJacksonDatabindJsonNode *)_atWithComFasterxmlJacksonCoreJsonPointer:(ComFasterxmlJacksonCoreJsonPointer *)ptr;

#pragma mark Package-Private

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindNodeValueNode)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindNodeValueNode_init(ComFasterxmlJacksonDatabindNodeValueNode *self);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindNodeValueNode)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeValueNode")
