//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/node/BinaryNode.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeBinaryNode")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindNodeBinaryNode
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeBinaryNode 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeBinaryNode 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindNodeBinaryNode

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindNodeBinaryNode_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeBinaryNode || defined(INCLUDE_ComFasterxmlJacksonDatabindNodeBinaryNode))
#define ComFasterxmlJacksonDatabindNodeBinaryNode_

#define RESTRICT_ComFasterxmlJacksonDatabindNodeValueNode 1
#define INCLUDE_ComFasterxmlJacksonDatabindNodeValueNode 1
#include "com/fasterxml/jackson/databind/node/ValueNode.h"

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonCoreJsonToken;
@class ComFasterxmlJacksonDatabindNodeJsonNodeType;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSByteArray;

/*!
 @brief Value node that contains Base64 encoded binary value, which will be
  output and stored as Json String value.
 */
@interface ComFasterxmlJacksonDatabindNodeBinaryNode : ComFasterxmlJacksonDatabindNodeValueNode {
 @public
  IOSByteArray *_data_;
}

#pragma mark Public

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)data;

- (instancetype __nonnull)initWithByteArray:(IOSByteArray *)data
                                    withInt:(jint)offset
                                    withInt:(jint)length;

/*!
 @brief Hmmh.This is not quite as efficient as using <code>serialize</code>,
  but will work correctly.
 */
- (NSString *)asText;

- (ComFasterxmlJacksonCoreJsonToken *)asToken;

/*!
 @brief <p>
  Note: caller is not to modify returned array in any way, since
  it is not a copy but reference to the underlying byte array.
 */
- (IOSByteArray *)binaryValue;

- (jboolean)isEqual:(id)o;

- (ComFasterxmlJacksonDatabindNodeJsonNodeType *)getNodeType;

- (NSUInteger)hash;

- (void)serializeWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)jg
        withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

/*!
 @brief Different from other values, since contents need to be surrounded
  by (double) quotes.
 */
- (NSString *)description;

+ (ComFasterxmlJacksonDatabindNodeBinaryNode *)valueOfWithByteArray:(IOSByteArray *)data;

+ (ComFasterxmlJacksonDatabindNodeBinaryNode *)valueOfWithByteArray:(IOSByteArray *)data
                                                            withInt:(jint)offset
                                                            withInt:(jint)length;

#pragma mark Package-Private

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonDatabindNodeBinaryNode)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindNodeBinaryNode, _data_, IOSByteArray *)

inline ComFasterxmlJacksonDatabindNodeBinaryNode *ComFasterxmlJacksonDatabindNodeBinaryNode_get_EMPTY_BINARY_NODE(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeBinaryNode *ComFasterxmlJacksonDatabindNodeBinaryNode_EMPTY_BINARY_NODE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindNodeBinaryNode, EMPTY_BINARY_NODE, ComFasterxmlJacksonDatabindNodeBinaryNode *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindNodeBinaryNode_initWithByteArray_(ComFasterxmlJacksonDatabindNodeBinaryNode *self, IOSByteArray *data);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeBinaryNode *new_ComFasterxmlJacksonDatabindNodeBinaryNode_initWithByteArray_(IOSByteArray *data) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeBinaryNode *create_ComFasterxmlJacksonDatabindNodeBinaryNode_initWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindNodeBinaryNode_initWithByteArray_withInt_withInt_(ComFasterxmlJacksonDatabindNodeBinaryNode *self, IOSByteArray *data, jint offset, jint length);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeBinaryNode *new_ComFasterxmlJacksonDatabindNodeBinaryNode_initWithByteArray_withInt_withInt_(IOSByteArray *data, jint offset, jint length) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeBinaryNode *create_ComFasterxmlJacksonDatabindNodeBinaryNode_initWithByteArray_withInt_withInt_(IOSByteArray *data, jint offset, jint length);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeBinaryNode *ComFasterxmlJacksonDatabindNodeBinaryNode_valueOfWithByteArray_(IOSByteArray *data);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindNodeBinaryNode *ComFasterxmlJacksonDatabindNodeBinaryNode_valueOfWithByteArray_withInt_withInt_(IOSByteArray *data, jint offset, jint length);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindNodeBinaryNode)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindNodeBinaryNode")
