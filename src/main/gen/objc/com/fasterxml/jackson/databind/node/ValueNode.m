//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/node/ValueNode.java
//

#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/core/JsonPointer.h"
#include "com/fasterxml/jackson/core/JsonToken.h"
#include "com/fasterxml/jackson/core/type/WritableTypeId.h"
#include "com/fasterxml/jackson/databind/JsonNode.h"
#include "com/fasterxml/jackson/databind/SerializerProvider.h"
#include "com/fasterxml/jackson/databind/jsontype/TypeSerializer.h"
#include "com/fasterxml/jackson/databind/node/BaseJsonNode.h"
#include "com/fasterxml/jackson/databind/node/MissingNode.h"
#include "com/fasterxml/jackson/databind/node/ObjectNode.h"
#include "com/fasterxml/jackson/databind/node/ValueNode.h"
#include "java/util/List.h"

@implementation ComFasterxmlJacksonDatabindNodeValueNode

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindNodeValueNode_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (ComFasterxmlJacksonDatabindJsonNode *)_atWithComFasterxmlJacksonCoreJsonPointer:(ComFasterxmlJacksonCoreJsonPointer *)ptr {
  return ComFasterxmlJacksonDatabindNodeMissingNode_getInstance();
}

- (ComFasterxmlJacksonDatabindJsonNode *)deepCopy {
  return self;
}

- (ComFasterxmlJacksonCoreJsonToken *)asToken {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (void)serializeWithTypeWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
                withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
            withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer {
  ComFasterxmlJacksonCoreTypeWritableTypeId *typeIdDef = [((ComFasterxmlJacksonDatabindJsontypeTypeSerializer *) nil_chk(typeSer)) writeTypePrefixWithComFasterxmlJacksonCoreJsonGenerator:g withComFasterxmlJacksonCoreTypeWritableTypeId:[typeSer typeIdWithId:self withComFasterxmlJacksonCoreJsonToken:[self asToken]]];
  [self serializeWithComFasterxmlJacksonCoreJsonGenerator:g withComFasterxmlJacksonDatabindSerializerProvider:provider];
  [typeSer writeTypeSuffixWithComFasterxmlJacksonCoreJsonGenerator:g withComFasterxmlJacksonCoreTypeWritableTypeId:typeIdDef];
}

- (NSString *)description {
  return [self asText];
}

- (ComFasterxmlJacksonDatabindJsonNode *)getWithInt:(jint)index {
  return nil;
}

- (ComFasterxmlJacksonDatabindJsonNode *)pathWithInt:(jint)index {
  return ComFasterxmlJacksonDatabindNodeMissingNode_getInstance();
}

- (jboolean)hasWithInt:(jint)index {
  return false;
}

- (jboolean)hasNonNullWithInt:(jint)index {
  return false;
}

- (ComFasterxmlJacksonDatabindJsonNode *)getWithNSString:(NSString *)fieldName {
  return nil;
}

- (ComFasterxmlJacksonDatabindJsonNode *)pathWithNSString:(NSString *)fieldName {
  return ComFasterxmlJacksonDatabindNodeMissingNode_getInstance();
}

- (jboolean)hasWithNSString:(NSString *)fieldName {
  return false;
}

- (jboolean)hasNonNullWithNSString:(NSString *)fieldName {
  return false;
}

- (ComFasterxmlJacksonDatabindJsonNode *)findValueWithNSString:(NSString *)fieldName {
  return nil;
}

- (ComFasterxmlJacksonDatabindNodeObjectNode *)findParentWithNSString:(NSString *)fieldName {
  return nil;
}

- (id<JavaUtilList>)findValuesWithNSString:(NSString *)fieldName
                          withJavaUtilList:(id<JavaUtilList>)foundSoFar {
  return foundSoFar;
}

- (id<JavaUtilList>)findValuesAsTextWithNSString:(NSString *)fieldName
                                withJavaUtilList:(id<JavaUtilList>)foundSoFar {
  return foundSoFar;
}

- (id<JavaUtilList>)findParentsWithNSString:(NSString *)fieldName
                           withJavaUtilList:(id<JavaUtilList>)foundSoFar {
  return foundSoFar;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x4, 0, 1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x1, -1, -1, -1, 2, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, 5, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 6, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x11, 7, 8, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x11, 9, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, 10, 8, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, 11, 8, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x11, 7, 12, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x11, 9, 12, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, 10, 12, -1, -1, -1, -1 },
    { NULL, "Z", 0x11, 11, 12, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x11, 13, 12, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeObjectNode;", 0x11, 14, 12, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x11, 15, 16, -1, 17, -1, -1 },
    { NULL, "LJavaUtilList;", 0x11, 18, 16, -1, 19, -1, -1 },
    { NULL, "LJavaUtilList;", 0x11, 20, 16, -1, 17, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(_atWithComFasterxmlJacksonCoreJsonPointer:);
  methods[2].selector = @selector(deepCopy);
  methods[3].selector = @selector(asToken);
  methods[4].selector = @selector(serializeWithTypeWithComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindJsontypeTypeSerializer:);
  methods[5].selector = @selector(description);
  methods[6].selector = @selector(getWithInt:);
  methods[7].selector = @selector(pathWithInt:);
  methods[8].selector = @selector(hasWithInt:);
  methods[9].selector = @selector(hasNonNullWithInt:);
  methods[10].selector = @selector(getWithNSString:);
  methods[11].selector = @selector(pathWithNSString:);
  methods[12].selector = @selector(hasWithNSString:);
  methods[13].selector = @selector(hasNonNullWithNSString:);
  methods[14].selector = @selector(findValueWithNSString:);
  methods[15].selector = @selector(findParentWithNSString:);
  methods[16].selector = @selector(findValuesWithNSString:withJavaUtilList:);
  methods[17].selector = @selector(findValuesAsTextWithNSString:withJavaUtilList:);
  methods[18].selector = @selector(findParentsWithNSString:withJavaUtilList:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "_at", "LComFasterxmlJacksonCoreJsonPointer;", "<T:Lcom/fasterxml/jackson/databind/JsonNode;>()TT;", "serializeWithType", "LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindJsontypeTypeSerializer;", "LJavaIoIOException;", "toString", "get", "I", "path", "has", "hasNonNull", "LNSString;", "findValue", "findParent", "findValues", "LNSString;LJavaUtilList;", "(Ljava/lang/String;Ljava/util/List<Lcom/fasterxml/jackson/databind/JsonNode;>;)Ljava/util/List<Lcom/fasterxml/jackson/databind/JsonNode;>;", "findValuesAsText", "(Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;)Ljava/util/List<Ljava/lang/String;>;", "findParents" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindNodeValueNode = { "ValueNode", "com.fasterxml.jackson.databind.node", ptrTable, methods, NULL, 7, 0x401, 19, 0, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindNodeValueNode;
}

@end

void ComFasterxmlJacksonDatabindNodeValueNode_init(ComFasterxmlJacksonDatabindNodeValueNode *self) {
  ComFasterxmlJacksonDatabindNodeBaseJsonNode_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindNodeValueNode)
