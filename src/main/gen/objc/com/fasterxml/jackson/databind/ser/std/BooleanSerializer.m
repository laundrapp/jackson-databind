//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/std/BooleanSerializer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/annotation/JsonFormat.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/core/JsonParser.h"
#include "com/fasterxml/jackson/databind/BeanProperty.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/JsonNode.h"
#include "com/fasterxml/jackson/databind/JsonSerializer.h"
#include "com/fasterxml/jackson/databind/SerializerProvider.h"
#include "com/fasterxml/jackson/databind/annotation/JacksonStdImpl.h"
#include "com/fasterxml/jackson/databind/jsonFormatVisitors/JsonBooleanFormatVisitor.h"
#include "com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper.h"
#include "com/fasterxml/jackson/databind/jsontype/TypeSerializer.h"
#include "com/fasterxml/jackson/databind/node/ObjectNode.h"
#include "com/fasterxml/jackson/databind/ser/std/BooleanSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/StdScalarSerializer.h"
#include "java/lang/Boolean.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/reflect/Type.h"

inline jlong ComFasterxmlJacksonDatabindSerStdBooleanSerializer_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindSerStdBooleanSerializer_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindSerStdBooleanSerializer, serialVersionUID, jlong)

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindSerStdBooleanSerializer__Annotations$0(void);

inline jlong ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber, serialVersionUID, jlong)

@implementation ComFasterxmlJacksonDatabindSerStdBooleanSerializer

- (instancetype __nonnull)initWithBoolean:(jboolean)forPrimitive {
  ComFasterxmlJacksonDatabindSerStdBooleanSerializer_initWithBoolean_(self, forPrimitive);
  return self;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)createContextualWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)serializers
                                                                     withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property {
  ComFasterxmlJacksonAnnotationJsonFormat_Value *format = [self findFormatOverridesWithComFasterxmlJacksonDatabindSerializerProvider:serializers withComFasterxmlJacksonDatabindBeanProperty:property withIOSClass:JavaLangBoolean_class_()];
  if (format != nil) {
    ComFasterxmlJacksonAnnotationJsonFormat_Shape *shape = [format getShape];
    if ([((ComFasterxmlJacksonAnnotationJsonFormat_Shape *) nil_chk(shape)) isNumeric]) {
      return create_ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber_initWithBoolean_(_forPrimitive_);
    }
  }
  return self;
}

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeBooleanWithBoolean:[((JavaLangBoolean *) nil_chk(JreLoadStatic(JavaLangBoolean, TRUE))) isEqual:value]];
}

- (void)serializeWithTypeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer {
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeBooleanWithBoolean:[((JavaLangBoolean *) nil_chk(JreLoadStatic(JavaLangBoolean, TRUE))) isEqual:value]];
}

- (ComFasterxmlJacksonDatabindJsonNode *)getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                            withJavaLangReflectType:(id<JavaLangReflectType>)typeHint {
  return [self createSchemaNodeWithNSString:@"boolean" withBoolean:!_forPrimitive_];
}

- (void)acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint {
  [((id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>) nil_chk(visitor)) expectBooleanFormatWithComFasterxmlJacksonDatabindJavaType:typeHint];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 1, 2, 3, 4, -1, -1 },
    { NULL, "V", 0x1, 5, 6, 7, -1, -1, -1 },
    { NULL, "V", 0x11, 8, 9, 7, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x1, 10, 11, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 12, 13, 3, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithBoolean:);
  methods[1].selector = @selector(createContextualWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindBeanProperty:);
  methods[2].selector = @selector(serializeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  methods[3].selector = @selector(serializeWithTypeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindJsontypeTypeSerializer:);
  methods[4].selector = @selector(getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:withJavaLangReflectType:);
  methods[5].selector = @selector(acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:withComFasterxmlJacksonDatabindJavaType:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindSerStdBooleanSerializer_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "_forPrimitive_", "Z", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "Z", "createContextual", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindBeanProperty;", "LComFasterxmlJacksonDatabindJsonMappingException;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonSerializer<*>;", "serialize", "LNSObject;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;", "LJavaIoIOException;", "serializeWithType", "LNSObject;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindJsontypeTypeSerializer;", "getSchema", "LComFasterxmlJacksonDatabindSerializerProvider;LJavaLangReflectType;", "acceptJsonFormatVisitor", "LComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;LComFasterxmlJacksonDatabindJavaType;", "LComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber;", "Lcom/fasterxml/jackson/databind/ser/std/StdScalarSerializer<Ljava/lang/Object;>;Lcom/fasterxml/jackson/databind/ser/ContextualSerializer;", (void *)&ComFasterxmlJacksonDatabindSerStdBooleanSerializer__Annotations$0 };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerStdBooleanSerializer = { "BooleanSerializer", "com.fasterxml.jackson.databind.ser.std", ptrTable, methods, fields, 7, 0x11, 6, 2, -1, 14, -1, 15, 16 };
  return &_ComFasterxmlJacksonDatabindSerStdBooleanSerializer;
}

@end

void ComFasterxmlJacksonDatabindSerStdBooleanSerializer_initWithBoolean_(ComFasterxmlJacksonDatabindSerStdBooleanSerializer *self, jboolean forPrimitive) {
  ComFasterxmlJacksonDatabindSerStdStdScalarSerializer_initWithIOSClass_withBoolean_(self, forPrimitive ? JreLoadStatic(JavaLangBoolean, TYPE) : JavaLangBoolean_class_(), false);
  self->_forPrimitive_ = forPrimitive;
}

ComFasterxmlJacksonDatabindSerStdBooleanSerializer *new_ComFasterxmlJacksonDatabindSerStdBooleanSerializer_initWithBoolean_(jboolean forPrimitive) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerStdBooleanSerializer, initWithBoolean_, forPrimitive)
}

ComFasterxmlJacksonDatabindSerStdBooleanSerializer *create_ComFasterxmlJacksonDatabindSerStdBooleanSerializer_initWithBoolean_(jboolean forPrimitive) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerStdBooleanSerializer, initWithBoolean_, forPrimitive)
}

IOSObjectArray *ComFasterxmlJacksonDatabindSerStdBooleanSerializer__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_ComFasterxmlJacksonDatabindAnnotationJacksonStdImpl() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerStdBooleanSerializer)

@implementation ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber

- (instancetype __nonnull)initWithBoolean:(jboolean)forPrimitive {
  ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber_initWithBoolean_(self, forPrimitive);
  return self;
}

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeNumberWithInt:([((JavaLangBoolean *) nil_chk(JreLoadStatic(JavaLangBoolean, FALSE))) isEqual:value]) ? 0 : 1];
}

- (void)serializeWithTypeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer {
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeBooleanWithBoolean:[((JavaLangBoolean *) nil_chk(JreLoadStatic(JavaLangBoolean, TRUE))) isEqual:value]];
}

- (void)acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint {
  [self visitIntFormatWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:visitor withComFasterxmlJacksonDatabindJavaType:typeHint withComFasterxmlJacksonCoreJsonParser_NumberType:JreLoadEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, INT)];
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)createContextualWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)serializers
                                                                     withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property {
  ComFasterxmlJacksonAnnotationJsonFormat_Value *format = [self findFormatOverridesWithComFasterxmlJacksonDatabindSerializerProvider:serializers withComFasterxmlJacksonDatabindBeanProperty:property withIOSClass:JavaLangBoolean_class_()];
  if (format != nil) {
    ComFasterxmlJacksonAnnotationJsonFormat_Shape *shape = [format getShape];
    if (![((ComFasterxmlJacksonAnnotationJsonFormat_Shape *) nil_chk(shape)) isNumeric]) {
      return create_ComFasterxmlJacksonDatabindSerStdBooleanSerializer_initWithBoolean_(_forPrimitive_);
    }
  }
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x11, 4, 5, 3, -1, -1, -1 },
    { NULL, "V", 0x1, 6, 7, 8, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 9, 10, 8, 11, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithBoolean:);
  methods[1].selector = @selector(serializeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  methods[2].selector = @selector(serializeWithTypeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindJsontypeTypeSerializer:);
  methods[3].selector = @selector(acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:withComFasterxmlJacksonDatabindJavaType:);
  methods[4].selector = @selector(createContextualWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindBeanProperty:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "_forPrimitive_", "Z", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "Z", "serialize", "LNSObject;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;", "LJavaIoIOException;", "serializeWithType", "LNSObject;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindJsontypeTypeSerializer;", "acceptJsonFormatVisitor", "LComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;LComFasterxmlJacksonDatabindJavaType;", "LComFasterxmlJacksonDatabindJsonMappingException;", "createContextual", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindBeanProperty;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonSerializer<*>;", "LComFasterxmlJacksonDatabindSerStdBooleanSerializer;", "Lcom/fasterxml/jackson/databind/ser/std/StdScalarSerializer<Ljava/lang/Object;>;Lcom/fasterxml/jackson/databind/ser/ContextualSerializer;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber = { "AsNumber", "com.fasterxml.jackson.databind.ser.std", ptrTable, methods, fields, 7, 0x18, 5, 2, 12, -1, -1, 13, -1 };
  return &_ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber;
}

@end

void ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber_initWithBoolean_(ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber *self, jboolean forPrimitive) {
  ComFasterxmlJacksonDatabindSerStdStdScalarSerializer_initWithIOSClass_withBoolean_(self, forPrimitive ? JreLoadStatic(JavaLangBoolean, TYPE) : JavaLangBoolean_class_(), false);
  self->_forPrimitive_ = forPrimitive;
}

ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber *new_ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber_initWithBoolean_(jboolean forPrimitive) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber, initWithBoolean_, forPrimitive)
}

ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber *create_ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber_initWithBoolean_(jboolean forPrimitive) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber, initWithBoolean_, forPrimitive)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerStdBooleanSerializer_AsNumber)
