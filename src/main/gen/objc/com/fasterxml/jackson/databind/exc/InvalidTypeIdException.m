//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/exc/InvalidTypeIdException.java
//

#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonParser.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/exc/InvalidTypeIdException.h"
#include "com/fasterxml/jackson/databind/exc/MismatchedInputException.h"

inline jlong ComFasterxmlJacksonDatabindExcInvalidTypeIdException_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindExcInvalidTypeIdException_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindExcInvalidTypeIdException, serialVersionUID, jlong)

@implementation ComFasterxmlJacksonDatabindExcInvalidTypeIdException

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                                                       withNSString:(NSString *)msg
                            withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)baseType
                                                       withNSString:(NSString *)typeId {
  ComFasterxmlJacksonDatabindExcInvalidTypeIdException_initWithComFasterxmlJacksonCoreJsonParser_withNSString_withComFasterxmlJacksonDatabindJavaType_withNSString_(self, p, msg, baseType, typeId);
  return self;
}

+ (ComFasterxmlJacksonDatabindExcInvalidTypeIdException *)fromWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                                                                                       withNSString:(NSString *)msg
                                                            withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)baseType
                                                                                       withNSString:(NSString *)typeId {
  return ComFasterxmlJacksonDatabindExcInvalidTypeIdException_fromWithComFasterxmlJacksonCoreJsonParser_withNSString_withComFasterxmlJacksonDatabindJavaType_withNSString_(p, msg, baseType, typeId);
}

- (ComFasterxmlJacksonDatabindJavaType *)getBaseType {
  return _baseType_;
}

- (NSString *)getTypeId {
  return _typeId_;
}

- (void)dealloc {
  RELEASE_(_baseType_);
  RELEASE_(_typeId_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindExcInvalidTypeIdException;", 0x9, 1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonCoreJsonParser:withNSString:withComFasterxmlJacksonDatabindJavaType:withNSString:);
  methods[1].selector = @selector(fromWithComFasterxmlJacksonCoreJsonParser:withNSString:withComFasterxmlJacksonDatabindJavaType:withNSString:);
  methods[2].selector = @selector(getBaseType);
  methods[3].selector = @selector(getTypeId);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindExcInvalidTypeIdException_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "_baseType_", "LComFasterxmlJacksonDatabindJavaType;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_typeId_", "LNSString;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonCoreJsonParser;LNSString;LComFasterxmlJacksonDatabindJavaType;LNSString;", "from" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindExcInvalidTypeIdException = { "InvalidTypeIdException", "com.fasterxml.jackson.databind.exc", ptrTable, methods, fields, 7, 0x1, 4, 3, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindExcInvalidTypeIdException;
}

@end

void ComFasterxmlJacksonDatabindExcInvalidTypeIdException_initWithComFasterxmlJacksonCoreJsonParser_withNSString_withComFasterxmlJacksonDatabindJavaType_withNSString_(ComFasterxmlJacksonDatabindExcInvalidTypeIdException *self, ComFasterxmlJacksonCoreJsonParser *p, NSString *msg, ComFasterxmlJacksonDatabindJavaType *baseType, NSString *typeId) {
  ComFasterxmlJacksonDatabindExcMismatchedInputException_initWithComFasterxmlJacksonCoreJsonParser_withNSString_(self, p, msg);
  JreStrongAssign(&self->_baseType_, baseType);
  JreStrongAssign(&self->_typeId_, typeId);
}

ComFasterxmlJacksonDatabindExcInvalidTypeIdException *new_ComFasterxmlJacksonDatabindExcInvalidTypeIdException_initWithComFasterxmlJacksonCoreJsonParser_withNSString_withComFasterxmlJacksonDatabindJavaType_withNSString_(ComFasterxmlJacksonCoreJsonParser *p, NSString *msg, ComFasterxmlJacksonDatabindJavaType *baseType, NSString *typeId) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindExcInvalidTypeIdException, initWithComFasterxmlJacksonCoreJsonParser_withNSString_withComFasterxmlJacksonDatabindJavaType_withNSString_, p, msg, baseType, typeId)
}

ComFasterxmlJacksonDatabindExcInvalidTypeIdException *create_ComFasterxmlJacksonDatabindExcInvalidTypeIdException_initWithComFasterxmlJacksonCoreJsonParser_withNSString_withComFasterxmlJacksonDatabindJavaType_withNSString_(ComFasterxmlJacksonCoreJsonParser *p, NSString *msg, ComFasterxmlJacksonDatabindJavaType *baseType, NSString *typeId) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindExcInvalidTypeIdException, initWithComFasterxmlJacksonCoreJsonParser_withNSString_withComFasterxmlJacksonDatabindJavaType_withNSString_, p, msg, baseType, typeId)
}

ComFasterxmlJacksonDatabindExcInvalidTypeIdException *ComFasterxmlJacksonDatabindExcInvalidTypeIdException_fromWithComFasterxmlJacksonCoreJsonParser_withNSString_withComFasterxmlJacksonDatabindJavaType_withNSString_(ComFasterxmlJacksonCoreJsonParser *p, NSString *msg, ComFasterxmlJacksonDatabindJavaType *baseType, NSString *typeId) {
  ComFasterxmlJacksonDatabindExcInvalidTypeIdException_initialize();
  return create_ComFasterxmlJacksonDatabindExcInvalidTypeIdException_initWithComFasterxmlJacksonCoreJsonParser_withNSString_withComFasterxmlJacksonDatabindJavaType_withNSString_(p, msg, baseType, typeId);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindExcInvalidTypeIdException)
