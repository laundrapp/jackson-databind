//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/TypeDeserializerBase.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase || defined(INCLUDE_ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase))
#define ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase_

#define RESTRICT_ComFasterxmlJacksonDatabindJsontypeTypeDeserializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindJsontypeTypeDeserializer 1
#include "com/fasterxml/jackson/databind/jsontype/TypeDeserializer.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class ComFasterxmlJacksonAnnotationJsonTypeInfo_As;
@class ComFasterxmlJacksonCoreJsonParser;
@class ComFasterxmlJacksonDatabindDeserializationContext;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsonDeserializer;
@class IOSClass;
@protocol ComFasterxmlJacksonDatabindBeanProperty;
@protocol ComFasterxmlJacksonDatabindJsontypeTypeIdResolver;
@protocol JavaUtilMap;

/*!
 @brief Base class for all standard Jackson <code>TypeDeserializer</code>s.
 */
@interface ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase : ComFasterxmlJacksonDatabindJsontypeTypeDeserializer < JavaIoSerializable > {
 @public
  id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver> _idResolver_;
  ComFasterxmlJacksonDatabindJavaType *_baseType_;
  /*!
   @brief Property that contains value for which type information
  is included; null if value is a root value.
   Note that this value is not assigned during construction
  but only when <code>forProperty</code> is called to create
  a copy.
   */
  id<ComFasterxmlJacksonDatabindBeanProperty> _property_;
  /*!
   @brief Type to use as the default implementation, if type id is
  missing or cannot be resolved.
   */
  ComFasterxmlJacksonDatabindJavaType *_defaultImpl_;
  /*!
   @brief Name of type property used; needed for non-property versions too,
  in cases where type id is to be exposed as part of JSON.
   */
  NSString *_typePropertyName_;
  jboolean _typeIdVisible_;
  /*!
   @brief For efficient operation we will lazily build mappings from type ids
  to actual deserializers, once needed.
   */
  id<JavaUtilMap> _deserializers_;
  ComFasterxmlJacksonDatabindJsonDeserializer *_defaultImplDeserializer_;
}

#pragma mark Public

/*!
 @since 2.9
 */
- (ComFasterxmlJacksonDatabindJavaType *)baseType;

- (NSString *)baseTypeName;

- (ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *)forPropertyWithComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)prop;

- (IOSClass *)getDefaultImpl;

- (NSString *)getPropertyName;

- (id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver>)getTypeIdResolver;

- (ComFasterxmlJacksonAnnotationJsonTypeInfo_As *)getTypeInclusion;

- (NSString *)description;

#pragma mark Protected

/*!
 @since 2.8
 */
- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)baseType
                withComFasterxmlJacksonDatabindJsontypeTypeIdResolver:(id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver>)idRes
                                                         withNSString:(NSString *)typePropertyName
                                                          withBoolean:(jboolean)typeIdVisible
                              withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)defaultImpl;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase:(ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase *)src
                                                  withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property;

/*!
 @brief Helper method called when <code>JsonParser</code> indicates that it can use
  so-called native type ids.Assumption from there is that only native
  type ids are to be used.
 @since 2.3
 */
- (id)_deserializeWithNativeTypeIdWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)jp
                  withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt;

/*!
 @brief Helper method called when <code>JsonParser</code> indicates that it can use
  so-called native type ids, and such type id has been found.
 @since 2.4
 */
- (id)_deserializeWithNativeTypeIdWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)jp
                  withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                 withId:(id)typeId;

- (ComFasterxmlJacksonDatabindJsonDeserializer *)_findDefaultImplDeserializerWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt;

- (ComFasterxmlJacksonDatabindJsonDeserializer *)_findDeserializerWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                                                           withNSString:(NSString *)typeId;

/*!
 @since 2.9
 */
- (ComFasterxmlJacksonDatabindJavaType *)_handleMissingTypeIdWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                                                      withNSString:(NSString *)extraDesc;

/*!
 @brief Helper method called when given type id cannot be resolved into 
  concrete deserializer either directly (using given <code>TypeIdResolver</code>),
  or using default type.
 Default implementation simply throws a <code>com.fasterxml.jackson.databind.JsonMappingException</code> to
  indicate the problem; sub-classes may choose
 @return If it is possible to resolve type id into a <code>JsonDeserializer</code>
    should return that deserializer; otherwise throw an exception to indicate
    the problem.
 @since 2.8
 */
- (ComFasterxmlJacksonDatabindJavaType *)_handleUnknownTypeIdWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                                                      withNSString:(NSString *)typeId;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase, _idResolver_, id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver>)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase, _baseType_, ComFasterxmlJacksonDatabindJavaType *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase, _property_, id<ComFasterxmlJacksonDatabindBeanProperty>)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase, _defaultImpl_, ComFasterxmlJacksonDatabindJavaType *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase, _typePropertyName_, NSString *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase, _deserializers_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase, _defaultImplDeserializer_, ComFasterxmlJacksonDatabindJsonDeserializer *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withNSString_withBoolean_withComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase *self, ComFasterxmlJacksonDatabindJavaType *baseType, id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver> idRes, NSString *typePropertyName, jboolean typeIdVisible, ComFasterxmlJacksonDatabindJavaType *defaultImpl);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase_initWithComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase_withComFasterxmlJacksonDatabindBeanProperty_(ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase *self, ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase *src, id<ComFasterxmlJacksonDatabindBeanProperty> property);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase")
