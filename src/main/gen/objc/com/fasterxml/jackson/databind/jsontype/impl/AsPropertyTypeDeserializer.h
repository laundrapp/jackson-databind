//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeDeserializer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer || defined(INCLUDE_ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer))
#define ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer_

#define RESTRICT_ComFasterxmlJacksonDatabindJsontypeImplAsArrayTypeDeserializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindJsontypeImplAsArrayTypeDeserializer 1
#include "com/fasterxml/jackson/databind/jsontype/impl/AsArrayTypeDeserializer.h"

@class ComFasterxmlJacksonAnnotationJsonTypeInfo_As;
@class ComFasterxmlJacksonCoreJsonParser;
@class ComFasterxmlJacksonDatabindDeserializationContext;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsontypeTypeDeserializer;
@class ComFasterxmlJacksonDatabindUtilTokenBuffer;
@protocol ComFasterxmlJacksonDatabindBeanProperty;
@protocol ComFasterxmlJacksonDatabindJsontypeTypeIdResolver;

/*!
 @brief Type deserializer used with <code>As.PROPERTY</code>
  inclusion mechanism.
 Uses regular form (additional key/value entry before actual data)
  when typed object is expressed as JSON Object; otherwise behaves similar to how 
 <code>As.WRAPPER_ARRAY</code> works.
  Latter is used if JSON representation is polymorphic
 */
@interface ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer : ComFasterxmlJacksonDatabindJsontypeImplAsArrayTypeDeserializer {
 @public
  ComFasterxmlJacksonAnnotationJsonTypeInfo_As *_inclusion_;
}

#pragma mark Public

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer:(ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer *)src
                                                        withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property;

/*!
 @since 2.8
 */
- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)bt
                withComFasterxmlJacksonDatabindJsontypeTypeIdResolver:(id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver>)idRes
                                                         withNSString:(NSString *)typePropertyName
                                                          withBoolean:(jboolean)typeIdVisible
                              withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)defaultImpl;

/*!
 @since 2.8
 */
- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)bt
                withComFasterxmlJacksonDatabindJsontypeTypeIdResolver:(id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver>)idRes
                                                         withNSString:(NSString *)typePropertyName
                                                          withBoolean:(jboolean)typeIdVisible
                              withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)defaultImpl
                     withComFasterxmlJacksonAnnotationJsonTypeInfo_As:(ComFasterxmlJacksonAnnotationJsonTypeInfo_As *)inclusion;

- (id)deserializeTypedFromAnyWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
             withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt;

/*!
 @brief This is the trickiest thing to handle, since property we are looking
  for may be anywhere...
 */
- (id)deserializeTypedFromObjectWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt;

- (ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *)forPropertyWithComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)prop;

- (ComFasterxmlJacksonAnnotationJsonTypeInfo_As *)getTypeInclusion;

#pragma mark Protected

- (id)_deserializeTypedForIdWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
            withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                   withComFasterxmlJacksonDatabindUtilTokenBuffer:(ComFasterxmlJacksonDatabindUtilTokenBuffer *)tb;

- (id)_deserializeTypedUsingDefaultImplWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                       withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                              withComFasterxmlJacksonDatabindUtilTokenBuffer:(ComFasterxmlJacksonDatabindUtilTokenBuffer *)tb;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJsontypeImplAsArrayTypeDeserializer:(ComFasterxmlJacksonDatabindJsontypeImplAsArrayTypeDeserializer *)arg0
                                                     withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer, _inclusion_, ComFasterxmlJacksonAnnotationJsonTypeInfo_As *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withNSString_withBoolean_withComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer *self, ComFasterxmlJacksonDatabindJavaType *bt, id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver> idRes, NSString *typePropertyName, jboolean typeIdVisible, ComFasterxmlJacksonDatabindJavaType *defaultImpl);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer *new_ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withNSString_withBoolean_withComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindJavaType *bt, id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver> idRes, NSString *typePropertyName, jboolean typeIdVisible, ComFasterxmlJacksonDatabindJavaType *defaultImpl) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer *create_ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withNSString_withBoolean_withComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindJavaType *bt, id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver> idRes, NSString *typePropertyName, jboolean typeIdVisible, ComFasterxmlJacksonDatabindJavaType *defaultImpl);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withNSString_withBoolean_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonAnnotationJsonTypeInfo_As_(ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer *self, ComFasterxmlJacksonDatabindJavaType *bt, id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver> idRes, NSString *typePropertyName, jboolean typeIdVisible, ComFasterxmlJacksonDatabindJavaType *defaultImpl, ComFasterxmlJacksonAnnotationJsonTypeInfo_As *inclusion);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer *new_ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withNSString_withBoolean_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonAnnotationJsonTypeInfo_As_(ComFasterxmlJacksonDatabindJavaType *bt, id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver> idRes, NSString *typePropertyName, jboolean typeIdVisible, ComFasterxmlJacksonDatabindJavaType *defaultImpl, ComFasterxmlJacksonAnnotationJsonTypeInfo_As *inclusion) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer *create_ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withNSString_withBoolean_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonAnnotationJsonTypeInfo_As_(ComFasterxmlJacksonDatabindJavaType *bt, id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver> idRes, NSString *typePropertyName, jboolean typeIdVisible, ComFasterxmlJacksonDatabindJavaType *defaultImpl, ComFasterxmlJacksonAnnotationJsonTypeInfo_As *inclusion);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer_initWithComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer_withComFasterxmlJacksonDatabindBeanProperty_(ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer *self, ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer *src, id<ComFasterxmlJacksonDatabindBeanProperty> property);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer *new_ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer_initWithComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer_withComFasterxmlJacksonDatabindBeanProperty_(ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer *src, id<ComFasterxmlJacksonDatabindBeanProperty> property) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer *create_ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer_initWithComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer_withComFasterxmlJacksonDatabindBeanProperty_(ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer *src, id<ComFasterxmlJacksonDatabindBeanProperty> property);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeDeserializer")
