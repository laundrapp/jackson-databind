//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/RuntimeJsonMappingException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindRuntimeJsonMappingException")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindRuntimeJsonMappingException
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindRuntimeJsonMappingException 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindRuntimeJsonMappingException 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindRuntimeJsonMappingException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindRuntimeJsonMappingException_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindRuntimeJsonMappingException || defined(INCLUDE_ComFasterxmlJacksonDatabindRuntimeJsonMappingException))
#define ComFasterxmlJacksonDatabindRuntimeJsonMappingException_

#define RESTRICT_JavaLangRuntimeException 1
#define INCLUDE_JavaLangRuntimeException 1
#include "java/lang/RuntimeException.h"

@class ComFasterxmlJacksonDatabindJsonMappingException;
@class JavaLangThrowable;

/*!
 @brief Wrapper used when interface does not allow throwing a checked 
 <code>JsonMappingException</code>
 */
@interface ComFasterxmlJacksonDatabindRuntimeJsonMappingException : JavaLangRuntimeException

#pragma mark Public

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJsonMappingException:(ComFasterxmlJacksonDatabindJsonMappingException *)cause;

- (instancetype __nonnull)initWithNSString:(NSString *)message;

- (instancetype __nonnull)initWithNSString:(NSString *)message
withComFasterxmlJacksonDatabindJsonMappingException:(ComFasterxmlJacksonDatabindJsonMappingException *)cause;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

- (instancetype __nonnull)initWithJavaLangThrowable:(JavaLangThrowable *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithNSString:(NSString *)arg0
                     withJavaLangThrowable:(JavaLangThrowable *)arg1
                               withBoolean:(jboolean)arg2
                               withBoolean:(jboolean)arg3 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindRuntimeJsonMappingException)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindRuntimeJsonMappingException_initWithComFasterxmlJacksonDatabindJsonMappingException_(ComFasterxmlJacksonDatabindRuntimeJsonMappingException *self, ComFasterxmlJacksonDatabindJsonMappingException *cause);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindRuntimeJsonMappingException *new_ComFasterxmlJacksonDatabindRuntimeJsonMappingException_initWithComFasterxmlJacksonDatabindJsonMappingException_(ComFasterxmlJacksonDatabindJsonMappingException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindRuntimeJsonMappingException *create_ComFasterxmlJacksonDatabindRuntimeJsonMappingException_initWithComFasterxmlJacksonDatabindJsonMappingException_(ComFasterxmlJacksonDatabindJsonMappingException *cause);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindRuntimeJsonMappingException_initWithNSString_(ComFasterxmlJacksonDatabindRuntimeJsonMappingException *self, NSString *message);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindRuntimeJsonMappingException *new_ComFasterxmlJacksonDatabindRuntimeJsonMappingException_initWithNSString_(NSString *message) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindRuntimeJsonMappingException *create_ComFasterxmlJacksonDatabindRuntimeJsonMappingException_initWithNSString_(NSString *message);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindRuntimeJsonMappingException_initWithNSString_withComFasterxmlJacksonDatabindJsonMappingException_(ComFasterxmlJacksonDatabindRuntimeJsonMappingException *self, NSString *message, ComFasterxmlJacksonDatabindJsonMappingException *cause);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindRuntimeJsonMappingException *new_ComFasterxmlJacksonDatabindRuntimeJsonMappingException_initWithNSString_withComFasterxmlJacksonDatabindJsonMappingException_(NSString *message, ComFasterxmlJacksonDatabindJsonMappingException *cause) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindRuntimeJsonMappingException *create_ComFasterxmlJacksonDatabindRuntimeJsonMappingException_initWithNSString_withComFasterxmlJacksonDatabindJsonMappingException_(NSString *message, ComFasterxmlJacksonDatabindJsonMappingException *cause);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindRuntimeJsonMappingException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindRuntimeJsonMappingException")
