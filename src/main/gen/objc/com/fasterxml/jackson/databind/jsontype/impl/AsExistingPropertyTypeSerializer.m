//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsExistingPropertyTypeSerializer.java
//

#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/annotation/JsonTypeInfo.h"
#include "com/fasterxml/jackson/databind/BeanProperty.h"
#include "com/fasterxml/jackson/databind/jsontype/TypeIdResolver.h"
#include "com/fasterxml/jackson/databind/jsontype/impl/AsExistingPropertyTypeSerializer.h"
#include "com/fasterxml/jackson/databind/jsontype/impl/AsPropertyTypeSerializer.h"

@implementation ComFasterxmlJacksonDatabindJsontypeImplAsExistingPropertyTypeSerializer

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver:(id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver>)idRes
                                        withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property
                                                                       withNSString:(NSString *)propName {
  ComFasterxmlJacksonDatabindJsontypeImplAsExistingPropertyTypeSerializer_initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withComFasterxmlJacksonDatabindBeanProperty_withNSString_(self, idRes, property, propName);
  return self;
}

- (ComFasterxmlJacksonDatabindJsontypeImplAsExistingPropertyTypeSerializer *)forPropertyWithComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)prop {
  return (_property_ == prop) ? self : create_ComFasterxmlJacksonDatabindJsontypeImplAsExistingPropertyTypeSerializer_initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withComFasterxmlJacksonDatabindBeanProperty_withNSString_(_idResolver_, prop, _typePropertyName_);
}

- (ComFasterxmlJacksonAnnotationJsonTypeInfo_As *)getTypeInclusion {
  return JreLoadEnum(ComFasterxmlJacksonAnnotationJsonTypeInfo_As, EXISTING_PROPERTY);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsontypeImplAsExistingPropertyTypeSerializer;", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonTypeInfo_As;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver:withComFasterxmlJacksonDatabindBeanProperty:withNSString:);
  methods[1].selector = @selector(forPropertyWithComFasterxmlJacksonDatabindBeanProperty:);
  methods[2].selector = @selector(getTypeInclusion);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindJsontypeTypeIdResolver;LComFasterxmlJacksonDatabindBeanProperty;LNSString;", "forProperty", "LComFasterxmlJacksonDatabindBeanProperty;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindJsontypeImplAsExistingPropertyTypeSerializer = { "AsExistingPropertyTypeSerializer", "com.fasterxml.jackson.databind.jsontype.impl", ptrTable, methods, NULL, 7, 0x1, 3, 0, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindJsontypeImplAsExistingPropertyTypeSerializer;
}

@end

void ComFasterxmlJacksonDatabindJsontypeImplAsExistingPropertyTypeSerializer_initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withComFasterxmlJacksonDatabindBeanProperty_withNSString_(ComFasterxmlJacksonDatabindJsontypeImplAsExistingPropertyTypeSerializer *self, id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver> idRes, id<ComFasterxmlJacksonDatabindBeanProperty> property, NSString *propName) {
  ComFasterxmlJacksonDatabindJsontypeImplAsPropertyTypeSerializer_initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withComFasterxmlJacksonDatabindBeanProperty_withNSString_(self, idRes, property, propName);
}

ComFasterxmlJacksonDatabindJsontypeImplAsExistingPropertyTypeSerializer *new_ComFasterxmlJacksonDatabindJsontypeImplAsExistingPropertyTypeSerializer_initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withComFasterxmlJacksonDatabindBeanProperty_withNSString_(id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver> idRes, id<ComFasterxmlJacksonDatabindBeanProperty> property, NSString *propName) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindJsontypeImplAsExistingPropertyTypeSerializer, initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withComFasterxmlJacksonDatabindBeanProperty_withNSString_, idRes, property, propName)
}

ComFasterxmlJacksonDatabindJsontypeImplAsExistingPropertyTypeSerializer *create_ComFasterxmlJacksonDatabindJsontypeImplAsExistingPropertyTypeSerializer_initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withComFasterxmlJacksonDatabindBeanProperty_withNSString_(id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver> idRes, id<ComFasterxmlJacksonDatabindBeanProperty> property, NSString *propName) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindJsontypeImplAsExistingPropertyTypeSerializer, initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withComFasterxmlJacksonDatabindBeanProperty_withNSString_, idRes, property, propName)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindJsontypeImplAsExistingPropertyTypeSerializer)
