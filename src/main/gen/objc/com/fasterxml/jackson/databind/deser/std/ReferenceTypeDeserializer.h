//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/deser/std/ReferenceTypeDeserializer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserStdReferenceTypeDeserializer")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindDeserStdReferenceTypeDeserializer
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserStdReferenceTypeDeserializer 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserStdReferenceTypeDeserializer 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindDeserStdReferenceTypeDeserializer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindDeserStdReferenceTypeDeserializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserStdReferenceTypeDeserializer || defined(INCLUDE_ComFasterxmlJacksonDatabindDeserStdReferenceTypeDeserializer))
#define ComFasterxmlJacksonDatabindDeserStdReferenceTypeDeserializer_

#define RESTRICT_ComFasterxmlJacksonDatabindDeserStdStdDeserializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindDeserStdStdDeserializer 1
#include "com/fasterxml/jackson/databind/deser/std/StdDeserializer.h"

#define RESTRICT_ComFasterxmlJacksonDatabindDeserContextualDeserializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindDeserContextualDeserializer 1
#include "com/fasterxml/jackson/databind/deser/ContextualDeserializer.h"

@class ComFasterxmlJacksonCoreJsonParser;
@class ComFasterxmlJacksonDatabindDeserValueInstantiator;
@class ComFasterxmlJacksonDatabindDeserializationConfig;
@class ComFasterxmlJacksonDatabindDeserializationContext;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsonDeserializer;
@class ComFasterxmlJacksonDatabindJsontypeTypeDeserializer;
@class ComFasterxmlJacksonDatabindUtilAccessPattern;
@class JavaLangBoolean;
@protocol ComFasterxmlJacksonDatabindBeanProperty;

/*!
 @brief Base deserializer implementation for properties <code>ReferenceType</code> values.
 Implements most of functionality, only leaving couple of abstract
  methods for sub-classes to implement
 @since 2.8
 */
@interface ComFasterxmlJacksonDatabindDeserStdReferenceTypeDeserializer : ComFasterxmlJacksonDatabindDeserStdStdDeserializer < ComFasterxmlJacksonDatabindDeserContextualDeserializer > {
 @public
  /*!
   @brief Full type of property (or root value) for which this deserializer
  has been constructed and contextualized.
   */
  ComFasterxmlJacksonDatabindJavaType *_fullType_;
  ComFasterxmlJacksonDatabindDeserValueInstantiator *_valueInstantiator_;
  ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *_valueTypeDeserializer_;
  ComFasterxmlJacksonDatabindJsonDeserializer *_valueDeserializer_;
}

#pragma mark Public

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)fullType
              withComFasterxmlJacksonDatabindJsontypeTypeDeserializer:(ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *)typeDeser
                      withComFasterxmlJacksonDatabindJsonDeserializer:(ComFasterxmlJacksonDatabindJsonDeserializer *)deser;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)fullType
                withComFasterxmlJacksonDatabindDeserValueInstantiator:(ComFasterxmlJacksonDatabindDeserValueInstantiator *)vi
              withComFasterxmlJacksonDatabindJsontypeTypeDeserializer:(ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *)typeDeser
                      withComFasterxmlJacksonDatabindJsonDeserializer:(ComFasterxmlJacksonDatabindJsonDeserializer *)deser;

- (ComFasterxmlJacksonDatabindJsonDeserializer *)createContextualWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                           withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property;

- (id)deserializeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
 withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt;

- (id)deserializeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
 withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                withId:(id)reference;

- (id)deserializeWithTypeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
         withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
       withComFasterxmlJacksonDatabindJsontypeTypeDeserializer:(ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *)typeDeserializer;

- (ComFasterxmlJacksonDatabindUtilAccessPattern *)getEmptyAccessPattern;

- (id)getEmptyValueWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt;

/*!
 @brief Null value varies dynamically (unlike with scalar types),
  so let's indicate this.
 */
- (ComFasterxmlJacksonDatabindUtilAccessPattern *)getNullAccessPattern;

- (id)getNullValueWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt;

/*!
 @brief Method that may be called to find contents of specified reference,
  if any; or `null` if none.Note that method should never fail, so
  for types that use concept of "absence" vs "presence", `null` is
  to be returned for both "absent" and "reference to `null`" cases.
 @since 2.9
 */
- (id)getReferencedWithId:(id)reference;

- (ComFasterxmlJacksonDatabindJavaType *)getValueType;

- (id)referenceValueWithId:(id)contents;

/*!
 @brief By default we assume that updateability mostly relies on value
  deserializer; if it supports updates, typically that's what
  matters.So let's just delegate.
 */
- (JavaLangBoolean *)supportsUpdateWithComFasterxmlJacksonDatabindDeserializationConfig:(ComFasterxmlJacksonDatabindDeserializationConfig *)config;

/*!
 @brief Method called in case of "merging update", in which we should try
  update reference instead of creating a new one.If this does not
  succeed, should just create a new instance.
 @since 2.9
 */
- (id)updateReferenceWithId:(id)reference
                     withId:(id)contents;

#pragma mark Protected

/*!
 @brief Mutant factory method called when changes are needed; should construct
  newly configured instance with new values as indicated.
 <p>
  NOTE: caller has verified that there are changes, so implementations
  need NOT check if a new instance is needed.
 */
- (ComFasterxmlJacksonDatabindDeserStdReferenceTypeDeserializer *)withResolvedWithComFasterxmlJacksonDatabindJsontypeTypeDeserializer:(ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *)typeDeser
                                                                                      withComFasterxmlJacksonDatabindJsonDeserializer:(ComFasterxmlJacksonDatabindJsonDeserializer *)valueDeser;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindDeserStdReferenceTypeDeserializer)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserStdReferenceTypeDeserializer, _fullType_, ComFasterxmlJacksonDatabindJavaType *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserStdReferenceTypeDeserializer, _valueInstantiator_, ComFasterxmlJacksonDatabindDeserValueInstantiator *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserStdReferenceTypeDeserializer, _valueTypeDeserializer_, ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserStdReferenceTypeDeserializer, _valueDeserializer_, ComFasterxmlJacksonDatabindJsonDeserializer *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindDeserStdReferenceTypeDeserializer_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindDeserValueInstantiator_withComFasterxmlJacksonDatabindJsontypeTypeDeserializer_withComFasterxmlJacksonDatabindJsonDeserializer_(ComFasterxmlJacksonDatabindDeserStdReferenceTypeDeserializer *self, ComFasterxmlJacksonDatabindJavaType *fullType, ComFasterxmlJacksonDatabindDeserValueInstantiator *vi, ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *typeDeser, ComFasterxmlJacksonDatabindJsonDeserializer *deser);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindDeserStdReferenceTypeDeserializer_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJsontypeTypeDeserializer_withComFasterxmlJacksonDatabindJsonDeserializer_(ComFasterxmlJacksonDatabindDeserStdReferenceTypeDeserializer *self, ComFasterxmlJacksonDatabindJavaType *fullType, ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *typeDeser, ComFasterxmlJacksonDatabindJsonDeserializer *deser);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindDeserStdReferenceTypeDeserializer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserStdReferenceTypeDeserializer")
