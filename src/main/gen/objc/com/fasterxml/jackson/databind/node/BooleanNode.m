//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/node/BooleanNode.java
//

#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/core/JsonToken.h"
#include "com/fasterxml/jackson/databind/SerializerProvider.h"
#include "com/fasterxml/jackson/databind/node/BooleanNode.h"
#include "com/fasterxml/jackson/databind/node/JsonNodeType.h"
#include "com/fasterxml/jackson/databind/node/ValueNode.h"

@interface ComFasterxmlJacksonDatabindNodeBooleanNode () {
 @public
  jboolean _value_;
}

@end

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindNodeBooleanNode)

ComFasterxmlJacksonDatabindNodeBooleanNode *ComFasterxmlJacksonDatabindNodeBooleanNode_TRUE;
ComFasterxmlJacksonDatabindNodeBooleanNode *ComFasterxmlJacksonDatabindNodeBooleanNode_FALSE;

@implementation ComFasterxmlJacksonDatabindNodeBooleanNode

- (instancetype __nonnull)initWithBoolean:(jboolean)v {
  ComFasterxmlJacksonDatabindNodeBooleanNode_initWithBoolean_(self, v);
  return self;
}

+ (ComFasterxmlJacksonDatabindNodeBooleanNode *)getTrue {
  return ComFasterxmlJacksonDatabindNodeBooleanNode_getTrue();
}

+ (ComFasterxmlJacksonDatabindNodeBooleanNode *)getFalse {
  return ComFasterxmlJacksonDatabindNodeBooleanNode_getFalse();
}

+ (ComFasterxmlJacksonDatabindNodeBooleanNode *)valueOfWithBoolean:(jboolean)b {
  return ComFasterxmlJacksonDatabindNodeBooleanNode_valueOfWithBoolean_(b);
}

- (ComFasterxmlJacksonDatabindNodeJsonNodeType *)getNodeType {
  return JreLoadEnum(ComFasterxmlJacksonDatabindNodeJsonNodeType, BOOLEAN);
}

- (ComFasterxmlJacksonCoreJsonToken *)asToken {
  return _value_ ? JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_TRUE) : JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_FALSE);
}

- (jboolean)booleanValue {
  return _value_;
}

- (NSString *)asText {
  return _value_ ? @"true" : @"false";
}

- (jboolean)asBoolean {
  return _value_;
}

- (jboolean)asBooleanWithBoolean:(jboolean)defaultValue {
  return _value_;
}

- (jint)asIntWithInt:(jint)defaultValue {
  return _value_ ? 1 : 0;
}

- (jlong)asLongWithLong:(jlong)defaultValue {
  return _value_ ? 1LL : 0LL;
}

- (jdouble)asDoubleWithDouble:(jdouble)defaultValue {
  return _value_ ? 1.0 : 0.0;
}

- (void)serializeWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
        withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeBooleanWithBoolean:_value_];
}

- (NSUInteger)hash {
  return _value_ ? 3 : 1;
}

- (jboolean)isEqual:(id)o {
  if (o == self) return true;
  if (o == nil) return false;
  if (!([o isKindOfClass:[ComFasterxmlJacksonDatabindNodeBooleanNode class]])) {
    return false;
  }
  return _value_ == ((ComFasterxmlJacksonDatabindNodeBooleanNode *) cast_chk(o, [ComFasterxmlJacksonDatabindNodeBooleanNode class]))->_value_;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeBooleanNode;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeBooleanNode;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeBooleanNode;", 0x9, 1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeJsonNodeType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 2, 0, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "J", 0x1, 5, 6, -1, -1, -1, -1 },
    { NULL, "D", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "V", 0x11, 9, 10, 11, -1, -1, -1 },
    { NULL, "I", 0x1, 12, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 13, 14, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithBoolean:);
  methods[1].selector = @selector(getTrue);
  methods[2].selector = @selector(getFalse);
  methods[3].selector = @selector(valueOfWithBoolean:);
  methods[4].selector = @selector(getNodeType);
  methods[5].selector = @selector(asToken);
  methods[6].selector = @selector(booleanValue);
  methods[7].selector = @selector(asText);
  methods[8].selector = @selector(asBoolean);
  methods[9].selector = @selector(asBooleanWithBoolean:);
  methods[10].selector = @selector(asIntWithInt:);
  methods[11].selector = @selector(asLongWithLong:);
  methods[12].selector = @selector(asDoubleWithDouble:);
  methods[13].selector = @selector(serializeWithComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  methods[14].selector = @selector(hash);
  methods[15].selector = @selector(isEqual:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "TRUE", "LComFasterxmlJacksonDatabindNodeBooleanNode;", .constantValue.asLong = 0, 0x19, -1, 15, -1, -1 },
    { "FALSE", "LComFasterxmlJacksonDatabindNodeBooleanNode;", .constantValue.asLong = 0, 0x19, -1, 16, -1, -1 },
    { "_value_", "Z", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "Z", "valueOf", "asBoolean", "asInt", "I", "asLong", "J", "asDouble", "D", "serialize", "LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;", "LJavaIoIOException;", "hashCode", "equals", "LNSObject;", &ComFasterxmlJacksonDatabindNodeBooleanNode_TRUE, &ComFasterxmlJacksonDatabindNodeBooleanNode_FALSE };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindNodeBooleanNode = { "BooleanNode", "com.fasterxml.jackson.databind.node", ptrTable, methods, fields, 7, 0x1, 16, 3, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindNodeBooleanNode;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindNodeBooleanNode class]) {
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindNodeBooleanNode_TRUE, new_ComFasterxmlJacksonDatabindNodeBooleanNode_initWithBoolean_(true));
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindNodeBooleanNode_FALSE, new_ComFasterxmlJacksonDatabindNodeBooleanNode_initWithBoolean_(false));
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindNodeBooleanNode)
  }
}

@end

void ComFasterxmlJacksonDatabindNodeBooleanNode_initWithBoolean_(ComFasterxmlJacksonDatabindNodeBooleanNode *self, jboolean v) {
  ComFasterxmlJacksonDatabindNodeValueNode_init(self);
  self->_value_ = v;
}

ComFasterxmlJacksonDatabindNodeBooleanNode *new_ComFasterxmlJacksonDatabindNodeBooleanNode_initWithBoolean_(jboolean v) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindNodeBooleanNode, initWithBoolean_, v)
}

ComFasterxmlJacksonDatabindNodeBooleanNode *create_ComFasterxmlJacksonDatabindNodeBooleanNode_initWithBoolean_(jboolean v) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindNodeBooleanNode, initWithBoolean_, v)
}

ComFasterxmlJacksonDatabindNodeBooleanNode *ComFasterxmlJacksonDatabindNodeBooleanNode_getTrue() {
  ComFasterxmlJacksonDatabindNodeBooleanNode_initialize();
  return ComFasterxmlJacksonDatabindNodeBooleanNode_TRUE;
}

ComFasterxmlJacksonDatabindNodeBooleanNode *ComFasterxmlJacksonDatabindNodeBooleanNode_getFalse() {
  ComFasterxmlJacksonDatabindNodeBooleanNode_initialize();
  return ComFasterxmlJacksonDatabindNodeBooleanNode_FALSE;
}

ComFasterxmlJacksonDatabindNodeBooleanNode *ComFasterxmlJacksonDatabindNodeBooleanNode_valueOfWithBoolean_(jboolean b) {
  ComFasterxmlJacksonDatabindNodeBooleanNode_initialize();
  return b ? ComFasterxmlJacksonDatabindNodeBooleanNode_TRUE : ComFasterxmlJacksonDatabindNodeBooleanNode_FALSE;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindNodeBooleanNode)
