//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/util/ISO8601DateFormat.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/databind/util/ISO8601DateFormat.h"
#include "com/fasterxml/jackson/databind/util/ISO8601Utils.h"
#include "java/lang/Deprecated.h"
#include "java/lang/StringBuffer.h"
#include "java/lang/annotation/Annotation.h"
#include "java/text/DateFormat.h"
#include "java/text/DecimalFormat.h"
#include "java/text/FieldPosition.h"
#include "java/text/NumberFormat.h"
#include "java/text/ParseException.h"
#include "java/text/ParsePosition.h"
#include "java/util/Calendar.h"
#include "java/util/Date.h"
#include "java/util/GregorianCalendar.h"

inline jlong ComFasterxmlJacksonDatabindUtilISO8601DateFormat_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindUtilISO8601DateFormat_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindUtilISO8601DateFormat, serialVersionUID, jlong)

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindUtilISO8601DateFormat__Annotations$0(void);

@implementation ComFasterxmlJacksonDatabindUtilISO8601DateFormat

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindUtilISO8601DateFormat_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (JavaLangStringBuffer *)formatWithJavaUtilDate:(JavaUtilDate *)date
                        withJavaLangStringBuffer:(JavaLangStringBuffer *)toAppendTo
                       withJavaTextFieldPosition:(JavaTextFieldPosition *)fieldPosition {
  [((JavaLangStringBuffer *) nil_chk(toAppendTo)) appendWithNSString:ComFasterxmlJacksonDatabindUtilISO8601Utils_formatWithJavaUtilDate_(date)];
  return toAppendTo;
}

- (JavaUtilDate *)parseWithNSString:(NSString *)source
          withJavaTextParsePosition:(JavaTextParsePosition *)pos {
  @try {
    return ComFasterxmlJacksonDatabindUtilISO8601Utils_parseWithNSString_withJavaTextParsePosition_(source, pos);
  }
  @catch (JavaTextParseException *e) {
    return nil;
  }
}

- (JavaUtilDate *)parseWithNSString:(NSString *)source {
  return ComFasterxmlJacksonDatabindUtilISO8601Utils_parseWithNSString_withJavaTextParsePosition_(source, create_JavaTextParsePosition_initWithInt_(0));
}

- (id)java_clone {
  return self;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangStringBuffer;", 0x1, 0, 1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "LJavaUtilDate;", 0x1, 2, 4, 5, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 6, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(formatWithJavaUtilDate:withJavaLangStringBuffer:withJavaTextFieldPosition:);
  methods[2].selector = @selector(parseWithNSString:withJavaTextParsePosition:);
  methods[3].selector = @selector(parseWithNSString:);
  methods[4].selector = @selector(java_clone);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindUtilISO8601DateFormat_serialVersionUID, 0x1a, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "format", "LJavaUtilDate;LJavaLangStringBuffer;LJavaTextFieldPosition;", "parse", "LNSString;LJavaTextParsePosition;", "LNSString;", "LJavaTextParseException;", "clone", (void *)&ComFasterxmlJacksonDatabindUtilISO8601DateFormat__Annotations$0 };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindUtilISO8601DateFormat = { "ISO8601DateFormat", "com.fasterxml.jackson.databind.util", ptrTable, methods, fields, 7, 0x1, 5, 1, -1, -1, -1, -1, 7 };
  return &_ComFasterxmlJacksonDatabindUtilISO8601DateFormat;
}

@end

void ComFasterxmlJacksonDatabindUtilISO8601DateFormat_init(ComFasterxmlJacksonDatabindUtilISO8601DateFormat *self) {
  JavaTextDateFormat_init(self);
  JreStrongAssignAndConsume(&self->numberFormat_, new_JavaTextDecimalFormat_init());
  
  ;
  JreStrongAssignAndConsume(&self->calendar_, new_JavaUtilGregorianCalendar_init());
  
  ;
}

ComFasterxmlJacksonDatabindUtilISO8601DateFormat *new_ComFasterxmlJacksonDatabindUtilISO8601DateFormat_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindUtilISO8601DateFormat, init)
}

ComFasterxmlJacksonDatabindUtilISO8601DateFormat *create_ComFasterxmlJacksonDatabindUtilISO8601DateFormat_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindUtilISO8601DateFormat, init)
}

IOSObjectArray *ComFasterxmlJacksonDatabindUtilISO8601DateFormat__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindUtilISO8601DateFormat)
