//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/TypeBindings.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindTypeTypeBindings")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindTypeTypeBindings
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindTypeTypeBindings 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindTypeTypeBindings 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindTypeTypeBindings

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindTypeTypeBindings_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindTypeTypeBindings || defined(INCLUDE_ComFasterxmlJacksonDatabindTypeTypeBindings))
#define ComFasterxmlJacksonDatabindTypeTypeBindings_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class ComFasterxmlJacksonDatabindJavaType;
@class IOSClass;
@class IOSObjectArray;
@protocol JavaUtilList;

/*!
 @brief Helper class used for resolving type parameters for given class
 */
@interface ComFasterxmlJacksonDatabindTypeTypeBindings : NSObject < JavaIoSerializable >

#pragma mark Public

/*!
 @brief Factory method that will create an object that can be used as a key for
  caching purposes by <code>TypeFactory</code>
 @since 2.8
 */
- (id)asKeyWithIOSClass:(IOSClass *)rawBase;

+ (ComFasterxmlJacksonDatabindTypeTypeBindings *)createWithIOSClass:(IOSClass *)erasedType
                            withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeArg1;

+ (ComFasterxmlJacksonDatabindTypeTypeBindings *)createWithIOSClass:(IOSClass *)erasedType
                            withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeArg1
                            withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeArg2;

+ (ComFasterxmlJacksonDatabindTypeTypeBindings *)createWithIOSClass:(IOSClass *)erasedType
                       withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)types;

/*!
 @brief Factory method for constructing bindings for given class using specified type
  parameters.
 */
+ (ComFasterxmlJacksonDatabindTypeTypeBindings *)createWithIOSClass:(IOSClass *)erasedType
                                                   withJavaUtilList:(id<JavaUtilList>)typeList;

/*!
 @brief Alternate factory method that may be called if it is possible that type
  does or does not require type parameters; this is mostly useful for
  collection- and map-like types.
 */
+ (ComFasterxmlJacksonDatabindTypeTypeBindings *)createIfNeededWithIOSClass:(IOSClass *)erasedType
                                    withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeArg1;

/*!
 @brief Alternate factory method that may be called if it is possible that type
  does or does not require type parameters; this is mostly useful for
  collection- and map-like types.
 */
+ (ComFasterxmlJacksonDatabindTypeTypeBindings *)createIfNeededWithIOSClass:(IOSClass *)erasedType
                               withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)types;

+ (ComFasterxmlJacksonDatabindTypeTypeBindings *)emptyBindings;

- (jboolean)isEqual:(id)o;

/*!
 @brief Find type bound to specified name, if there is one; returns bound type if so, null if not.
 */
- (ComFasterxmlJacksonDatabindJavaType *)findBoundTypeWithNSString:(NSString *)name;

- (NSString *)getBoundNameWithInt:(jint)index;

- (ComFasterxmlJacksonDatabindJavaType *)getBoundTypeWithInt:(jint)index;

/*!
 @brief Accessor for getting bound types in declaration order
 */
- (id<JavaUtilList>)getTypeParameters;

- (NSUInteger)hash;

/*!
 @since 2.3
 */
- (jboolean)hasUnboundWithNSString:(NSString *)name;

- (jboolean)isEmpty;

/*!
 @brief Returns number of bindings contained
 */
- (jint)size;

- (NSString *)description;

/*!
 @brief Method for creating an instance that has same bindings as this object,
  plus an indicator for additional type variable that may be unbound within
  this context; this is needed to resolve recursive self-references.
 */
- (ComFasterxmlJacksonDatabindTypeTypeBindings *)withUnboundVariableWithNSString:(NSString *)name;

#pragma mark Protected

- (id)readResolve;

- (IOSObjectArray *)typeParameterArray;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonDatabindTypeTypeBindings)

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindTypeTypeBindings *ComFasterxmlJacksonDatabindTypeTypeBindings_emptyBindings(void);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindTypeTypeBindings *ComFasterxmlJacksonDatabindTypeTypeBindings_createWithIOSClass_withJavaUtilList_(IOSClass *erasedType, id<JavaUtilList> typeList);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindTypeTypeBindings *ComFasterxmlJacksonDatabindTypeTypeBindings_createWithIOSClass_withComFasterxmlJacksonDatabindJavaTypeArray_(IOSClass *erasedType, IOSObjectArray *types);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindTypeTypeBindings *ComFasterxmlJacksonDatabindTypeTypeBindings_createWithIOSClass_withComFasterxmlJacksonDatabindJavaType_(IOSClass *erasedType, ComFasterxmlJacksonDatabindJavaType *typeArg1);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindTypeTypeBindings *ComFasterxmlJacksonDatabindTypeTypeBindings_createWithIOSClass_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_(IOSClass *erasedType, ComFasterxmlJacksonDatabindJavaType *typeArg1, ComFasterxmlJacksonDatabindJavaType *typeArg2);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindTypeTypeBindings *ComFasterxmlJacksonDatabindTypeTypeBindings_createIfNeededWithIOSClass_withComFasterxmlJacksonDatabindJavaType_(IOSClass *erasedType, ComFasterxmlJacksonDatabindJavaType *typeArg1);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindTypeTypeBindings *ComFasterxmlJacksonDatabindTypeTypeBindings_createIfNeededWithIOSClass_withComFasterxmlJacksonDatabindJavaTypeArray_(IOSClass *erasedType, IOSObjectArray *types);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindTypeTypeBindings)

#endif

#if !defined (ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindTypeTypeBindings || defined(INCLUDE_ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash))
#define ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_

@class IOSClass;
@class IOSObjectArray;

/*!
 @brief Helper class that contains simple logic for avoiding repeated lookups via 
 <code>Class.getTypeParameters()</code> as that can be a performance issue for
  some use cases (wasteful, usually one-off or not reusing mapper).
 Partly isolated to avoid initialization for cases where no generic types are
  used.
 */
@interface ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash : NSObject

#pragma mark Public

+ (IOSObjectArray *)paramsFor1WithIOSClass:(IOSClass *)erasedType;

+ (IOSObjectArray *)paramsFor2WithIOSClass:(IOSClass *)erasedType;

#pragma mark Package-Private

- (instancetype __nonnull)init;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_init(ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash *new_ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash *create_ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_init(void);

FOUNDATION_EXPORT IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_paramsFor1WithIOSClass_(IOSClass *erasedType);

FOUNDATION_EXPORT IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_paramsFor2WithIOSClass_(IOSClass *erasedType);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash)

#endif

#if !defined (ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindTypeTypeBindings || defined(INCLUDE_ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey))
#define ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey_

@class IOSClass;
@class IOSObjectArray;

/*!
 @brief Helper type used to allow caching of generic types
 @since 2.8
 */
@interface ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey : NSObject

#pragma mark Public

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)raw
withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)params
                                   withInt:(jint)hash_;

- (jboolean)isEqual:(id)o;

- (NSUInteger)hash;

- (NSString *)description;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)init NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey_initWithIOSClass_withComFasterxmlJacksonDatabindJavaTypeArray_withInt_(ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey *self, IOSClass *raw, IOSObjectArray *params, jint hash_);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey *new_ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey_initWithIOSClass_withComFasterxmlJacksonDatabindJavaTypeArray_withInt_(IOSClass *raw, IOSObjectArray *params, jint hash_) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey *create_ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey_initWithIOSClass_withComFasterxmlJacksonDatabindJavaTypeArray_withInt_(IOSClass *raw, IOSObjectArray *params, jint hash_);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindTypeTypeBindings")
