//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/util/TokenBufferReadContext.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindUtilTokenBufferReadContext")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindUtilTokenBufferReadContext
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindUtilTokenBufferReadContext 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindUtilTokenBufferReadContext 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindUtilTokenBufferReadContext

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindUtilTokenBufferReadContext_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindUtilTokenBufferReadContext || defined(INCLUDE_ComFasterxmlJacksonDatabindUtilTokenBufferReadContext))
#define ComFasterxmlJacksonDatabindUtilTokenBufferReadContext_

#define RESTRICT_ComFasterxmlJacksonCoreJsonStreamContext 1
#define INCLUDE_ComFasterxmlJacksonCoreJsonStreamContext 1
#include "com/fasterxml/jackson/core/JsonStreamContext.h"

@class ComFasterxmlJacksonCoreJsonLocation;

/*!
 @brief Implementation of <code>JsonStreamContext</code> used by <code>TokenBuffer</code>
  to link back to the original context to try to keep location information
  consistent between source location and buffered content when it's re-read
  from the buffer.
 @since 2.9
 */
@interface ComFasterxmlJacksonDatabindUtilTokenBufferReadContext : ComFasterxmlJacksonCoreJsonStreamContext {
 @public
  ComFasterxmlJacksonCoreJsonStreamContext *_parent_;
  ComFasterxmlJacksonCoreJsonLocation *_startLocation_;
  NSString *_currentName_;
  id _currentValue_;
}

#pragma mark Public

- (ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *)createChildArrayContext;

- (ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *)createChildObjectContext;

+ (ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *)createRootContextWithComFasterxmlJacksonCoreJsonStreamContext:(ComFasterxmlJacksonCoreJsonStreamContext *)origContext;

- (NSString *)getCurrentName;

- (id)getCurrentValue;

- (ComFasterxmlJacksonCoreJsonStreamContext *)getParent;

- (jboolean)hasCurrentName;

/*!
 @brief Helper method we need to handle discontinuity between "real" contexts buffer
  creates, and ones from parent: problem being they are of different types.
 */
- (ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *)parentOrCopy;

- (void)setCurrentNameWithNSString:(NSString *)name;

- (void)setCurrentValueWithId:(id)v;

#pragma mark Protected

/*!
 @brief Constructor for case where there is no real surrounding context: just create
  virtual ROOT
 */
- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonStreamContext:(ComFasterxmlJacksonCoreJsonStreamContext *)base
                                   withComFasterxmlJacksonCoreJsonLocation:(ComFasterxmlJacksonCoreJsonLocation *)startLoc;

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonStreamContext:(ComFasterxmlJacksonCoreJsonStreamContext *)base
                                                                    withId:(id)srcRef;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindUtilTokenBufferReadContext:(ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *)parent
                                                                                withInt:(jint)type
                                                                                withInt:(jint)index;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonStreamContext:(ComFasterxmlJacksonCoreJsonStreamContext *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithInt:(jint)arg0
                              withInt:(jint)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindUtilTokenBufferReadContext)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindUtilTokenBufferReadContext, _parent_, ComFasterxmlJacksonCoreJsonStreamContext *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindUtilTokenBufferReadContext, _startLocation_, ComFasterxmlJacksonCoreJsonLocation *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindUtilTokenBufferReadContext, _currentName_, NSString *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindUtilTokenBufferReadContext, _currentValue_, id)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindUtilTokenBufferReadContext_initWithComFasterxmlJacksonCoreJsonStreamContext_withId_(ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *self, ComFasterxmlJacksonCoreJsonStreamContext *base, id srcRef);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *new_ComFasterxmlJacksonDatabindUtilTokenBufferReadContext_initWithComFasterxmlJacksonCoreJsonStreamContext_withId_(ComFasterxmlJacksonCoreJsonStreamContext *base, id srcRef) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *create_ComFasterxmlJacksonDatabindUtilTokenBufferReadContext_initWithComFasterxmlJacksonCoreJsonStreamContext_withId_(ComFasterxmlJacksonCoreJsonStreamContext *base, id srcRef);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindUtilTokenBufferReadContext_initWithComFasterxmlJacksonCoreJsonStreamContext_withComFasterxmlJacksonCoreJsonLocation_(ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *self, ComFasterxmlJacksonCoreJsonStreamContext *base, ComFasterxmlJacksonCoreJsonLocation *startLoc);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *new_ComFasterxmlJacksonDatabindUtilTokenBufferReadContext_initWithComFasterxmlJacksonCoreJsonStreamContext_withComFasterxmlJacksonCoreJsonLocation_(ComFasterxmlJacksonCoreJsonStreamContext *base, ComFasterxmlJacksonCoreJsonLocation *startLoc) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *create_ComFasterxmlJacksonDatabindUtilTokenBufferReadContext_initWithComFasterxmlJacksonCoreJsonStreamContext_withComFasterxmlJacksonCoreJsonLocation_(ComFasterxmlJacksonCoreJsonStreamContext *base, ComFasterxmlJacksonCoreJsonLocation *startLoc);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindUtilTokenBufferReadContext_init(ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *new_ComFasterxmlJacksonDatabindUtilTokenBufferReadContext_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *create_ComFasterxmlJacksonDatabindUtilTokenBufferReadContext_init(void);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindUtilTokenBufferReadContext_initWithComFasterxmlJacksonDatabindUtilTokenBufferReadContext_withInt_withInt_(ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *self, ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *parent, jint type, jint index);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *new_ComFasterxmlJacksonDatabindUtilTokenBufferReadContext_initWithComFasterxmlJacksonDatabindUtilTokenBufferReadContext_withInt_withInt_(ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *parent, jint type, jint index) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *create_ComFasterxmlJacksonDatabindUtilTokenBufferReadContext_initWithComFasterxmlJacksonDatabindUtilTokenBufferReadContext_withInt_withInt_(ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *parent, jint type, jint index);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindUtilTokenBufferReadContext *ComFasterxmlJacksonDatabindUtilTokenBufferReadContext_createRootContextWithComFasterxmlJacksonCoreJsonStreamContext_(ComFasterxmlJacksonCoreJsonStreamContext *origContext);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindUtilTokenBufferReadContext)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindUtilTokenBufferReadContext")
