//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/cfg/ConfigFeature.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindCfgConfigFeature")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindCfgConfigFeature
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindCfgConfigFeature 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindCfgConfigFeature 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindCfgConfigFeature

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindCfgConfigFeature_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindCfgConfigFeature || defined(INCLUDE_ComFasterxmlJacksonDatabindCfgConfigFeature))
#define ComFasterxmlJacksonDatabindCfgConfigFeature_

/*!
 @brief Interface that actual SerializationFeature enumerations used by 
 <code>MapperConfig</code> implementations must implement.
 Necessary since enums cannot be extended using normal
  inheritance, but can implement interfaces
 */
@protocol ComFasterxmlJacksonDatabindCfgConfigFeature < JavaObject >

/*!
 @brief Accessor for checking whether this feature is enabled by default.
 */
- (jboolean)enabledByDefault;

/*!
 @brief Returns bit mask for this feature instance
 */
- (jint)getMask;

/*!
 @brief Convenience method for checking whether feature is enabled in given bitmask
 @since 2.6
 */
- (jboolean)enabledInWithInt:(jint)flags;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindCfgConfigFeature)

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindCfgConfigFeature)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindCfgConfigFeature")
