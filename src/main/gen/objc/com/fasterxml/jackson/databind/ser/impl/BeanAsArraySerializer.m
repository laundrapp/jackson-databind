//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/impl/BeanAsArraySerializer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/core/JsonToken.h"
#include "com/fasterxml/jackson/core/type/WritableTypeId.h"
#include "com/fasterxml/jackson/databind/JsonMappingException.h"
#include "com/fasterxml/jackson/databind/JsonSerializer.h"
#include "com/fasterxml/jackson/databind/SerializationFeature.h"
#include "com/fasterxml/jackson/databind/SerializerProvider.h"
#include "com/fasterxml/jackson/databind/jsontype/TypeSerializer.h"
#include "com/fasterxml/jackson/databind/ser/BeanPropertyWriter.h"
#include "com/fasterxml/jackson/databind/ser/impl/BeanAsArraySerializer.h"
#include "com/fasterxml/jackson/databind/ser/impl/ObjectIdWriter.h"
#include "com/fasterxml/jackson/databind/ser/std/BeanSerializerBase.h"
#include "com/fasterxml/jackson/databind/util/NameTransformer.h"
#include "java/lang/Exception.h"
#include "java/lang/StackOverflowError.h"
#include "java/util/Set.h"

@interface ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer ()

- (jboolean)hasSingleElementWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

@end

inline jlong ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer, serialVersionUID, jlong)

__attribute__((unused)) static jboolean ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer_hasSingleElementWithComFasterxmlJacksonDatabindSerializerProvider_(ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer *self, ComFasterxmlJacksonDatabindSerializerProvider *provider);

__attribute__((unused)) static void ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer_serializeAsArrayWithId_withComFasterxmlJacksonCoreJsonGenerator_withComFasterxmlJacksonDatabindSerializerProvider_(ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer *self, id bean, ComFasterxmlJacksonCoreJsonGenerator *gen, ComFasterxmlJacksonDatabindSerializerProvider *provider);

@implementation ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase:(ComFasterxmlJacksonDatabindSerStdBeanSerializerBase *)src {
  ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer_initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase_(self, src);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase:(ComFasterxmlJacksonDatabindSerStdBeanSerializerBase *)src
                                                                      withJavaUtilSet:(id<JavaUtilSet>)toIgnore {
  ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer_initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase_withJavaUtilSet_(self, src, toIgnore);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase:(ComFasterxmlJacksonDatabindSerStdBeanSerializerBase *)src
                                 withComFasterxmlJacksonDatabindSerImplObjectIdWriter:(ComFasterxmlJacksonDatabindSerImplObjectIdWriter *)oiw
                                                                               withId:(id)filterId {
  ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer_initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase_withComFasterxmlJacksonDatabindSerImplObjectIdWriter_withId_(self, src, oiw, filterId);
  return self;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)unwrappingSerializerWithComFasterxmlJacksonDatabindUtilNameTransformer:(ComFasterxmlJacksonDatabindUtilNameTransformer *)transformer {
  return [((ComFasterxmlJacksonDatabindSerStdBeanSerializerBase *) nil_chk(_defaultSerializer_)) unwrappingSerializerWithComFasterxmlJacksonDatabindUtilNameTransformer:transformer];
}

- (jboolean)isUnwrappingSerializer {
  return false;
}

- (ComFasterxmlJacksonDatabindSerStdBeanSerializerBase *)withObjectIdWriterWithComFasterxmlJacksonDatabindSerImplObjectIdWriter:(ComFasterxmlJacksonDatabindSerImplObjectIdWriter *)objectIdWriter {
  return [((ComFasterxmlJacksonDatabindSerStdBeanSerializerBase *) nil_chk(_defaultSerializer_)) withObjectIdWriterWithComFasterxmlJacksonDatabindSerImplObjectIdWriter:objectIdWriter];
}

- (ComFasterxmlJacksonDatabindSerStdBeanSerializerBase *)withFilterIdWithId:(id)filterId {
  return create_ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer_initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase_withComFasterxmlJacksonDatabindSerImplObjectIdWriter_withId_(self, _objectIdWriter_, filterId);
}

- (ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer *)withIgnoralsWithJavaUtilSet:(id<JavaUtilSet>)toIgnore {
  return create_ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer_initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase_withJavaUtilSet_(self, toIgnore);
}

- (ComFasterxmlJacksonDatabindSerStdBeanSerializerBase *)asArraySerializer {
  return self;
}

- (void)serializeWithTypeWithId:(id)bean
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer {
  if (_objectIdWriter_ != nil) {
    [self _serializeWithObjectIdWithId:bean withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider withComFasterxmlJacksonDatabindJsontypeTypeSerializer:typeSer];
    return;
  }
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) setCurrentValueWithId:bean];
  ComFasterxmlJacksonCoreTypeWritableTypeId *typeIdDef = [self _typeIdDefWithComFasterxmlJacksonDatabindJsontypeTypeSerializer:typeSer withId:bean withComFasterxmlJacksonCoreJsonToken:JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_ARRAY)];
  [((ComFasterxmlJacksonDatabindJsontypeTypeSerializer *) nil_chk(typeSer)) writeTypePrefixWithComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonCoreTypeWritableTypeId:typeIdDef];
  ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer_serializeAsArrayWithId_withComFasterxmlJacksonCoreJsonGenerator_withComFasterxmlJacksonDatabindSerializerProvider_(self, bean, gen, provider);
  [typeSer writeTypeSuffixWithComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonCoreTypeWritableTypeId:typeIdDef];
}

- (void)serializeWithId:(id)bean
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  if ([((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) isEnabledWithComFasterxmlJacksonDatabindSerializationFeature:JreLoadEnum(ComFasterxmlJacksonDatabindSerializationFeature, WRITE_SINGLE_ELEM_ARRAYS_UNWRAPPED)] && ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer_hasSingleElementWithComFasterxmlJacksonDatabindSerializerProvider_(self, provider)) {
    ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer_serializeAsArrayWithId_withComFasterxmlJacksonCoreJsonGenerator_withComFasterxmlJacksonDatabindSerializerProvider_(self, bean, gen, provider);
    return;
  }
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeStartArray];
  [gen setCurrentValueWithId:bean];
  ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer_serializeAsArrayWithId_withComFasterxmlJacksonCoreJsonGenerator_withComFasterxmlJacksonDatabindSerializerProvider_(self, bean, gen, provider);
  [gen writeEndArray];
}

- (jboolean)hasSingleElementWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  return ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer_hasSingleElementWithComFasterxmlJacksonDatabindSerializerProvider_(self, provider);
}

- (void)serializeAsArrayWithId:(id)bean
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer_serializeAsArrayWithId_withComFasterxmlJacksonCoreJsonGenerator_withComFasterxmlJacksonDatabindSerializerProvider_(self, bean, gen, provider);
}

- (NSString *)description {
  return JreStrcat("$$", @"BeanAsArraySerializer for ", [((IOSClass *) nil_chk([self handledType])) getName]);
}

- (void)dealloc {
  RELEASE_(_defaultSerializer_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x4, -1, 3, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 4, 5, -1, 6, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerStdBeanSerializerBase;", 0x1, 7, 8, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerStdBeanSerializerBase;", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer;", 0x4, 11, 12, -1, 13, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerStdBeanSerializerBase;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 14, 15, 16, -1, -1, -1 },
    { NULL, "V", 0x11, 17, 18, 16, -1, -1, -1 },
    { NULL, "Z", 0x2, 19, 20, -1, -1, -1, -1 },
    { NULL, "V", 0x14, 21, 18, 16, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 22, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase:);
  methods[1].selector = @selector(initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase:withJavaUtilSet:);
  methods[2].selector = @selector(initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase:withComFasterxmlJacksonDatabindSerImplObjectIdWriter:withId:);
  methods[3].selector = @selector(unwrappingSerializerWithComFasterxmlJacksonDatabindUtilNameTransformer:);
  methods[4].selector = @selector(isUnwrappingSerializer);
  methods[5].selector = @selector(withObjectIdWriterWithComFasterxmlJacksonDatabindSerImplObjectIdWriter:);
  methods[6].selector = @selector(withFilterIdWithId:);
  methods[7].selector = @selector(withIgnoralsWithJavaUtilSet:);
  methods[8].selector = @selector(asArraySerializer);
  methods[9].selector = @selector(serializeWithTypeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindJsontypeTypeSerializer:);
  methods[10].selector = @selector(serializeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  methods[11].selector = @selector(hasSingleElementWithComFasterxmlJacksonDatabindSerializerProvider:);
  methods[12].selector = @selector(serializeAsArrayWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  methods[13].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "_defaultSerializer_", "LComFasterxmlJacksonDatabindSerStdBeanSerializerBase;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindSerStdBeanSerializerBase;", "LComFasterxmlJacksonDatabindSerStdBeanSerializerBase;LJavaUtilSet;", "(Lcom/fasterxml/jackson/databind/ser/std/BeanSerializerBase;Ljava/util/Set<Ljava/lang/String;>;)V", "LComFasterxmlJacksonDatabindSerStdBeanSerializerBase;LComFasterxmlJacksonDatabindSerImplObjectIdWriter;LNSObject;", "unwrappingSerializer", "LComFasterxmlJacksonDatabindUtilNameTransformer;", "(Lcom/fasterxml/jackson/databind/util/NameTransformer;)Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", "withObjectIdWriter", "LComFasterxmlJacksonDatabindSerImplObjectIdWriter;", "withFilterId", "LNSObject;", "withIgnorals", "LJavaUtilSet;", "(Ljava/util/Set<Ljava/lang/String;>;)Lcom/fasterxml/jackson/databind/ser/impl/BeanAsArraySerializer;", "serializeWithType", "LNSObject;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindJsontypeTypeSerializer;", "LJavaIoIOException;", "serialize", "LNSObject;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;", "hasSingleElement", "LComFasterxmlJacksonDatabindSerializerProvider;", "serializeAsArray", "toString" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer = { "BeanAsArraySerializer", "com.fasterxml.jackson.databind.ser.impl", ptrTable, methods, fields, 7, 0x1, 14, 2, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer;
}

@end

void ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer_initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase_(ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer *self, ComFasterxmlJacksonDatabindSerStdBeanSerializerBase *src) {
  ComFasterxmlJacksonDatabindSerStdBeanSerializerBase_initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase_withComFasterxmlJacksonDatabindSerImplObjectIdWriter_(self, src, nil);
  JreStrongAssign(&self->_defaultSerializer_, src);
}

ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer *new_ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer_initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase_(ComFasterxmlJacksonDatabindSerStdBeanSerializerBase *src) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer, initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase_, src)
}

ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer *create_ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer_initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase_(ComFasterxmlJacksonDatabindSerStdBeanSerializerBase *src) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer, initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase_, src)
}

void ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer_initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase_withJavaUtilSet_(ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer *self, ComFasterxmlJacksonDatabindSerStdBeanSerializerBase *src, id<JavaUtilSet> toIgnore) {
  ComFasterxmlJacksonDatabindSerStdBeanSerializerBase_initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase_withJavaUtilSet_(self, src, toIgnore);
  JreStrongAssign(&self->_defaultSerializer_, src);
}

ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer *new_ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer_initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase_withJavaUtilSet_(ComFasterxmlJacksonDatabindSerStdBeanSerializerBase *src, id<JavaUtilSet> toIgnore) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer, initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase_withJavaUtilSet_, src, toIgnore)
}

ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer *create_ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer_initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase_withJavaUtilSet_(ComFasterxmlJacksonDatabindSerStdBeanSerializerBase *src, id<JavaUtilSet> toIgnore) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer, initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase_withJavaUtilSet_, src, toIgnore)
}

void ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer_initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase_withComFasterxmlJacksonDatabindSerImplObjectIdWriter_withId_(ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer *self, ComFasterxmlJacksonDatabindSerStdBeanSerializerBase *src, ComFasterxmlJacksonDatabindSerImplObjectIdWriter *oiw, id filterId) {
  ComFasterxmlJacksonDatabindSerStdBeanSerializerBase_initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase_withComFasterxmlJacksonDatabindSerImplObjectIdWriter_withId_(self, src, oiw, filterId);
  JreStrongAssign(&self->_defaultSerializer_, src);
}

ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer *new_ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer_initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase_withComFasterxmlJacksonDatabindSerImplObjectIdWriter_withId_(ComFasterxmlJacksonDatabindSerStdBeanSerializerBase *src, ComFasterxmlJacksonDatabindSerImplObjectIdWriter *oiw, id filterId) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer, initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase_withComFasterxmlJacksonDatabindSerImplObjectIdWriter_withId_, src, oiw, filterId)
}

ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer *create_ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer_initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase_withComFasterxmlJacksonDatabindSerImplObjectIdWriter_withId_(ComFasterxmlJacksonDatabindSerStdBeanSerializerBase *src, ComFasterxmlJacksonDatabindSerImplObjectIdWriter *oiw, id filterId) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer, initWithComFasterxmlJacksonDatabindSerStdBeanSerializerBase_withComFasterxmlJacksonDatabindSerImplObjectIdWriter_withId_, src, oiw, filterId)
}

jboolean ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer_hasSingleElementWithComFasterxmlJacksonDatabindSerializerProvider_(ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer *self, ComFasterxmlJacksonDatabindSerializerProvider *provider) {
  IOSObjectArray *props;
  if (self->_filteredProps_ != nil && [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) getActiveView] != nil) {
    props = self->_filteredProps_;
  }
  else {
    props = self->_props_;
  }
  return ((IOSObjectArray *) nil_chk(props))->size_ == 1;
}

void ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer_serializeAsArrayWithId_withComFasterxmlJacksonCoreJsonGenerator_withComFasterxmlJacksonDatabindSerializerProvider_(ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer *self, id bean, ComFasterxmlJacksonCoreJsonGenerator *gen, ComFasterxmlJacksonDatabindSerializerProvider *provider) {
  IOSObjectArray *props;
  if (self->_filteredProps_ != nil && [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) getActiveView] != nil) {
    props = self->_filteredProps_;
  }
  else {
    props = self->_props_;
  }
  jint i = 0;
  @try {
    for (jint len = ((IOSObjectArray *) nil_chk(props))->size_; i < len; ++i) {
      ComFasterxmlJacksonDatabindSerBeanPropertyWriter *prop = IOSObjectArray_Get(props, i);
      if (prop == nil) {
        [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeNull];
      }
      else {
        [prop serializeAsElementWithId:bean withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider];
      }
    }
  }
  @catch (JavaLangException *e) {
    NSString *name = (i == props->size_) ? @"[anySetter]" : [((ComFasterxmlJacksonDatabindSerBeanPropertyWriter *) nil_chk(IOSObjectArray_Get(props, i))) getName];
    [self wrapAndThrowWithComFasterxmlJacksonDatabindSerializerProvider:provider withJavaLangThrowable:e withId:bean withNSString:name];
  }
  @catch (JavaLangStackOverflowError *e) {
    ComFasterxmlJacksonDatabindJsonMappingException *mapE = ComFasterxmlJacksonDatabindJsonMappingException_fromWithComFasterxmlJacksonCoreJsonGenerator_withNSString_withJavaLangThrowable_(gen, @"Infinite recursion (StackOverflowError)", e);
    NSString *name = (i == props->size_) ? @"[anySetter]" : [((ComFasterxmlJacksonDatabindSerBeanPropertyWriter *) nil_chk(IOSObjectArray_Get(props, i))) getName];
    [((ComFasterxmlJacksonDatabindJsonMappingException *) nil_chk(mapE)) prependPathWithComFasterxmlJacksonDatabindJsonMappingException_Reference:create_ComFasterxmlJacksonDatabindJsonMappingException_Reference_initWithId_withNSString_(bean, name)];
    @throw mapE;
  }
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerImplBeanAsArraySerializer)
