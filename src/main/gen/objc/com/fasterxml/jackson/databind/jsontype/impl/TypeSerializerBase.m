//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/TypeSerializerBase.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/annotation/JsonTypeInfo.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/core/type/WritableTypeId.h"
#include "com/fasterxml/jackson/databind/BeanProperty.h"
#include "com/fasterxml/jackson/databind/jsontype/TypeIdResolver.h"
#include "com/fasterxml/jackson/databind/jsontype/TypeSerializer.h"
#include "com/fasterxml/jackson/databind/jsontype/impl/TypeSerializerBase.h"

@implementation ComFasterxmlJacksonDatabindJsontypeImplTypeSerializerBase

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver:(id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver>)idRes
                                        withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property {
  ComFasterxmlJacksonDatabindJsontypeImplTypeSerializerBase_initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withComFasterxmlJacksonDatabindBeanProperty_(self, idRes, property);
  return self;
}

- (ComFasterxmlJacksonAnnotationJsonTypeInfo_As *)getTypeInclusion {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (NSString *)getPropertyName {
  return nil;
}

- (id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver>)getTypeIdResolver {
  return _idResolver_;
}

- (ComFasterxmlJacksonCoreTypeWritableTypeId *)writeTypePrefixWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
                                                         withComFasterxmlJacksonCoreTypeWritableTypeId:(ComFasterxmlJacksonCoreTypeWritableTypeId *)idMetadata {
  [self _generateTypeIdWithComFasterxmlJacksonCoreTypeWritableTypeId:idMetadata];
  return [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeTypePrefixWithComFasterxmlJacksonCoreTypeWritableTypeId:idMetadata];
}

- (ComFasterxmlJacksonCoreTypeWritableTypeId *)writeTypeSuffixWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
                                                         withComFasterxmlJacksonCoreTypeWritableTypeId:(ComFasterxmlJacksonCoreTypeWritableTypeId *)idMetadata {
  return [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeTypeSuffixWithComFasterxmlJacksonCoreTypeWritableTypeId:idMetadata];
}

- (void)_generateTypeIdWithComFasterxmlJacksonCoreTypeWritableTypeId:(ComFasterxmlJacksonCoreTypeWritableTypeId *)idMetadata {
  id id_ = ((ComFasterxmlJacksonCoreTypeWritableTypeId *) nil_chk(idMetadata))->id__;
  if (id_ == nil) {
    id value = idMetadata->forValue_;
    IOSClass *typeForId = idMetadata->forValueType_;
    if (typeForId == nil) {
      id_ = [self idFromValueWithId:value];
    }
    else {
      id_ = [self idFromValueAndTypeWithId:value withIOSClass:typeForId];
    }
    JreStrongAssign(&idMetadata->id__, id_);
  }
}

- (NSString *)idFromValueWithId:(id)value {
  NSString *id_ = [((id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver>) nil_chk(_idResolver_)) idFromValueWithId:value];
  if (id_ == nil) {
    [self handleMissingIdWithId:value];
  }
  return id_;
}

- (NSString *)idFromValueAndTypeWithId:(id)value
                          withIOSClass:(IOSClass *)type {
  NSString *id_ = [((id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver>) nil_chk(_idResolver_)) idFromValueAndTypeWithId:value withIOSClass:type];
  if (id_ == nil) {
    [self handleMissingIdWithId:value];
  }
  return id_;
}

- (void)handleMissingIdWithId:(id)value {
}

- (void)dealloc {
  RELEASE_(_idResolver_);
  RELEASE_(_property_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonTypeInfo_As;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsontypeTypeIdResolver;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreTypeWritableTypeId;", 0x1, 1, 2, 3, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreTypeWritableTypeId;", 0x1, 4, 2, 3, -1, -1, -1 },
    { NULL, "V", 0x4, 5, 6, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, 7, 8, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x4, 9, 10, -1, 11, -1, -1 },
    { NULL, "V", 0x4, 12, 8, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver:withComFasterxmlJacksonDatabindBeanProperty:);
  methods[1].selector = @selector(getTypeInclusion);
  methods[2].selector = @selector(getPropertyName);
  methods[3].selector = @selector(getTypeIdResolver);
  methods[4].selector = @selector(writeTypePrefixWithComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonCoreTypeWritableTypeId:);
  methods[5].selector = @selector(writeTypeSuffixWithComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonCoreTypeWritableTypeId:);
  methods[6].selector = @selector(_generateTypeIdWithComFasterxmlJacksonCoreTypeWritableTypeId:);
  methods[7].selector = @selector(idFromValueWithId:);
  methods[8].selector = @selector(idFromValueAndTypeWithId:withIOSClass:);
  methods[9].selector = @selector(handleMissingIdWithId:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_idResolver_", "LComFasterxmlJacksonDatabindJsontypeTypeIdResolver;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_property_", "LComFasterxmlJacksonDatabindBeanProperty;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindJsontypeTypeIdResolver;LComFasterxmlJacksonDatabindBeanProperty;", "writeTypePrefix", "LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonCoreTypeWritableTypeId;", "LJavaIoIOException;", "writeTypeSuffix", "_generateTypeId", "LComFasterxmlJacksonCoreTypeWritableTypeId;", "idFromValue", "LNSObject;", "idFromValueAndType", "LNSObject;LIOSClass;", "(Ljava/lang/Object;Ljava/lang/Class<*>;)Ljava/lang/String;", "handleMissingId" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindJsontypeImplTypeSerializerBase = { "TypeSerializerBase", "com.fasterxml.jackson.databind.jsontype.impl", ptrTable, methods, fields, 7, 0x401, 10, 2, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindJsontypeImplTypeSerializerBase;
}

@end

void ComFasterxmlJacksonDatabindJsontypeImplTypeSerializerBase_initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withComFasterxmlJacksonDatabindBeanProperty_(ComFasterxmlJacksonDatabindJsontypeImplTypeSerializerBase *self, id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver> idRes, id<ComFasterxmlJacksonDatabindBeanProperty> property) {
  ComFasterxmlJacksonDatabindJsontypeTypeSerializer_init(self);
  JreStrongAssign(&self->_idResolver_, idRes);
  JreStrongAssign(&self->_property_, property);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindJsontypeImplTypeSerializerBase)
