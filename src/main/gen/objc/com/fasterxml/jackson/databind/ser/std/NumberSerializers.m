//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/annotation/JsonFormat.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/core/JsonParser.h"
#include "com/fasterxml/jackson/databind/BeanProperty.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/JsonNode.h"
#include "com/fasterxml/jackson/databind/JsonSerializer.h"
#include "com/fasterxml/jackson/databind/SerializerProvider.h"
#include "com/fasterxml/jackson/databind/annotation/JacksonStdImpl.h"
#include "com/fasterxml/jackson/databind/jsonFormatVisitors/JsonFormatVisitorWrapper.h"
#include "com/fasterxml/jackson/databind/jsontype/TypeSerializer.h"
#include "com/fasterxml/jackson/databind/node/ObjectNode.h"
#include "com/fasterxml/jackson/databind/ser/std/NumberSerializers.h"
#include "com/fasterxml/jackson/databind/ser/std/StdScalarSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/ToStringSerializer.h"
#include "java/lang/Byte.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/Short.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/reflect/Type.h"
#include "java/util/Map.h"

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer__Annotations$0(void);

@implementation ComFasterxmlJacksonDatabindSerStdNumberSerializers

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindSerStdNumberSerializers_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (void)addAllWithJavaUtilMap:(id<JavaUtilMap>)allDeserializers {
  ComFasterxmlJacksonDatabindSerStdNumberSerializers_addAllWithJavaUtilMap_(allDeserializers);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x9, 0, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(addAllWithJavaUtilMap:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "addAll", "LJavaUtilMap;", "(Ljava/util/Map<Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonSerializer<*>;>;)V", "LComFasterxmlJacksonDatabindSerStdNumberSerializers_Base;LComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer;LComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer;LComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer;LComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer;LComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer;LComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerStdNumberSerializers = { "NumberSerializers", "com.fasterxml.jackson.databind.ser.std", ptrTable, methods, NULL, 7, 0x1, 2, 0, -1, 3, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindSerStdNumberSerializers;
}

@end

void ComFasterxmlJacksonDatabindSerStdNumberSerializers_init(ComFasterxmlJacksonDatabindSerStdNumberSerializers *self) {
  NSObject_init(self);
}

ComFasterxmlJacksonDatabindSerStdNumberSerializers *new_ComFasterxmlJacksonDatabindSerStdNumberSerializers_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerStdNumberSerializers, init)
}

ComFasterxmlJacksonDatabindSerStdNumberSerializers *create_ComFasterxmlJacksonDatabindSerStdNumberSerializers_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerStdNumberSerializers, init)
}

void ComFasterxmlJacksonDatabindSerStdNumberSerializers_addAllWithJavaUtilMap_(id<JavaUtilMap> allDeserializers) {
  ComFasterxmlJacksonDatabindSerStdNumberSerializers_initialize();
  [((id<JavaUtilMap>) nil_chk(allDeserializers)) putWithId:[JavaLangInteger_class_() getName] withId:create_ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer_initWithIOSClass_(JavaLangInteger_class_())];
  [allDeserializers putWithId:[((IOSClass *) nil_chk(JreLoadStatic(JavaLangInteger, TYPE))) getName] withId:create_ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer_initWithIOSClass_(JreLoadStatic(JavaLangInteger, TYPE))];
  [allDeserializers putWithId:[JavaLangLong_class_() getName] withId:create_ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer_initWithIOSClass_(JavaLangLong_class_())];
  [allDeserializers putWithId:[((IOSClass *) nil_chk(JreLoadStatic(JavaLangLong, TYPE))) getName] withId:create_ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer_initWithIOSClass_(JreLoadStatic(JavaLangLong, TYPE))];
  [allDeserializers putWithId:[JavaLangByte_class_() getName] withId:JreLoadStatic(ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer, instance)];
  [allDeserializers putWithId:[((IOSClass *) nil_chk(JreLoadStatic(JavaLangByte, TYPE))) getName] withId:JreLoadStatic(ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer, instance)];
  [allDeserializers putWithId:[JavaLangShort_class_() getName] withId:JreLoadStatic(ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer, instance)];
  [allDeserializers putWithId:[((IOSClass *) nil_chk(JreLoadStatic(JavaLangShort, TYPE))) getName] withId:JreLoadStatic(ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer, instance)];
  [allDeserializers putWithId:[JavaLangDouble_class_() getName] withId:create_ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer_initWithIOSClass_(JavaLangDouble_class_())];
  [allDeserializers putWithId:[((IOSClass *) nil_chk(JreLoadStatic(JavaLangDouble, TYPE))) getName] withId:create_ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer_initWithIOSClass_(JreLoadStatic(JavaLangDouble, TYPE))];
  [allDeserializers putWithId:[JavaLangFloat_class_() getName] withId:JreLoadStatic(ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer, instance)];
  [allDeserializers putWithId:[((IOSClass *) nil_chk(JreLoadStatic(JavaLangFloat, TYPE))) getName] withId:JreLoadStatic(ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer, instance)];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerStdNumberSerializers)

@implementation ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)cls
withComFasterxmlJacksonCoreJsonParser_NumberType:(ComFasterxmlJacksonCoreJsonParser_NumberType *)numberType
                              withNSString:(NSString *)schemaType {
  ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base_initWithIOSClass_withComFasterxmlJacksonCoreJsonParser_NumberType_withNSString_(self, cls, numberType, schemaType);
  return self;
}

- (ComFasterxmlJacksonDatabindJsonNode *)getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                            withJavaLangReflectType:(id<JavaLangReflectType>)typeHint {
  return [self createSchemaNodeWithNSString:_schemaType_ withBoolean:true];
}

- (void)acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint {
  if (_isInt_) {
    [self visitIntFormatWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:visitor withComFasterxmlJacksonDatabindJavaType:typeHint withComFasterxmlJacksonCoreJsonParser_NumberType:_numberType_];
  }
  else {
    [self visitFloatFormatWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:visitor withComFasterxmlJacksonDatabindJavaType:typeHint withComFasterxmlJacksonCoreJsonParser_NumberType:_numberType_];
  }
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)createContextualWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                                     withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property {
  ComFasterxmlJacksonAnnotationJsonFormat_Value *format = [self findFormatOverridesWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindBeanProperty:property withIOSClass:[self handledType]];
  if (format != nil) {
    switch ([[format getShape] ordinal]) {
      case ComFasterxmlJacksonAnnotationJsonFormat_Shape_Enum_STRING:
      return JreLoadStatic(ComFasterxmlJacksonDatabindSerStdToStringSerializer, instance);
      default:
      ;
    }
  }
  return self;
}

- (void)dealloc {
  RELEASE_(_numberType_);
  RELEASE_(_schemaType_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x1, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, 6, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 7, 8, 6, 9, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:withComFasterxmlJacksonCoreJsonParser_NumberType:withNSString:);
  methods[1].selector = @selector(getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:withJavaLangReflectType:);
  methods[2].selector = @selector(acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:withComFasterxmlJacksonDatabindJavaType:);
  methods[3].selector = @selector(createContextualWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindBeanProperty:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_numberType_", "LComFasterxmlJacksonCoreJsonParser_NumberType;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_schemaType_", "LNSString;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_isInt_", "Z", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;LComFasterxmlJacksonCoreJsonParser_NumberType;LNSString;", "(Ljava/lang/Class<*>;Lcom/fasterxml/jackson/core/JsonParser$NumberType;Ljava/lang/String;)V", "getSchema", "LComFasterxmlJacksonDatabindSerializerProvider;LJavaLangReflectType;", "acceptJsonFormatVisitor", "LComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;LComFasterxmlJacksonDatabindJavaType;", "LComFasterxmlJacksonDatabindJsonMappingException;", "createContextual", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindBeanProperty;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanProperty;)Lcom/fasterxml/jackson/databind/JsonSerializer<*>;", "LComFasterxmlJacksonDatabindSerStdNumberSerializers;", "<T:Ljava/lang/Object;>Lcom/fasterxml/jackson/databind/ser/std/StdScalarSerializer<TT;>;Lcom/fasterxml/jackson/databind/ser/ContextualSerializer;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base = { "Base", "com.fasterxml.jackson.databind.ser.std", ptrTable, methods, fields, 7, 0x40c, 4, 3, 10, -1, -1, 11, -1 };
  return &_ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base;
}

@end

void ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base_initWithIOSClass_withComFasterxmlJacksonCoreJsonParser_NumberType_withNSString_(ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base *self, IOSClass *cls, ComFasterxmlJacksonCoreJsonParser_NumberType *numberType, NSString *schemaType) {
  ComFasterxmlJacksonDatabindSerStdStdScalarSerializer_initWithIOSClass_withBoolean_(self, cls, false);
  JreStrongAssign(&self->_numberType_, numberType);
  JreStrongAssign(&self->_schemaType_, schemaType);
  self->_isInt_ = ((numberType == JreLoadEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, INT)) || (numberType == JreLoadEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, LONG)) || (numberType == JreLoadEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, BIG_INTEGER)));
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base)

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer)

ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer *ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer_instance;

@implementation ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeNumberWithShort:[((JavaLangShort *) nil_chk(((JavaLangShort *) cast_chk(value, [JavaLangShort class])))) shortValue]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(serializeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "instance", "LComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer;", .constantValue.asLong = 0, 0x18, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "serialize", "LNSObject;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;", "LJavaIoIOException;", &ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer_instance, "LComFasterxmlJacksonDatabindSerStdNumberSerializers;", "Lcom/fasterxml/jackson/databind/ser/std/NumberSerializers$Base<Ljava/lang/Object;>;", (void *)&ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer__Annotations$0 };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer = { "ShortSerializer", "com.fasterxml.jackson.databind.ser.std", ptrTable, methods, fields, 7, 0x19, 2, 1, 4, -1, -1, 5, 6 };
  return &_ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer class]) {
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer_instance, new_ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer_init());
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer)
  }
}

@end

void ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer_init(ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer *self) {
  ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base_initWithIOSClass_withComFasterxmlJacksonCoreJsonParser_NumberType_withNSString_(self, JavaLangShort_class_(), JreLoadEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, INT), @"number");
}

ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer *new_ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer, init)
}

ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer *create_ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer, init)
}

IOSObjectArray *ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_ComFasterxmlJacksonDatabindAnnotationJacksonStdImpl() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer)

@implementation ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)type {
  ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer_initWithIOSClass_(self, type);
  return self;
}

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeNumberWithInt:[((JavaLangInteger *) nil_chk(((JavaLangInteger *) cast_chk(value, [JavaLangInteger class])))) intValue]];
}

- (void)serializeWithTypeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer {
  [self serializeWithId:value withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:);
  methods[1].selector = @selector(serializeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  methods[2].selector = @selector(serializeWithTypeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindJsontypeTypeSerializer:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LIOSClass;", "(Ljava/lang/Class<*>;)V", "serialize", "LNSObject;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;", "LJavaIoIOException;", "serializeWithType", "LNSObject;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindJsontypeTypeSerializer;", "LComFasterxmlJacksonDatabindSerStdNumberSerializers;", "Lcom/fasterxml/jackson/databind/ser/std/NumberSerializers$Base<Ljava/lang/Object;>;", (void *)&ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer__Annotations$0 };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer = { "IntegerSerializer", "com.fasterxml.jackson.databind.ser.std", ptrTable, methods, NULL, 7, 0x19, 3, 0, 7, -1, -1, 8, 9 };
  return &_ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer;
}

@end

void ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer_initWithIOSClass_(ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer *self, IOSClass *type) {
  ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base_initWithIOSClass_withComFasterxmlJacksonCoreJsonParser_NumberType_withNSString_(self, type, JreLoadEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, INT), @"integer");
}

ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer *new_ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer_initWithIOSClass_(IOSClass *type) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer, initWithIOSClass_, type)
}

ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer *create_ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer_initWithIOSClass_(IOSClass *type) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer, initWithIOSClass_, type)
}

IOSObjectArray *ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_ComFasterxmlJacksonDatabindAnnotationJacksonStdImpl() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer)

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer)

ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer *ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer_instance;

@implementation ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeNumberWithInt:[((NSNumber *) nil_chk(((NSNumber *) cast_chk(value, [NSNumber class])))) intValue]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(serializeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "instance", "LComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer;", .constantValue.asLong = 0, 0x18, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "serialize", "LNSObject;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;", "LJavaIoIOException;", &ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer_instance, "LComFasterxmlJacksonDatabindSerStdNumberSerializers;", "Lcom/fasterxml/jackson/databind/ser/std/NumberSerializers$Base<Ljava/lang/Object;>;", (void *)&ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer__Annotations$0 };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer = { "IntLikeSerializer", "com.fasterxml.jackson.databind.ser.std", ptrTable, methods, fields, 7, 0x19, 2, 1, 4, -1, -1, 5, 6 };
  return &_ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer class]) {
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer_instance, new_ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer_init());
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer)
  }
}

@end

void ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer_init(ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer *self) {
  ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base_initWithIOSClass_withComFasterxmlJacksonCoreJsonParser_NumberType_withNSString_(self, NSNumber_class_(), JreLoadEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, INT), @"integer");
}

ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer *new_ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer, init)
}

ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer *create_ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer, init)
}

IOSObjectArray *ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_ComFasterxmlJacksonDatabindAnnotationJacksonStdImpl() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer)

@implementation ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)cls {
  ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer_initWithIOSClass_(self, cls);
  return self;
}

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeNumberWithLong:[((JavaLangLong *) nil_chk(((JavaLangLong *) cast_chk(value, [JavaLangLong class])))) longLongValue]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:);
  methods[1].selector = @selector(serializeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LIOSClass;", "(Ljava/lang/Class<*>;)V", "serialize", "LNSObject;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;", "LJavaIoIOException;", "LComFasterxmlJacksonDatabindSerStdNumberSerializers;", "Lcom/fasterxml/jackson/databind/ser/std/NumberSerializers$Base<Ljava/lang/Object;>;", (void *)&ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer__Annotations$0 };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer = { "LongSerializer", "com.fasterxml.jackson.databind.ser.std", ptrTable, methods, NULL, 7, 0x19, 2, 0, 5, -1, -1, 6, 7 };
  return &_ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer;
}

@end

void ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer_initWithIOSClass_(ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer *self, IOSClass *cls) {
  ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base_initWithIOSClass_withComFasterxmlJacksonCoreJsonParser_NumberType_withNSString_(self, cls, JreLoadEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, LONG), @"number");
}

ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer *new_ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer_initWithIOSClass_(IOSClass *cls) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer, initWithIOSClass_, cls)
}

ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer *create_ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer_initWithIOSClass_(IOSClass *cls) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer, initWithIOSClass_, cls)
}

IOSObjectArray *ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_ComFasterxmlJacksonDatabindAnnotationJacksonStdImpl() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer)

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer)

ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer *ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer_instance;

@implementation ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeNumberWithFloat:[((JavaLangFloat *) nil_chk(((JavaLangFloat *) cast_chk(value, [JavaLangFloat class])))) floatValue]];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 0, 1, 2, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(serializeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "instance", "LComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer;", .constantValue.asLong = 0, 0x18, -1, 3, -1, -1 },
  };
  static const void *ptrTable[] = { "serialize", "LNSObject;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;", "LJavaIoIOException;", &ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer_instance, "LComFasterxmlJacksonDatabindSerStdNumberSerializers;", "Lcom/fasterxml/jackson/databind/ser/std/NumberSerializers$Base<Ljava/lang/Object;>;", (void *)&ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer__Annotations$0 };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer = { "FloatSerializer", "com.fasterxml.jackson.databind.ser.std", ptrTable, methods, fields, 7, 0x19, 2, 1, 4, -1, -1, 5, 6 };
  return &_ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer class]) {
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer_instance, new_ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer_init());
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer)
  }
}

@end

void ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer_init(ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer *self) {
  ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base_initWithIOSClass_withComFasterxmlJacksonCoreJsonParser_NumberType_withNSString_(self, JavaLangFloat_class_(), JreLoadEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, FLOAT), @"number");
}

ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer *new_ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer, init)
}

ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer *create_ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer, init)
}

IOSObjectArray *ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_ComFasterxmlJacksonDatabindAnnotationJacksonStdImpl() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer)

@implementation ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)cls {
  ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer_initWithIOSClass_(self, cls);
  return self;
}

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeNumberWithDouble:[((JavaLangDouble *) nil_chk(((JavaLangDouble *) cast_chk(value, [JavaLangDouble class])))) doubleValue]];
}

- (void)serializeWithTypeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer {
  [self serializeWithId:value withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, 4, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:);
  methods[1].selector = @selector(serializeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  methods[2].selector = @selector(serializeWithTypeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindJsontypeTypeSerializer:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LIOSClass;", "(Ljava/lang/Class<*>;)V", "serialize", "LNSObject;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;", "LJavaIoIOException;", "serializeWithType", "LNSObject;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindJsontypeTypeSerializer;", "LComFasterxmlJacksonDatabindSerStdNumberSerializers;", "Lcom/fasterxml/jackson/databind/ser/std/NumberSerializers$Base<Ljava/lang/Object;>;", (void *)&ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer__Annotations$0 };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer = { "DoubleSerializer", "com.fasterxml.jackson.databind.ser.std", ptrTable, methods, NULL, 7, 0x19, 3, 0, 7, -1, -1, 8, 9 };
  return &_ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer;
}

@end

void ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer_initWithIOSClass_(ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer *self, IOSClass *cls) {
  ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base_initWithIOSClass_withComFasterxmlJacksonCoreJsonParser_NumberType_withNSString_(self, cls, JreLoadEnum(ComFasterxmlJacksonCoreJsonParser_NumberType, DOUBLE), @"number");
}

ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer *new_ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer_initWithIOSClass_(IOSClass *cls) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer, initWithIOSClass_, cls)
}

ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer *create_ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer_initWithIOSClass_(IOSClass *cls) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer, initWithIOSClass_, cls)
}

IOSObjectArray *ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_ComFasterxmlJacksonDatabindAnnotationJacksonStdImpl() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer)
