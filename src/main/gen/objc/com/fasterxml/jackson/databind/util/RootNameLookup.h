//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/util/RootNameLookup.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindUtilRootNameLookup")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindUtilRootNameLookup
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindUtilRootNameLookup 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindUtilRootNameLookup 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindUtilRootNameLookup

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindUtilRootNameLookup_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindUtilRootNameLookup || defined(INCLUDE_ComFasterxmlJacksonDatabindUtilRootNameLookup))
#define ComFasterxmlJacksonDatabindUtilRootNameLookup_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class ComFasterxmlJacksonDatabindCfgMapperConfig;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindPropertyName;
@class ComFasterxmlJacksonDatabindUtilLRUMap;
@class IOSClass;

/*!
 @brief Helper class for caching resolved root names.
 */
@interface ComFasterxmlJacksonDatabindUtilRootNameLookup : NSObject < JavaIoSerializable > {
 @public
  /*!
   @brief For efficient operation, let's try to minimize number of times we
  need to introspect root element name to use.
   */
  ComFasterxmlJacksonDatabindUtilLRUMap *_rootNames_;
}

#pragma mark Public

- (instancetype __nonnull)init;

- (ComFasterxmlJacksonDatabindPropertyName *)findRootNameWithIOSClass:(IOSClass *)rootType
                       withComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)config;

- (ComFasterxmlJacksonDatabindPropertyName *)findRootNameWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)rootType
                                                  withComFasterxmlJacksonDatabindCfgMapperConfig:(ComFasterxmlJacksonDatabindCfgMapperConfig *)config;

#pragma mark Protected

/*!
 @brief Need to override to reproduce cache object via constructor, instead
  of serialize/deserialize (since we do NOT want to retain cached data)
 */
- (id)readResolve;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindUtilRootNameLookup)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindUtilRootNameLookup, _rootNames_, ComFasterxmlJacksonDatabindUtilLRUMap *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindUtilRootNameLookup_init(ComFasterxmlJacksonDatabindUtilRootNameLookup *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindUtilRootNameLookup *new_ComFasterxmlJacksonDatabindUtilRootNameLookup_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindUtilRootNameLookup *create_ComFasterxmlJacksonDatabindUtilRootNameLookup_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindUtilRootNameLookup)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindUtilRootNameLookup")
