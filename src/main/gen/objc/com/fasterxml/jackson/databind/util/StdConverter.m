//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/util/StdConverter.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/type/TypeFactory.h"
#include "com/fasterxml/jackson/databind/util/Converter.h"
#include "com/fasterxml/jackson/databind/util/StdConverter.h"
#include "java/lang/IllegalStateException.h"

@implementation ComFasterxmlJacksonDatabindUtilStdConverter

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindUtilStdConverter_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (id)convertWithId:(id)value {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindJavaType *)getInputTypeWithComFasterxmlJacksonDatabindTypeTypeFactory:(ComFasterxmlJacksonDatabindTypeTypeFactory *)typeFactory {
  return [((ComFasterxmlJacksonDatabindJavaType *) nil_chk([self _findConverterTypeWithComFasterxmlJacksonDatabindTypeTypeFactory:typeFactory])) containedTypeWithInt:0];
}

- (ComFasterxmlJacksonDatabindJavaType *)getOutputTypeWithComFasterxmlJacksonDatabindTypeTypeFactory:(ComFasterxmlJacksonDatabindTypeTypeFactory *)typeFactory {
  return [((ComFasterxmlJacksonDatabindJavaType *) nil_chk([self _findConverterTypeWithComFasterxmlJacksonDatabindTypeTypeFactory:typeFactory])) containedTypeWithInt:1];
}

- (ComFasterxmlJacksonDatabindJavaType *)_findConverterTypeWithComFasterxmlJacksonDatabindTypeTypeFactory:(ComFasterxmlJacksonDatabindTypeTypeFactory *)tf {
  ComFasterxmlJacksonDatabindJavaType *thisType = [((ComFasterxmlJacksonDatabindTypeTypeFactory *) nil_chk(tf)) constructTypeWithJavaLangReflectType:[self java_getClass]];
  ComFasterxmlJacksonDatabindJavaType *convType = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(thisType)) findSuperTypeWithIOSClass:ComFasterxmlJacksonDatabindUtilConverter_class_()];
  if (convType == nil || [convType containedTypeCount] < 2) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$", @"Cannot find OUT type parameter for Converter of type ", [[self java_getClass] getName]));
  }
  return convType;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x401, 0, 1, -1, 2, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, 5, 4, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x4, 6, 4, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(convertWithId:);
  methods[2].selector = @selector(getInputTypeWithComFasterxmlJacksonDatabindTypeTypeFactory:);
  methods[3].selector = @selector(getOutputTypeWithComFasterxmlJacksonDatabindTypeTypeFactory:);
  methods[4].selector = @selector(_findConverterTypeWithComFasterxmlJacksonDatabindTypeTypeFactory:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "convert", "LNSObject;", "(TIN;)TOUT;", "getInputType", "LComFasterxmlJacksonDatabindTypeTypeFactory;", "getOutputType", "_findConverterType", "<IN:Ljava/lang/Object;OUT:Ljava/lang/Object;>Ljava/lang/Object;Lcom/fasterxml/jackson/databind/util/Converter<TIN;TOUT;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindUtilStdConverter = { "StdConverter", "com.fasterxml.jackson.databind.util", ptrTable, methods, NULL, 7, 0x401, 5, 0, -1, -1, -1, 7, -1 };
  return &_ComFasterxmlJacksonDatabindUtilStdConverter;
}

@end

void ComFasterxmlJacksonDatabindUtilStdConverter_init(ComFasterxmlJacksonDatabindUtilStdConverter *self) {
  NSObject_init(self);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindUtilStdConverter)
