//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/std/SqlDateSerializer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/databind/SerializerProvider.h"
#include "com/fasterxml/jackson/databind/annotation/JacksonStdImpl.h"
#include "com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.h"
#include "com/fasterxml/jackson/databind/ser/std/SqlDateSerializer.h"
#include "java/lang/Boolean.h"
#include "java/lang/annotation/Annotation.h"
#include "java/sql/Date.h"
#include "java/text/DateFormat.h"

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindSerStdSqlDateSerializer__Annotations$0(void);

@implementation ComFasterxmlJacksonDatabindSerStdSqlDateSerializer

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindSerStdSqlDateSerializer_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (instancetype __nonnull)initWithJavaLangBoolean:(JavaLangBoolean *)useTimestamp
                           withJavaTextDateFormat:(JavaTextDateFormat *)customFormat {
  ComFasterxmlJacksonDatabindSerStdSqlDateSerializer_initWithJavaLangBoolean_withJavaTextDateFormat_(self, useTimestamp, customFormat);
  return self;
}

- (ComFasterxmlJacksonDatabindSerStdSqlDateSerializer *)withFormatWithJavaLangBoolean:(JavaLangBoolean *)timestamp
                                                               withJavaTextDateFormat:(JavaTextDateFormat *)customFormat {
  return create_ComFasterxmlJacksonDatabindSerStdSqlDateSerializer_initWithJavaLangBoolean_withJavaTextDateFormat_(timestamp, customFormat);
}

- (jlong)_timestampWithId:(JavaSqlDate *)value {
  return (value == nil) ? 0LL : [((JavaSqlDate *) nil_chk(value)) getTime];
}

- (void)serializeWithId:(JavaSqlDate *)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  if ([self _asTimestampWithComFasterxmlJacksonDatabindSerializerProvider:provider]) {
    [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeNumberWithLong:[self _timestampWithId:value]];
    return;
  }
  if (_customFormat_ == nil) {
    [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(g)) writeStringWithNSString:[((JavaSqlDate *) nil_chk(value)) description]];
    return;
  }
  [self _serializeAsStringWithJavaUtilDate:value withComFasterxmlJacksonCoreJsonGenerator:g withComFasterxmlJacksonDatabindSerializerProvider:provider];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerStdSqlDateSerializer;", 0x1, 1, 0, -1, -1, -1, -1 },
    { NULL, "J", 0x4, 2, 3, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 4, 5, 6, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(initWithJavaLangBoolean:withJavaTextDateFormat:);
  methods[2].selector = @selector(withFormatWithJavaLangBoolean:withJavaTextDateFormat:);
  methods[3].selector = @selector(_timestampWithId:);
  methods[4].selector = @selector(serializeWithId:withComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "LJavaLangBoolean;LJavaTextDateFormat;", "withFormat", "_timestamp", "LJavaSqlDate;", "serialize", "LJavaSqlDate;LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;", "LJavaIoIOException;", "Lcom/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase<Ljava/sql/Date;>;", (void *)&ComFasterxmlJacksonDatabindSerStdSqlDateSerializer__Annotations$0 };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerStdSqlDateSerializer = { "SqlDateSerializer", "com.fasterxml.jackson.databind.ser.std", ptrTable, methods, NULL, 7, 0x1, 5, 0, -1, -1, -1, 7, 8 };
  return &_ComFasterxmlJacksonDatabindSerStdSqlDateSerializer;
}

@end

void ComFasterxmlJacksonDatabindSerStdSqlDateSerializer_init(ComFasterxmlJacksonDatabindSerStdSqlDateSerializer *self) {
  ComFasterxmlJacksonDatabindSerStdSqlDateSerializer_initWithJavaLangBoolean_withJavaTextDateFormat_(self, nil, nil);
}

ComFasterxmlJacksonDatabindSerStdSqlDateSerializer *new_ComFasterxmlJacksonDatabindSerStdSqlDateSerializer_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerStdSqlDateSerializer, init)
}

ComFasterxmlJacksonDatabindSerStdSqlDateSerializer *create_ComFasterxmlJacksonDatabindSerStdSqlDateSerializer_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerStdSqlDateSerializer, init)
}

void ComFasterxmlJacksonDatabindSerStdSqlDateSerializer_initWithJavaLangBoolean_withJavaTextDateFormat_(ComFasterxmlJacksonDatabindSerStdSqlDateSerializer *self, JavaLangBoolean *useTimestamp, JavaTextDateFormat *customFormat) {
  ComFasterxmlJacksonDatabindSerStdDateTimeSerializerBase_initWithIOSClass_withJavaLangBoolean_withJavaTextDateFormat_(self, JavaSqlDate_class_(), useTimestamp, customFormat);
}

ComFasterxmlJacksonDatabindSerStdSqlDateSerializer *new_ComFasterxmlJacksonDatabindSerStdSqlDateSerializer_initWithJavaLangBoolean_withJavaTextDateFormat_(JavaLangBoolean *useTimestamp, JavaTextDateFormat *customFormat) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerStdSqlDateSerializer, initWithJavaLangBoolean_withJavaTextDateFormat_, useTimestamp, customFormat)
}

ComFasterxmlJacksonDatabindSerStdSqlDateSerializer *create_ComFasterxmlJacksonDatabindSerStdSqlDateSerializer_initWithJavaLangBoolean_withJavaTextDateFormat_(JavaLangBoolean *useTimestamp, JavaTextDateFormat *customFormat) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerStdSqlDateSerializer, initWithJavaLangBoolean_withJavaTextDateFormat_, useTimestamp, customFormat)
}

IOSObjectArray *ComFasterxmlJacksonDatabindSerStdSqlDateSerializer__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_ComFasterxmlJacksonDatabindAnnotationJacksonStdImpl() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerStdSqlDateSerializer)
