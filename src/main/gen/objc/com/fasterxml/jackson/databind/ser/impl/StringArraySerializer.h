//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/impl/StringArraySerializer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerImplStringArraySerializer")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindSerImplStringArraySerializer
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerImplStringArraySerializer 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerImplStringArraySerializer 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindSerImplStringArraySerializer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindSerImplStringArraySerializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerImplStringArraySerializer || defined(INCLUDE_ComFasterxmlJacksonDatabindSerImplStringArraySerializer))
#define ComFasterxmlJacksonDatabindSerImplStringArraySerializer_

#define RESTRICT_ComFasterxmlJacksonDatabindSerStdArraySerializerBase 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerStdArraySerializerBase 1
#include "com/fasterxml/jackson/databind/ser/std/ArraySerializerBase.h"

#define RESTRICT_ComFasterxmlJacksonDatabindSerContextualSerializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerContextualSerializer 1
#include "com/fasterxml/jackson/databind/ser/ContextualSerializer.h"

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsonNode;
@class ComFasterxmlJacksonDatabindJsonSerializer;
@class ComFasterxmlJacksonDatabindJsontypeTypeSerializer;
@class ComFasterxmlJacksonDatabindSerContainerSerializer;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSClass;
@class IOSObjectArray;
@class JavaLangBoolean;
@protocol ComFasterxmlJacksonDatabindBeanProperty;
@protocol ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;
@protocol JavaLangReflectType;

/*!
 @brief Standard serializer used for <code>String[]</code> values.
 */
@interface ComFasterxmlJacksonDatabindSerImplStringArraySerializer : ComFasterxmlJacksonDatabindSerStdArraySerializerBase < ComFasterxmlJacksonDatabindSerContextualSerializer > {
 @public
  /*!
   @brief Value serializer to use, if it's not the standard one
  (if it is we can optimize serialization a lot)
   */
  ComFasterxmlJacksonDatabindJsonSerializer *_elementSerializer_;
}

#pragma mark Public

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindSerImplStringArraySerializer:(ComFasterxmlJacksonDatabindSerImplStringArraySerializer *)src
                                              withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)prop
                                            withComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)ser
                                                                      withJavaLangBoolean:(JavaLangBoolean *)unwrapSingle;

- (ComFasterxmlJacksonDatabindJsonSerializer *)_withResolvedWithComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)prop
                                                                                    withJavaLangBoolean:(JavaLangBoolean *)unwrapSingle;

/*!
 @brief Strings never add type info; hence, even if type serializer is suggested,
  we'll ignore it...
 */
- (ComFasterxmlJacksonDatabindSerContainerSerializer *)_withValueTypeSerializerWithComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)vts;

- (void)acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint;

- (ComFasterxmlJacksonDatabindJsonSerializer *)createContextualWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                     withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property;

- (ComFasterxmlJacksonDatabindJsonSerializer *)getContentSerializer;

- (ComFasterxmlJacksonDatabindJavaType *)getContentType;

- (ComFasterxmlJacksonDatabindJsonNode *)getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                            withJavaLangReflectType:(id<JavaLangReflectType>)typeHint;

- (jboolean)hasSingleElementWithId:(IOSObjectArray *)value;

- (jboolean)isEmptyWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                              withId:(IOSObjectArray *)value;

- (void)serializeWithId:(IOSObjectArray *)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

- (void)serializeContentsWithId:(IOSObjectArray *)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

#pragma mark Protected

- (instancetype __nonnull)init;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindSerStdArraySerializerBase:(ComFasterxmlJacksonDatabindSerStdArraySerializerBase *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindSerStdArraySerializerBase:(ComFasterxmlJacksonDatabindSerStdArraySerializerBase *)arg0
                                           withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindSerStdArraySerializerBase:(ComFasterxmlJacksonDatabindSerStdArraySerializerBase *)arg0
                                           withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)arg1
                                                                   withJavaLangBoolean:(JavaLangBoolean *)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0
withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonDatabindSerImplStringArraySerializer)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindSerImplStringArraySerializer, _elementSerializer_, ComFasterxmlJacksonDatabindJsonSerializer *)

inline ComFasterxmlJacksonDatabindSerImplStringArraySerializer *ComFasterxmlJacksonDatabindSerImplStringArraySerializer_get_instance(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerImplStringArraySerializer *ComFasterxmlJacksonDatabindSerImplStringArraySerializer_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindSerImplStringArraySerializer, instance, ComFasterxmlJacksonDatabindSerImplStringArraySerializer *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerImplStringArraySerializer_init(ComFasterxmlJacksonDatabindSerImplStringArraySerializer *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerImplStringArraySerializer *new_ComFasterxmlJacksonDatabindSerImplStringArraySerializer_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerImplStringArraySerializer *create_ComFasterxmlJacksonDatabindSerImplStringArraySerializer_init(void);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerImplStringArraySerializer_initWithComFasterxmlJacksonDatabindSerImplStringArraySerializer_withComFasterxmlJacksonDatabindBeanProperty_withComFasterxmlJacksonDatabindJsonSerializer_withJavaLangBoolean_(ComFasterxmlJacksonDatabindSerImplStringArraySerializer *self, ComFasterxmlJacksonDatabindSerImplStringArraySerializer *src, id<ComFasterxmlJacksonDatabindBeanProperty> prop, ComFasterxmlJacksonDatabindJsonSerializer *ser, JavaLangBoolean *unwrapSingle);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerImplStringArraySerializer *new_ComFasterxmlJacksonDatabindSerImplStringArraySerializer_initWithComFasterxmlJacksonDatabindSerImplStringArraySerializer_withComFasterxmlJacksonDatabindBeanProperty_withComFasterxmlJacksonDatabindJsonSerializer_withJavaLangBoolean_(ComFasterxmlJacksonDatabindSerImplStringArraySerializer *src, id<ComFasterxmlJacksonDatabindBeanProperty> prop, ComFasterxmlJacksonDatabindJsonSerializer *ser, JavaLangBoolean *unwrapSingle) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerImplStringArraySerializer *create_ComFasterxmlJacksonDatabindSerImplStringArraySerializer_initWithComFasterxmlJacksonDatabindSerImplStringArraySerializer_withComFasterxmlJacksonDatabindBeanProperty_withComFasterxmlJacksonDatabindJsonSerializer_withJavaLangBoolean_(ComFasterxmlJacksonDatabindSerImplStringArraySerializer *src, id<ComFasterxmlJacksonDatabindBeanProperty> prop, ComFasterxmlJacksonDatabindJsonSerializer *ser, JavaLangBoolean *unwrapSingle);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerImplStringArraySerializer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerImplStringArraySerializer")
