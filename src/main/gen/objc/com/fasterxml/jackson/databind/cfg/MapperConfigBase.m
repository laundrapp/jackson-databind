//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/cfg/MapperConfigBase.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/annotation/JsonAutoDetect.h"
#include "com/fasterxml/jackson/annotation/JsonFormat.h"
#include "com/fasterxml/jackson/annotation/JsonIgnoreProperties.h"
#include "com/fasterxml/jackson/annotation/JsonInclude.h"
#include "com/fasterxml/jackson/annotation/JsonSetter.h"
#include "com/fasterxml/jackson/core/Base64Variant.h"
#include "com/fasterxml/jackson/databind/AnnotationIntrospector.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/MapperFeature.h"
#include "com/fasterxml/jackson/databind/PropertyName.h"
#include "com/fasterxml/jackson/databind/PropertyNamingStrategy.h"
#include "com/fasterxml/jackson/databind/cfg/BaseSettings.h"
#include "com/fasterxml/jackson/databind/cfg/ConfigOverride.h"
#include "com/fasterxml/jackson/databind/cfg/ConfigOverrides.h"
#include "com/fasterxml/jackson/databind/cfg/ContextAttributes.h"
#include "com/fasterxml/jackson/databind/cfg/HandlerInstantiator.h"
#include "com/fasterxml/jackson/databind/cfg/MapperConfig.h"
#include "com/fasterxml/jackson/databind/cfg/MapperConfigBase.h"
#include "com/fasterxml/jackson/databind/introspect/AnnotatedClass.h"
#include "com/fasterxml/jackson/databind/introspect/ClassIntrospector.h"
#include "com/fasterxml/jackson/databind/introspect/SimpleMixInResolver.h"
#include "com/fasterxml/jackson/databind/introspect/VisibilityChecker.h"
#include "com/fasterxml/jackson/databind/jsontype/SubtypeResolver.h"
#include "com/fasterxml/jackson/databind/jsontype/TypeResolverBuilder.h"
#include "com/fasterxml/jackson/databind/type/TypeFactory.h"
#include "com/fasterxml/jackson/databind/util/RootNameLookup.h"
#include "java/lang/Boolean.h"
#include "java/lang/Deprecated.h"
#include "java/lang/UnsupportedOperationException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/text/DateFormat.h"
#include "java/util/Locale.h"
#include "java/util/Map.h"
#include "java/util/TimeZone.h"

inline jint ComFasterxmlJacksonDatabindCfgMapperConfigBase_get_DEFAULT_MAPPER_FEATURES(void);
static jint ComFasterxmlJacksonDatabindCfgMapperConfigBase_DEFAULT_MAPPER_FEATURES;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(ComFasterxmlJacksonDatabindCfgMapperConfigBase, DEFAULT_MAPPER_FEATURES, jint)

/*!
 @since 2.9
 */
inline jint ComFasterxmlJacksonDatabindCfgMapperConfigBase_get_AUTO_DETECT_MASK(void);
static jint ComFasterxmlJacksonDatabindCfgMapperConfigBase_AUTO_DETECT_MASK;
J2OBJC_STATIC_FIELD_PRIMITIVE_FINAL(ComFasterxmlJacksonDatabindCfgMapperConfigBase, AUTO_DETECT_MASK, jint)

__attribute__((unused)) static ComFasterxmlJacksonDatabindCfgContextAttributes *ComFasterxmlJacksonDatabindCfgMapperConfigBase_getAttributes(ComFasterxmlJacksonDatabindCfgMapperConfigBase *self);

__attribute__((unused)) static ComFasterxmlJacksonDatabindCfgConfigOverride *ComFasterxmlJacksonDatabindCfgMapperConfigBase_getConfigOverrideWithIOSClass_(ComFasterxmlJacksonDatabindCfgMapperConfigBase *self, IOSClass *type);

__attribute__((unused)) static ComFasterxmlJacksonAnnotationJsonInclude_Value *ComFasterxmlJacksonDatabindCfgMapperConfigBase_getDefaultPropertyInclusion(ComFasterxmlJacksonDatabindCfgMapperConfigBase *self);

__attribute__((unused)) static ComFasterxmlJacksonAnnotationJsonInclude_Value *ComFasterxmlJacksonDatabindCfgMapperConfigBase_getDefaultPropertyInclusionWithIOSClass_(ComFasterxmlJacksonDatabindCfgMapperConfigBase *self, IOSClass *baseType);

__attribute__((unused)) static ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *ComFasterxmlJacksonDatabindCfgMapperConfigBase_getDefaultPropertyIgnoralsWithIOSClass_(ComFasterxmlJacksonDatabindCfgMapperConfigBase *self, IOSClass *type);

__attribute__((unused)) static id<ComFasterxmlJacksonDatabindIntrospectVisibilityChecker> ComFasterxmlJacksonDatabindCfgMapperConfigBase_getDefaultVisibilityChecker(ComFasterxmlJacksonDatabindCfgMapperConfigBase *self);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindCfgMapperConfigBase__Annotations$0(void);

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindCfgMapperConfigBase)

ComFasterxmlJacksonDatabindCfgConfigOverride *ComFasterxmlJacksonDatabindCfgMapperConfigBase_EMPTY_OVERRIDE;

@implementation ComFasterxmlJacksonDatabindCfgMapperConfigBase

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindCfgBaseSettings:(ComFasterxmlJacksonDatabindCfgBaseSettings *)base
                      withComFasterxmlJacksonDatabindJsontypeSubtypeResolver:(ComFasterxmlJacksonDatabindJsontypeSubtypeResolver *)str
                withComFasterxmlJacksonDatabindIntrospectSimpleMixInResolver:(ComFasterxmlJacksonDatabindIntrospectSimpleMixInResolver *)mixins
                           withComFasterxmlJacksonDatabindUtilRootNameLookup:(ComFasterxmlJacksonDatabindUtilRootNameLookup *)rootNames
                           withComFasterxmlJacksonDatabindCfgConfigOverrides:(ComFasterxmlJacksonDatabindCfgConfigOverrides *)configOverrides {
  ComFasterxmlJacksonDatabindCfgMapperConfigBase_initWithComFasterxmlJacksonDatabindCfgBaseSettings_withComFasterxmlJacksonDatabindJsontypeSubtypeResolver_withComFasterxmlJacksonDatabindIntrospectSimpleMixInResolver_withComFasterxmlJacksonDatabindUtilRootNameLookup_withComFasterxmlJacksonDatabindCfgConfigOverrides_(self, base, str, mixins, rootNames, configOverrides);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindCfgMapperConfigBase:(ComFasterxmlJacksonDatabindCfgMapperConfigBase *)src
                    withComFasterxmlJacksonDatabindIntrospectSimpleMixInResolver:(ComFasterxmlJacksonDatabindIntrospectSimpleMixInResolver *)mixins
                               withComFasterxmlJacksonDatabindUtilRootNameLookup:(ComFasterxmlJacksonDatabindUtilRootNameLookup *)rootNames
                               withComFasterxmlJacksonDatabindCfgConfigOverrides:(ComFasterxmlJacksonDatabindCfgConfigOverrides *)configOverrides {
  ComFasterxmlJacksonDatabindCfgMapperConfigBase_initWithComFasterxmlJacksonDatabindCfgMapperConfigBase_withComFasterxmlJacksonDatabindIntrospectSimpleMixInResolver_withComFasterxmlJacksonDatabindUtilRootNameLookup_withComFasterxmlJacksonDatabindCfgConfigOverrides_(self, src, mixins, rootNames, configOverrides);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindCfgMapperConfigBase:(ComFasterxmlJacksonDatabindCfgMapperConfigBase *)src {
  ComFasterxmlJacksonDatabindCfgMapperConfigBase_initWithComFasterxmlJacksonDatabindCfgMapperConfigBase_(self, src);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindCfgMapperConfigBase:(ComFasterxmlJacksonDatabindCfgMapperConfigBase *)src
                                  withComFasterxmlJacksonDatabindCfgBaseSettings:(ComFasterxmlJacksonDatabindCfgBaseSettings *)base {
  ComFasterxmlJacksonDatabindCfgMapperConfigBase_initWithComFasterxmlJacksonDatabindCfgMapperConfigBase_withComFasterxmlJacksonDatabindCfgBaseSettings_(self, src, base);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindCfgMapperConfigBase:(ComFasterxmlJacksonDatabindCfgMapperConfigBase *)src
                                                                         withInt:(jint)mapperFeatures {
  ComFasterxmlJacksonDatabindCfgMapperConfigBase_initWithComFasterxmlJacksonDatabindCfgMapperConfigBase_withInt_(self, src, mapperFeatures);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindCfgMapperConfigBase:(ComFasterxmlJacksonDatabindCfgMapperConfigBase *)src
                          withComFasterxmlJacksonDatabindJsontypeSubtypeResolver:(ComFasterxmlJacksonDatabindJsontypeSubtypeResolver *)str {
  ComFasterxmlJacksonDatabindCfgMapperConfigBase_initWithComFasterxmlJacksonDatabindCfgMapperConfigBase_withComFasterxmlJacksonDatabindJsontypeSubtypeResolver_(self, src, str);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindCfgMapperConfigBase:(ComFasterxmlJacksonDatabindCfgMapperConfigBase *)src
                                     withComFasterxmlJacksonDatabindPropertyName:(ComFasterxmlJacksonDatabindPropertyName *)rootName {
  ComFasterxmlJacksonDatabindCfgMapperConfigBase_initWithComFasterxmlJacksonDatabindCfgMapperConfigBase_withComFasterxmlJacksonDatabindPropertyName_(self, src, rootName);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindCfgMapperConfigBase:(ComFasterxmlJacksonDatabindCfgMapperConfigBase *)src
                                                                    withIOSClass:(IOSClass *)view {
  ComFasterxmlJacksonDatabindCfgMapperConfigBase_initWithComFasterxmlJacksonDatabindCfgMapperConfigBase_withIOSClass_(self, src, view);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindCfgMapperConfigBase:(ComFasterxmlJacksonDatabindCfgMapperConfigBase *)src
                    withComFasterxmlJacksonDatabindIntrospectSimpleMixInResolver:(ComFasterxmlJacksonDatabindIntrospectSimpleMixInResolver *)mixins {
  ComFasterxmlJacksonDatabindCfgMapperConfigBase_initWithComFasterxmlJacksonDatabindCfgMapperConfigBase_withComFasterxmlJacksonDatabindIntrospectSimpleMixInResolver_(self, src, mixins);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindCfgMapperConfigBase:(ComFasterxmlJacksonDatabindCfgMapperConfigBase *)src
                             withComFasterxmlJacksonDatabindCfgContextAttributes:(ComFasterxmlJacksonDatabindCfgContextAttributes *)attr {
  ComFasterxmlJacksonDatabindCfgMapperConfigBase_initWithComFasterxmlJacksonDatabindCfgMapperConfigBase_withComFasterxmlJacksonDatabindCfgContextAttributes_(self, src, attr);
  return self;
}

- (ComFasterxmlJacksonDatabindCfgMapperConfigBase *)_withBaseWithComFasterxmlJacksonDatabindCfgBaseSettings:(ComFasterxmlJacksonDatabindCfgBaseSettings *)newBase {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindCfgMapperConfigBase *)_withMapperFeaturesWithInt:(jint)mapperFeatures {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindCfgMapperConfigBase *)withWithComFasterxmlJacksonDatabindMapperFeatureArray:(IOSObjectArray *)features {
  jint newMapperFlags = _mapperFeatures_;
  {
    IOSObjectArray *a__ = features;
    ComFasterxmlJacksonDatabindMapperFeature * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    ComFasterxmlJacksonDatabindMapperFeature * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      ComFasterxmlJacksonDatabindMapperFeature *f = *b__++;
      newMapperFlags |= [((ComFasterxmlJacksonDatabindMapperFeature *) nil_chk(f)) getMask];
    }
  }
  if (newMapperFlags == _mapperFeatures_) {
    return self;
  }
  return [self _withMapperFeaturesWithInt:newMapperFlags];
}

- (ComFasterxmlJacksonDatabindCfgMapperConfigBase *)withoutWithComFasterxmlJacksonDatabindMapperFeatureArray:(IOSObjectArray *)features {
  jint newMapperFlags = _mapperFeatures_;
  {
    IOSObjectArray *a__ = features;
    ComFasterxmlJacksonDatabindMapperFeature * const *b__ = ((IOSObjectArray *) nil_chk(a__))->buffer_;
    ComFasterxmlJacksonDatabindMapperFeature * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      ComFasterxmlJacksonDatabindMapperFeature *f = *b__++;
      newMapperFlags &= ~[((ComFasterxmlJacksonDatabindMapperFeature *) nil_chk(f)) getMask];
    }
  }
  if (newMapperFlags == _mapperFeatures_) {
    return self;
  }
  return [self _withMapperFeaturesWithInt:newMapperFlags];
}

- (ComFasterxmlJacksonDatabindCfgMapperConfigBase *)withWithComFasterxmlJacksonDatabindMapperFeature:(ComFasterxmlJacksonDatabindMapperFeature *)feature
                                                                                         withBoolean:(jboolean)state {
  jint newMapperFlags;
  if (state) {
    newMapperFlags = _mapperFeatures_ | [((ComFasterxmlJacksonDatabindMapperFeature *) nil_chk(feature)) getMask];
  }
  else {
    newMapperFlags = _mapperFeatures_ & ~[((ComFasterxmlJacksonDatabindMapperFeature *) nil_chk(feature)) getMask];
  }
  if (newMapperFlags == _mapperFeatures_) {
    return self;
  }
  return [self _withMapperFeaturesWithInt:newMapperFlags];
}

- (ComFasterxmlJacksonDatabindCfgMapperConfigBase *)withWithComFasterxmlJacksonDatabindAnnotationIntrospector:(ComFasterxmlJacksonDatabindAnnotationIntrospector *)ai {
  return [self _withBaseWithComFasterxmlJacksonDatabindCfgBaseSettings:[((ComFasterxmlJacksonDatabindCfgBaseSettings *) nil_chk(_base_)) withAnnotationIntrospectorWithComFasterxmlJacksonDatabindAnnotationIntrospector:ai]];
}

- (ComFasterxmlJacksonDatabindCfgMapperConfigBase *)withAppendedAnnotationIntrospectorWithComFasterxmlJacksonDatabindAnnotationIntrospector:(ComFasterxmlJacksonDatabindAnnotationIntrospector *)ai {
  return [self _withBaseWithComFasterxmlJacksonDatabindCfgBaseSettings:[((ComFasterxmlJacksonDatabindCfgBaseSettings *) nil_chk(_base_)) withAppendedAnnotationIntrospectorWithComFasterxmlJacksonDatabindAnnotationIntrospector:ai]];
}

- (ComFasterxmlJacksonDatabindCfgMapperConfigBase *)withInsertedAnnotationIntrospectorWithComFasterxmlJacksonDatabindAnnotationIntrospector:(ComFasterxmlJacksonDatabindAnnotationIntrospector *)ai {
  return [self _withBaseWithComFasterxmlJacksonDatabindCfgBaseSettings:[((ComFasterxmlJacksonDatabindCfgBaseSettings *) nil_chk(_base_)) withInsertedAnnotationIntrospectorWithComFasterxmlJacksonDatabindAnnotationIntrospector:ai]];
}

- (ComFasterxmlJacksonDatabindCfgMapperConfigBase *)withWithComFasterxmlJacksonDatabindIntrospectClassIntrospector:(ComFasterxmlJacksonDatabindIntrospectClassIntrospector *)ci {
  return [self _withBaseWithComFasterxmlJacksonDatabindCfgBaseSettings:[((ComFasterxmlJacksonDatabindCfgBaseSettings *) nil_chk(_base_)) withClassIntrospectorWithComFasterxmlJacksonDatabindIntrospectClassIntrospector:ci]];
}

- (ComFasterxmlJacksonDatabindCfgMapperConfigBase *)withWithComFasterxmlJacksonDatabindCfgContextAttributes:(ComFasterxmlJacksonDatabindCfgContextAttributes *)attrs {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindCfgMapperConfigBase *)withAttributesWithJavaUtilMap:(id<JavaUtilMap>)attributes {
  return [self withWithComFasterxmlJacksonDatabindCfgContextAttributes:[((ComFasterxmlJacksonDatabindCfgContextAttributes *) nil_chk(ComFasterxmlJacksonDatabindCfgMapperConfigBase_getAttributes(self))) withSharedAttributesWithJavaUtilMap:attributes]];
}

- (ComFasterxmlJacksonDatabindCfgMapperConfigBase *)withAttributeWithId:(id)key
                                                                 withId:(id)value {
  return [self withWithComFasterxmlJacksonDatabindCfgContextAttributes:[((ComFasterxmlJacksonDatabindCfgContextAttributes *) nil_chk(ComFasterxmlJacksonDatabindCfgMapperConfigBase_getAttributes(self))) withSharedAttributeWithId:key withId:value]];
}

- (ComFasterxmlJacksonDatabindCfgMapperConfigBase *)withoutAttributeWithId:(id)key {
  return [self withWithComFasterxmlJacksonDatabindCfgContextAttributes:[((ComFasterxmlJacksonDatabindCfgContextAttributes *) nil_chk(ComFasterxmlJacksonDatabindCfgMapperConfigBase_getAttributes(self))) withoutSharedAttributeWithId:key]];
}

- (ComFasterxmlJacksonDatabindCfgMapperConfigBase *)withWithComFasterxmlJacksonDatabindTypeTypeFactory:(ComFasterxmlJacksonDatabindTypeTypeFactory *)tf {
  return [self _withBaseWithComFasterxmlJacksonDatabindCfgBaseSettings:[((ComFasterxmlJacksonDatabindCfgBaseSettings *) nil_chk(_base_)) withTypeFactoryWithComFasterxmlJacksonDatabindTypeTypeFactory:tf]];
}

- (ComFasterxmlJacksonDatabindCfgMapperConfigBase *)withWithComFasterxmlJacksonDatabindJsontypeTypeResolverBuilder:(id<ComFasterxmlJacksonDatabindJsontypeTypeResolverBuilder>)trb {
  return [self _withBaseWithComFasterxmlJacksonDatabindCfgBaseSettings:[((ComFasterxmlJacksonDatabindCfgBaseSettings *) nil_chk(_base_)) withTypeResolverBuilderWithComFasterxmlJacksonDatabindJsontypeTypeResolverBuilder:trb]];
}

- (ComFasterxmlJacksonDatabindCfgMapperConfigBase *)withWithComFasterxmlJacksonDatabindPropertyNamingStrategy:(ComFasterxmlJacksonDatabindPropertyNamingStrategy *)pns {
  return [self _withBaseWithComFasterxmlJacksonDatabindCfgBaseSettings:[((ComFasterxmlJacksonDatabindCfgBaseSettings *) nil_chk(_base_)) withPropertyNamingStrategyWithComFasterxmlJacksonDatabindPropertyNamingStrategy:pns]];
}

- (ComFasterxmlJacksonDatabindCfgMapperConfigBase *)withWithComFasterxmlJacksonDatabindCfgHandlerInstantiator:(ComFasterxmlJacksonDatabindCfgHandlerInstantiator *)hi {
  return [self _withBaseWithComFasterxmlJacksonDatabindCfgBaseSettings:[((ComFasterxmlJacksonDatabindCfgBaseSettings *) nil_chk(_base_)) withHandlerInstantiatorWithComFasterxmlJacksonDatabindCfgHandlerInstantiator:hi]];
}

- (ComFasterxmlJacksonDatabindCfgMapperConfigBase *)withWithComFasterxmlJacksonCoreBase64Variant:(ComFasterxmlJacksonCoreBase64Variant *)base64 {
  return [self _withBaseWithComFasterxmlJacksonDatabindCfgBaseSettings:[((ComFasterxmlJacksonDatabindCfgBaseSettings *) nil_chk(_base_)) withWithComFasterxmlJacksonCoreBase64Variant:base64]];
}

- (ComFasterxmlJacksonDatabindCfgMapperConfigBase *)withWithJavaTextDateFormat:(JavaTextDateFormat *)df {
  return [self _withBaseWithComFasterxmlJacksonDatabindCfgBaseSettings:[((ComFasterxmlJacksonDatabindCfgBaseSettings *) nil_chk(_base_)) withDateFormatWithJavaTextDateFormat:df]];
}

- (ComFasterxmlJacksonDatabindCfgMapperConfigBase *)withWithJavaUtilLocale:(JavaUtilLocale *)l {
  return [self _withBaseWithComFasterxmlJacksonDatabindCfgBaseSettings:[((ComFasterxmlJacksonDatabindCfgBaseSettings *) nil_chk(_base_)) withWithJavaUtilLocale:l]];
}

- (ComFasterxmlJacksonDatabindCfgMapperConfigBase *)withWithJavaUtilTimeZone:(JavaUtilTimeZone *)tz {
  return [self _withBaseWithComFasterxmlJacksonDatabindCfgBaseSettings:[((ComFasterxmlJacksonDatabindCfgBaseSettings *) nil_chk(_base_)) withWithJavaUtilTimeZone:tz]];
}

- (ComFasterxmlJacksonDatabindCfgMapperConfigBase *)withRootNameWithComFasterxmlJacksonDatabindPropertyName:(ComFasterxmlJacksonDatabindPropertyName *)rootName {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindCfgMapperConfigBase *)withRootNameWithNSString:(NSString *)rootName {
  if (rootName == nil) {
    return [self withRootNameWithComFasterxmlJacksonDatabindPropertyName:nil];
  }
  return [self withRootNameWithComFasterxmlJacksonDatabindPropertyName:ComFasterxmlJacksonDatabindPropertyName_constructWithNSString_(rootName)];
}

- (ComFasterxmlJacksonDatabindCfgMapperConfigBase *)withWithComFasterxmlJacksonDatabindJsontypeSubtypeResolver:(ComFasterxmlJacksonDatabindJsontypeSubtypeResolver *)str {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindCfgMapperConfigBase *)withViewWithIOSClass:(IOSClass *)view {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindJsontypeSubtypeResolver *)getSubtypeResolver {
  return _subtypeResolver_;
}

- (NSString *)getRootName {
  return (_rootName_ == nil) ? nil : [((ComFasterxmlJacksonDatabindPropertyName *) nil_chk(_rootName_)) getSimpleName];
}

- (ComFasterxmlJacksonDatabindPropertyName *)getFullRootName {
  return _rootName_;
}

- (IOSClass *)getActiveView {
  return _view_;
}

- (ComFasterxmlJacksonDatabindCfgContextAttributes *)getAttributes {
  return ComFasterxmlJacksonDatabindCfgMapperConfigBase_getAttributes(self);
}

- (ComFasterxmlJacksonDatabindCfgConfigOverride *)getConfigOverrideWithIOSClass:(IOSClass *)type {
  return ComFasterxmlJacksonDatabindCfgMapperConfigBase_getConfigOverrideWithIOSClass_(self, type);
}

- (ComFasterxmlJacksonDatabindCfgConfigOverride *)findConfigOverrideWithIOSClass:(IOSClass *)type {
  return [((ComFasterxmlJacksonDatabindCfgConfigOverrides *) nil_chk(_configOverrides_)) findOverrideWithIOSClass:type];
}

- (ComFasterxmlJacksonAnnotationJsonInclude_Value *)getDefaultPropertyInclusion {
  return ComFasterxmlJacksonDatabindCfgMapperConfigBase_getDefaultPropertyInclusion(self);
}

- (ComFasterxmlJacksonAnnotationJsonInclude_Value *)getDefaultPropertyInclusionWithIOSClass:(IOSClass *)baseType {
  return ComFasterxmlJacksonDatabindCfgMapperConfigBase_getDefaultPropertyInclusionWithIOSClass_(self, baseType);
}

- (ComFasterxmlJacksonAnnotationJsonInclude_Value *)getDefaultInclusionWithIOSClass:(IOSClass *)baseType
                                                                       withIOSClass:(IOSClass *)propertyType {
  ComFasterxmlJacksonAnnotationJsonInclude_Value *v = [((ComFasterxmlJacksonDatabindCfgConfigOverride *) nil_chk(ComFasterxmlJacksonDatabindCfgMapperConfigBase_getConfigOverrideWithIOSClass_(self, propertyType))) getIncludeAsProperty];
  ComFasterxmlJacksonAnnotationJsonInclude_Value *def = ComFasterxmlJacksonDatabindCfgMapperConfigBase_getDefaultPropertyInclusionWithIOSClass_(self, baseType);
  if (def == nil) {
    return v;
  }
  return [def withOverridesWithComFasterxmlJacksonAnnotationJsonInclude_Value:v];
}

- (ComFasterxmlJacksonAnnotationJsonFormat_Value *)getDefaultPropertyFormatWithIOSClass:(IOSClass *)type {
  ComFasterxmlJacksonDatabindCfgConfigOverride *overrides = [((ComFasterxmlJacksonDatabindCfgConfigOverrides *) nil_chk(_configOverrides_)) findOverrideWithIOSClass:type];
  if (overrides != nil) {
    ComFasterxmlJacksonAnnotationJsonFormat_Value *v = [overrides getFormat];
    if (v != nil) {
      return v;
    }
  }
  return JreLoadStatic(ComFasterxmlJacksonDatabindCfgMapperConfig, EMPTY_FORMAT);
}

- (ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)getDefaultPropertyIgnoralsWithIOSClass:(IOSClass *)type {
  return ComFasterxmlJacksonDatabindCfgMapperConfigBase_getDefaultPropertyIgnoralsWithIOSClass_(self, type);
}

- (ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *)getDefaultPropertyIgnoralsWithIOSClass:(IOSClass *)baseType
                                            withComFasterxmlJacksonDatabindIntrospectAnnotatedClass:(ComFasterxmlJacksonDatabindIntrospectAnnotatedClass *)actualClass {
  ComFasterxmlJacksonDatabindAnnotationIntrospector *intr = [self getAnnotationIntrospector];
  ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *base = (intr == nil) ? nil : [((ComFasterxmlJacksonDatabindAnnotationIntrospector *) nil_chk(intr)) findPropertyIgnoralsWithComFasterxmlJacksonDatabindIntrospectAnnotated:actualClass];
  ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *overrides = ComFasterxmlJacksonDatabindCfgMapperConfigBase_getDefaultPropertyIgnoralsWithIOSClass_(self, baseType);
  return ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value_mergeWithComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value_withComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value_(base, overrides);
}

- (id<ComFasterxmlJacksonDatabindIntrospectVisibilityChecker>)getDefaultVisibilityChecker {
  return ComFasterxmlJacksonDatabindCfgMapperConfigBase_getDefaultVisibilityChecker(self);
}

- (id<ComFasterxmlJacksonDatabindIntrospectVisibilityChecker>)getDefaultVisibilityCheckerWithIOSClass:(IOSClass *)baseType
                                              withComFasterxmlJacksonDatabindIntrospectAnnotatedClass:(ComFasterxmlJacksonDatabindIntrospectAnnotatedClass *)actualClass {
  id<ComFasterxmlJacksonDatabindIntrospectVisibilityChecker> vc = ComFasterxmlJacksonDatabindCfgMapperConfigBase_getDefaultVisibilityChecker(self);
  ComFasterxmlJacksonDatabindAnnotationIntrospector *intr = [self getAnnotationIntrospector];
  if (intr != nil) {
    vc = [intr findAutoDetectVisibilityWithComFasterxmlJacksonDatabindIntrospectAnnotatedClass:actualClass withComFasterxmlJacksonDatabindIntrospectVisibilityChecker:vc];
  }
  ComFasterxmlJacksonDatabindCfgConfigOverride *overrides = [((ComFasterxmlJacksonDatabindCfgConfigOverrides *) nil_chk(_configOverrides_)) findOverrideWithIOSClass:baseType];
  if (overrides != nil) {
    vc = [((id<ComFasterxmlJacksonDatabindIntrospectVisibilityChecker>) nil_chk(vc)) withOverridesWithComFasterxmlJacksonAnnotationJsonAutoDetect_Value:[overrides getVisibility]];
  }
  return vc;
}

- (ComFasterxmlJacksonAnnotationJsonSetter_Value *)getDefaultSetterInfo {
  return [((ComFasterxmlJacksonDatabindCfgConfigOverrides *) nil_chk(_configOverrides_)) getDefaultSetterInfo];
}

- (JavaLangBoolean *)getDefaultMergeable {
  return [((ComFasterxmlJacksonDatabindCfgConfigOverrides *) nil_chk(_configOverrides_)) getDefaultMergeable];
}

- (JavaLangBoolean *)getDefaultMergeableWithIOSClass:(IOSClass *)baseType {
  JavaLangBoolean *b;
  ComFasterxmlJacksonDatabindCfgConfigOverride *cfg = [((ComFasterxmlJacksonDatabindCfgConfigOverrides *) nil_chk(_configOverrides_)) findOverrideWithIOSClass:baseType];
  if (cfg != nil) {
    b = [cfg getMergeable];
    if (b != nil) {
      return b;
    }
  }
  return [_configOverrides_ getDefaultMergeable];
}

- (ComFasterxmlJacksonDatabindPropertyName *)findRootNameWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)rootType {
  if (_rootName_ != nil) {
    return _rootName_;
  }
  return [((ComFasterxmlJacksonDatabindUtilRootNameLookup *) nil_chk(_rootNames_)) findRootNameWithComFasterxmlJacksonDatabindJavaType:rootType withComFasterxmlJacksonDatabindCfgMapperConfig:self];
}

- (ComFasterxmlJacksonDatabindPropertyName *)findRootNameWithIOSClass:(IOSClass *)rawRootType {
  if (_rootName_ != nil) {
    return _rootName_;
  }
  return [((ComFasterxmlJacksonDatabindUtilRootNameLookup *) nil_chk(_rootNames_)) findRootNameWithIOSClass:rawRootType withComFasterxmlJacksonDatabindCfgMapperConfig:self];
}

- (IOSClass *)findMixInClassForWithIOSClass:(IOSClass *)cls {
  return [((ComFasterxmlJacksonDatabindIntrospectSimpleMixInResolver *) nil_chk(_mixIns_)) findMixInClassForWithIOSClass:cls];
}

- (id<ComFasterxmlJacksonDatabindIntrospectClassIntrospector_MixInResolver>)copy__ {
  @throw create_JavaLangUnsupportedOperationException_init();
}

- (jint)mixInCount {
  return [((ComFasterxmlJacksonDatabindIntrospectSimpleMixInResolver *) nil_chk(_mixIns_)) localSize];
}

- (void)dealloc {
  RELEASE_(_mixIns_);
  RELEASE_(_subtypeResolver_);
  RELEASE_(_rootName_);
  RELEASE_(_view_);
  RELEASE_(_attributes_);
  RELEASE_(_rootNames_);
  RELEASE_(_configOverrides_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, 2, -1, -1 },
    { NULL, NULL, 0x4, -1, 3, -1, 4, -1, -1 },
    { NULL, NULL, 0x4, -1, 5, -1, 6, -1, -1 },
    { NULL, NULL, 0x4, -1, 7, -1, 8, -1, -1 },
    { NULL, NULL, 0x4, -1, 9, -1, 10, -1, -1 },
    { NULL, NULL, 0x4, -1, 11, -1, 12, -1, -1 },
    { NULL, NULL, 0x4, -1, 13, -1, 14, -1, -1 },
    { NULL, NULL, 0x4, -1, 15, -1, 16, -1, -1 },
    { NULL, NULL, 0x4, -1, 17, -1, 18, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfigBase;", 0x404, 19, 20, -1, 21, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfigBase;", 0x404, 22, 23, -1, 24, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfigBase;", 0x91, 25, 26, -1, 27, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfigBase;", 0x91, 28, 26, -1, 27, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfigBase;", 0x11, 25, 29, -1, 30, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfigBase;", 0x11, 25, 31, -1, 32, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfigBase;", 0x11, 33, 31, -1, 32, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfigBase;", 0x11, 34, 31, -1, 32, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfigBase;", 0x11, 25, 35, -1, 36, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfigBase;", 0x401, 25, 37, -1, 38, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfigBase;", 0x1, 39, 40, -1, 41, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfigBase;", 0x1, 42, 43, -1, 44, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfigBase;", 0x1, 45, 46, -1, 47, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfigBase;", 0x11, 25, 48, -1, 49, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfigBase;", 0x11, 25, 50, -1, 51, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfigBase;", 0x11, 25, 52, -1, 53, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfigBase;", 0x11, 25, 54, -1, 55, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfigBase;", 0x11, 25, 56, -1, 57, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfigBase;", 0x1, 25, 58, -1, 59, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfigBase;", 0x11, 25, 60, -1, 61, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfigBase;", 0x11, 25, 62, -1, 63, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfigBase;", 0x401, 64, 65, -1, 66, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfigBase;", 0x1, 64, 67, -1, 68, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfigBase;", 0x401, 25, 69, -1, 70, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgMapperConfigBase;", 0x401, 71, 72, -1, 73, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsontypeSubtypeResolver;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, -1, -1, -1, -1, 74, -1 },
    { NULL, "LComFasterxmlJacksonDatabindPropertyName;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LIOSClass;", 0x11, -1, -1, -1, 75, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgContextAttributes;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgConfigOverride;", 0x11, 76, 72, -1, 77, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindCfgConfigOverride;", 0x11, 78, 72, -1, 77, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonInclude_Value;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonInclude_Value;", 0x11, 79, 72, -1, 80, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonInclude_Value;", 0x11, 81, 82, -1, 83, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonFormat_Value;", 0x11, 84, 72, -1, 85, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value;", 0x11, 86, 72, -1, 87, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value;", 0x11, 86, 88, -1, 89, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindIntrospectVisibilityChecker;", 0x11, -1, -1, -1, 90, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindIntrospectVisibilityChecker;", 0x11, 91, 88, -1, 92, -1, -1 },
    { NULL, "LComFasterxmlJacksonAnnotationJsonSetter_Value;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangBoolean;", 0x1, 93, 72, -1, 94, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindPropertyName;", 0x1, 95, 96, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindPropertyName;", 0x1, 95, 72, -1, 97, -1, -1 },
    { NULL, "LIOSClass;", 0x11, 98, 72, -1, 99, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindIntrospectClassIntrospector_MixInResolver;", 0x1, 100, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x11, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonDatabindCfgBaseSettings:withComFasterxmlJacksonDatabindJsontypeSubtypeResolver:withComFasterxmlJacksonDatabindIntrospectSimpleMixInResolver:withComFasterxmlJacksonDatabindUtilRootNameLookup:withComFasterxmlJacksonDatabindCfgConfigOverrides:);
  methods[1].selector = @selector(initWithComFasterxmlJacksonDatabindCfgMapperConfigBase:withComFasterxmlJacksonDatabindIntrospectSimpleMixInResolver:withComFasterxmlJacksonDatabindUtilRootNameLookup:withComFasterxmlJacksonDatabindCfgConfigOverrides:);
  methods[2].selector = @selector(initWithComFasterxmlJacksonDatabindCfgMapperConfigBase:);
  methods[3].selector = @selector(initWithComFasterxmlJacksonDatabindCfgMapperConfigBase:withComFasterxmlJacksonDatabindCfgBaseSettings:);
  methods[4].selector = @selector(initWithComFasterxmlJacksonDatabindCfgMapperConfigBase:withInt:);
  methods[5].selector = @selector(initWithComFasterxmlJacksonDatabindCfgMapperConfigBase:withComFasterxmlJacksonDatabindJsontypeSubtypeResolver:);
  methods[6].selector = @selector(initWithComFasterxmlJacksonDatabindCfgMapperConfigBase:withComFasterxmlJacksonDatabindPropertyName:);
  methods[7].selector = @selector(initWithComFasterxmlJacksonDatabindCfgMapperConfigBase:withIOSClass:);
  methods[8].selector = @selector(initWithComFasterxmlJacksonDatabindCfgMapperConfigBase:withComFasterxmlJacksonDatabindIntrospectSimpleMixInResolver:);
  methods[9].selector = @selector(initWithComFasterxmlJacksonDatabindCfgMapperConfigBase:withComFasterxmlJacksonDatabindCfgContextAttributes:);
  methods[10].selector = @selector(_withBaseWithComFasterxmlJacksonDatabindCfgBaseSettings:);
  methods[11].selector = @selector(_withMapperFeaturesWithInt:);
  methods[12].selector = @selector(withWithComFasterxmlJacksonDatabindMapperFeatureArray:);
  methods[13].selector = @selector(withoutWithComFasterxmlJacksonDatabindMapperFeatureArray:);
  methods[14].selector = @selector(withWithComFasterxmlJacksonDatabindMapperFeature:withBoolean:);
  methods[15].selector = @selector(withWithComFasterxmlJacksonDatabindAnnotationIntrospector:);
  methods[16].selector = @selector(withAppendedAnnotationIntrospectorWithComFasterxmlJacksonDatabindAnnotationIntrospector:);
  methods[17].selector = @selector(withInsertedAnnotationIntrospectorWithComFasterxmlJacksonDatabindAnnotationIntrospector:);
  methods[18].selector = @selector(withWithComFasterxmlJacksonDatabindIntrospectClassIntrospector:);
  methods[19].selector = @selector(withWithComFasterxmlJacksonDatabindCfgContextAttributes:);
  methods[20].selector = @selector(withAttributesWithJavaUtilMap:);
  methods[21].selector = @selector(withAttributeWithId:withId:);
  methods[22].selector = @selector(withoutAttributeWithId:);
  methods[23].selector = @selector(withWithComFasterxmlJacksonDatabindTypeTypeFactory:);
  methods[24].selector = @selector(withWithComFasterxmlJacksonDatabindJsontypeTypeResolverBuilder:);
  methods[25].selector = @selector(withWithComFasterxmlJacksonDatabindPropertyNamingStrategy:);
  methods[26].selector = @selector(withWithComFasterxmlJacksonDatabindCfgHandlerInstantiator:);
  methods[27].selector = @selector(withWithComFasterxmlJacksonCoreBase64Variant:);
  methods[28].selector = @selector(withWithJavaTextDateFormat:);
  methods[29].selector = @selector(withWithJavaUtilLocale:);
  methods[30].selector = @selector(withWithJavaUtilTimeZone:);
  methods[31].selector = @selector(withRootNameWithComFasterxmlJacksonDatabindPropertyName:);
  methods[32].selector = @selector(withRootNameWithNSString:);
  methods[33].selector = @selector(withWithComFasterxmlJacksonDatabindJsontypeSubtypeResolver:);
  methods[34].selector = @selector(withViewWithIOSClass:);
  methods[35].selector = @selector(getSubtypeResolver);
  methods[36].selector = @selector(getRootName);
  methods[37].selector = @selector(getFullRootName);
  methods[38].selector = @selector(getActiveView);
  methods[39].selector = @selector(getAttributes);
  methods[40].selector = @selector(getConfigOverrideWithIOSClass:);
  methods[41].selector = @selector(findConfigOverrideWithIOSClass:);
  methods[42].selector = @selector(getDefaultPropertyInclusion);
  methods[43].selector = @selector(getDefaultPropertyInclusionWithIOSClass:);
  methods[44].selector = @selector(getDefaultInclusionWithIOSClass:withIOSClass:);
  methods[45].selector = @selector(getDefaultPropertyFormatWithIOSClass:);
  methods[46].selector = @selector(getDefaultPropertyIgnoralsWithIOSClass:);
  methods[47].selector = @selector(getDefaultPropertyIgnoralsWithIOSClass:withComFasterxmlJacksonDatabindIntrospectAnnotatedClass:);
  methods[48].selector = @selector(getDefaultVisibilityChecker);
  methods[49].selector = @selector(getDefaultVisibilityCheckerWithIOSClass:withComFasterxmlJacksonDatabindIntrospectAnnotatedClass:);
  methods[50].selector = @selector(getDefaultSetterInfo);
  methods[51].selector = @selector(getDefaultMergeable);
  methods[52].selector = @selector(getDefaultMergeableWithIOSClass:);
  methods[53].selector = @selector(findRootNameWithComFasterxmlJacksonDatabindJavaType:);
  methods[54].selector = @selector(findRootNameWithIOSClass:);
  methods[55].selector = @selector(findMixInClassForWithIOSClass:);
  methods[56].selector = @selector(copy__);
  methods[57].selector = @selector(mixInCount);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "EMPTY_OVERRIDE", "LComFasterxmlJacksonDatabindCfgConfigOverride;", .constantValue.asLong = 0, 0x1c, -1, 101, -1, -1 },
    { "DEFAULT_MAPPER_FEATURES", "I", .constantValue.asLong = 0, 0x1a, -1, 102, -1, -1 },
    { "AUTO_DETECT_MASK", "I", .constantValue.asLong = 0, 0x1a, -1, 103, -1, -1 },
    { "_mixIns_", "LComFasterxmlJacksonDatabindIntrospectSimpleMixInResolver;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_subtypeResolver_", "LComFasterxmlJacksonDatabindJsontypeSubtypeResolver;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_rootName_", "LComFasterxmlJacksonDatabindPropertyName;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_view_", "LIOSClass;", .constantValue.asLong = 0, 0x14, -1, -1, 104, -1 },
    { "_attributes_", "LComFasterxmlJacksonDatabindCfgContextAttributes;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_rootNames_", "LComFasterxmlJacksonDatabindUtilRootNameLookup;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_configOverrides_", "LComFasterxmlJacksonDatabindCfgConfigOverrides;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindCfgBaseSettings;LComFasterxmlJacksonDatabindJsontypeSubtypeResolver;LComFasterxmlJacksonDatabindIntrospectSimpleMixInResolver;LComFasterxmlJacksonDatabindUtilRootNameLookup;LComFasterxmlJacksonDatabindCfgConfigOverrides;", "LComFasterxmlJacksonDatabindCfgMapperConfigBase;LComFasterxmlJacksonDatabindIntrospectSimpleMixInResolver;LComFasterxmlJacksonDatabindUtilRootNameLookup;LComFasterxmlJacksonDatabindCfgConfigOverrides;", "(Lcom/fasterxml/jackson/databind/cfg/MapperConfigBase<TCFG;TT;>;Lcom/fasterxml/jackson/databind/introspect/SimpleMixInResolver;Lcom/fasterxml/jackson/databind/util/RootNameLookup;Lcom/fasterxml/jackson/databind/cfg/ConfigOverrides;)V", "LComFasterxmlJacksonDatabindCfgMapperConfigBase;", "(Lcom/fasterxml/jackson/databind/cfg/MapperConfigBase<TCFG;TT;>;)V", "LComFasterxmlJacksonDatabindCfgMapperConfigBase;LComFasterxmlJacksonDatabindCfgBaseSettings;", "(Lcom/fasterxml/jackson/databind/cfg/MapperConfigBase<TCFG;TT;>;Lcom/fasterxml/jackson/databind/cfg/BaseSettings;)V", "LComFasterxmlJacksonDatabindCfgMapperConfigBase;I", "(Lcom/fasterxml/jackson/databind/cfg/MapperConfigBase<TCFG;TT;>;I)V", "LComFasterxmlJacksonDatabindCfgMapperConfigBase;LComFasterxmlJacksonDatabindJsontypeSubtypeResolver;", "(Lcom/fasterxml/jackson/databind/cfg/MapperConfigBase<TCFG;TT;>;Lcom/fasterxml/jackson/databind/jsontype/SubtypeResolver;)V", "LComFasterxmlJacksonDatabindCfgMapperConfigBase;LComFasterxmlJacksonDatabindPropertyName;", "(Lcom/fasterxml/jackson/databind/cfg/MapperConfigBase<TCFG;TT;>;Lcom/fasterxml/jackson/databind/PropertyName;)V", "LComFasterxmlJacksonDatabindCfgMapperConfigBase;LIOSClass;", "(Lcom/fasterxml/jackson/databind/cfg/MapperConfigBase<TCFG;TT;>;Ljava/lang/Class<*>;)V", "LComFasterxmlJacksonDatabindCfgMapperConfigBase;LComFasterxmlJacksonDatabindIntrospectSimpleMixInResolver;", "(Lcom/fasterxml/jackson/databind/cfg/MapperConfigBase<TCFG;TT;>;Lcom/fasterxml/jackson/databind/introspect/SimpleMixInResolver;)V", "LComFasterxmlJacksonDatabindCfgMapperConfigBase;LComFasterxmlJacksonDatabindCfgContextAttributes;", "(Lcom/fasterxml/jackson/databind/cfg/MapperConfigBase<TCFG;TT;>;Lcom/fasterxml/jackson/databind/cfg/ContextAttributes;)V", "_withBase", "LComFasterxmlJacksonDatabindCfgBaseSettings;", "(Lcom/fasterxml/jackson/databind/cfg/BaseSettings;)TT;", "_withMapperFeatures", "I", "(I)TT;", "with", "[LComFasterxmlJacksonDatabindMapperFeature;", "([Lcom/fasterxml/jackson/databind/MapperFeature;)TT;", "without", "LComFasterxmlJacksonDatabindMapperFeature;Z", "(Lcom/fasterxml/jackson/databind/MapperFeature;Z)TT;", "LComFasterxmlJacksonDatabindAnnotationIntrospector;", "(Lcom/fasterxml/jackson/databind/AnnotationIntrospector;)TT;", "withAppendedAnnotationIntrospector", "withInsertedAnnotationIntrospector", "LComFasterxmlJacksonDatabindIntrospectClassIntrospector;", "(Lcom/fasterxml/jackson/databind/introspect/ClassIntrospector;)TT;", "LComFasterxmlJacksonDatabindCfgContextAttributes;", "(Lcom/fasterxml/jackson/databind/cfg/ContextAttributes;)TT;", "withAttributes", "LJavaUtilMap;", "(Ljava/util/Map<**>;)TT;", "withAttribute", "LNSObject;LNSObject;", "(Ljava/lang/Object;Ljava/lang/Object;)TT;", "withoutAttribute", "LNSObject;", "(Ljava/lang/Object;)TT;", "LComFasterxmlJacksonDatabindTypeTypeFactory;", "(Lcom/fasterxml/jackson/databind/type/TypeFactory;)TT;", "LComFasterxmlJacksonDatabindJsontypeTypeResolverBuilder;", "(Lcom/fasterxml/jackson/databind/jsontype/TypeResolverBuilder<*>;)TT;", "LComFasterxmlJacksonDatabindPropertyNamingStrategy;", "(Lcom/fasterxml/jackson/databind/PropertyNamingStrategy;)TT;", "LComFasterxmlJacksonDatabindCfgHandlerInstantiator;", "(Lcom/fasterxml/jackson/databind/cfg/HandlerInstantiator;)TT;", "LComFasterxmlJacksonCoreBase64Variant;", "(Lcom/fasterxml/jackson/core/Base64Variant;)TT;", "LJavaTextDateFormat;", "(Ljava/text/DateFormat;)TT;", "LJavaUtilLocale;", "(Ljava/util/Locale;)TT;", "LJavaUtilTimeZone;", "(Ljava/util/TimeZone;)TT;", "withRootName", "LComFasterxmlJacksonDatabindPropertyName;", "(Lcom/fasterxml/jackson/databind/PropertyName;)TT;", "LNSString;", "(Ljava/lang/String;)TT;", "LComFasterxmlJacksonDatabindJsontypeSubtypeResolver;", "(Lcom/fasterxml/jackson/databind/jsontype/SubtypeResolver;)TT;", "withView", "LIOSClass;", "(Ljava/lang/Class<*>;)TT;", (void *)&ComFasterxmlJacksonDatabindCfgMapperConfigBase__Annotations$0, "()Ljava/lang/Class<*>;", "getConfigOverride", "(Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/cfg/ConfigOverride;", "findConfigOverride", "getDefaultPropertyInclusion", "(Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/annotation/JsonInclude$Value;", "getDefaultInclusion", "LIOSClass;LIOSClass;", "(Ljava/lang/Class<*>;Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/annotation/JsonInclude$Value;", "getDefaultPropertyFormat", "(Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/annotation/JsonFormat$Value;", "getDefaultPropertyIgnorals", "(Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/annotation/JsonIgnoreProperties$Value;", "LIOSClass;LComFasterxmlJacksonDatabindIntrospectAnnotatedClass;", "(Ljava/lang/Class<*>;Lcom/fasterxml/jackson/databind/introspect/AnnotatedClass;)Lcom/fasterxml/jackson/annotation/JsonIgnoreProperties$Value;", "()Lcom/fasterxml/jackson/databind/introspect/VisibilityChecker<*>;", "getDefaultVisibilityChecker", "(Ljava/lang/Class<*>;Lcom/fasterxml/jackson/databind/introspect/AnnotatedClass;)Lcom/fasterxml/jackson/databind/introspect/VisibilityChecker<*>;", "getDefaultMergeable", "(Ljava/lang/Class<*>;)Ljava/lang/Boolean;", "findRootName", "LComFasterxmlJacksonDatabindJavaType;", "(Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/PropertyName;", "findMixInClassFor", "(Ljava/lang/Class<*>;)Ljava/lang/Class<*>;", "copy", &ComFasterxmlJacksonDatabindCfgMapperConfigBase_EMPTY_OVERRIDE, &ComFasterxmlJacksonDatabindCfgMapperConfigBase_DEFAULT_MAPPER_FEATURES, &ComFasterxmlJacksonDatabindCfgMapperConfigBase_AUTO_DETECT_MASK, "Ljava/lang/Class<*>;", "<CFG::Lcom/fasterxml/jackson/databind/cfg/ConfigFeature;T:Lcom/fasterxml/jackson/databind/cfg/MapperConfigBase<TCFG;TT;>;>Lcom/fasterxml/jackson/databind/cfg/MapperConfig<TT;>;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindCfgMapperConfigBase = { "MapperConfigBase", "com.fasterxml.jackson.databind.cfg", ptrTable, methods, fields, 7, 0x401, 58, 10, -1, -1, -1, 105, -1 };
  return &_ComFasterxmlJacksonDatabindCfgMapperConfigBase;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindCfgMapperConfigBase class]) {
    JreStrongAssign(&ComFasterxmlJacksonDatabindCfgMapperConfigBase_EMPTY_OVERRIDE, ComFasterxmlJacksonDatabindCfgConfigOverride_empty());
    ComFasterxmlJacksonDatabindCfgMapperConfigBase_DEFAULT_MAPPER_FEATURES = ComFasterxmlJacksonDatabindCfgMapperConfig_collectFeatureDefaultsWithIOSClass_(ComFasterxmlJacksonDatabindMapperFeature_class_());
    ComFasterxmlJacksonDatabindCfgMapperConfigBase_AUTO_DETECT_MASK = [((ComFasterxmlJacksonDatabindMapperFeature *) nil_chk(JreLoadEnum(ComFasterxmlJacksonDatabindMapperFeature, AUTO_DETECT_FIELDS))) getMask] | [((ComFasterxmlJacksonDatabindMapperFeature *) nil_chk(JreLoadEnum(ComFasterxmlJacksonDatabindMapperFeature, AUTO_DETECT_GETTERS))) getMask] | [((ComFasterxmlJacksonDatabindMapperFeature *) nil_chk(JreLoadEnum(ComFasterxmlJacksonDatabindMapperFeature, AUTO_DETECT_IS_GETTERS))) getMask] | [((ComFasterxmlJacksonDatabindMapperFeature *) nil_chk(JreLoadEnum(ComFasterxmlJacksonDatabindMapperFeature, AUTO_DETECT_SETTERS))) getMask] | [((ComFasterxmlJacksonDatabindMapperFeature *) nil_chk(JreLoadEnum(ComFasterxmlJacksonDatabindMapperFeature, AUTO_DETECT_CREATORS))) getMask];
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindCfgMapperConfigBase)
  }
}

@end

void ComFasterxmlJacksonDatabindCfgMapperConfigBase_initWithComFasterxmlJacksonDatabindCfgBaseSettings_withComFasterxmlJacksonDatabindJsontypeSubtypeResolver_withComFasterxmlJacksonDatabindIntrospectSimpleMixInResolver_withComFasterxmlJacksonDatabindUtilRootNameLookup_withComFasterxmlJacksonDatabindCfgConfigOverrides_(ComFasterxmlJacksonDatabindCfgMapperConfigBase *self, ComFasterxmlJacksonDatabindCfgBaseSettings *base, ComFasterxmlJacksonDatabindJsontypeSubtypeResolver *str, ComFasterxmlJacksonDatabindIntrospectSimpleMixInResolver *mixins, ComFasterxmlJacksonDatabindUtilRootNameLookup *rootNames, ComFasterxmlJacksonDatabindCfgConfigOverrides *configOverrides) {
  ComFasterxmlJacksonDatabindCfgMapperConfig_initWithComFasterxmlJacksonDatabindCfgBaseSettings_withInt_(self, base, ComFasterxmlJacksonDatabindCfgMapperConfigBase_DEFAULT_MAPPER_FEATURES);
  JreStrongAssign(&self->_mixIns_, mixins);
  JreStrongAssign(&self->_subtypeResolver_, str);
  JreStrongAssign(&self->_rootNames_, rootNames);
  JreStrongAssign(&self->_rootName_, nil);
  JreStrongAssign(&self->_view_, nil);
  JreStrongAssign(&self->_attributes_, ComFasterxmlJacksonDatabindCfgContextAttributes_getEmpty());
  JreStrongAssign(&self->_configOverrides_, configOverrides);
}

void ComFasterxmlJacksonDatabindCfgMapperConfigBase_initWithComFasterxmlJacksonDatabindCfgMapperConfigBase_withComFasterxmlJacksonDatabindIntrospectSimpleMixInResolver_withComFasterxmlJacksonDatabindUtilRootNameLookup_withComFasterxmlJacksonDatabindCfgConfigOverrides_(ComFasterxmlJacksonDatabindCfgMapperConfigBase *self, ComFasterxmlJacksonDatabindCfgMapperConfigBase *src, ComFasterxmlJacksonDatabindIntrospectSimpleMixInResolver *mixins, ComFasterxmlJacksonDatabindUtilRootNameLookup *rootNames, ComFasterxmlJacksonDatabindCfgConfigOverrides *configOverrides) {
  ComFasterxmlJacksonDatabindCfgMapperConfig_initWithComFasterxmlJacksonDatabindCfgMapperConfig_(self, src);
  JreStrongAssign(&self->_mixIns_, mixins);
  JreStrongAssign(&self->_subtypeResolver_, ((ComFasterxmlJacksonDatabindCfgMapperConfigBase *) nil_chk(src))->_subtypeResolver_);
  JreStrongAssign(&self->_rootNames_, rootNames);
  JreStrongAssign(&self->_rootName_, src->_rootName_);
  JreStrongAssign(&self->_view_, src->_view_);
  JreStrongAssign(&self->_attributes_, src->_attributes_);
  JreStrongAssign(&self->_configOverrides_, configOverrides);
}

void ComFasterxmlJacksonDatabindCfgMapperConfigBase_initWithComFasterxmlJacksonDatabindCfgMapperConfigBase_(ComFasterxmlJacksonDatabindCfgMapperConfigBase *self, ComFasterxmlJacksonDatabindCfgMapperConfigBase *src) {
  ComFasterxmlJacksonDatabindCfgMapperConfig_initWithComFasterxmlJacksonDatabindCfgMapperConfig_(self, src);
  JreStrongAssign(&self->_mixIns_, ((ComFasterxmlJacksonDatabindCfgMapperConfigBase *) nil_chk(src))->_mixIns_);
  JreStrongAssign(&self->_subtypeResolver_, src->_subtypeResolver_);
  JreStrongAssign(&self->_rootNames_, src->_rootNames_);
  JreStrongAssign(&self->_rootName_, src->_rootName_);
  JreStrongAssign(&self->_view_, src->_view_);
  JreStrongAssign(&self->_attributes_, src->_attributes_);
  JreStrongAssign(&self->_configOverrides_, src->_configOverrides_);
}

void ComFasterxmlJacksonDatabindCfgMapperConfigBase_initWithComFasterxmlJacksonDatabindCfgMapperConfigBase_withComFasterxmlJacksonDatabindCfgBaseSettings_(ComFasterxmlJacksonDatabindCfgMapperConfigBase *self, ComFasterxmlJacksonDatabindCfgMapperConfigBase *src, ComFasterxmlJacksonDatabindCfgBaseSettings *base) {
  ComFasterxmlJacksonDatabindCfgMapperConfig_initWithComFasterxmlJacksonDatabindCfgMapperConfig_withComFasterxmlJacksonDatabindCfgBaseSettings_(self, src, base);
  JreStrongAssign(&self->_mixIns_, ((ComFasterxmlJacksonDatabindCfgMapperConfigBase *) nil_chk(src))->_mixIns_);
  JreStrongAssign(&self->_subtypeResolver_, src->_subtypeResolver_);
  JreStrongAssign(&self->_rootNames_, src->_rootNames_);
  JreStrongAssign(&self->_rootName_, src->_rootName_);
  JreStrongAssign(&self->_view_, src->_view_);
  JreStrongAssign(&self->_attributes_, src->_attributes_);
  JreStrongAssign(&self->_configOverrides_, src->_configOverrides_);
}

void ComFasterxmlJacksonDatabindCfgMapperConfigBase_initWithComFasterxmlJacksonDatabindCfgMapperConfigBase_withInt_(ComFasterxmlJacksonDatabindCfgMapperConfigBase *self, ComFasterxmlJacksonDatabindCfgMapperConfigBase *src, jint mapperFeatures) {
  ComFasterxmlJacksonDatabindCfgMapperConfig_initWithComFasterxmlJacksonDatabindCfgMapperConfig_withInt_(self, src, mapperFeatures);
  JreStrongAssign(&self->_mixIns_, ((ComFasterxmlJacksonDatabindCfgMapperConfigBase *) nil_chk(src))->_mixIns_);
  JreStrongAssign(&self->_subtypeResolver_, src->_subtypeResolver_);
  JreStrongAssign(&self->_rootNames_, src->_rootNames_);
  JreStrongAssign(&self->_rootName_, src->_rootName_);
  JreStrongAssign(&self->_view_, src->_view_);
  JreStrongAssign(&self->_attributes_, src->_attributes_);
  JreStrongAssign(&self->_configOverrides_, src->_configOverrides_);
}

void ComFasterxmlJacksonDatabindCfgMapperConfigBase_initWithComFasterxmlJacksonDatabindCfgMapperConfigBase_withComFasterxmlJacksonDatabindJsontypeSubtypeResolver_(ComFasterxmlJacksonDatabindCfgMapperConfigBase *self, ComFasterxmlJacksonDatabindCfgMapperConfigBase *src, ComFasterxmlJacksonDatabindJsontypeSubtypeResolver *str) {
  ComFasterxmlJacksonDatabindCfgMapperConfig_initWithComFasterxmlJacksonDatabindCfgMapperConfig_(self, src);
  JreStrongAssign(&self->_mixIns_, ((ComFasterxmlJacksonDatabindCfgMapperConfigBase *) nil_chk(src))->_mixIns_);
  JreStrongAssign(&self->_subtypeResolver_, str);
  JreStrongAssign(&self->_rootNames_, src->_rootNames_);
  JreStrongAssign(&self->_rootName_, src->_rootName_);
  JreStrongAssign(&self->_view_, src->_view_);
  JreStrongAssign(&self->_attributes_, src->_attributes_);
  JreStrongAssign(&self->_configOverrides_, src->_configOverrides_);
}

void ComFasterxmlJacksonDatabindCfgMapperConfigBase_initWithComFasterxmlJacksonDatabindCfgMapperConfigBase_withComFasterxmlJacksonDatabindPropertyName_(ComFasterxmlJacksonDatabindCfgMapperConfigBase *self, ComFasterxmlJacksonDatabindCfgMapperConfigBase *src, ComFasterxmlJacksonDatabindPropertyName *rootName) {
  ComFasterxmlJacksonDatabindCfgMapperConfig_initWithComFasterxmlJacksonDatabindCfgMapperConfig_(self, src);
  JreStrongAssign(&self->_mixIns_, ((ComFasterxmlJacksonDatabindCfgMapperConfigBase *) nil_chk(src))->_mixIns_);
  JreStrongAssign(&self->_subtypeResolver_, src->_subtypeResolver_);
  JreStrongAssign(&self->_rootNames_, src->_rootNames_);
  JreStrongAssign(&self->_rootName_, rootName);
  JreStrongAssign(&self->_view_, src->_view_);
  JreStrongAssign(&self->_attributes_, src->_attributes_);
  JreStrongAssign(&self->_configOverrides_, src->_configOverrides_);
}

void ComFasterxmlJacksonDatabindCfgMapperConfigBase_initWithComFasterxmlJacksonDatabindCfgMapperConfigBase_withIOSClass_(ComFasterxmlJacksonDatabindCfgMapperConfigBase *self, ComFasterxmlJacksonDatabindCfgMapperConfigBase *src, IOSClass *view) {
  ComFasterxmlJacksonDatabindCfgMapperConfig_initWithComFasterxmlJacksonDatabindCfgMapperConfig_(self, src);
  JreStrongAssign(&self->_mixIns_, ((ComFasterxmlJacksonDatabindCfgMapperConfigBase *) nil_chk(src))->_mixIns_);
  JreStrongAssign(&self->_subtypeResolver_, src->_subtypeResolver_);
  JreStrongAssign(&self->_rootNames_, src->_rootNames_);
  JreStrongAssign(&self->_rootName_, src->_rootName_);
  JreStrongAssign(&self->_view_, view);
  JreStrongAssign(&self->_attributes_, src->_attributes_);
  JreStrongAssign(&self->_configOverrides_, src->_configOverrides_);
}

void ComFasterxmlJacksonDatabindCfgMapperConfigBase_initWithComFasterxmlJacksonDatabindCfgMapperConfigBase_withComFasterxmlJacksonDatabindIntrospectSimpleMixInResolver_(ComFasterxmlJacksonDatabindCfgMapperConfigBase *self, ComFasterxmlJacksonDatabindCfgMapperConfigBase *src, ComFasterxmlJacksonDatabindIntrospectSimpleMixInResolver *mixins) {
  ComFasterxmlJacksonDatabindCfgMapperConfig_initWithComFasterxmlJacksonDatabindCfgMapperConfig_(self, src);
  JreStrongAssign(&self->_mixIns_, mixins);
  JreStrongAssign(&self->_subtypeResolver_, ((ComFasterxmlJacksonDatabindCfgMapperConfigBase *) nil_chk(src))->_subtypeResolver_);
  JreStrongAssign(&self->_rootNames_, src->_rootNames_);
  JreStrongAssign(&self->_rootName_, src->_rootName_);
  JreStrongAssign(&self->_view_, src->_view_);
  JreStrongAssign(&self->_attributes_, src->_attributes_);
  JreStrongAssign(&self->_configOverrides_, src->_configOverrides_);
}

void ComFasterxmlJacksonDatabindCfgMapperConfigBase_initWithComFasterxmlJacksonDatabindCfgMapperConfigBase_withComFasterxmlJacksonDatabindCfgContextAttributes_(ComFasterxmlJacksonDatabindCfgMapperConfigBase *self, ComFasterxmlJacksonDatabindCfgMapperConfigBase *src, ComFasterxmlJacksonDatabindCfgContextAttributes *attr) {
  ComFasterxmlJacksonDatabindCfgMapperConfig_initWithComFasterxmlJacksonDatabindCfgMapperConfig_(self, src);
  JreStrongAssign(&self->_mixIns_, ((ComFasterxmlJacksonDatabindCfgMapperConfigBase *) nil_chk(src))->_mixIns_);
  JreStrongAssign(&self->_subtypeResolver_, src->_subtypeResolver_);
  JreStrongAssign(&self->_rootNames_, src->_rootNames_);
  JreStrongAssign(&self->_rootName_, src->_rootName_);
  JreStrongAssign(&self->_view_, src->_view_);
  JreStrongAssign(&self->_attributes_, attr);
  JreStrongAssign(&self->_configOverrides_, src->_configOverrides_);
}

ComFasterxmlJacksonDatabindCfgContextAttributes *ComFasterxmlJacksonDatabindCfgMapperConfigBase_getAttributes(ComFasterxmlJacksonDatabindCfgMapperConfigBase *self) {
  return self->_attributes_;
}

ComFasterxmlJacksonDatabindCfgConfigOverride *ComFasterxmlJacksonDatabindCfgMapperConfigBase_getConfigOverrideWithIOSClass_(ComFasterxmlJacksonDatabindCfgMapperConfigBase *self, IOSClass *type) {
  ComFasterxmlJacksonDatabindCfgConfigOverride *override = [((ComFasterxmlJacksonDatabindCfgConfigOverrides *) nil_chk(self->_configOverrides_)) findOverrideWithIOSClass:type];
  return (override == nil) ? ComFasterxmlJacksonDatabindCfgMapperConfigBase_EMPTY_OVERRIDE : override;
}

ComFasterxmlJacksonAnnotationJsonInclude_Value *ComFasterxmlJacksonDatabindCfgMapperConfigBase_getDefaultPropertyInclusion(ComFasterxmlJacksonDatabindCfgMapperConfigBase *self) {
  return [((ComFasterxmlJacksonDatabindCfgConfigOverrides *) nil_chk(self->_configOverrides_)) getDefaultInclusion];
}

ComFasterxmlJacksonAnnotationJsonInclude_Value *ComFasterxmlJacksonDatabindCfgMapperConfigBase_getDefaultPropertyInclusionWithIOSClass_(ComFasterxmlJacksonDatabindCfgMapperConfigBase *self, IOSClass *baseType) {
  ComFasterxmlJacksonAnnotationJsonInclude_Value *v = [((ComFasterxmlJacksonDatabindCfgConfigOverride *) nil_chk(ComFasterxmlJacksonDatabindCfgMapperConfigBase_getConfigOverrideWithIOSClass_(self, baseType))) getInclude];
  ComFasterxmlJacksonAnnotationJsonInclude_Value *def = ComFasterxmlJacksonDatabindCfgMapperConfigBase_getDefaultPropertyInclusion(self);
  if (def == nil) {
    return v;
  }
  return [def withOverridesWithComFasterxmlJacksonAnnotationJsonInclude_Value:v];
}

ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *ComFasterxmlJacksonDatabindCfgMapperConfigBase_getDefaultPropertyIgnoralsWithIOSClass_(ComFasterxmlJacksonDatabindCfgMapperConfigBase *self, IOSClass *type) {
  ComFasterxmlJacksonDatabindCfgConfigOverride *overrides = [((ComFasterxmlJacksonDatabindCfgConfigOverrides *) nil_chk(self->_configOverrides_)) findOverrideWithIOSClass:type];
  if (overrides != nil) {
    ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *v = [overrides getIgnorals];
    if (v != nil) {
      return v;
    }
  }
  return nil;
}

id<ComFasterxmlJacksonDatabindIntrospectVisibilityChecker> ComFasterxmlJacksonDatabindCfgMapperConfigBase_getDefaultVisibilityChecker(ComFasterxmlJacksonDatabindCfgMapperConfigBase *self) {
  id<ComFasterxmlJacksonDatabindIntrospectVisibilityChecker> vchecker = [((ComFasterxmlJacksonDatabindCfgConfigOverrides *) nil_chk(self->_configOverrides_)) getDefaultVisibility];
  if ((self->_mapperFeatures_ & ComFasterxmlJacksonDatabindCfgMapperConfigBase_AUTO_DETECT_MASK) != 0) {
    if (![self isEnabledWithComFasterxmlJacksonDatabindMapperFeature:JreLoadEnum(ComFasterxmlJacksonDatabindMapperFeature, AUTO_DETECT_FIELDS)]) {
      vchecker = [((id<ComFasterxmlJacksonDatabindIntrospectVisibilityChecker>) nil_chk(vchecker)) withFieldVisibilityWithComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility:JreLoadEnum(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility, NONE)];
    }
    if (![self isEnabledWithComFasterxmlJacksonDatabindMapperFeature:JreLoadEnum(ComFasterxmlJacksonDatabindMapperFeature, AUTO_DETECT_GETTERS)]) {
      vchecker = [((id<ComFasterxmlJacksonDatabindIntrospectVisibilityChecker>) nil_chk(vchecker)) withGetterVisibilityWithComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility:JreLoadEnum(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility, NONE)];
    }
    if (![self isEnabledWithComFasterxmlJacksonDatabindMapperFeature:JreLoadEnum(ComFasterxmlJacksonDatabindMapperFeature, AUTO_DETECT_IS_GETTERS)]) {
      vchecker = [((id<ComFasterxmlJacksonDatabindIntrospectVisibilityChecker>) nil_chk(vchecker)) withIsGetterVisibilityWithComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility:JreLoadEnum(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility, NONE)];
    }
    if (![self isEnabledWithComFasterxmlJacksonDatabindMapperFeature:JreLoadEnum(ComFasterxmlJacksonDatabindMapperFeature, AUTO_DETECT_SETTERS)]) {
      vchecker = [((id<ComFasterxmlJacksonDatabindIntrospectVisibilityChecker>) nil_chk(vchecker)) withSetterVisibilityWithComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility:JreLoadEnum(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility, NONE)];
    }
    if (![self isEnabledWithComFasterxmlJacksonDatabindMapperFeature:JreLoadEnum(ComFasterxmlJacksonDatabindMapperFeature, AUTO_DETECT_CREATORS)]) {
      vchecker = [((id<ComFasterxmlJacksonDatabindIntrospectVisibilityChecker>) nil_chk(vchecker)) withCreatorVisibilityWithComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility:JreLoadEnum(ComFasterxmlJacksonAnnotationJsonAutoDetect_Visibility, NONE)];
    }
  }
  return vchecker;
}

IOSObjectArray *ComFasterxmlJacksonDatabindCfgMapperConfigBase__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindCfgMapperConfigBase)
