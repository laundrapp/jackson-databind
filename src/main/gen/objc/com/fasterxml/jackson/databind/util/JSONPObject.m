//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/util/JSONPObject.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/core/JsonpCharacterEscapes.h"
#include "com/fasterxml/jackson/core/io/CharacterEscapes.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/JsonSerializer.h"
#include "com/fasterxml/jackson/databind/SerializerProvider.h"
#include "com/fasterxml/jackson/databind/jsontype/TypeSerializer.h"
#include "com/fasterxml/jackson/databind/util/JSONPObject.h"

@implementation ComFasterxmlJacksonDatabindUtilJSONPObject

- (instancetype __nonnull)initWithNSString:(NSString *)function
                                    withId:(id)value {
  ComFasterxmlJacksonDatabindUtilJSONPObject_initWithNSString_withId_(self, function, value);
  return self;
}

- (instancetype __nonnull)initWithNSString:(NSString *)function
                                    withId:(id)value
   withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)asType {
  ComFasterxmlJacksonDatabindUtilJSONPObject_initWithNSString_withId_withComFasterxmlJacksonDatabindJavaType_(self, function, value, asType);
  return self;
}

- (void)serializeWithTypeWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
                withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
            withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer {
  [self serializeWithComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider];
}

- (void)serializeWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
        withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(gen)) writeRawWithNSString:_function_];
  [gen writeRawWithChar:'('];
  if (_value_ == nil) {
    [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) defaultSerializeNullWithComFasterxmlJacksonCoreJsonGenerator:gen];
  }
  else {
    jboolean override = [gen getCharacterEscapes] == nil;
    if (override) {
      [gen setCharacterEscapesWithComFasterxmlJacksonCoreIoCharacterEscapes:ComFasterxmlJacksonCoreJsonpCharacterEscapes_instance()];
    }
    @try {
      if (_serializationType_ != nil) {
        [((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk([((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) findTypedValueSerializerWithComFasterxmlJacksonDatabindJavaType:_serializationType_ withBoolean:true withComFasterxmlJacksonDatabindBeanProperty:nil])) serializeWithId:_value_ withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider];
      }
      else {
        [((ComFasterxmlJacksonDatabindJsonSerializer *) nil_chk([((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(provider)) findTypedValueSerializerWithIOSClass:[_value_ java_getClass] withBoolean:true withComFasterxmlJacksonDatabindBeanProperty:nil])) serializeWithId:_value_ withComFasterxmlJacksonCoreJsonGenerator:gen withComFasterxmlJacksonDatabindSerializerProvider:provider];
      }
    }
    @finally {
      if (override) {
        [gen setCharacterEscapesWithComFasterxmlJacksonCoreIoCharacterEscapes:nil];
      }
    }
  }
  [gen writeRawWithChar:')'];
}

- (NSString *)getFunction {
  return _function_;
}

- (id)getValue {
  return _value_;
}

- (ComFasterxmlJacksonDatabindJavaType *)getSerializationType {
  return _serializationType_;
}

- (void)dealloc {
  RELEASE_(_function_);
  RELEASE_(_value_);
  RELEASE_(_serializationType_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 2, 3, 4, -1, -1, -1 },
    { NULL, "V", 0x1, 5, 6, 4, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSString:withId:);
  methods[1].selector = @selector(initWithNSString:withId:withComFasterxmlJacksonDatabindJavaType:);
  methods[2].selector = @selector(serializeWithTypeWithComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindJsontypeTypeSerializer:);
  methods[3].selector = @selector(serializeWithComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  methods[4].selector = @selector(getFunction);
  methods[5].selector = @selector(getValue);
  methods[6].selector = @selector(getSerializationType);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_function_", "LNSString;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_value_", "LNSObject;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_serializationType_", "LComFasterxmlJacksonDatabindJavaType;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LNSString;LNSObject;", "LNSString;LNSObject;LComFasterxmlJacksonDatabindJavaType;", "serializeWithType", "LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindJsontypeTypeSerializer;", "LJavaIoIOException;", "serialize", "LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindUtilJSONPObject = { "JSONPObject", "com.fasterxml.jackson.databind.util", ptrTable, methods, fields, 7, 0x1, 7, 3, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindUtilJSONPObject;
}

@end

void ComFasterxmlJacksonDatabindUtilJSONPObject_initWithNSString_withId_(ComFasterxmlJacksonDatabindUtilJSONPObject *self, NSString *function, id value) {
  ComFasterxmlJacksonDatabindUtilJSONPObject_initWithNSString_withId_withComFasterxmlJacksonDatabindJavaType_(self, function, value, nil);
}

ComFasterxmlJacksonDatabindUtilJSONPObject *new_ComFasterxmlJacksonDatabindUtilJSONPObject_initWithNSString_withId_(NSString *function, id value) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindUtilJSONPObject, initWithNSString_withId_, function, value)
}

ComFasterxmlJacksonDatabindUtilJSONPObject *create_ComFasterxmlJacksonDatabindUtilJSONPObject_initWithNSString_withId_(NSString *function, id value) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindUtilJSONPObject, initWithNSString_withId_, function, value)
}

void ComFasterxmlJacksonDatabindUtilJSONPObject_initWithNSString_withId_withComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindUtilJSONPObject *self, NSString *function, id value, ComFasterxmlJacksonDatabindJavaType *asType) {
  NSObject_init(self);
  JreStrongAssign(&self->_function_, function);
  JreStrongAssign(&self->_value_, value);
  JreStrongAssign(&self->_serializationType_, asType);
}

ComFasterxmlJacksonDatabindUtilJSONPObject *new_ComFasterxmlJacksonDatabindUtilJSONPObject_initWithNSString_withId_withComFasterxmlJacksonDatabindJavaType_(NSString *function, id value, ComFasterxmlJacksonDatabindJavaType *asType) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindUtilJSONPObject, initWithNSString_withId_withComFasterxmlJacksonDatabindJavaType_, function, value, asType)
}

ComFasterxmlJacksonDatabindUtilJSONPObject *create_ComFasterxmlJacksonDatabindUtilJSONPObject_initWithNSString_withId_withComFasterxmlJacksonDatabindJavaType_(NSString *function, id value, ComFasterxmlJacksonDatabindJavaType *asType) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindUtilJSONPObject, initWithNSString_withId_withComFasterxmlJacksonDatabindJavaType_, function, value, asType)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindUtilJSONPObject)
