//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/deser/std/StdDelegatingDeserializer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer || defined(INCLUDE_ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer))
#define ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer_

#define RESTRICT_ComFasterxmlJacksonDatabindDeserStdStdDeserializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindDeserStdStdDeserializer 1
#include "com/fasterxml/jackson/databind/deser/std/StdDeserializer.h"

#define RESTRICT_ComFasterxmlJacksonDatabindDeserContextualDeserializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindDeserContextualDeserializer 1
#include "com/fasterxml/jackson/databind/deser/ContextualDeserializer.h"

#define RESTRICT_ComFasterxmlJacksonDatabindDeserResolvableDeserializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindDeserResolvableDeserializer 1
#include "com/fasterxml/jackson/databind/deser/ResolvableDeserializer.h"

@class ComFasterxmlJacksonCoreJsonParser;
@class ComFasterxmlJacksonDatabindDeserializationConfig;
@class ComFasterxmlJacksonDatabindDeserializationContext;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsonDeserializer;
@class ComFasterxmlJacksonDatabindJsontypeTypeDeserializer;
@class IOSClass;
@class JavaLangBoolean;
@protocol ComFasterxmlJacksonDatabindBeanProperty;
@protocol ComFasterxmlJacksonDatabindUtilConverter;

/*!
 @brief Deserializer implementation where given Java type is first deserialized
  by a standard Jackson deserializer into a delegate type; and then
  this delegate type is converted using a configured 
 <code>Converter</code> into desired target type.
 Common delegate types to use are <code>java.util.Map</code>
  and <code>com.fasterxml.jackson.databind.JsonNode</code>.
 <p>
  Note that although types (delegate, target) may be related, they must not be same; trying
  to do this will result in an exception.
 <p>
  Since 2.5 There is <code>StdNodeBasedDeserializer</code> that is a simplified version
  for cases where intermediate type is <code>JsonNode</code>
 @since 2.1
 - seealso: StdNodeBasedDeserializer
 - seealso: Converter
 */
@interface ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer : ComFasterxmlJacksonDatabindDeserStdStdDeserializer < ComFasterxmlJacksonDatabindDeserContextualDeserializer, ComFasterxmlJacksonDatabindDeserResolvableDeserializer > {
 @public
  /*!
   @brief Converter that was used for creating <code>_delegateDeserializer</code>.
   */
  id<ComFasterxmlJacksonDatabindUtilConverter> _converter_;
  /*!
   @brief Fully resolved delegate type, with generic information if any available.
   */
  ComFasterxmlJacksonDatabindJavaType *_delegateType_;
  /*!
   @brief Underlying serializer for type <code>T</code>.
   */
  ComFasterxmlJacksonDatabindJsonDeserializer *_delegateDeserializer_;
}

#pragma mark Public

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindUtilConverter:(id<ComFasterxmlJacksonDatabindUtilConverter>)converter;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindUtilConverter:(id<ComFasterxmlJacksonDatabindUtilConverter>)converter
                                   withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)delegateType
                           withComFasterxmlJacksonDatabindJsonDeserializer:(ComFasterxmlJacksonDatabindJsonDeserializer *)delegateDeserializer;

- (ComFasterxmlJacksonDatabindJsonDeserializer *)createContextualWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                           withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property;

- (id)deserializeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
 withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt;

- (id)deserializeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
 withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                withId:(id)intoValue;

- (id)deserializeWithTypeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
         withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
       withComFasterxmlJacksonDatabindJsontypeTypeDeserializer:(ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *)typeDeserializer;

- (ComFasterxmlJacksonDatabindJsonDeserializer *)getDelegatee;

- (IOSClass *)handledType;

- (void)resolveWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt;

- (JavaLangBoolean *)supportsUpdateWithComFasterxmlJacksonDatabindDeserializationConfig:(ComFasterxmlJacksonDatabindDeserializationConfig *)config;

#pragma mark Protected

/*!
 @since 2.5
 */
- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer:(ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer *)src;

/*!
 @brief Overridable handler method called when <code>DeserializationContext, Object)</code>
  has been called with a value that is not compatible with delegate value.
 Since no conversion are expected for such "updateValue" case, this is normally not
  an operation that can be permitted, and the default behavior is to throw exception.
  Sub-classes may choose to try alternative approach if they have more information on
  exact usage and constraints.
 @since 2.6
 */
- (id)_handleIncompatibleUpdateValueWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                    withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                   withId:(id)intoValue;

/*!
 @brief Method called to convert from "delegate value" (which was deserialized
  from JSON using standard Jackson deserializer for delegate type)
  into desired target type.
 <P>
  The default implementation uses configured <code>Converter</code> to do
  conversion.
 @param delegateValue
 @return Result of conversion
 */
- (id)convertValueWithId:(id)delegateValue;

/*!
 @brief Method used for creating resolved contextual instances.Must be
  overridden when sub-classing.
 */
- (ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer *)withDelegateWithComFasterxmlJacksonDatabindUtilConverter:(id<ComFasterxmlJacksonDatabindUtilConverter>)converter
                                                                                   withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)delegateType
                                                                           withComFasterxmlJacksonDatabindJsonDeserializer:(ComFasterxmlJacksonDatabindJsonDeserializer *)delegateDeserializer;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindDeserStdStdDeserializer:(ComFasterxmlJacksonDatabindDeserStdStdDeserializer *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer, _converter_, id<ComFasterxmlJacksonDatabindUtilConverter>)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer, _delegateType_, ComFasterxmlJacksonDatabindJavaType *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer, _delegateDeserializer_, ComFasterxmlJacksonDatabindJsonDeserializer *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer_initWithComFasterxmlJacksonDatabindUtilConverter_(ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer *self, id<ComFasterxmlJacksonDatabindUtilConverter> converter);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer *new_ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer_initWithComFasterxmlJacksonDatabindUtilConverter_(id<ComFasterxmlJacksonDatabindUtilConverter> converter) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer *create_ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer_initWithComFasterxmlJacksonDatabindUtilConverter_(id<ComFasterxmlJacksonDatabindUtilConverter> converter);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer_initWithComFasterxmlJacksonDatabindUtilConverter_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJsonDeserializer_(ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer *self, id<ComFasterxmlJacksonDatabindUtilConverter> converter, ComFasterxmlJacksonDatabindJavaType *delegateType, ComFasterxmlJacksonDatabindJsonDeserializer *delegateDeserializer);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer *new_ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer_initWithComFasterxmlJacksonDatabindUtilConverter_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJsonDeserializer_(id<ComFasterxmlJacksonDatabindUtilConverter> converter, ComFasterxmlJacksonDatabindJavaType *delegateType, ComFasterxmlJacksonDatabindJsonDeserializer *delegateDeserializer) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer *create_ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer_initWithComFasterxmlJacksonDatabindUtilConverter_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJsonDeserializer_(id<ComFasterxmlJacksonDatabindUtilConverter> converter, ComFasterxmlJacksonDatabindJavaType *delegateType, ComFasterxmlJacksonDatabindJsonDeserializer *delegateDeserializer);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer_initWithComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer_(ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer *self, ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer *src);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer *new_ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer_initWithComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer_(ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer *src) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer *create_ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer_initWithComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer_(ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer *src);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserStdStdDelegatingDeserializer")
