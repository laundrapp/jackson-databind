//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/util/AccessPattern.java
//

#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/databind/util/AccessPattern.h"
#include "java/lang/Enum.h"
#include "java/lang/IllegalArgumentException.h"

__attribute__((unused)) static void ComFasterxmlJacksonDatabindUtilAccessPattern_initWithNSString_withInt_(ComFasterxmlJacksonDatabindUtilAccessPattern *self, NSString *__name, jint __ordinal);

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindUtilAccessPattern)

ComFasterxmlJacksonDatabindUtilAccessPattern *ComFasterxmlJacksonDatabindUtilAccessPattern_values_[3];

@implementation ComFasterxmlJacksonDatabindUtilAccessPattern

+ (IOSObjectArray *)values {
  return ComFasterxmlJacksonDatabindUtilAccessPattern_values();
}

+ (ComFasterxmlJacksonDatabindUtilAccessPattern *)valueOfWithNSString:(NSString *)name {
  return ComFasterxmlJacksonDatabindUtilAccessPattern_valueOfWithNSString_(name);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LComFasterxmlJacksonDatabindUtilAccessPattern;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindUtilAccessPattern;", 0x9, 0, 1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(values);
  methods[1].selector = @selector(valueOfWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "ALWAYS_NULL", "LComFasterxmlJacksonDatabindUtilAccessPattern;", .constantValue.asLong = 0, 0x4019, -1, 2, -1, -1 },
    { "CONSTANT", "LComFasterxmlJacksonDatabindUtilAccessPattern;", .constantValue.asLong = 0, 0x4019, -1, 3, -1, -1 },
    { "DYNAMIC", "LComFasterxmlJacksonDatabindUtilAccessPattern;", .constantValue.asLong = 0, 0x4019, -1, 4, -1, -1 },
  };
  static const void *ptrTable[] = { "valueOf", "LNSString;", &JreEnum(ComFasterxmlJacksonDatabindUtilAccessPattern, ALWAYS_NULL), &JreEnum(ComFasterxmlJacksonDatabindUtilAccessPattern, CONSTANT), &JreEnum(ComFasterxmlJacksonDatabindUtilAccessPattern, DYNAMIC), "Ljava/lang/Enum<Lcom/fasterxml/jackson/databind/util/AccessPattern;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindUtilAccessPattern = { "AccessPattern", "com.fasterxml.jackson.databind.util", ptrTable, methods, fields, 7, 0x4011, 2, 3, -1, -1, -1, 5, -1 };
  return &_ComFasterxmlJacksonDatabindUtilAccessPattern;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindUtilAccessPattern class]) {
    size_t objSize = class_getInstanceSize(self);
    size_t allocSize = 3 * objSize;
    uintptr_t ptr = (uintptr_t)calloc(allocSize, 1);
    id e;
    for (jint i = 0; i < 3; i++) {
      ((void)(ComFasterxmlJacksonDatabindUtilAccessPattern_values_[i] = e = objc_constructInstance(self, (void *)ptr)), ptr += objSize);
      ComFasterxmlJacksonDatabindUtilAccessPattern_initWithNSString_withInt_(e, JreEnumConstantName(ComFasterxmlJacksonDatabindUtilAccessPattern_class_(), i), i);
    }
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindUtilAccessPattern)
  }
}

@end

void ComFasterxmlJacksonDatabindUtilAccessPattern_initWithNSString_withInt_(ComFasterxmlJacksonDatabindUtilAccessPattern *self, NSString *__name, jint __ordinal) {
  JavaLangEnum_initWithNSString_withInt_(self, __name, __ordinal);
}

IOSObjectArray *ComFasterxmlJacksonDatabindUtilAccessPattern_values() {
  ComFasterxmlJacksonDatabindUtilAccessPattern_initialize();
  return [IOSObjectArray arrayWithObjects:ComFasterxmlJacksonDatabindUtilAccessPattern_values_ count:3 type:ComFasterxmlJacksonDatabindUtilAccessPattern_class_()];
}

ComFasterxmlJacksonDatabindUtilAccessPattern *ComFasterxmlJacksonDatabindUtilAccessPattern_valueOfWithNSString_(NSString *name) {
  ComFasterxmlJacksonDatabindUtilAccessPattern_initialize();
  for (int i = 0; i < 3; i++) {
    ComFasterxmlJacksonDatabindUtilAccessPattern *e = ComFasterxmlJacksonDatabindUtilAccessPattern_values_[i];
    if ([name isEqual:[e name]]) {
      return e;
    }
  }
  @throw create_JavaLangIllegalArgumentException_initWithNSString_(name);
  return nil;
}

ComFasterxmlJacksonDatabindUtilAccessPattern *ComFasterxmlJacksonDatabindUtilAccessPattern_fromOrdinal(NSUInteger ordinal) {
  ComFasterxmlJacksonDatabindUtilAccessPattern_initialize();
  if (ordinal >= 3) {
    return nil;
  }
  return ComFasterxmlJacksonDatabindUtilAccessPattern_values_[ordinal];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindUtilAccessPattern)
