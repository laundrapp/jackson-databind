//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/BeanDescription.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindBeanDescription")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindBeanDescription
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindBeanDescription 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindBeanDescription 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindBeanDescription

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindBeanDescription_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindBeanDescription || defined(INCLUDE_ComFasterxmlJacksonDatabindBeanDescription))
#define ComFasterxmlJacksonDatabindBeanDescription_

@class ComFasterxmlJacksonAnnotationJsonFormat_Value;
@class ComFasterxmlJacksonAnnotationJsonInclude_Value;
@class ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_Value;
@class ComFasterxmlJacksonDatabindIntrospectAnnotatedClass;
@class ComFasterxmlJacksonDatabindIntrospectAnnotatedConstructor;
@class ComFasterxmlJacksonDatabindIntrospectAnnotatedMember;
@class ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod;
@class ComFasterxmlJacksonDatabindIntrospectObjectIdInfo;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindTypeTypeBindings;
@class IOSClass;
@class IOSObjectArray;
@class JavaLangReflectConstructor;
@class JavaLangReflectMethod;
@protocol ComFasterxmlJacksonDatabindUtilAnnotations;
@protocol ComFasterxmlJacksonDatabindUtilConverter;
@protocol JavaLangReflectType;
@protocol JavaUtilList;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

/*!
 @brief Basic container for information gathered by <code>ClassIntrospector</code> to
  help in constructing serializers and deserializers.
 Note that the main implementation type is 
 <code>com.fasterxml.jackson.databind.introspect.BasicBeanDescription</code>,
  meaning that it is safe to upcast to this type.
 */
@interface ComFasterxmlJacksonDatabindBeanDescription : NSObject {
 @public
  /*!
   @brief Bean type information, including raw class and possible
  generics information
   */
  ComFasterxmlJacksonDatabindJavaType *_type_;
}

#pragma mark Public

/*!
 @brief Accessor for type bindings that may be needed to fully resolve
  types of member object, such as return and argument types of
  methods and constructors, and types of fields.
 */
- (ComFasterxmlJacksonDatabindTypeTypeBindings *)bindingsForBeanType;

- (ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *)findAnyGetter;

/*!
 */
- (ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *)findAnySetter;

/*!
 @brief Method used to locate a mutator (settable field, or 2-argument set method)
  of introspected class that
  implements <code>com.fasterxml.jackson.annotation.JsonAnySetter</code>.
 If no such mutator exists null is returned. If more than one are found,
  an exception is thrown.
  Additional checks are also made to see that method signature
  is acceptable: needs to take 2 arguments, first one String or
  Object; second any can be any type.
 @since 2.9
 */
- (ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *)findAnySetterAccessor;

/*!
 */
- (ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *)findAnySetterField;

/*!
 @brief Method for locating all back-reference properties (setters, fields) bean has
 */
- (id<JavaUtilMap>)findBackReferenceProperties;

/*!
 @brief Method for locating all back-reference properties (setters, fields) bean has
 @since 2.9
 */
- (id<JavaUtilList>)findBackReferences;

/*!
 @brief Accessor for possible description for the bean type, used for constructing
  documentation.
 @since 2.7
 */
- (NSString *)findClassDescription;

/*!
 @brief Method that will locate the no-arg constructor for this class,
  if it has one, and that constructor has not been marked as
  ignorable.
 */
- (ComFasterxmlJacksonDatabindIntrospectAnnotatedConstructor *)findDefaultConstructor;

/*!
 @brief Method for finding out if the POJO specifies default view(s) to
  use for properties, considering both per-type annotations and
  global default settings.
 @since 2.9
 */
- (IOSObjectArray *)findDefaultViews;

/*!
 @brief Method for finding <code>Converter</code> used for serializing instances
  of this class.
 @since 2.2
 */
- (id<ComFasterxmlJacksonDatabindUtilConverter>)findDeserializationConverter;

/*!
 @brief Method for checking what is the expected format for POJO, as
  defined by defaults and possible annotations.
 Note that this may be further refined by per-property annotations.
 @since 2.1
 */
- (ComFasterxmlJacksonAnnotationJsonFormat_Value *)findExpectedFormatWithComFasterxmlJacksonAnnotationJsonFormat_Value:(ComFasterxmlJacksonAnnotationJsonFormat_Value *)defValue;

/*!
 @brief Method that can be called to find if introspected class declares
  a static "valueOf" factory method that returns an instance of
  introspected type, given one of acceptable types.
 @param expArgTypes Types that the matching single argument factory    method can take: will also accept super types of these types
     (ie. arg just has to be assignable from expArgType)
 */
- (JavaLangReflectMethod *)findFactoryMethodWithIOSClassArray:(IOSObjectArray *)expArgTypes;

- (id<JavaUtilMap>)findInjectables;

/*!
 @brief Method for locating accessor (readable field, or "getter" method)
  that has 
 <code>com.fasterxml.jackson.annotation.JsonValue</code> annotation,
  if any.If multiple ones are found,
  an error is reported by throwing <code>IllegalArgumentException</code>
 @since 2.9
 */
- (ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *)findJsonValueAccessor;

- (ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *)findJsonValueMethod;

- (ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *)findMethodWithNSString:(NSString *)name
                                                               withIOSClassArray:(IOSObjectArray *)paramTypes;

/*!
 @brief Method for checking if the POJO type has annotations to
  indicate that a builder is to be used for instantiating
  instances and handling data binding, instead of standard
  bean deserializer.
 */
- (IOSClass *)findPOJOBuilder;

/*!
 @brief Method for finding configuration for POJO Builder class.
 */
- (ComFasterxmlJacksonDatabindAnnotationJsonPOJOBuilder_Value *)findPOJOBuilderConfig;

/*!
 @return Ordered Map with logical property name as key, and
     matching getter method as value.
 */
- (id<JavaUtilList>)findProperties;

/*!
 @brief Method for finding annotation-indicated inclusion definition (if any);
  possibly overriding given default value.
 <p>
  NOTE: does NOT use global inclusion default settings as the base, unless
  passed as `defValue`.
 @since 2.7
 */
- (ComFasterxmlJacksonAnnotationJsonInclude_Value *)findPropertyInclusionWithComFasterxmlJacksonAnnotationJsonInclude_Value:(ComFasterxmlJacksonAnnotationJsonInclude_Value *)defValue;

/*!
 @brief Method for finding <code>Converter</code> used for serializing instances
  of this class.
 @since 2.2
 */
- (id<ComFasterxmlJacksonDatabindUtilConverter>)findSerializationConverter;

/*!
 @brief Method that can be called to locate a single-arg constructor that
  takes specified exact type (will not accept supertype constructors)
 @param argTypes Type(s) of the argument that we are looking for
 */
- (JavaLangReflectConstructor *)findSingleArgConstructorWithIOSClassArray:(IOSObjectArray *)argTypes;

- (IOSClass *)getBeanClass;

/*!
 @brief Method for accessing collection of annotations the bean
  class has.
 */
- (id<ComFasterxmlJacksonDatabindUtilAnnotations>)getClassAnnotations;

/*!
 @brief Method for accessing low-level information about Class this
  item describes.
 */
- (ComFasterxmlJacksonDatabindIntrospectAnnotatedClass *)getClassInfo;

- (id<JavaUtilList>)getConstructors;

- (id<JavaUtilList>)getFactoryMethods;

- (id<JavaUtilSet>)getIgnoredPropertyNames;

/*!
 @brief Accessor for getting information about Object Id expected to
  be used for this POJO type, if any.
 */
- (ComFasterxmlJacksonDatabindIntrospectObjectIdInfo *)getObjectIdInfo;

/*!
 @brief Method for accessing declared type of bean being introspected,
  including full generic type information (from declaration)
 */
- (ComFasterxmlJacksonDatabindJavaType *)getType;

/*!
 @brief Method for checking whether class being described has any
  annotations recognized by registered annotation introspector.
 */
- (jboolean)hasKnownClassAnnotations;

/*!
 @brief Method called to create a "default instance" of the bean, currently
  only needed for obtaining default field values which may be used for
  suppressing serialization of fields that have "not changed".
 @param fixAccess If true, method is allowed to fix access to the    default constructor (to be able to call non-public constructor);
     if false, has to use constructor as is.
 @return Instance of class represented by this descriptor, if
    suitable default constructor was found; null otherwise.
 */
- (id)instantiateBeanWithBoolean:(jboolean)fixAccess;

/*!
 @since 2.9
 */
- (jboolean)isNonStaticInnerClass;

/*!
 @brief Method for resolving given JDK type, using this bean as the
  generic type resolution context.
 */
- (ComFasterxmlJacksonDatabindJavaType *)resolveTypeWithJavaLangReflectType:(id<JavaLangReflectType>)jdkType;

#pragma mark Protected

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindBeanDescription)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindBeanDescription, _type_, ComFasterxmlJacksonDatabindJavaType *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindBeanDescription_initWithComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindBeanDescription *self, ComFasterxmlJacksonDatabindJavaType *type);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindBeanDescription)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindBeanDescription")
