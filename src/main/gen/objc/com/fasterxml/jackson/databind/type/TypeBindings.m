//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/TypeBindings.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/type/ResolvedRecursiveType.h"
#include "com/fasterxml/jackson/databind/type/TypeBindings.h"
#include "com/fasterxml/jackson/databind/util/ClassUtil.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Iterable.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/reflect/TypeVariable.h"
#include "java/util/AbstractList.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/LinkedHashMap.h"
#include "java/util/List.h"
#include "java/util/Map.h"

@interface ComFasterxmlJacksonDatabindTypeTypeBindings () {
 @public
  /*!
   @brief Array of type (type variable) names.
   */
  IOSObjectArray *_names_;
  /*!
   @brief Types matching names
   */
  IOSObjectArray *_types_;
  /*!
   @brief Names of potentially unresolved type variables.
   @since 2.3
   */
  IOSObjectArray *_unboundVariables_;
  jint _hashCode_;
}

- (instancetype __nonnull)initWithNSStringArray:(IOSObjectArray *)names
   withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)types
                              withNSStringArray:(IOSObjectArray *)uvars;

@end

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindTypeTypeBindings, _names_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindTypeTypeBindings, _types_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindTypeTypeBindings, _unboundVariables_, IOSObjectArray *)

inline jlong ComFasterxmlJacksonDatabindTypeTypeBindings_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindTypeTypeBindings_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindTypeTypeBindings, serialVersionUID, jlong)

inline IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeBindings_get_NO_STRINGS(void);
static IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeBindings_NO_STRINGS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindTypeTypeBindings, NO_STRINGS, IOSObjectArray *)

inline IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeBindings_get_NO_TYPES(void);
static IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeBindings_NO_TYPES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindTypeTypeBindings, NO_TYPES, IOSObjectArray *)

inline ComFasterxmlJacksonDatabindTypeTypeBindings *ComFasterxmlJacksonDatabindTypeTypeBindings_get_EMPTY(void);
static ComFasterxmlJacksonDatabindTypeTypeBindings *ComFasterxmlJacksonDatabindTypeTypeBindings_EMPTY;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindTypeTypeBindings, EMPTY, ComFasterxmlJacksonDatabindTypeTypeBindings *)

__attribute__((unused)) static void ComFasterxmlJacksonDatabindTypeTypeBindings_initWithNSStringArray_withComFasterxmlJacksonDatabindJavaTypeArray_withNSStringArray_(ComFasterxmlJacksonDatabindTypeTypeBindings *self, IOSObjectArray *names, IOSObjectArray *types, IOSObjectArray *uvars);

__attribute__((unused)) static ComFasterxmlJacksonDatabindTypeTypeBindings *new_ComFasterxmlJacksonDatabindTypeTypeBindings_initWithNSStringArray_withComFasterxmlJacksonDatabindJavaTypeArray_withNSStringArray_(IOSObjectArray *names, IOSObjectArray *types, IOSObjectArray *uvars) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComFasterxmlJacksonDatabindTypeTypeBindings *create_ComFasterxmlJacksonDatabindTypeTypeBindings_initWithNSStringArray_withComFasterxmlJacksonDatabindJavaTypeArray_withNSStringArray_(IOSObjectArray *names, IOSObjectArray *types, IOSObjectArray *uvars);

inline IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_get_VARS_ABSTRACT_LIST(void);
static IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_ABSTRACT_LIST;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash, VARS_ABSTRACT_LIST, IOSObjectArray *)

inline IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_get_VARS_COLLECTION(void);
static IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_COLLECTION;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash, VARS_COLLECTION, IOSObjectArray *)

inline IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_get_VARS_ITERABLE(void);
static IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_ITERABLE;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash, VARS_ITERABLE, IOSObjectArray *)

inline IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_get_VARS_LIST(void);
static IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_LIST;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash, VARS_LIST, IOSObjectArray *)

inline IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_get_VARS_ARRAY_LIST(void);
static IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_ARRAY_LIST;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash, VARS_ARRAY_LIST, IOSObjectArray *)

inline IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_get_VARS_MAP(void);
static IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_MAP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash, VARS_MAP, IOSObjectArray *)

inline IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_get_VARS_HASH_MAP(void);
static IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_HASH_MAP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash, VARS_HASH_MAP, IOSObjectArray *)

inline IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_get_VARS_LINKED_HASH_MAP(void);
static IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_LINKED_HASH_MAP;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash, VARS_LINKED_HASH_MAP, IOSObjectArray *)

@interface ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey () {
 @public
  IOSClass *_raw_;
  IOSObjectArray *_params_;
  jint _hash_;
}

@end

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey, _raw_, IOSClass *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey, _params_, IOSObjectArray *)

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindTypeTypeBindings)

@implementation ComFasterxmlJacksonDatabindTypeTypeBindings

- (instancetype __nonnull)initWithNSStringArray:(IOSObjectArray *)names
   withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)types
                              withNSStringArray:(IOSObjectArray *)uvars {
  ComFasterxmlJacksonDatabindTypeTypeBindings_initWithNSStringArray_withComFasterxmlJacksonDatabindJavaTypeArray_withNSStringArray_(self, names, types, uvars);
  return self;
}

+ (ComFasterxmlJacksonDatabindTypeTypeBindings *)emptyBindings {
  return ComFasterxmlJacksonDatabindTypeTypeBindings_emptyBindings();
}

- (id)readResolve {
  if ((_names_ == nil) || (((IOSObjectArray *) nil_chk(_names_))->size_ == 0)) {
    return ComFasterxmlJacksonDatabindTypeTypeBindings_EMPTY;
  }
  return self;
}

+ (ComFasterxmlJacksonDatabindTypeTypeBindings *)createWithIOSClass:(IOSClass *)erasedType
                                                   withJavaUtilList:(id<JavaUtilList>)typeList {
  return ComFasterxmlJacksonDatabindTypeTypeBindings_createWithIOSClass_withJavaUtilList_(erasedType, typeList);
}

+ (ComFasterxmlJacksonDatabindTypeTypeBindings *)createWithIOSClass:(IOSClass *)erasedType
                       withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)types {
  return ComFasterxmlJacksonDatabindTypeTypeBindings_createWithIOSClass_withComFasterxmlJacksonDatabindJavaTypeArray_(erasedType, types);
}

+ (ComFasterxmlJacksonDatabindTypeTypeBindings *)createWithIOSClass:(IOSClass *)erasedType
                            withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeArg1 {
  return ComFasterxmlJacksonDatabindTypeTypeBindings_createWithIOSClass_withComFasterxmlJacksonDatabindJavaType_(erasedType, typeArg1);
}

+ (ComFasterxmlJacksonDatabindTypeTypeBindings *)createWithIOSClass:(IOSClass *)erasedType
                            withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeArg1
                            withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeArg2 {
  return ComFasterxmlJacksonDatabindTypeTypeBindings_createWithIOSClass_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_(erasedType, typeArg1, typeArg2);
}

+ (ComFasterxmlJacksonDatabindTypeTypeBindings *)createIfNeededWithIOSClass:(IOSClass *)erasedType
                                    withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeArg1 {
  return ComFasterxmlJacksonDatabindTypeTypeBindings_createIfNeededWithIOSClass_withComFasterxmlJacksonDatabindJavaType_(erasedType, typeArg1);
}

+ (ComFasterxmlJacksonDatabindTypeTypeBindings *)createIfNeededWithIOSClass:(IOSClass *)erasedType
                               withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)types {
  return ComFasterxmlJacksonDatabindTypeTypeBindings_createIfNeededWithIOSClass_withComFasterxmlJacksonDatabindJavaTypeArray_(erasedType, types);
}

- (ComFasterxmlJacksonDatabindTypeTypeBindings *)withUnboundVariableWithNSString:(NSString *)name {
  jint len = (_unboundVariables_ == nil) ? 0 : ((IOSObjectArray *) nil_chk(_unboundVariables_))->size_;
  IOSObjectArray *names = (len == 0) ? [IOSObjectArray arrayWithLength:1 type:NSString_class_()] : JavaUtilArrays_copyOfWithNSObjectArray_withInt_(_unboundVariables_, len + 1);
  IOSObjectArray_Set(names, len, name);
  return create_ComFasterxmlJacksonDatabindTypeTypeBindings_initWithNSStringArray_withComFasterxmlJacksonDatabindJavaTypeArray_withNSStringArray_(_names_, _types_, names);
}

- (ComFasterxmlJacksonDatabindJavaType *)findBoundTypeWithNSString:(NSString *)name {
  for (jint i = 0, len = ((IOSObjectArray *) nil_chk(_names_))->size_; i < len; ++i) {
    if ([((NSString *) nil_chk(name)) isEqual:IOSObjectArray_Get(_names_, i)]) {
      ComFasterxmlJacksonDatabindJavaType *t = IOSObjectArray_Get(nil_chk(_types_), i);
      if ([t isKindOfClass:[ComFasterxmlJacksonDatabindTypeResolvedRecursiveType class]]) {
        ComFasterxmlJacksonDatabindTypeResolvedRecursiveType *rrt = (ComFasterxmlJacksonDatabindTypeResolvedRecursiveType *) cast_chk(t, [ComFasterxmlJacksonDatabindTypeResolvedRecursiveType class]);
        ComFasterxmlJacksonDatabindJavaType *t2 = [((ComFasterxmlJacksonDatabindTypeResolvedRecursiveType *) nil_chk(rrt)) getSelfReferencedType];
        if (t2 != nil) {
          t = t2;
        }
        else {
        }
      }
      return t;
    }
  }
  return nil;
}

- (jboolean)isEmpty {
  return ((IOSObjectArray *) nil_chk(_types_))->size_ == 0;
}

- (jint)size {
  return ((IOSObjectArray *) nil_chk(_types_))->size_;
}

- (NSString *)getBoundNameWithInt:(jint)index {
  if (index < 0 || index >= ((IOSObjectArray *) nil_chk(_names_))->size_) {
    return nil;
  }
  return IOSObjectArray_Get(nil_chk(_names_), index);
}

- (ComFasterxmlJacksonDatabindJavaType *)getBoundTypeWithInt:(jint)index {
  if (index < 0 || index >= ((IOSObjectArray *) nil_chk(_types_))->size_) {
    return nil;
  }
  return IOSObjectArray_Get(nil_chk(_types_), index);
}

- (id<JavaUtilList>)getTypeParameters {
  if (((IOSObjectArray *) nil_chk(_types_))->size_ == 0) {
    return JavaUtilCollections_emptyList();
  }
  return JavaUtilArrays_asListWithNSObjectArray_(_types_);
}

- (jboolean)hasUnboundWithNSString:(NSString *)name {
  if (_unboundVariables_ != nil) {
    for (jint i = _unboundVariables_->size_; --i >= 0; ) {
      if ([((NSString *) nil_chk(name)) isEqual:IOSObjectArray_Get(_unboundVariables_, i)]) {
        return true;
      }
    }
  }
  return false;
}

- (id)asKeyWithIOSClass:(IOSClass *)rawBase {
  return create_ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey_initWithIOSClass_withComFasterxmlJacksonDatabindJavaTypeArray_withInt_(rawBase, _types_, _hashCode_);
}

- (NSString *)description {
  if (((IOSObjectArray *) nil_chk(_types_))->size_ == 0) {
    return @"<>";
  }
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  [sb appendWithChar:'<'];
  for (jint i = 0, len = _types_->size_; i < len; ++i) {
    if (i > 0) {
      [sb appendWithChar:','];
    }
    NSString *sig = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(IOSObjectArray_Get(_types_, i))) getGenericSignature];
    [sb appendWithNSString:sig];
  }
  [sb appendWithChar:'>'];
  return [sb description];
}

- (NSUInteger)hash {
  return _hashCode_;
}

- (jboolean)isEqual:(id)o {
  if (o == self) return true;
  if (!ComFasterxmlJacksonDatabindUtilClassUtil_hasClassWithId_withIOSClass_(o, [self java_getClass])) {
    return false;
  }
  ComFasterxmlJacksonDatabindTypeTypeBindings *other = (ComFasterxmlJacksonDatabindTypeTypeBindings *) cast_chk(o, [ComFasterxmlJacksonDatabindTypeTypeBindings class]);
  jint len = ((IOSObjectArray *) nil_chk(_types_))->size_;
  if (len != [((ComFasterxmlJacksonDatabindTypeTypeBindings *) nil_chk(other)) size]) {
    return false;
  }
  IOSObjectArray *otherTypes = other->_types_;
  for (jint i = 0; i < len; ++i) {
    if (![((ComFasterxmlJacksonDatabindJavaType *) nil_chk(IOSObjectArray_Get(otherTypes, i))) isEqual:IOSObjectArray_Get(_types_, i)]) {
      return false;
    }
  }
  return true;
}

- (IOSObjectArray *)typeParameterArray {
  return _types_;
}

- (void)dealloc {
  RELEASE_(_names_);
  RELEASE_(_types_);
  RELEASE_(_unboundVariables_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x2, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeTypeBindings;", 0x9, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x4, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeTypeBindings;", 0x9, 1, 2, -1, 3, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeTypeBindings;", 0x9, 1, 4, -1, 5, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeTypeBindings;", 0x9, 1, 6, -1, 7, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeTypeBindings;", 0x9, 1, 8, -1, 9, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeTypeBindings;", 0x9, 10, 6, -1, 7, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeTypeBindings;", 0x9, 10, 4, -1, 5, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindTypeTypeBindings;", 0x1, 11, 12, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, 13, 12, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 14, 15, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJavaType;", 0x1, 16, 15, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 17, -1, -1 },
    { NULL, "Z", 0x1, 18, 12, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, 19, 20, -1, 21, -1, -1 },
    { NULL, "LNSString;", 0x1, 22, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 23, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 24, 25, -1, -1, -1, -1 },
    { NULL, "[LComFasterxmlJacksonDatabindJavaType;", 0x4, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithNSStringArray:withComFasterxmlJacksonDatabindJavaTypeArray:withNSStringArray:);
  methods[1].selector = @selector(emptyBindings);
  methods[2].selector = @selector(readResolve);
  methods[3].selector = @selector(createWithIOSClass:withJavaUtilList:);
  methods[4].selector = @selector(createWithIOSClass:withComFasterxmlJacksonDatabindJavaTypeArray:);
  methods[5].selector = @selector(createWithIOSClass:withComFasterxmlJacksonDatabindJavaType:);
  methods[6].selector = @selector(createWithIOSClass:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindJavaType:);
  methods[7].selector = @selector(createIfNeededWithIOSClass:withComFasterxmlJacksonDatabindJavaType:);
  methods[8].selector = @selector(createIfNeededWithIOSClass:withComFasterxmlJacksonDatabindJavaTypeArray:);
  methods[9].selector = @selector(withUnboundVariableWithNSString:);
  methods[10].selector = @selector(findBoundTypeWithNSString:);
  methods[11].selector = @selector(isEmpty);
  methods[12].selector = @selector(size);
  methods[13].selector = @selector(getBoundNameWithInt:);
  methods[14].selector = @selector(getBoundTypeWithInt:);
  methods[15].selector = @selector(getTypeParameters);
  methods[16].selector = @selector(hasUnboundWithNSString:);
  methods[17].selector = @selector(asKeyWithIOSClass:);
  methods[18].selector = @selector(description);
  methods[19].selector = @selector(hash);
  methods[20].selector = @selector(isEqual:);
  methods[21].selector = @selector(typeParameterArray);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindTypeTypeBindings_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "NO_STRINGS", "[LNSString;", .constantValue.asLong = 0, 0x1a, -1, 26, -1, -1 },
    { "NO_TYPES", "[LComFasterxmlJacksonDatabindJavaType;", .constantValue.asLong = 0, 0x1a, -1, 27, -1, -1 },
    { "EMPTY", "LComFasterxmlJacksonDatabindTypeTypeBindings;", .constantValue.asLong = 0, 0x1a, -1, 28, -1, -1 },
    { "_names_", "[LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_types_", "[LComFasterxmlJacksonDatabindJavaType;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_unboundVariables_", "[LNSString;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_hashCode_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "[LNSString;[LComFasterxmlJacksonDatabindJavaType;[LNSString;", "create", "LIOSClass;LJavaUtilList;", "(Ljava/lang/Class<*>;Ljava/util/List<Lcom/fasterxml/jackson/databind/JavaType;>;)Lcom/fasterxml/jackson/databind/type/TypeBindings;", "LIOSClass;[LComFasterxmlJacksonDatabindJavaType;", "(Ljava/lang/Class<*>;[Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/type/TypeBindings;", "LIOSClass;LComFasterxmlJacksonDatabindJavaType;", "(Ljava/lang/Class<*>;Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/type/TypeBindings;", "LIOSClass;LComFasterxmlJacksonDatabindJavaType;LComFasterxmlJacksonDatabindJavaType;", "(Ljava/lang/Class<*>;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/type/TypeBindings;", "createIfNeeded", "withUnboundVariable", "LNSString;", "findBoundType", "getBoundName", "I", "getBoundType", "()Ljava/util/List<Lcom/fasterxml/jackson/databind/JavaType;>;", "hasUnbound", "asKey", "LIOSClass;", "(Ljava/lang/Class<*>;)Ljava/lang/Object;", "toString", "hashCode", "equals", "LNSObject;", &ComFasterxmlJacksonDatabindTypeTypeBindings_NO_STRINGS, &ComFasterxmlJacksonDatabindTypeTypeBindings_NO_TYPES, &ComFasterxmlJacksonDatabindTypeTypeBindings_EMPTY, "LComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash;LComFasterxmlJacksonDatabindTypeTypeBindings_AsKey;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindTypeTypeBindings = { "TypeBindings", "com.fasterxml.jackson.databind.type", ptrTable, methods, fields, 7, 0x1, 22, 8, -1, 29, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindTypeTypeBindings;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindTypeTypeBindings class]) {
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindTypeTypeBindings_NO_STRINGS, [IOSObjectArray newArrayWithLength:0 type:NSString_class_()]);
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindTypeTypeBindings_NO_TYPES, [IOSObjectArray newArrayWithLength:0 type:ComFasterxmlJacksonDatabindJavaType_class_()]);
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindTypeTypeBindings_EMPTY, new_ComFasterxmlJacksonDatabindTypeTypeBindings_initWithNSStringArray_withComFasterxmlJacksonDatabindJavaTypeArray_withNSStringArray_(ComFasterxmlJacksonDatabindTypeTypeBindings_NO_STRINGS, ComFasterxmlJacksonDatabindTypeTypeBindings_NO_TYPES, nil));
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindTypeTypeBindings)
  }
}

@end

void ComFasterxmlJacksonDatabindTypeTypeBindings_initWithNSStringArray_withComFasterxmlJacksonDatabindJavaTypeArray_withNSStringArray_(ComFasterxmlJacksonDatabindTypeTypeBindings *self, IOSObjectArray *names, IOSObjectArray *types, IOSObjectArray *uvars) {
  NSObject_init(self);
  JreStrongAssign(&self->_names_, (names == nil) ? ComFasterxmlJacksonDatabindTypeTypeBindings_NO_STRINGS : names);
  JreStrongAssign(&self->_types_, (types == nil) ? ComFasterxmlJacksonDatabindTypeTypeBindings_NO_TYPES : types);
  if (self->_names_->size_ != self->_types_->size_) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$I$IC", @"Mismatching names (", self->_names_->size_, @"), types (", self->_types_->size_, ')'));
  }
  jint h = 1;
  for (jint i = 0, len = self->_types_->size_; i < len; ++i) {
    h += ((jint) [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(IOSObjectArray_Get(self->_types_, i))) hash]);
  }
  JreStrongAssign(&self->_unboundVariables_, uvars);
  self->_hashCode_ = h;
}

ComFasterxmlJacksonDatabindTypeTypeBindings *new_ComFasterxmlJacksonDatabindTypeTypeBindings_initWithNSStringArray_withComFasterxmlJacksonDatabindJavaTypeArray_withNSStringArray_(IOSObjectArray *names, IOSObjectArray *types, IOSObjectArray *uvars) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindTypeTypeBindings, initWithNSStringArray_withComFasterxmlJacksonDatabindJavaTypeArray_withNSStringArray_, names, types, uvars)
}

ComFasterxmlJacksonDatabindTypeTypeBindings *create_ComFasterxmlJacksonDatabindTypeTypeBindings_initWithNSStringArray_withComFasterxmlJacksonDatabindJavaTypeArray_withNSStringArray_(IOSObjectArray *names, IOSObjectArray *types, IOSObjectArray *uvars) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindTypeTypeBindings, initWithNSStringArray_withComFasterxmlJacksonDatabindJavaTypeArray_withNSStringArray_, names, types, uvars)
}

ComFasterxmlJacksonDatabindTypeTypeBindings *ComFasterxmlJacksonDatabindTypeTypeBindings_emptyBindings() {
  ComFasterxmlJacksonDatabindTypeTypeBindings_initialize();
  return ComFasterxmlJacksonDatabindTypeTypeBindings_EMPTY;
}

ComFasterxmlJacksonDatabindTypeTypeBindings *ComFasterxmlJacksonDatabindTypeTypeBindings_createWithIOSClass_withJavaUtilList_(IOSClass *erasedType, id<JavaUtilList> typeList) {
  ComFasterxmlJacksonDatabindTypeTypeBindings_initialize();
  IOSObjectArray *types = (typeList == nil || [typeList isEmpty]) ? ComFasterxmlJacksonDatabindTypeTypeBindings_NO_TYPES : [((id<JavaUtilList>) nil_chk(typeList)) toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[typeList size] type:ComFasterxmlJacksonDatabindJavaType_class_()]];
  return ComFasterxmlJacksonDatabindTypeTypeBindings_createWithIOSClass_withComFasterxmlJacksonDatabindJavaTypeArray_(erasedType, types);
}

ComFasterxmlJacksonDatabindTypeTypeBindings *ComFasterxmlJacksonDatabindTypeTypeBindings_createWithIOSClass_withComFasterxmlJacksonDatabindJavaTypeArray_(IOSClass *erasedType, IOSObjectArray *types) {
  ComFasterxmlJacksonDatabindTypeTypeBindings_initialize();
  if (types == nil) {
    types = ComFasterxmlJacksonDatabindTypeTypeBindings_NO_TYPES;
  }
  else switch (types->size_) {
    case 1:
    return ComFasterxmlJacksonDatabindTypeTypeBindings_createWithIOSClass_withComFasterxmlJacksonDatabindJavaType_(erasedType, IOSObjectArray_Get(types, 0));
    case 2:
    return ComFasterxmlJacksonDatabindTypeTypeBindings_createWithIOSClass_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_(erasedType, IOSObjectArray_Get(types, 0), IOSObjectArray_Get(types, 1));
  }
  IOSObjectArray *vars = [((IOSClass *) nil_chk(erasedType)) getTypeParameters];
  IOSObjectArray *names;
  if (vars == nil || vars->size_ == 0) {
    names = ComFasterxmlJacksonDatabindTypeTypeBindings_NO_STRINGS;
  }
  else {
    jint len = vars->size_;
    names = [IOSObjectArray arrayWithLength:len type:NSString_class_()];
    for (jint i = 0; i < len; ++i) {
      IOSObjectArray_Set(names, i, [((id<JavaLangReflectTypeVariable>) nil_chk(IOSObjectArray_Get(vars, i))) getName]);
    }
  }
  if (((IOSObjectArray *) nil_chk(names))->size_ != ((IOSObjectArray *) nil_chk(types))->size_) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$I$$$I", @"Cannot create TypeBindings for class ", [erasedType getName], @" with ", types->size_, @" type parameter", ((types->size_ == 1) ? @"" : @"s"), @": class expects ", names->size_));
  }
  return create_ComFasterxmlJacksonDatabindTypeTypeBindings_initWithNSStringArray_withComFasterxmlJacksonDatabindJavaTypeArray_withNSStringArray_(names, types, nil);
}

ComFasterxmlJacksonDatabindTypeTypeBindings *ComFasterxmlJacksonDatabindTypeTypeBindings_createWithIOSClass_withComFasterxmlJacksonDatabindJavaType_(IOSClass *erasedType, ComFasterxmlJacksonDatabindJavaType *typeArg1) {
  ComFasterxmlJacksonDatabindTypeTypeBindings_initialize();
  IOSObjectArray *vars = ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_paramsFor1WithIOSClass_(erasedType);
  jint varLen = (vars == nil) ? 0 : ((IOSObjectArray *) nil_chk(vars))->size_;
  if (varLen != 1) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$I", @"Cannot create TypeBindings for class ", [((IOSClass *) nil_chk(erasedType)) getName], @" with 1 type parameter: class expects ", varLen));
  }
  return create_ComFasterxmlJacksonDatabindTypeTypeBindings_initWithNSStringArray_withComFasterxmlJacksonDatabindJavaTypeArray_withNSStringArray_([IOSObjectArray arrayWithObjects:(id[]){ [((id<JavaLangReflectTypeVariable>) nil_chk(IOSObjectArray_Get(nil_chk(vars), 0))) getName] } count:1 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ typeArg1 } count:1 type:ComFasterxmlJacksonDatabindJavaType_class_()], nil);
}

ComFasterxmlJacksonDatabindTypeTypeBindings *ComFasterxmlJacksonDatabindTypeTypeBindings_createWithIOSClass_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJavaType_(IOSClass *erasedType, ComFasterxmlJacksonDatabindJavaType *typeArg1, ComFasterxmlJacksonDatabindJavaType *typeArg2) {
  ComFasterxmlJacksonDatabindTypeTypeBindings_initialize();
  IOSObjectArray *vars = ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_paramsFor2WithIOSClass_(erasedType);
  jint varLen = (vars == nil) ? 0 : ((IOSObjectArray *) nil_chk(vars))->size_;
  if (varLen != 2) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$I", @"Cannot create TypeBindings for class ", [((IOSClass *) nil_chk(erasedType)) getName], @" with 2 type parameters: class expects ", varLen));
  }
  return create_ComFasterxmlJacksonDatabindTypeTypeBindings_initWithNSStringArray_withComFasterxmlJacksonDatabindJavaTypeArray_withNSStringArray_([IOSObjectArray arrayWithObjects:(id[]){ [((id<JavaLangReflectTypeVariable>) nil_chk(IOSObjectArray_Get(nil_chk(vars), 0))) getName], [((id<JavaLangReflectTypeVariable>) nil_chk(IOSObjectArray_Get(vars, 1))) getName] } count:2 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ typeArg1, typeArg2 } count:2 type:ComFasterxmlJacksonDatabindJavaType_class_()], nil);
}

ComFasterxmlJacksonDatabindTypeTypeBindings *ComFasterxmlJacksonDatabindTypeTypeBindings_createIfNeededWithIOSClass_withComFasterxmlJacksonDatabindJavaType_(IOSClass *erasedType, ComFasterxmlJacksonDatabindJavaType *typeArg1) {
  ComFasterxmlJacksonDatabindTypeTypeBindings_initialize();
  IOSObjectArray *vars = [((IOSClass *) nil_chk(erasedType)) getTypeParameters];
  jint varLen = (vars == nil) ? 0 : ((IOSObjectArray *) nil_chk(vars))->size_;
  if (varLen == 0) {
    return ComFasterxmlJacksonDatabindTypeTypeBindings_EMPTY;
  }
  if (varLen != 1) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$I", @"Cannot create TypeBindings for class ", [erasedType getName], @" with 1 type parameter: class expects ", varLen));
  }
  return create_ComFasterxmlJacksonDatabindTypeTypeBindings_initWithNSStringArray_withComFasterxmlJacksonDatabindJavaTypeArray_withNSStringArray_([IOSObjectArray arrayWithObjects:(id[]){ [((id<JavaLangReflectTypeVariable>) nil_chk(IOSObjectArray_Get(nil_chk(vars), 0))) getName] } count:1 type:NSString_class_()], [IOSObjectArray arrayWithObjects:(id[]){ typeArg1 } count:1 type:ComFasterxmlJacksonDatabindJavaType_class_()], nil);
}

ComFasterxmlJacksonDatabindTypeTypeBindings *ComFasterxmlJacksonDatabindTypeTypeBindings_createIfNeededWithIOSClass_withComFasterxmlJacksonDatabindJavaTypeArray_(IOSClass *erasedType, IOSObjectArray *types) {
  ComFasterxmlJacksonDatabindTypeTypeBindings_initialize();
  IOSObjectArray *vars = [((IOSClass *) nil_chk(erasedType)) getTypeParameters];
  if (vars == nil || vars->size_ == 0) {
    return ComFasterxmlJacksonDatabindTypeTypeBindings_EMPTY;
  }
  if (types == nil) {
    types = ComFasterxmlJacksonDatabindTypeTypeBindings_NO_TYPES;
  }
  jint len = vars->size_;
  IOSObjectArray *names = [IOSObjectArray arrayWithLength:len type:NSString_class_()];
  for (jint i = 0; i < len; ++i) {
    IOSObjectArray_Set(names, i, [((id<JavaLangReflectTypeVariable>) nil_chk(IOSObjectArray_Get(vars, i))) getName]);
  }
  if (names->size_ != ((IOSObjectArray *) nil_chk(types))->size_) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$I$$$I", @"Cannot create TypeBindings for class ", [erasedType getName], @" with ", types->size_, @" type parameter", ((types->size_ == 1) ? @"" : @"s"), @": class expects ", names->size_));
  }
  return create_ComFasterxmlJacksonDatabindTypeTypeBindings_initWithNSStringArray_withComFasterxmlJacksonDatabindJavaTypeArray_withNSStringArray_(names, types, nil);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindTypeTypeBindings)

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash)

@implementation ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

+ (IOSObjectArray *)paramsFor1WithIOSClass:(IOSClass *)erasedType {
  return ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_paramsFor1WithIOSClass_(erasedType);
}

+ (IOSObjectArray *)paramsFor2WithIOSClass:(IOSClass *)erasedType {
  return ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_paramsFor2WithIOSClass_(erasedType);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x0, -1, -1, -1, -1, -1, -1 },
    { NULL, "[LJavaLangReflectTypeVariable;", 0x9, 0, 1, -1, 2, -1, -1 },
    { NULL, "[LJavaLangReflectTypeVariable;", 0x9, 3, 1, -1, 2, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(paramsFor1WithIOSClass:);
  methods[2].selector = @selector(paramsFor2WithIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "VARS_ABSTRACT_LIST", "[LJavaLangReflectTypeVariable;", .constantValue.asLong = 0, 0x1a, -1, 4, 5, -1 },
    { "VARS_COLLECTION", "[LJavaLangReflectTypeVariable;", .constantValue.asLong = 0, 0x1a, -1, 6, 5, -1 },
    { "VARS_ITERABLE", "[LJavaLangReflectTypeVariable;", .constantValue.asLong = 0, 0x1a, -1, 7, 5, -1 },
    { "VARS_LIST", "[LJavaLangReflectTypeVariable;", .constantValue.asLong = 0, 0x1a, -1, 8, 5, -1 },
    { "VARS_ARRAY_LIST", "[LJavaLangReflectTypeVariable;", .constantValue.asLong = 0, 0x1a, -1, 9, 5, -1 },
    { "VARS_MAP", "[LJavaLangReflectTypeVariable;", .constantValue.asLong = 0, 0x1a, -1, 10, 5, -1 },
    { "VARS_HASH_MAP", "[LJavaLangReflectTypeVariable;", .constantValue.asLong = 0, 0x1a, -1, 11, 5, -1 },
    { "VARS_LINKED_HASH_MAP", "[LJavaLangReflectTypeVariable;", .constantValue.asLong = 0, 0x1a, -1, 12, 5, -1 },
  };
  static const void *ptrTable[] = { "paramsFor1", "LIOSClass;", "(Ljava/lang/Class<*>;)[Ljava/lang/reflect/TypeVariable<*>;", "paramsFor2", &ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_ABSTRACT_LIST, "[Ljava/lang/reflect/TypeVariable<*>;", &ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_COLLECTION, &ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_ITERABLE, &ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_LIST, &ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_ARRAY_LIST, &ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_MAP, &ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_HASH_MAP, &ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_LINKED_HASH_MAP, "LComFasterxmlJacksonDatabindTypeTypeBindings;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash = { "TypeParamStash", "com.fasterxml.jackson.databind.type", ptrTable, methods, fields, 7, 0x8, 3, 8, 13, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash class]) {
    JreStrongAssign(&ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_ABSTRACT_LIST, [JavaUtilAbstractList_class_() getTypeParameters]);
    JreStrongAssign(&ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_COLLECTION, [JavaUtilCollection_class_() getTypeParameters]);
    JreStrongAssign(&ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_ITERABLE, [JavaLangIterable_class_() getTypeParameters]);
    JreStrongAssign(&ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_LIST, [JavaUtilList_class_() getTypeParameters]);
    JreStrongAssign(&ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_ARRAY_LIST, [JavaUtilArrayList_class_() getTypeParameters]);
    JreStrongAssign(&ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_MAP, [JavaUtilMap_class_() getTypeParameters]);
    JreStrongAssign(&ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_HASH_MAP, [JavaUtilHashMap_class_() getTypeParameters]);
    JreStrongAssign(&ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_LINKED_HASH_MAP, [JavaUtilLinkedHashMap_class_() getTypeParameters]);
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash)
  }
}

@end

void ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_init(ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash *self) {
  NSObject_init(self);
}

ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash *new_ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash, init)
}

ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash *create_ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash, init)
}

IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_paramsFor1WithIOSClass_(IOSClass *erasedType) {
  ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_initialize();
  if (erasedType == JavaUtilCollection_class_()) {
    return ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_COLLECTION;
  }
  if (erasedType == JavaUtilList_class_()) {
    return ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_LIST;
  }
  if (erasedType == JavaUtilArrayList_class_()) {
    return ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_ARRAY_LIST;
  }
  if (erasedType == JavaUtilAbstractList_class_()) {
    return ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_ABSTRACT_LIST;
  }
  if (erasedType == JavaLangIterable_class_()) {
    return ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_ITERABLE;
  }
  return [((IOSClass *) nil_chk(erasedType)) getTypeParameters];
}

IOSObjectArray *ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_paramsFor2WithIOSClass_(IOSClass *erasedType) {
  ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_initialize();
  if (erasedType == JavaUtilMap_class_()) {
    return ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_MAP;
  }
  if (erasedType == JavaUtilHashMap_class_()) {
    return ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_HASH_MAP;
  }
  if (erasedType == JavaUtilLinkedHashMap_class_()) {
    return ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash_VARS_LINKED_HASH_MAP;
  }
  return [((IOSClass *) nil_chk(erasedType)) getTypeParameters];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindTypeTypeBindings_TypeParamStash)

@implementation ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)raw
withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)params
                                   withInt:(jint)hash_ {
  ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey_initWithIOSClass_withComFasterxmlJacksonDatabindJavaTypeArray_withInt_(self, raw, params, hash_);
  return self;
}

- (NSUInteger)hash {
  return _hash_;
}

- (jboolean)isEqual:(id)o {
  if (o == self) return true;
  if (o == nil) return false;
  if ([o java_getClass] != [self java_getClass]) return false;
  ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey *other = (ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey *) cast_chk(o, [ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey class]);
  if ((_hash_ == other->_hash_) && (_raw_ == other->_raw_)) {
    IOSObjectArray *otherParams = other->_params_;
    jint len = ((IOSObjectArray *) nil_chk(_params_))->size_;
    if (len == ((IOSObjectArray *) nil_chk(otherParams))->size_) {
      for (jint i = 0; i < len; ++i) {
        if (![((ComFasterxmlJacksonDatabindJavaType *) nil_chk(IOSObjectArray_Get(_params_, i))) isEqual:IOSObjectArray_Get(otherParams, i)]) {
          return false;
        }
      }
      return true;
    }
  }
  return false;
}

- (NSString *)description {
  return JreStrcat("$$", [((IOSClass *) nil_chk(_raw_)) getName], @"<>");
}

- (void)dealloc {
  RELEASE_(_raw_);
  RELEASE_(_params_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "I", 0x1, 2, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 5, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:withComFasterxmlJacksonDatabindJavaTypeArray:withInt:);
  methods[1].selector = @selector(hash);
  methods[2].selector = @selector(isEqual:);
  methods[3].selector = @selector(description);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_raw_", "LIOSClass;", .constantValue.asLong = 0, 0x12, -1, -1, 6, -1 },
    { "_params_", "[LComFasterxmlJacksonDatabindJavaType;", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
    { "_hash_", "I", .constantValue.asLong = 0, 0x12, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;[LComFasterxmlJacksonDatabindJavaType;I", "(Ljava/lang/Class<*>;[Lcom/fasterxml/jackson/databind/JavaType;I)V", "hashCode", "equals", "LNSObject;", "toString", "Ljava/lang/Class<*>;", "LComFasterxmlJacksonDatabindTypeTypeBindings;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey = { "AsKey", "com.fasterxml.jackson.databind.type", ptrTable, methods, fields, 7, 0x18, 4, 3, 7, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey;
}

@end

void ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey_initWithIOSClass_withComFasterxmlJacksonDatabindJavaTypeArray_withInt_(ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey *self, IOSClass *raw, IOSObjectArray *params, jint hash_) {
  NSObject_init(self);
  JreStrongAssign(&self->_raw_, raw);
  JreStrongAssign(&self->_params_, params);
  self->_hash_ = hash_;
}

ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey *new_ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey_initWithIOSClass_withComFasterxmlJacksonDatabindJavaTypeArray_withInt_(IOSClass *raw, IOSObjectArray *params, jint hash_) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey, initWithIOSClass_withComFasterxmlJacksonDatabindJavaTypeArray_withInt_, raw, params, hash_)
}

ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey *create_ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey_initWithIOSClass_withComFasterxmlJacksonDatabindJavaTypeArray_withInt_(IOSClass *raw, IOSObjectArray *params, jint hash_) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey, initWithIOSClass_withComFasterxmlJacksonDatabindJavaTypeArray_withInt_, raw, params, hash_)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindTypeTypeBindings_AsKey)
