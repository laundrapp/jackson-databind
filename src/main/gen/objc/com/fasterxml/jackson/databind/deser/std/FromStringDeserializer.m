//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonParser.h"
#include "com/fasterxml/jackson/core/JsonToken.h"
#include "com/fasterxml/jackson/core/util/VersionUtil.h"
#include "com/fasterxml/jackson/databind/DeserializationContext.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/JsonMappingException.h"
#include "com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.h"
#include "com/fasterxml/jackson/databind/deser/std/StdScalarDeserializer.h"
#include "com/fasterxml/jackson/databind/exc/InvalidFormatException.h"
#include "com/fasterxml/jackson/databind/type/TypeFactory.h"
#include "com/fasterxml/jackson/databind/util/ClassUtil.h"
#include "java/io/File.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/Integer.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/Throwable.h"
#include "java/net/InetAddress.h"
#include "java/net/InetSocketAddress.h"
#include "java/net/MalformedURLException.h"
#include "java/net/URI.h"
#include "java/net/URL.h"
#include "java/nio/charset/Charset.h"
#include "java/util/Currency.h"
#include "java/util/Locale.h"
#include "java/util/TimeZone.h"
#include "java/util/regex/Pattern.h"

__attribute__((unused)) static id ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer__deserializeFromEmptyString(ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer *self);

inline jlong ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std, serialVersionUID, jlong)

@implementation ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer

+ (IOSObjectArray *)types {
  return ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_types();
}

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)vc {
  ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_initWithIOSClass_(self, vc);
  return self;
}

+ (ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std *)findDeserializerWithIOSClass:(IOSClass *)rawType {
  return ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_findDeserializerWithIOSClass_(rawType);
}

- (id)deserializeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
 withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt {
  NSString *text = [((ComFasterxmlJacksonCoreJsonParser *) nil_chk(p)) getValueAsString];
  if (text != nil) {
    if ([text java_length] == 0 || [(text = [text java_trim]) java_length] == 0) {
      return [self _deserializeFromEmptyString];
    }
    JavaLangException *cause = nil;
    @try {
      return [self _deserializeWithNSString:text withComFasterxmlJacksonDatabindDeserializationContext:ctxt];
    }
    @catch (JavaLangIllegalArgumentException *e) {
      cause = e;
    }
    @catch (JavaNetMalformedURLException *e) {
      cause = e;
    }
    NSString *msg = @"not a valid textual representation";
    NSString *m2 = [((JavaLangException *) nil_chk(cause)) getMessage];
    if (m2 != nil) {
      msg = JreStrcat("$$$", msg, @", problem: ", m2);
    }
    ComFasterxmlJacksonDatabindJsonMappingException *e = [((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) weirdStringExceptionWithNSString:text withIOSClass:_valueClass_ withNSString:msg];
    [((ComFasterxmlJacksonDatabindJsonMappingException *) nil_chk(e)) initCauseWithJavaLangThrowable:cause];
    @throw e;
  }
  ComFasterxmlJacksonCoreJsonToken *t = [p getCurrentToken];
  if (t == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_ARRAY)) {
    return [self _deserializeFromArrayWithComFasterxmlJacksonCoreJsonParser:p withComFasterxmlJacksonDatabindDeserializationContext:ctxt];
  }
  if (t == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, VALUE_EMBEDDED_OBJECT)) {
    id ob = [p getEmbeddedObject];
    if (ob == nil) {
      return nil;
    }
    if ([((IOSClass *) nil_chk(_valueClass_)) isAssignableFrom:[ob java_getClass]]) {
      return ob;
    }
    return [self _deserializeEmbeddedWithId:ob withComFasterxmlJacksonDatabindDeserializationContext:ctxt];
  }
  return [((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) handleUnexpectedTokenWithIOSClass:_valueClass_ withComFasterxmlJacksonCoreJsonParser:p];
}

- (id)_deserializeWithNSString:(NSString *)value
withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (id)_deserializeEmbeddedWithId:(id)ob
withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt {
  [((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) reportInputMismatchWithComFasterxmlJacksonDatabindJsonDeserializer:self withNSString:@"Don't know how to convert embedded Object of type %s into %s" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [[nil_chk(ob) java_getClass] getName], [((IOSClass *) nil_chk(_valueClass_)) getName] } count:2 type:NSObject_class_()]];
  return nil;
}

- (id)_deserializeFromEmptyString {
  return ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer__deserializeFromEmptyString(self);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, "[LIOSClass;", 0x9, -1, -1, -1, 0, -1, -1 },
    { NULL, NULL, 0x4, -1, 1, -1, 2, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std;", 0x9, 3, 1, -1, 4, -1, -1 },
    { NULL, "LNSObject;", 0x1, 5, 6, 7, 8, -1, -1 },
    { NULL, "LNSObject;", 0x404, 9, 10, 7, 11, -1, -1 },
    { NULL, "LNSObject;", 0x4, 12, 13, 7, 14, -1, -1 },
    { NULL, "LNSObject;", 0x4, -1, -1, 7, 15, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(types);
  methods[1].selector = @selector(initWithIOSClass:);
  methods[2].selector = @selector(findDeserializerWithIOSClass:);
  methods[3].selector = @selector(deserializeWithComFasterxmlJacksonCoreJsonParser:withComFasterxmlJacksonDatabindDeserializationContext:);
  methods[4].selector = @selector(_deserializeWithNSString:withComFasterxmlJacksonDatabindDeserializationContext:);
  methods[5].selector = @selector(_deserializeEmbeddedWithId:withComFasterxmlJacksonDatabindDeserializationContext:);
  methods[6].selector = @selector(_deserializeFromEmptyString);
  #pragma clang diagnostic pop
  static const void *ptrTable[] = { "()[Ljava/lang/Class<*>;", "LIOSClass;", "(Ljava/lang/Class<*>;)V", "findDeserializer", "(Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/deser/std/FromStringDeserializer$Std;", "deserialize", "LComFasterxmlJacksonCoreJsonParser;LComFasterxmlJacksonDatabindDeserializationContext;", "LJavaIoIOException;", "(Lcom/fasterxml/jackson/core/JsonParser;Lcom/fasterxml/jackson/databind/DeserializationContext;)TT;", "_deserialize", "LNSString;LComFasterxmlJacksonDatabindDeserializationContext;", "(Ljava/lang/String;Lcom/fasterxml/jackson/databind/DeserializationContext;)TT;", "_deserializeEmbedded", "LNSObject;LComFasterxmlJacksonDatabindDeserializationContext;", "(Ljava/lang/Object;Lcom/fasterxml/jackson/databind/DeserializationContext;)TT;", "()TT;", "LComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std;", "<T:Ljava/lang/Object;>Lcom/fasterxml/jackson/databind/deser/std/StdScalarDeserializer<TT;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer = { "FromStringDeserializer", "com.fasterxml.jackson.databind.deser.std", ptrTable, methods, NULL, 7, 0x401, 7, 0, -1, 16, -1, 17, -1 };
  return &_ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer;
}

@end

IOSObjectArray *ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_types() {
  ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_initialize();
  return [IOSObjectArray arrayWithObjects:(id[]){ JavaIoFile_class_(), JavaNetURL_class_(), JavaNetURI_class_(), IOSClass_class_(), ComFasterxmlJacksonDatabindJavaType_class_(), JavaUtilCurrency_class_(), JavaUtilRegexPattern_class_(), JavaUtilLocale_class_(), JavaNioCharsetCharset_class_(), JavaUtilTimeZone_class_(), JavaNetInetAddress_class_(), JavaNetInetSocketAddress_class_(), JavaLangStringBuilder_class_() } count:13 type:IOSClass_class_()];
}

void ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_initWithIOSClass_(ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer *self, IOSClass *vc) {
  ComFasterxmlJacksonDatabindDeserStdStdScalarDeserializer_initWithIOSClass_(self, vc);
}

ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std *ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_findDeserializerWithIOSClass_(IOSClass *rawType) {
  ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_initialize();
  jint kind = 0;
  if (rawType == JavaIoFile_class_()) {
    kind = ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_FILE;
  }
  else if (rawType == JavaNetURL_class_()) {
    kind = ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_URL;
  }
  else if (rawType == JavaNetURI_class_()) {
    kind = ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_URI;
  }
  else if (rawType == IOSClass_class_()) {
    kind = ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_CLASS;
  }
  else if (rawType == ComFasterxmlJacksonDatabindJavaType_class_()) {
    kind = ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_JAVA_TYPE;
  }
  else if (rawType == JavaUtilCurrency_class_()) {
    kind = ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_CURRENCY;
  }
  else if (rawType == JavaUtilRegexPattern_class_()) {
    kind = ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_PATTERN;
  }
  else if (rawType == JavaUtilLocale_class_()) {
    kind = ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_LOCALE;
  }
  else if (rawType == JavaNioCharsetCharset_class_()) {
    kind = ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_CHARSET;
  }
  else if (rawType == JavaUtilTimeZone_class_()) {
    kind = ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_TIME_ZONE;
  }
  else if (rawType == JavaNetInetAddress_class_()) {
    kind = ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_INET_ADDRESS;
  }
  else if (rawType == JavaNetInetSocketAddress_class_()) {
    kind = ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_INET_SOCKET_ADDRESS;
  }
  else if (rawType == JavaLangStringBuilder_class_()) {
    kind = ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_STRING_BUILDER;
  }
  else {
    return nil;
  }
  return create_ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_initWithIOSClass_withInt_(rawType, kind);
}

id ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer__deserializeFromEmptyString(ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer *self) {
  return nil;
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer)

@implementation ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)valueType
                                   withInt:(jint)kind {
  ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_initWithIOSClass_withInt_(self, valueType, kind);
  return self;
}

- (id)_deserializeWithNSString:(NSString *)value
withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt {
  {
    jint ix;
    switch (_kind_) {
      case ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_FILE:
      return create_JavaIoFile_initWithNSString_(value);
      case ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_URL:
      return create_JavaNetURL_initWithNSString_(value);
      case ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_URI:
      return JavaNetURI_createWithNSString_(value);
      case ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_CLASS:
      @try {
        return [((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) findClassWithNSString:value];
      }
      @catch (JavaLangException *e) {
        return [ctxt handleInstantiationProblemWithIOSClass:_valueClass_ withId:value withJavaLangThrowable:ComFasterxmlJacksonDatabindUtilClassUtil_getRootCauseWithJavaLangThrowable_(e)];
      }
      case ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_JAVA_TYPE:
      return [((ComFasterxmlJacksonDatabindTypeTypeFactory *) nil_chk([((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) getTypeFactory])) constructFromCanonicalWithNSString:value];
      case ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_CURRENCY:
      return JavaUtilCurrency_getInstanceWithNSString_(value);
      case ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_PATTERN:
      return JavaUtilRegexPattern_compileWithNSString_(value);
      case ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_LOCALE:
      {
        jint ix = [self _firstHyphenOrUnderscoreWithNSString:value];
        if (ix < 0) {
          return create_JavaUtilLocale_initWithNSString_(value);
        }
        NSString *first = [((NSString *) nil_chk(value)) java_substring:0 endIndex:ix];
        value = [value java_substring:ix + 1];
        ix = [self _firstHyphenOrUnderscoreWithNSString:value];
        if (ix < 0) {
          return create_JavaUtilLocale_initWithNSString_withNSString_(first, value);
        }
        NSString *second = [((NSString *) nil_chk(value)) java_substring:0 endIndex:ix];
        return create_JavaUtilLocale_initWithNSString_withNSString_withNSString_(first, second, [value java_substring:ix + 1]);
      }
      case ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_CHARSET:
      return JavaNioCharsetCharset_forNameWithNSString_(value);
      case ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_TIME_ZONE:
      return JavaUtilTimeZone_getTimeZoneWithNSString_(value);
      case ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_INET_ADDRESS:
      return JavaNetInetAddress_getByNameWithNSString_(value);
      case ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_INET_SOCKET_ADDRESS:
      if ([((NSString *) nil_chk(value)) java_hasPrefix:@"["]) {
        jint i = [value java_lastIndexOf:']'];
        if (i == -1) {
          @throw create_ComFasterxmlJacksonDatabindExcInvalidFormatException_initWithComFasterxmlJacksonCoreJsonParser_withNSString_withId_withIOSClass_([((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) getParser], @"Bracketed IPv6 address must contain closing bracket", value, JavaNetInetSocketAddress_class_());
        }
        jint j = [value java_indexOf:':' fromIndex:i];
        jint port = j > -1 ? JavaLangInteger_parseIntWithNSString_([value java_substring:j + 1]) : 0;
        return create_JavaNetInetSocketAddress_initWithNSString_withInt_([value java_substring:0 endIndex:i + 1], port);
      }
      ix = [value java_indexOf:':'];
      if (ix >= 0 && [value java_indexOf:':' fromIndex:ix + 1] < 0) {
        jint port = JavaLangInteger_parseIntWithNSString_([value java_substring:ix + 1]);
        return create_JavaNetInetSocketAddress_initWithNSString_withInt_([value java_substring:0 endIndex:ix], port);
      }
      return create_JavaNetInetSocketAddress_initWithNSString_withInt_(value, 0);
      case ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_STRING_BUILDER:
      return create_JavaLangStringBuilder_initWithNSString_(value);
    }
  }
  ComFasterxmlJacksonCoreUtilVersionUtil_throwInternal();
  return nil;
}

- (id)_deserializeFromEmptyString {
  if (_kind_ == ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_URI) {
    return JavaNetURI_createWithNSString_(@"");
  }
  if (_kind_ == ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_LOCALE) {
    return JreLoadStatic(JavaUtilLocale, ROOT);
  }
  if (_kind_ == ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_STRING_BUILDER) {
    return create_JavaLangStringBuilder_init();
  }
  return ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer__deserializeFromEmptyString(self);
}

- (jint)_firstHyphenOrUnderscoreWithNSString:(NSString *)str {
  for (jint i = 0, end = [((NSString *) nil_chk(str)) java_length]; i < end; ++i) {
    jchar c = [str charAtWithInt:i];
    if (c == '_' || c == '-') {
      return i;
    }
  }
  return -1;
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, -1 },
    { NULL, "LNSObject;", 0x4, 2, 3, 4, -1, -1, -1 },
    { NULL, "LNSObject;", 0x4, -1, -1, 4, -1, -1, -1 },
    { NULL, "I", 0x4, 5, 6, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:withInt:);
  methods[1].selector = @selector(_deserializeWithNSString:withComFasterxmlJacksonDatabindDeserializationContext:);
  methods[2].selector = @selector(_deserializeFromEmptyString);
  methods[3].selector = @selector(_firstHyphenOrUnderscoreWithNSString:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "STD_FILE", "I", .constantValue.asInt = ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_FILE, 0x19, -1, -1, -1, -1 },
    { "STD_URL", "I", .constantValue.asInt = ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_URL, 0x19, -1, -1, -1, -1 },
    { "STD_URI", "I", .constantValue.asInt = ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_URI, 0x19, -1, -1, -1, -1 },
    { "STD_CLASS", "I", .constantValue.asInt = ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_CLASS, 0x19, -1, -1, -1, -1 },
    { "STD_JAVA_TYPE", "I", .constantValue.asInt = ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_JAVA_TYPE, 0x19, -1, -1, -1, -1 },
    { "STD_CURRENCY", "I", .constantValue.asInt = ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_CURRENCY, 0x19, -1, -1, -1, -1 },
    { "STD_PATTERN", "I", .constantValue.asInt = ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_PATTERN, 0x19, -1, -1, -1, -1 },
    { "STD_LOCALE", "I", .constantValue.asInt = ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_LOCALE, 0x19, -1, -1, -1, -1 },
    { "STD_CHARSET", "I", .constantValue.asInt = ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_CHARSET, 0x19, -1, -1, -1, -1 },
    { "STD_TIME_ZONE", "I", .constantValue.asInt = ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_TIME_ZONE, 0x19, -1, -1, -1, -1 },
    { "STD_INET_ADDRESS", "I", .constantValue.asInt = ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_INET_ADDRESS, 0x19, -1, -1, -1, -1 },
    { "STD_INET_SOCKET_ADDRESS", "I", .constantValue.asInt = ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_INET_SOCKET_ADDRESS, 0x19, -1, -1, -1, -1 },
    { "STD_STRING_BUILDER", "I", .constantValue.asInt = ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_STD_STRING_BUILDER, 0x19, -1, -1, -1, -1 },
    { "_kind_", "I", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;I", "(Ljava/lang/Class<*>;I)V", "_deserialize", "LNSString;LComFasterxmlJacksonDatabindDeserializationContext;", "LJavaIoIOException;", "_firstHyphenOrUnderscore", "LNSString;", "LComFasterxmlJacksonDatabindDeserStdFromStringDeserializer;", "Lcom/fasterxml/jackson/databind/deser/std/FromStringDeserializer<Ljava/lang/Object;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std = { "Std", "com.fasterxml.jackson.databind.deser.std", ptrTable, methods, fields, 7, 0x9, 4, 15, 7, -1, -1, 8, -1 };
  return &_ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std;
}

@end

void ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_initWithIOSClass_withInt_(ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std *self, IOSClass *valueType, jint kind) {
  ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_initWithIOSClass_(self, valueType);
  self->_kind_ = kind;
}

ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std *new_ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_initWithIOSClass_withInt_(IOSClass *valueType, jint kind) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std, initWithIOSClass_withInt_, valueType, kind)
}

ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std *create_ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std_initWithIOSClass_withInt_(IOSClass *valueType, jint kind) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std, initWithIOSClass_withInt_, valueType, kind)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer_Std)
