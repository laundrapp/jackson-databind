//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/deser/BeanDeserializerFactory.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory || defined(INCLUDE_ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory))
#define ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory_

#define RESTRICT_ComFasterxmlJacksonDatabindDeserBasicDeserializerFactory 1
#define INCLUDE_ComFasterxmlJacksonDatabindDeserBasicDeserializerFactory 1
#include "com/fasterxml/jackson/databind/deser/BasicDeserializerFactory.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class ComFasterxmlJacksonDatabindBeanDescription;
@class ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig;
@class ComFasterxmlJacksonDatabindDeserBeanDeserializerBuilder;
@class ComFasterxmlJacksonDatabindDeserDeserializerFactory;
@class ComFasterxmlJacksonDatabindDeserSettableAnyProperty;
@class ComFasterxmlJacksonDatabindDeserSettableBeanProperty;
@class ComFasterxmlJacksonDatabindDeserializationConfig;
@class ComFasterxmlJacksonDatabindDeserializationContext;
@class ComFasterxmlJacksonDatabindIntrospectAnnotatedMember;
@class ComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsonDeserializer;
@class IOSClass;
@protocol JavaUtilList;
@protocol JavaUtilMap;
@protocol JavaUtilSet;

/*!
 @brief Concrete deserializer factory class that adds full Bean deserializer
  construction logic using class introspection.
 Note that factories specifically do not implement any form of caching:
  aside from configuration they are stateless; caching is implemented
  by other components.
 <p>
  Instances of this class are fully immutable as all configuration is
  done by using "fluent factories" (methods that construct new factory
  instances with different configuration, instead of modifying instance).
 */
@interface ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory : ComFasterxmlJacksonDatabindDeserBasicDeserializerFactory < JavaIoSerializable > {
 @public
  /*!
   @brief Set of class names of types that are never to be deserialized.
   @since 2.8.9
   */
  id<JavaUtilSet> _cfgIllegalClassNames_;
}

#pragma mark Public

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig:(ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig *)config;

/*!
 @brief Method that is to actually build a bean deserializer instance.
 All basic sanity checks have been done to know that what we have
  may be a valid bean type, and that there are no default simple
  deserializers.
 */
- (ComFasterxmlJacksonDatabindJsonDeserializer *)buildBeanDeserializerWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                                    withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                                             withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc;

- (ComFasterxmlJacksonDatabindJsonDeserializer *)buildThrowableDeserializerWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                                         withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                                                  withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc;

/*!
 @brief Method that <code>DeserializerCache</code>s call to create a new
  deserializer for types other than Collections, Maps, arrays and
  enums.
 */
- (ComFasterxmlJacksonDatabindJsonDeserializer *)createBeanDeserializerWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                                     withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                                              withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc;

- (ComFasterxmlJacksonDatabindJsonDeserializer *)createBuilderBasedDeserializerWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                                             withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)valueType
                                                                                      withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                                                                        withIOSClass:(IOSClass *)builderClass;

/*!
 @brief Method used by module registration functionality, to construct a new bean
  deserializer factory
  with different configuration settings.
 */
- (ComFasterxmlJacksonDatabindDeserDeserializerFactory *)withConfigWithComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig:(ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig *)config;

#pragma mark Protected

/*!
 @brief Method that will find if bean has any managed- or back-reference properties,
  and if so add them to bean, to be linked during resolution phase.
 @since 2.9
 */
- (void)addBackReferencePropertiesWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                         withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                            withComFasterxmlJacksonDatabindDeserBeanDeserializerBuilder:(ComFasterxmlJacksonDatabindDeserBeanDeserializerBuilder *)builder;

/*!
 @brief Method called to figure out settable properties for the
  bean deserializer to use.
 <p>
  Note: designed to be overridable, and effort is made to keep interface
  similar between versions.
 */
- (void)addBeanPropsWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                           withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
              withComFasterxmlJacksonDatabindDeserBeanDeserializerBuilder:(ComFasterxmlJacksonDatabindDeserBeanDeserializerBuilder *)builder;

/*!
 @brief Method called locate all members used for value injection (if any),
  constructor <code>com.fasterxml.jackson.databind.deser.impl.ValueInjector</code> instances, and add them to builder.
 */
- (void)addInjectablesWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                             withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                withComFasterxmlJacksonDatabindDeserBeanDeserializerBuilder:(ComFasterxmlJacksonDatabindDeserBeanDeserializerBuilder *)builder;

- (void)addObjectIdReaderWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                   withComFasterxmlJacksonDatabindDeserBeanDeserializerBuilder:(ComFasterxmlJacksonDatabindDeserBeanDeserializerBuilder *)builder;

- (void)addReferencePropertiesWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                     withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                        withComFasterxmlJacksonDatabindDeserBeanDeserializerBuilder:(ComFasterxmlJacksonDatabindDeserBeanDeserializerBuilder *)builder;

/*!
 @brief Method for constructing a bean deserializer that uses specified
  intermediate Builder for binding data, and construction of the
  value instance.
 Note that implementation is mostly copied from the regular
  BeanDeserializer build method.
 */
- (ComFasterxmlJacksonDatabindJsonDeserializer *)buildBuilderBasedDeserializerWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                                            withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)valueType
                                                                                     withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)builderDesc;

/*!
 @since 2.8.9
 */
- (void)checkIllegalTypesWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                       withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc;

/*!
 @brief Method called to construct fallback <code>SettableAnyProperty</code>
  for handling unknown bean properties, given a method that
  has been designated as such setter.
 @param mutator Either 2-argument method (setter, with key and value), or Field      that contains Map; either way accessor used for passing "any values"
 */
- (ComFasterxmlJacksonDatabindDeserSettableAnyProperty *)constructAnySetterWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                                  withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                        withComFasterxmlJacksonDatabindIntrospectAnnotatedMember:(ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *)mutator;

/*!
 @brief Overridable method that constructs a <code>BeanDeserializerBuilder</code>
  which is used to accumulate information needed to create deserializer
  instance.
 */
- (ComFasterxmlJacksonDatabindDeserBeanDeserializerBuilder *)constructBeanDeserializerBuilderWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                                                    withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc;

/*!
 @brief Method that will construct a regular bean property setter using
  the given setter method.
 @return Property constructed, if any; or null to indicate that
    there should be no property based on given definitions.
 */
- (ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)constructSettablePropertyWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                                          withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                         withComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition:(ComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition *)propDef
                                                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)propType0;

/*!
 @brief Method that will construct a regular bean property setter using
  the given setter method.
 */
- (ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)constructSetterlessPropertyWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                                            withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                           withComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition:(ComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition *)propDef;

/*!
 @brief Helper method called to filter out explicit ignored properties,
  as well as properties that have "ignorable types".
 Note that this will not remove properties that have no
  setters.
 */
- (id<JavaUtilList>)filterBeanPropsWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                          withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                             withComFasterxmlJacksonDatabindDeserBeanDeserializerBuilder:(ComFasterxmlJacksonDatabindDeserBeanDeserializerBuilder *)builder
                                                                        withJavaUtilList:(id<JavaUtilList>)propDefsIn
                                                                         withJavaUtilSet:(id<JavaUtilSet>)ignored;

/*!
 @brief Method called by <code>BeanDeserializerFactory</code> to see if there might be a standard
  deserializer registered for given type.
 */
- (ComFasterxmlJacksonDatabindJsonDeserializer *)findStdDeserializerWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                                  withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                                           withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc;

/*!
 @brief Helper method that will check whether given raw type is marked as always ignorable
  (for purpose of ignoring properties with type)
 */
- (jboolean)isIgnorableTypeWithComFasterxmlJacksonDatabindDeserializationConfig:(ComFasterxmlJacksonDatabindDeserializationConfig *)config
                withComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition:(ComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition *)propDef
                                                                   withIOSClass:(IOSClass *)type
                                                                withJavaUtilMap:(id<JavaUtilMap>)ignoredTypes;

/*!
 @brief Helper method used to skip processing for types that we know
  cannot be (i.e.are never consider to be) beans: 
  things like primitives, Arrays, Enums, and proxy types.
 <p>
  Note that usually we shouldn't really be getting these sort of
  types anyway; but better safe than sorry.
 */
- (jboolean)isPotentialBeanTypeWithIOSClass:(IOSClass *)type;

- (ComFasterxmlJacksonDatabindJavaType *)materializeAbstractTypeWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                              withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                                       withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory, _cfgIllegalClassNames_, id<JavaUtilSet>)

/*!
 @brief Set of well-known "nasty classes", deserialization of which is considered dangerous
  and should (and is) prevented by default.
 @since 2.8.9
 */
inline id<JavaUtilSet> ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory_get_DEFAULT_NO_DESER_CLASS_NAMES(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT id<JavaUtilSet> ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory_DEFAULT_NO_DESER_CLASS_NAMES;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory, DEFAULT_NO_DESER_CLASS_NAMES, id<JavaUtilSet>)

/*!
 @brief Globally shareable thread-safe instance which has no additional custom deserializers
  registered
 */
inline ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory *ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory_get_instance(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory *ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory, instance, ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory_initWithComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig_(ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory *self, ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig *config);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory *new_ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory_initWithComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig_(ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig *config) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory *create_ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory_initWithComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig_(ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig *config);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindDeserBeanDeserializerFactory")
