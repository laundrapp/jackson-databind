//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/util/ViewMatcher.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/databind/util/ViewMatcher.h"
#include "java/io/Serializable.h"

inline jlong ComFasterxmlJacksonDatabindUtilViewMatcher_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindUtilViewMatcher_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindUtilViewMatcher, serialVersionUID, jlong)

@interface ComFasterxmlJacksonDatabindUtilViewMatcher_Single : ComFasterxmlJacksonDatabindUtilViewMatcher {
 @public
  IOSClass *_view_;
}

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)v;

- (jboolean)isVisibleForViewWithIOSClass:(IOSClass *)activeView;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindUtilViewMatcher_Single)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindUtilViewMatcher_Single, _view_, IOSClass *)

inline jlong ComFasterxmlJacksonDatabindUtilViewMatcher_Single_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindUtilViewMatcher_Single_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindUtilViewMatcher_Single, serialVersionUID, jlong)

__attribute__((unused)) static void ComFasterxmlJacksonDatabindUtilViewMatcher_Single_initWithIOSClass_(ComFasterxmlJacksonDatabindUtilViewMatcher_Single *self, IOSClass *v);

__attribute__((unused)) static ComFasterxmlJacksonDatabindUtilViewMatcher_Single *new_ComFasterxmlJacksonDatabindUtilViewMatcher_Single_initWithIOSClass_(IOSClass *v) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComFasterxmlJacksonDatabindUtilViewMatcher_Single *create_ComFasterxmlJacksonDatabindUtilViewMatcher_Single_initWithIOSClass_(IOSClass *v);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindUtilViewMatcher_Single)

@interface ComFasterxmlJacksonDatabindUtilViewMatcher_Multi : ComFasterxmlJacksonDatabindUtilViewMatcher < JavaIoSerializable > {
 @public
  IOSObjectArray *_views_;
}

- (instancetype __nonnull)initWithIOSClassArray:(IOSObjectArray *)v;

- (jboolean)isVisibleForViewWithIOSClass:(IOSClass *)activeView;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindUtilViewMatcher_Multi)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindUtilViewMatcher_Multi, _views_, IOSObjectArray *)

inline jlong ComFasterxmlJacksonDatabindUtilViewMatcher_Multi_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindUtilViewMatcher_Multi_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindUtilViewMatcher_Multi, serialVersionUID, jlong)

__attribute__((unused)) static void ComFasterxmlJacksonDatabindUtilViewMatcher_Multi_initWithIOSClassArray_(ComFasterxmlJacksonDatabindUtilViewMatcher_Multi *self, IOSObjectArray *v);

__attribute__((unused)) static ComFasterxmlJacksonDatabindUtilViewMatcher_Multi *new_ComFasterxmlJacksonDatabindUtilViewMatcher_Multi_initWithIOSClassArray_(IOSObjectArray *v) NS_RETURNS_RETAINED;

__attribute__((unused)) static ComFasterxmlJacksonDatabindUtilViewMatcher_Multi *create_ComFasterxmlJacksonDatabindUtilViewMatcher_Multi_initWithIOSClassArray_(IOSObjectArray *v);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindUtilViewMatcher_Multi)

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindUtilViewMatcher)

ComFasterxmlJacksonDatabindUtilViewMatcher *ComFasterxmlJacksonDatabindUtilViewMatcher_EMPTY;

@implementation ComFasterxmlJacksonDatabindUtilViewMatcher

J2OBJC_IGNORE_DESIGNATED_BEGIN
- (instancetype __nonnull)init {
  ComFasterxmlJacksonDatabindUtilViewMatcher_init(self);
  return self;
}
J2OBJC_IGNORE_DESIGNATED_END

- (jboolean)isVisibleForViewWithIOSClass:(IOSClass *)activeView {
  return false;
}

+ (ComFasterxmlJacksonDatabindUtilViewMatcher *)constructWithIOSClassArray:(IOSObjectArray *)views {
  return ComFasterxmlJacksonDatabindUtilViewMatcher_constructWithIOSClassArray_(views);
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 0, 1, -1, 2, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindUtilViewMatcher;", 0x9, 3, 4, -1, 5, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(init);
  methods[1].selector = @selector(isVisibleForViewWithIOSClass:);
  methods[2].selector = @selector(constructWithIOSClassArray:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindUtilViewMatcher_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "EMPTY", "LComFasterxmlJacksonDatabindUtilViewMatcher;", .constantValue.asLong = 0, 0x1c, -1, 6, -1, -1 },
  };
  static const void *ptrTable[] = { "isVisibleForView", "LIOSClass;", "(Ljava/lang/Class<*>;)Z", "construct", "[LIOSClass;", "([Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/util/ViewMatcher;", &ComFasterxmlJacksonDatabindUtilViewMatcher_EMPTY, "LComFasterxmlJacksonDatabindUtilViewMatcher_Single;LComFasterxmlJacksonDatabindUtilViewMatcher_Multi;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindUtilViewMatcher = { "ViewMatcher", "com.fasterxml.jackson.databind.util", ptrTable, methods, fields, 7, 0x1, 3, 2, -1, 7, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindUtilViewMatcher;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindUtilViewMatcher class]) {
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindUtilViewMatcher_EMPTY, new_ComFasterxmlJacksonDatabindUtilViewMatcher_init());
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindUtilViewMatcher)
  }
}

@end

void ComFasterxmlJacksonDatabindUtilViewMatcher_init(ComFasterxmlJacksonDatabindUtilViewMatcher *self) {
  NSObject_init(self);
}

ComFasterxmlJacksonDatabindUtilViewMatcher *new_ComFasterxmlJacksonDatabindUtilViewMatcher_init() {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindUtilViewMatcher, init)
}

ComFasterxmlJacksonDatabindUtilViewMatcher *create_ComFasterxmlJacksonDatabindUtilViewMatcher_init() {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindUtilViewMatcher, init)
}

ComFasterxmlJacksonDatabindUtilViewMatcher *ComFasterxmlJacksonDatabindUtilViewMatcher_constructWithIOSClassArray_(IOSObjectArray *views) {
  ComFasterxmlJacksonDatabindUtilViewMatcher_initialize();
  if (views == nil) {
    return ComFasterxmlJacksonDatabindUtilViewMatcher_EMPTY;
  }
  switch (views->size_) {
    case 0:
    return ComFasterxmlJacksonDatabindUtilViewMatcher_EMPTY;
    case 1:
    return create_ComFasterxmlJacksonDatabindUtilViewMatcher_Single_initWithIOSClass_(IOSObjectArray_Get(views, 0));
  }
  return create_ComFasterxmlJacksonDatabindUtilViewMatcher_Multi_initWithIOSClassArray_(views);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindUtilViewMatcher)

@implementation ComFasterxmlJacksonDatabindUtilViewMatcher_Single

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)v {
  ComFasterxmlJacksonDatabindUtilViewMatcher_Single_initWithIOSClass_(self, v);
  return self;
}

- (jboolean)isVisibleForViewWithIOSClass:(IOSClass *)activeView {
  return (activeView == _view_) || [((IOSClass *) nil_chk(_view_)) isAssignableFrom:activeView];
}

- (void)dealloc {
  RELEASE_(_view_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "Z", 0x1, 2, 0, -1, 3, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:);
  methods[1].selector = @selector(isVisibleForViewWithIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindUtilViewMatcher_Single_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "_view_", "LIOSClass;", .constantValue.asLong = 0, 0x12, -1, -1, 4, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;", "(Ljava/lang/Class<*>;)V", "isVisibleForView", "(Ljava/lang/Class<*>;)Z", "Ljava/lang/Class<*>;", "LComFasterxmlJacksonDatabindUtilViewMatcher;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindUtilViewMatcher_Single = { "Single", "com.fasterxml.jackson.databind.util", ptrTable, methods, fields, 7, 0x1a, 2, 2, 5, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindUtilViewMatcher_Single;
}

@end

void ComFasterxmlJacksonDatabindUtilViewMatcher_Single_initWithIOSClass_(ComFasterxmlJacksonDatabindUtilViewMatcher_Single *self, IOSClass *v) {
  ComFasterxmlJacksonDatabindUtilViewMatcher_init(self);
  JreStrongAssign(&self->_view_, v);
}

ComFasterxmlJacksonDatabindUtilViewMatcher_Single *new_ComFasterxmlJacksonDatabindUtilViewMatcher_Single_initWithIOSClass_(IOSClass *v) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindUtilViewMatcher_Single, initWithIOSClass_, v)
}

ComFasterxmlJacksonDatabindUtilViewMatcher_Single *create_ComFasterxmlJacksonDatabindUtilViewMatcher_Single_initWithIOSClass_(IOSClass *v) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindUtilViewMatcher_Single, initWithIOSClass_, v)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindUtilViewMatcher_Single)

@implementation ComFasterxmlJacksonDatabindUtilViewMatcher_Multi

- (instancetype __nonnull)initWithIOSClassArray:(IOSObjectArray *)v {
  ComFasterxmlJacksonDatabindUtilViewMatcher_Multi_initWithIOSClassArray_(self, v);
  return self;
}

- (jboolean)isVisibleForViewWithIOSClass:(IOSClass *)activeView {
  for (jint i = 0, len = ((IOSObjectArray *) nil_chk(_views_))->size_; i < len; ++i) {
    IOSClass *view = IOSObjectArray_Get(_views_, i);
    if ((activeView == view) || [((IOSClass *) nil_chk(view)) isAssignableFrom:activeView]) {
      return true;
    }
  }
  return false;
}

- (void)dealloc {
  RELEASE_(_views_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, "Z", 0x1, 2, 3, -1, 4, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClassArray:);
  methods[1].selector = @selector(isVisibleForViewWithIOSClass:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindUtilViewMatcher_Multi_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "_views_", "[LIOSClass;", .constantValue.asLong = 0, 0x12, -1, -1, 5, -1 },
  };
  static const void *ptrTable[] = { "[LIOSClass;", "([Ljava/lang/Class<*>;)V", "isVisibleForView", "LIOSClass;", "(Ljava/lang/Class<*>;)Z", "[Ljava/lang/Class<*>;", "LComFasterxmlJacksonDatabindUtilViewMatcher;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindUtilViewMatcher_Multi = { "Multi", "com.fasterxml.jackson.databind.util", ptrTable, methods, fields, 7, 0x1a, 2, 2, 6, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindUtilViewMatcher_Multi;
}

@end

void ComFasterxmlJacksonDatabindUtilViewMatcher_Multi_initWithIOSClassArray_(ComFasterxmlJacksonDatabindUtilViewMatcher_Multi *self, IOSObjectArray *v) {
  ComFasterxmlJacksonDatabindUtilViewMatcher_init(self);
  JreStrongAssign(&self->_views_, v);
}

ComFasterxmlJacksonDatabindUtilViewMatcher_Multi *new_ComFasterxmlJacksonDatabindUtilViewMatcher_Multi_initWithIOSClassArray_(IOSObjectArray *v) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindUtilViewMatcher_Multi, initWithIOSClassArray_, v)
}

ComFasterxmlJacksonDatabindUtilViewMatcher_Multi *create_ComFasterxmlJacksonDatabindUtilViewMatcher_Multi_initWithIOSClassArray_(IOSObjectArray *v) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindUtilViewMatcher_Multi, initWithIOSClassArray_, v)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindUtilViewMatcher_Multi)
