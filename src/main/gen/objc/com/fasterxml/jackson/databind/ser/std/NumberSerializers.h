//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/std/NumberSerializers.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdNumberSerializers")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindSerStdNumberSerializers
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdNumberSerializers 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdNumberSerializers 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindSerStdNumberSerializers
#ifdef INCLUDE_ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer
#define INCLUDE_ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base 1
#endif
#ifdef INCLUDE_ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer
#define INCLUDE_ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base 1
#endif
#ifdef INCLUDE_ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer
#define INCLUDE_ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base 1
#endif
#ifdef INCLUDE_ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer
#define INCLUDE_ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base 1
#endif
#ifdef INCLUDE_ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer
#define INCLUDE_ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base 1
#endif
#ifdef INCLUDE_ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer
#define INCLUDE_ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base 1
#endif

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindSerStdNumberSerializers_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdNumberSerializers || defined(INCLUDE_ComFasterxmlJacksonDatabindSerStdNumberSerializers))
#define ComFasterxmlJacksonDatabindSerStdNumberSerializers_

@protocol JavaUtilMap;

/*!
 @brief Container class for serializers used for handling standard JDK-provided
  types.
 */
@interface ComFasterxmlJacksonDatabindSerStdNumberSerializers : NSObject

#pragma mark Public

+ (void)addAllWithJavaUtilMap:(id<JavaUtilMap>)allDeserializers;

#pragma mark Protected

- (instancetype __nonnull)init;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindSerStdNumberSerializers)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdNumberSerializers_init(ComFasterxmlJacksonDatabindSerStdNumberSerializers *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdNumberSerializers *new_ComFasterxmlJacksonDatabindSerStdNumberSerializers_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdNumberSerializers *create_ComFasterxmlJacksonDatabindSerStdNumberSerializers_init(void);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdNumberSerializers_addAllWithJavaUtilMap_(id<JavaUtilMap> allDeserializers);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerStdNumberSerializers)

#endif

#if !defined (ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdNumberSerializers || defined(INCLUDE_ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base))
#define ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base_

#define RESTRICT_ComFasterxmlJacksonDatabindSerStdStdScalarSerializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerStdStdScalarSerializer 1
#include "com/fasterxml/jackson/databind/ser/std/StdScalarSerializer.h"

#define RESTRICT_ComFasterxmlJacksonDatabindSerContextualSerializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerContextualSerializer 1
#include "com/fasterxml/jackson/databind/ser/ContextualSerializer.h"

@class ComFasterxmlJacksonCoreJsonParser_NumberType;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsonNode;
@class ComFasterxmlJacksonDatabindJsonSerializer;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSClass;
@protocol ComFasterxmlJacksonDatabindBeanProperty;
@protocol ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;
@protocol JavaLangReflectType;

@interface ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base : ComFasterxmlJacksonDatabindSerStdStdScalarSerializer < ComFasterxmlJacksonDatabindSerContextualSerializer > {
 @public
  ComFasterxmlJacksonCoreJsonParser_NumberType *_numberType_;
  NSString *_schemaType_;
  jboolean _isInt_;
}

#pragma mark Public

- (void)acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint;

- (ComFasterxmlJacksonDatabindJsonSerializer *)createContextualWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                                     withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property;

- (ComFasterxmlJacksonDatabindJsonNode *)getSchemaWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                                            withJavaLangReflectType:(id<JavaLangReflectType>)typeHint;

#pragma mark Protected

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)cls
withComFasterxmlJacksonCoreJsonParser_NumberType:(ComFasterxmlJacksonCoreJsonParser_NumberType *)numberType
                              withNSString:(NSString *)schemaType;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base, _numberType_, ComFasterxmlJacksonCoreJsonParser_NumberType *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base, _schemaType_, NSString *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base_initWithIOSClass_withComFasterxmlJacksonCoreJsonParser_NumberType_withNSString_(ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base *self, IOSClass *cls, ComFasterxmlJacksonCoreJsonParser_NumberType *numberType, NSString *schemaType);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base)

#endif

#if !defined (ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdNumberSerializers || defined(INCLUDE_ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer))
#define ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer_

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonCoreJsonParser_NumberType;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSClass;

@interface ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer : ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base

#pragma mark Public

- (instancetype __nonnull)init;

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0
withComFasterxmlJacksonCoreJsonParser_NumberType:(ComFasterxmlJacksonCoreJsonParser_NumberType *)arg1
                              withNSString:(NSString *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer)

inline ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer *ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer_get_instance(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer *ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer, instance, ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer_init(ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer *new_ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer *create_ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerStdNumberSerializers_ShortSerializer)

#endif

#if !defined (ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdNumberSerializers || defined(INCLUDE_ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer))
#define ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer_

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonCoreJsonParser_NumberType;
@class ComFasterxmlJacksonDatabindJsontypeTypeSerializer;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSClass;

/*!
 @brief This is the special serializer for regular <code>java.lang.Integer</code>s
  (and primitive ints)
 <p>
  Since this is one of "native" types, no type information is ever included
  on serialization (unlike for most scalar types) 
 <p>
  NOTE: as of 2.6, generic signature changed to Object, to avoid generation
  of bridge methods.
 */
@interface ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer : ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base

#pragma mark Public

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)type;

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

- (void)serializeWithTypeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0
withComFasterxmlJacksonCoreJsonParser_NumberType:(ComFasterxmlJacksonCoreJsonParser_NumberType *)arg1
                              withNSString:(NSString *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer_initWithIOSClass_(ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer *self, IOSClass *type);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer *new_ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer_initWithIOSClass_(IOSClass *type) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer *create_ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer_initWithIOSClass_(IOSClass *type);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntegerSerializer)

#endif

#if !defined (ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdNumberSerializers || defined(INCLUDE_ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer))
#define ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer_

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonCoreJsonParser_NumberType;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSClass;

/*!
 @brief Similar to <code>IntegerSerializer</code>, but will not cast to Integer:
  instead, cast is to <code>java.lang.Number</code>, and conversion is by
  calling <code>java.lang.Number</code>.
 */
@interface ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer : ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base

#pragma mark Public

- (instancetype __nonnull)init;

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0
withComFasterxmlJacksonCoreJsonParser_NumberType:(ComFasterxmlJacksonCoreJsonParser_NumberType *)arg1
                              withNSString:(NSString *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer)

inline ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer *ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer_get_instance(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer *ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer, instance, ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer_init(ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer *new_ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer *create_ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerStdNumberSerializers_IntLikeSerializer)

#endif

#if !defined (ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdNumberSerializers || defined(INCLUDE_ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer))
#define ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer_

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonCoreJsonParser_NumberType;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSClass;

@interface ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer : ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base

#pragma mark Public

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)cls;

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0
withComFasterxmlJacksonCoreJsonParser_NumberType:(ComFasterxmlJacksonCoreJsonParser_NumberType *)arg1
                              withNSString:(NSString *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer_initWithIOSClass_(ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer *self, IOSClass *cls);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer *new_ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer_initWithIOSClass_(IOSClass *cls) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer *create_ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer_initWithIOSClass_(IOSClass *cls);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerStdNumberSerializers_LongSerializer)

#endif

#if !defined (ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdNumberSerializers || defined(INCLUDE_ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer))
#define ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer_

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonCoreJsonParser_NumberType;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSClass;

@interface ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer : ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base

#pragma mark Public

- (instancetype __nonnull)init;

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0
withComFasterxmlJacksonCoreJsonParser_NumberType:(ComFasterxmlJacksonCoreJsonParser_NumberType *)arg1
                              withNSString:(NSString *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer)

inline ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer *ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer_get_instance(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer *ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer, instance, ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer_init(ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer *new_ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer *create_ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerStdNumberSerializers_FloatSerializer)

#endif

#if !defined (ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdNumberSerializers || defined(INCLUDE_ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer))
#define ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer_

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonCoreJsonParser_NumberType;
@class ComFasterxmlJacksonDatabindJsontypeTypeSerializer;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSClass;

/*!
 @brief This is the special serializer for regular <code>java.lang.Double</code>s (and
  primitive doubles)
 <p>
  Since this is one of "native" types, no type information is ever included
  on serialization (unlike for most scalar types as of 1.5)
 */
@interface ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer : ComFasterxmlJacksonDatabindSerStdNumberSerializers_Base

#pragma mark Public

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)cls;

- (void)serializeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

- (void)serializeWithTypeWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0
withComFasterxmlJacksonCoreJsonParser_NumberType:(ComFasterxmlJacksonCoreJsonParser_NumberType *)arg1
                              withNSString:(NSString *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer_initWithIOSClass_(ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer *self, IOSClass *cls);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer *new_ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer_initWithIOSClass_(IOSClass *cls) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer *create_ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer_initWithIOSClass_(IOSClass *cls);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerStdNumberSerializers_DoubleSerializer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdNumberSerializers")
