//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/exc/InvalidFormatException.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindExcInvalidFormatException")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindExcInvalidFormatException
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindExcInvalidFormatException 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindExcInvalidFormatException 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindExcInvalidFormatException

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindExcInvalidFormatException_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindExcInvalidFormatException || defined(INCLUDE_ComFasterxmlJacksonDatabindExcInvalidFormatException))
#define ComFasterxmlJacksonDatabindExcInvalidFormatException_

#define RESTRICT_ComFasterxmlJacksonDatabindExcMismatchedInputException 1
#define INCLUDE_ComFasterxmlJacksonDatabindExcMismatchedInputException 1
#include "com/fasterxml/jackson/databind/exc/MismatchedInputException.h"

@class ComFasterxmlJacksonCoreJsonLocation;
@class ComFasterxmlJacksonCoreJsonParser;
@class ComFasterxmlJacksonDatabindJavaType;
@class IOSClass;

/*!
 @brief Specialized sub-class of <code>MismatchedInputException</code>
  that is used when the underlying problem appears to be that
  of bad formatting of a value to deserialize.
 @since 2.1
 */
@interface ComFasterxmlJacksonDatabindExcInvalidFormatException : ComFasterxmlJacksonDatabindExcMismatchedInputException {
 @public
  /*!
   @brief Underlying value that could not be deserialized into
  target type, if available.
   */
  id _value_;
}

#pragma mark Public

/*!
 @since 2.7
 */
- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                                                       withNSString:(NSString *)msg
                                                             withId:(id)value
                                                       withIOSClass:(IOSClass *)targetType;

/*!
 */
- (instancetype __nonnull)initWithNSString:(NSString *)msg
   withComFasterxmlJacksonCoreJsonLocation:(ComFasterxmlJacksonCoreJsonLocation *)loc
                                    withId:(id)value
                              withIOSClass:(IOSClass *)targetType;

/*!
 */
- (instancetype __nonnull)initWithNSString:(NSString *)msg
                                    withId:(id)value
                              withIOSClass:(IOSClass *)targetType;

+ (ComFasterxmlJacksonDatabindExcInvalidFormatException *)fromWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                                                                                       withNSString:(NSString *)msg
                                                                                             withId:(id)value
                                                                                       withIOSClass:(IOSClass *)targetType;

/*!
 @brief Accessor for checking source value (String, Number usually) that could not
  be deserialized into target type (<code>getTargetType</code>).
 Note that value may not be available, depending on who throws the exception
  and when.
 */
- (id)getValue;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)arg0
                                                       withNSString:(NSString *)arg1 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)arg0
                                                       withNSString:(NSString *)arg1
                            withComFasterxmlJacksonCoreJsonLocation:(ComFasterxmlJacksonCoreJsonLocation *)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)arg0
                                                       withNSString:(NSString *)arg1
                            withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)arg2 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)arg0
                                                       withNSString:(NSString *)arg1
                                                       withIOSClass:(IOSClass *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindExcInvalidFormatException)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindExcInvalidFormatException, _value_, id)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindExcInvalidFormatException_initWithNSString_withId_withIOSClass_(ComFasterxmlJacksonDatabindExcInvalidFormatException *self, NSString *msg, id value, IOSClass *targetType);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindExcInvalidFormatException *new_ComFasterxmlJacksonDatabindExcInvalidFormatException_initWithNSString_withId_withIOSClass_(NSString *msg, id value, IOSClass *targetType) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindExcInvalidFormatException *create_ComFasterxmlJacksonDatabindExcInvalidFormatException_initWithNSString_withId_withIOSClass_(NSString *msg, id value, IOSClass *targetType);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindExcInvalidFormatException_initWithNSString_withComFasterxmlJacksonCoreJsonLocation_withId_withIOSClass_(ComFasterxmlJacksonDatabindExcInvalidFormatException *self, NSString *msg, ComFasterxmlJacksonCoreJsonLocation *loc, id value, IOSClass *targetType);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindExcInvalidFormatException *new_ComFasterxmlJacksonDatabindExcInvalidFormatException_initWithNSString_withComFasterxmlJacksonCoreJsonLocation_withId_withIOSClass_(NSString *msg, ComFasterxmlJacksonCoreJsonLocation *loc, id value, IOSClass *targetType) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindExcInvalidFormatException *create_ComFasterxmlJacksonDatabindExcInvalidFormatException_initWithNSString_withComFasterxmlJacksonCoreJsonLocation_withId_withIOSClass_(NSString *msg, ComFasterxmlJacksonCoreJsonLocation *loc, id value, IOSClass *targetType);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindExcInvalidFormatException_initWithComFasterxmlJacksonCoreJsonParser_withNSString_withId_withIOSClass_(ComFasterxmlJacksonDatabindExcInvalidFormatException *self, ComFasterxmlJacksonCoreJsonParser *p, NSString *msg, id value, IOSClass *targetType);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindExcInvalidFormatException *new_ComFasterxmlJacksonDatabindExcInvalidFormatException_initWithComFasterxmlJacksonCoreJsonParser_withNSString_withId_withIOSClass_(ComFasterxmlJacksonCoreJsonParser *p, NSString *msg, id value, IOSClass *targetType) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindExcInvalidFormatException *create_ComFasterxmlJacksonDatabindExcInvalidFormatException_initWithComFasterxmlJacksonCoreJsonParser_withNSString_withId_withIOSClass_(ComFasterxmlJacksonCoreJsonParser *p, NSString *msg, id value, IOSClass *targetType);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindExcInvalidFormatException *ComFasterxmlJacksonDatabindExcInvalidFormatException_fromWithComFasterxmlJacksonCoreJsonParser_withNSString_withId_withIOSClass_(ComFasterxmlJacksonCoreJsonParser *p, NSString *msg, id value, IOSClass *targetType);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindExcInvalidFormatException)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindExcInvalidFormatException")
