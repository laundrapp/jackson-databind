//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/node/NodeCursor.java
//

#include "IOSClass.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonStreamContext.h"
#include "com/fasterxml/jackson/core/JsonToken.h"
#include "com/fasterxml/jackson/databind/JsonNode.h"
#include "com/fasterxml/jackson/databind/node/ContainerNode.h"
#include "com/fasterxml/jackson/databind/node/NodeCursor.h"
#include "com/fasterxml/jackson/databind/node/ObjectNode.h"
#include "java/lang/IllegalStateException.h"
#include "java/util/Iterator.h"
#include "java/util/Map.h"

@implementation ComFasterxmlJacksonDatabindNodeNodeCursor

- (instancetype __nonnull)initWithInt:(jint)contextType
withComFasterxmlJacksonDatabindNodeNodeCursor:(ComFasterxmlJacksonDatabindNodeNodeCursor *)p {
  ComFasterxmlJacksonDatabindNodeNodeCursor_initWithInt_withComFasterxmlJacksonDatabindNodeNodeCursor_(self, contextType, p);
  return self;
}

- (ComFasterxmlJacksonDatabindNodeNodeCursor *)getParent {
  return _parent_;
}

- (NSString *)getCurrentName {
  return _currentName_;
}

- (void)overrideCurrentNameWithNSString:(NSString *)name {
  JreStrongAssign(&_currentName_, name);
}

- (id)getCurrentValue {
  return _currentValue_;
}

- (void)setCurrentValueWithId:(id)v {
  JreStrongAssign(&_currentValue_, v);
}

- (ComFasterxmlJacksonCoreJsonToken *)nextToken {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonCoreJsonToken *)nextValue {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonCoreJsonToken *)endToken {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindJsonNode *)currentNode {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (jboolean)currentHasChildren {
  // can't call an abstract method
  [self doesNotRecognizeSelector:_cmd];
  return 0;
}

- (ComFasterxmlJacksonDatabindNodeNodeCursor *)iterateChildren {
  ComFasterxmlJacksonDatabindJsonNode *n = [self currentNode];
  if (n == nil) @throw create_JavaLangIllegalStateException_initWithNSString_(@"No current node");
  if ([n isArray]) {
    return create_ComFasterxmlJacksonDatabindNodeNodeCursor_ArrayCursor_initWithComFasterxmlJacksonDatabindJsonNode_withComFasterxmlJacksonDatabindNodeNodeCursor_(n, self);
  }
  if ([n isObject]) {
    return create_ComFasterxmlJacksonDatabindNodeNodeCursor_ObjectCursor_initWithComFasterxmlJacksonDatabindJsonNode_withComFasterxmlJacksonDatabindNodeNodeCursor_(n, self);
  }
  @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$", @"Current node of type ", [[n java_getClass] getName]));
}

- (void)dealloc {
  RELEASE_(_parent_);
  RELEASE_(_currentName_);
  RELEASE_(_currentValue_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeNodeCursor;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x11, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LNSObject;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 3, 4, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x401, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeNodeCursor;", 0x11, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithInt:withComFasterxmlJacksonDatabindNodeNodeCursor:);
  methods[1].selector = @selector(getParent);
  methods[2].selector = @selector(getCurrentName);
  methods[3].selector = @selector(overrideCurrentNameWithNSString:);
  methods[4].selector = @selector(getCurrentValue);
  methods[5].selector = @selector(setCurrentValueWithId:);
  methods[6].selector = @selector(nextToken);
  methods[7].selector = @selector(nextValue);
  methods[8].selector = @selector(endToken);
  methods[9].selector = @selector(currentNode);
  methods[10].selector = @selector(currentHasChildren);
  methods[11].selector = @selector(iterateChildren);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_parent_", "LComFasterxmlJacksonDatabindNodeNodeCursor;", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_currentName_", "LNSString;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_currentValue_", "LNSObject;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "ILComFasterxmlJacksonDatabindNodeNodeCursor;", "overrideCurrentName", "LNSString;", "setCurrentValue", "LNSObject;", "LComFasterxmlJacksonDatabindNodeNodeCursor_RootCursor;LComFasterxmlJacksonDatabindNodeNodeCursor_ArrayCursor;LComFasterxmlJacksonDatabindNodeNodeCursor_ObjectCursor;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindNodeNodeCursor = { "NodeCursor", "com.fasterxml.jackson.databind.node", ptrTable, methods, fields, 7, 0x400, 12, 3, -1, 5, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindNodeNodeCursor;
}

@end

void ComFasterxmlJacksonDatabindNodeNodeCursor_initWithInt_withComFasterxmlJacksonDatabindNodeNodeCursor_(ComFasterxmlJacksonDatabindNodeNodeCursor *self, jint contextType, ComFasterxmlJacksonDatabindNodeNodeCursor *p) {
  ComFasterxmlJacksonCoreJsonStreamContext_init(self);
  self->_type_ = contextType;
  self->_index_ = -1;
  JreStrongAssign(&self->_parent_, p);
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindNodeNodeCursor)

@implementation ComFasterxmlJacksonDatabindNodeNodeCursor_RootCursor

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJsonNode:(ComFasterxmlJacksonDatabindJsonNode *)n
                        withComFasterxmlJacksonDatabindNodeNodeCursor:(ComFasterxmlJacksonDatabindNodeNodeCursor *)p {
  ComFasterxmlJacksonDatabindNodeNodeCursor_RootCursor_initWithComFasterxmlJacksonDatabindJsonNode_withComFasterxmlJacksonDatabindNodeNodeCursor_(self, n, p);
  return self;
}

- (void)overrideCurrentNameWithNSString:(NSString *)name {
}

- (ComFasterxmlJacksonCoreJsonToken *)nextToken {
  if (!_done_) {
    _done_ = true;
    return [((ComFasterxmlJacksonDatabindJsonNode *) nil_chk(_node_)) asToken];
  }
  JreStrongAssign(&_node_, nil);
  return nil;
}

- (ComFasterxmlJacksonCoreJsonToken *)nextValue {
  return [self nextToken];
}

- (ComFasterxmlJacksonCoreJsonToken *)endToken {
  return nil;
}

- (ComFasterxmlJacksonDatabindJsonNode *)currentNode {
  return _node_;
}

- (jboolean)currentHasChildren {
  return false;
}

- (void)dealloc {
  RELEASE_(_node_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 1, 2, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonDatabindJsonNode:withComFasterxmlJacksonDatabindNodeNodeCursor:);
  methods[1].selector = @selector(overrideCurrentNameWithNSString:);
  methods[2].selector = @selector(nextToken);
  methods[3].selector = @selector(nextValue);
  methods[4].selector = @selector(endToken);
  methods[5].selector = @selector(currentNode);
  methods[6].selector = @selector(currentHasChildren);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_node_", "LComFasterxmlJacksonDatabindJsonNode;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
    { "_done_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindJsonNode;LComFasterxmlJacksonDatabindNodeNodeCursor;", "overrideCurrentName", "LNSString;", "LComFasterxmlJacksonDatabindNodeNodeCursor;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindNodeNodeCursor_RootCursor = { "RootCursor", "com.fasterxml.jackson.databind.node", ptrTable, methods, fields, 7, 0x1c, 7, 2, 3, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindNodeNodeCursor_RootCursor;
}

@end

void ComFasterxmlJacksonDatabindNodeNodeCursor_RootCursor_initWithComFasterxmlJacksonDatabindJsonNode_withComFasterxmlJacksonDatabindNodeNodeCursor_(ComFasterxmlJacksonDatabindNodeNodeCursor_RootCursor *self, ComFasterxmlJacksonDatabindJsonNode *n, ComFasterxmlJacksonDatabindNodeNodeCursor *p) {
  ComFasterxmlJacksonDatabindNodeNodeCursor_initWithInt_withComFasterxmlJacksonDatabindNodeNodeCursor_(self, ComFasterxmlJacksonCoreJsonStreamContext_TYPE_ROOT, p);
  self->_done_ = false;
  JreStrongAssign(&self->_node_, n);
}

ComFasterxmlJacksonDatabindNodeNodeCursor_RootCursor *new_ComFasterxmlJacksonDatabindNodeNodeCursor_RootCursor_initWithComFasterxmlJacksonDatabindJsonNode_withComFasterxmlJacksonDatabindNodeNodeCursor_(ComFasterxmlJacksonDatabindJsonNode *n, ComFasterxmlJacksonDatabindNodeNodeCursor *p) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindNodeNodeCursor_RootCursor, initWithComFasterxmlJacksonDatabindJsonNode_withComFasterxmlJacksonDatabindNodeNodeCursor_, n, p)
}

ComFasterxmlJacksonDatabindNodeNodeCursor_RootCursor *create_ComFasterxmlJacksonDatabindNodeNodeCursor_RootCursor_initWithComFasterxmlJacksonDatabindJsonNode_withComFasterxmlJacksonDatabindNodeNodeCursor_(ComFasterxmlJacksonDatabindJsonNode *n, ComFasterxmlJacksonDatabindNodeNodeCursor *p) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindNodeNodeCursor_RootCursor, initWithComFasterxmlJacksonDatabindJsonNode_withComFasterxmlJacksonDatabindNodeNodeCursor_, n, p)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindNodeNodeCursor_RootCursor)

@implementation ComFasterxmlJacksonDatabindNodeNodeCursor_ArrayCursor

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJsonNode:(ComFasterxmlJacksonDatabindJsonNode *)n
                        withComFasterxmlJacksonDatabindNodeNodeCursor:(ComFasterxmlJacksonDatabindNodeNodeCursor *)p {
  ComFasterxmlJacksonDatabindNodeNodeCursor_ArrayCursor_initWithComFasterxmlJacksonDatabindJsonNode_withComFasterxmlJacksonDatabindNodeNodeCursor_(self, n, p);
  return self;
}

- (ComFasterxmlJacksonCoreJsonToken *)nextToken {
  if (![((id<JavaUtilIterator>) nil_chk(_contents_)) hasNext]) {
    JreStrongAssign(&_currentNode_, nil);
    return nil;
  }
  JreStrongAssign(&_currentNode_, [((id<JavaUtilIterator>) nil_chk(_contents_)) next]);
  return [((ComFasterxmlJacksonDatabindJsonNode *) nil_chk(_currentNode_)) asToken];
}

- (ComFasterxmlJacksonCoreJsonToken *)nextValue {
  return [self nextToken];
}

- (ComFasterxmlJacksonCoreJsonToken *)endToken {
  return JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, END_ARRAY);
}

- (ComFasterxmlJacksonDatabindJsonNode *)currentNode {
  return _currentNode_;
}

- (jboolean)currentHasChildren {
  return [((ComFasterxmlJacksonDatabindNodeContainerNode *) nil_chk(((ComFasterxmlJacksonDatabindNodeContainerNode *) cast_chk([self currentNode], [ComFasterxmlJacksonDatabindNodeContainerNode class])))) size] > 0;
}

- (void)dealloc {
  RELEASE_(_contents_);
  RELEASE_(_currentNode_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonDatabindJsonNode:withComFasterxmlJacksonDatabindNodeNodeCursor:);
  methods[1].selector = @selector(nextToken);
  methods[2].selector = @selector(nextValue);
  methods[3].selector = @selector(endToken);
  methods[4].selector = @selector(currentNode);
  methods[5].selector = @selector(currentHasChildren);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_contents_", "LJavaUtilIterator;", .constantValue.asLong = 0, 0x4, -1, -1, 1, -1 },
    { "_currentNode_", "LComFasterxmlJacksonDatabindJsonNode;", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindJsonNode;LComFasterxmlJacksonDatabindNodeNodeCursor;", "Ljava/util/Iterator<Lcom/fasterxml/jackson/databind/JsonNode;>;", "LComFasterxmlJacksonDatabindNodeNodeCursor;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindNodeNodeCursor_ArrayCursor = { "ArrayCursor", "com.fasterxml.jackson.databind.node", ptrTable, methods, fields, 7, 0x1c, 6, 2, 2, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindNodeNodeCursor_ArrayCursor;
}

@end

void ComFasterxmlJacksonDatabindNodeNodeCursor_ArrayCursor_initWithComFasterxmlJacksonDatabindJsonNode_withComFasterxmlJacksonDatabindNodeNodeCursor_(ComFasterxmlJacksonDatabindNodeNodeCursor_ArrayCursor *self, ComFasterxmlJacksonDatabindJsonNode *n, ComFasterxmlJacksonDatabindNodeNodeCursor *p) {
  ComFasterxmlJacksonDatabindNodeNodeCursor_initWithInt_withComFasterxmlJacksonDatabindNodeNodeCursor_(self, ComFasterxmlJacksonCoreJsonStreamContext_TYPE_ARRAY, p);
  JreStrongAssign(&self->_contents_, [((ComFasterxmlJacksonDatabindJsonNode *) nil_chk(n)) elements]);
}

ComFasterxmlJacksonDatabindNodeNodeCursor_ArrayCursor *new_ComFasterxmlJacksonDatabindNodeNodeCursor_ArrayCursor_initWithComFasterxmlJacksonDatabindJsonNode_withComFasterxmlJacksonDatabindNodeNodeCursor_(ComFasterxmlJacksonDatabindJsonNode *n, ComFasterxmlJacksonDatabindNodeNodeCursor *p) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindNodeNodeCursor_ArrayCursor, initWithComFasterxmlJacksonDatabindJsonNode_withComFasterxmlJacksonDatabindNodeNodeCursor_, n, p)
}

ComFasterxmlJacksonDatabindNodeNodeCursor_ArrayCursor *create_ComFasterxmlJacksonDatabindNodeNodeCursor_ArrayCursor_initWithComFasterxmlJacksonDatabindJsonNode_withComFasterxmlJacksonDatabindNodeNodeCursor_(ComFasterxmlJacksonDatabindJsonNode *n, ComFasterxmlJacksonDatabindNodeNodeCursor *p) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindNodeNodeCursor_ArrayCursor, initWithComFasterxmlJacksonDatabindJsonNode_withComFasterxmlJacksonDatabindNodeNodeCursor_, n, p)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindNodeNodeCursor_ArrayCursor)

@implementation ComFasterxmlJacksonDatabindNodeNodeCursor_ObjectCursor

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJsonNode:(ComFasterxmlJacksonDatabindJsonNode *)n
                        withComFasterxmlJacksonDatabindNodeNodeCursor:(ComFasterxmlJacksonDatabindNodeNodeCursor *)p {
  ComFasterxmlJacksonDatabindNodeNodeCursor_ObjectCursor_initWithComFasterxmlJacksonDatabindJsonNode_withComFasterxmlJacksonDatabindNodeNodeCursor_(self, n, p);
  return self;
}

- (ComFasterxmlJacksonCoreJsonToken *)nextToken {
  if (_needEntry_) {
    if (![((id<JavaUtilIterator>) nil_chk(_contents_)) hasNext]) {
      JreStrongAssign(&_currentName_, nil);
      JreStrongAssign(&_current_, nil);
      return nil;
    }
    _needEntry_ = false;
    JreStrongAssign(&_current_, [((id<JavaUtilIterator>) nil_chk(_contents_)) next]);
    JreStrongAssign(&_currentName_, (_current_ == nil) ? nil : [((id<JavaUtilMap_Entry>) nil_chk(_current_)) getKey]);
    return JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, FIELD_NAME);
  }
  _needEntry_ = true;
  return [((ComFasterxmlJacksonDatabindJsonNode *) nil_chk([((id<JavaUtilMap_Entry>) nil_chk(_current_)) getValue])) asToken];
}

- (ComFasterxmlJacksonCoreJsonToken *)nextValue {
  ComFasterxmlJacksonCoreJsonToken *t = [self nextToken];
  if (t == JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, FIELD_NAME)) {
    t = [self nextToken];
  }
  return t;
}

- (ComFasterxmlJacksonCoreJsonToken *)endToken {
  return JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, END_OBJECT);
}

- (ComFasterxmlJacksonDatabindJsonNode *)currentNode {
  return (_current_ == nil) ? nil : [((id<JavaUtilMap_Entry>) nil_chk(_current_)) getValue];
}

- (jboolean)currentHasChildren {
  return [((ComFasterxmlJacksonDatabindNodeContainerNode *) nil_chk(((ComFasterxmlJacksonDatabindNodeContainerNode *) cast_chk([self currentNode], [ComFasterxmlJacksonDatabindNodeContainerNode class])))) size] > 0;
}

- (void)dealloc {
  RELEASE_(_contents_);
  RELEASE_(_current_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonDatabindJsonNode:withComFasterxmlJacksonDatabindNodeNodeCursor:);
  methods[1].selector = @selector(nextToken);
  methods[2].selector = @selector(nextValue);
  methods[3].selector = @selector(endToken);
  methods[4].selector = @selector(currentNode);
  methods[5].selector = @selector(currentHasChildren);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_contents_", "LJavaUtilIterator;", .constantValue.asLong = 0, 0x4, -1, -1, 1, -1 },
    { "_current_", "LJavaUtilMap_Entry;", .constantValue.asLong = 0, 0x4, -1, -1, 2, -1 },
    { "_needEntry_", "Z", .constantValue.asLong = 0, 0x4, -1, -1, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindJsonNode;LComFasterxmlJacksonDatabindNodeNodeCursor;", "Ljava/util/Iterator<Ljava/util/Map$Entry<Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;>;>;", "Ljava/util/Map$Entry<Ljava/lang/String;Lcom/fasterxml/jackson/databind/JsonNode;>;", "LComFasterxmlJacksonDatabindNodeNodeCursor;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindNodeNodeCursor_ObjectCursor = { "ObjectCursor", "com.fasterxml.jackson.databind.node", ptrTable, methods, fields, 7, 0x1c, 6, 3, 3, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindNodeNodeCursor_ObjectCursor;
}

@end

void ComFasterxmlJacksonDatabindNodeNodeCursor_ObjectCursor_initWithComFasterxmlJacksonDatabindJsonNode_withComFasterxmlJacksonDatabindNodeNodeCursor_(ComFasterxmlJacksonDatabindNodeNodeCursor_ObjectCursor *self, ComFasterxmlJacksonDatabindJsonNode *n, ComFasterxmlJacksonDatabindNodeNodeCursor *p) {
  ComFasterxmlJacksonDatabindNodeNodeCursor_initWithInt_withComFasterxmlJacksonDatabindNodeNodeCursor_(self, ComFasterxmlJacksonCoreJsonStreamContext_TYPE_OBJECT, p);
  JreStrongAssign(&self->_contents_, [((ComFasterxmlJacksonDatabindNodeObjectNode *) nil_chk(((ComFasterxmlJacksonDatabindNodeObjectNode *) cast_chk(n, [ComFasterxmlJacksonDatabindNodeObjectNode class])))) fields]);
  self->_needEntry_ = true;
}

ComFasterxmlJacksonDatabindNodeNodeCursor_ObjectCursor *new_ComFasterxmlJacksonDatabindNodeNodeCursor_ObjectCursor_initWithComFasterxmlJacksonDatabindJsonNode_withComFasterxmlJacksonDatabindNodeNodeCursor_(ComFasterxmlJacksonDatabindJsonNode *n, ComFasterxmlJacksonDatabindNodeNodeCursor *p) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindNodeNodeCursor_ObjectCursor, initWithComFasterxmlJacksonDatabindJsonNode_withComFasterxmlJacksonDatabindNodeNodeCursor_, n, p)
}

ComFasterxmlJacksonDatabindNodeNodeCursor_ObjectCursor *create_ComFasterxmlJacksonDatabindNodeNodeCursor_ObjectCursor_initWithComFasterxmlJacksonDatabindJsonNode_withComFasterxmlJacksonDatabindNodeNodeCursor_(ComFasterxmlJacksonDatabindJsonNode *n, ComFasterxmlJacksonDatabindNodeNodeCursor *p) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindNodeNodeCursor_ObjectCursor, initWithComFasterxmlJacksonDatabindJsonNode_withComFasterxmlJacksonDatabindNodeNodeCursor_, n, p)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindNodeNodeCursor_ObjectCursor)
