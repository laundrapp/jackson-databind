//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/std/DateSerializer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdDateSerializer")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindSerStdDateSerializer
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdDateSerializer 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdDateSerializer 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindSerStdDateSerializer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindSerStdDateSerializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdDateSerializer || defined(INCLUDE_ComFasterxmlJacksonDatabindSerStdDateSerializer))
#define ComFasterxmlJacksonDatabindSerStdDateSerializer_

#define RESTRICT_ComFasterxmlJacksonDatabindSerStdDateTimeSerializerBase 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerStdDateTimeSerializerBase 1
#include "com/fasterxml/jackson/databind/ser/std/DateTimeSerializerBase.h"

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSClass;
@class JavaLangBoolean;
@class JavaTextDateFormat;
@class JavaUtilDate;

/*!
 @brief For efficiency, we will serialize Dates as longs, instead of
  potentially more readable Strings.
 */
@interface ComFasterxmlJacksonDatabindSerStdDateSerializer : ComFasterxmlJacksonDatabindSerStdDateTimeSerializerBase

#pragma mark Public

- (instancetype __nonnull)init;

- (instancetype __nonnull)initWithJavaLangBoolean:(JavaLangBoolean *)useTimestamp
                           withJavaTextDateFormat:(JavaTextDateFormat *)customFormat;

- (void)serializeWithId:(JavaUtilDate *)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

- (ComFasterxmlJacksonDatabindSerStdDateSerializer *)withFormatWithJavaLangBoolean:(JavaLangBoolean *)timestamp
                                                            withJavaTextDateFormat:(JavaTextDateFormat *)customFormat;

#pragma mark Protected

- (jlong)_timestampWithId:(JavaUtilDate *)value;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0
                       withJavaLangBoolean:(JavaLangBoolean *)arg1
                    withJavaTextDateFormat:(JavaTextDateFormat *)arg2 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonDatabindSerStdDateSerializer)

/*!
 @brief Default instance that is used when no contextual configuration
  is needed.
 */
inline ComFasterxmlJacksonDatabindSerStdDateSerializer *ComFasterxmlJacksonDatabindSerStdDateSerializer_get_instance(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdDateSerializer *ComFasterxmlJacksonDatabindSerStdDateSerializer_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindSerStdDateSerializer, instance, ComFasterxmlJacksonDatabindSerStdDateSerializer *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdDateSerializer_init(ComFasterxmlJacksonDatabindSerStdDateSerializer *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdDateSerializer *new_ComFasterxmlJacksonDatabindSerStdDateSerializer_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdDateSerializer *create_ComFasterxmlJacksonDatabindSerStdDateSerializer_init(void);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindSerStdDateSerializer_initWithJavaLangBoolean_withJavaTextDateFormat_(ComFasterxmlJacksonDatabindSerStdDateSerializer *self, JavaLangBoolean *useTimestamp, JavaTextDateFormat *customFormat);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdDateSerializer *new_ComFasterxmlJacksonDatabindSerStdDateSerializer_initWithJavaLangBoolean_withJavaTextDateFormat_(JavaLangBoolean *useTimestamp, JavaTextDateFormat *customFormat) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindSerStdDateSerializer *create_ComFasterxmlJacksonDatabindSerStdDateSerializer_initWithJavaLangBoolean_withJavaTextDateFormat_(JavaLangBoolean *useTimestamp, JavaTextDateFormat *customFormat);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindSerStdDateSerializer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindSerStdDateSerializer")
