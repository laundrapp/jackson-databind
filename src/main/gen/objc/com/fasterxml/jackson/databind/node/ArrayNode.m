//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/node/ArrayNode.java
//

#include "IOSPrimitiveArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonGenerator.h"
#include "com/fasterxml/jackson/core/JsonPointer.h"
#include "com/fasterxml/jackson/core/JsonToken.h"
#include "com/fasterxml/jackson/core/type/WritableTypeId.h"
#include "com/fasterxml/jackson/databind/JsonNode.h"
#include "com/fasterxml/jackson/databind/SerializerProvider.h"
#include "com/fasterxml/jackson/databind/jsontype/TypeSerializer.h"
#include "com/fasterxml/jackson/databind/node/ArrayNode.h"
#include "com/fasterxml/jackson/databind/node/BaseJsonNode.h"
#include "com/fasterxml/jackson/databind/node/BinaryNode.h"
#include "com/fasterxml/jackson/databind/node/BooleanNode.h"
#include "com/fasterxml/jackson/databind/node/ContainerNode.h"
#include "com/fasterxml/jackson/databind/node/JsonNodeFactory.h"
#include "com/fasterxml/jackson/databind/node/JsonNodeType.h"
#include "com/fasterxml/jackson/databind/node/MissingNode.h"
#include "com/fasterxml/jackson/databind/node/NullNode.h"
#include "com/fasterxml/jackson/databind/node/NumericNode.h"
#include "com/fasterxml/jackson/databind/node/ObjectNode.h"
#include "com/fasterxml/jackson/databind/node/TextNode.h"
#include "com/fasterxml/jackson/databind/node/ValueNode.h"
#include "com/fasterxml/jackson/databind/util/RawValue.h"
#include "java/lang/Boolean.h"
#include "java/lang/Double.h"
#include "java/lang/Float.h"
#include "java/lang/IndexOutOfBoundsException.h"
#include "java/lang/Integer.h"
#include "java/lang/Long.h"
#include "java/lang/StringBuilder.h"
#include "java/math/BigDecimal.h"
#include "java/math/BigInteger.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/Comparator.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"

@interface ComFasterxmlJacksonDatabindNodeArrayNode () {
 @public
  id<JavaUtilList> _children_;
}

@end

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindNodeArrayNode, _children_, id<JavaUtilList>)

@implementation ComFasterxmlJacksonDatabindNodeArrayNode

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory:(ComFasterxmlJacksonDatabindNodeJsonNodeFactory *)nf {
  ComFasterxmlJacksonDatabindNodeArrayNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_(self, nf);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory:(ComFasterxmlJacksonDatabindNodeJsonNodeFactory *)nf
                                                                         withInt:(jint)capacity {
  ComFasterxmlJacksonDatabindNodeArrayNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_withInt_(self, nf, capacity);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory:(ComFasterxmlJacksonDatabindNodeJsonNodeFactory *)nf
                                                                withJavaUtilList:(id<JavaUtilList>)children {
  ComFasterxmlJacksonDatabindNodeArrayNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_withJavaUtilList_(self, nf, children);
  return self;
}

- (ComFasterxmlJacksonDatabindJsonNode *)_atWithComFasterxmlJacksonCoreJsonPointer:(ComFasterxmlJacksonCoreJsonPointer *)ptr {
  return [self getWithInt:[((ComFasterxmlJacksonCoreJsonPointer *) nil_chk(ptr)) getMatchingIndex]];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)deepCopy {
  ComFasterxmlJacksonDatabindNodeArrayNode *ret = create_ComFasterxmlJacksonDatabindNodeArrayNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_(_nodeFactory_);
  for (ComFasterxmlJacksonDatabindJsonNode * __strong element in nil_chk(_children_)) [ret->_children_ addWithId:[((ComFasterxmlJacksonDatabindJsonNode *) nil_chk(element)) deepCopy]];
  return ret;
}

- (jboolean)isEmptyWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)serializers {
  return [((id<JavaUtilList>) nil_chk(_children_)) isEmpty];
}

- (ComFasterxmlJacksonDatabindNodeJsonNodeType *)getNodeType {
  return JreLoadEnum(ComFasterxmlJacksonDatabindNodeJsonNodeType, ARRAY);
}

- (jboolean)isArray {
  return true;
}

- (ComFasterxmlJacksonCoreJsonToken *)asToken {
  return JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_ARRAY);
}

- (jint)size {
  return [((id<JavaUtilList>) nil_chk(_children_)) size];
}

- (id<JavaUtilIterator>)elements {
  return [((id<JavaUtilList>) nil_chk(_children_)) iterator];
}

- (ComFasterxmlJacksonDatabindJsonNode *)getWithInt:(jint)index {
  if (index >= 0 && index < [((id<JavaUtilList>) nil_chk(_children_)) size]) {
    return [((id<JavaUtilList>) nil_chk(_children_)) getWithInt:index];
  }
  return nil;
}

- (ComFasterxmlJacksonDatabindJsonNode *)getWithNSString:(NSString *)fieldName {
  return nil;
}

- (ComFasterxmlJacksonDatabindJsonNode *)pathWithNSString:(NSString *)fieldName {
  return ComFasterxmlJacksonDatabindNodeMissingNode_getInstance();
}

- (ComFasterxmlJacksonDatabindJsonNode *)pathWithInt:(jint)index {
  if (index >= 0 && index < [((id<JavaUtilList>) nil_chk(_children_)) size]) {
    return [((id<JavaUtilList>) nil_chk(_children_)) getWithInt:index];
  }
  return ComFasterxmlJacksonDatabindNodeMissingNode_getInstance();
}

- (jboolean)equalsWithJavaUtilComparator:(id<JavaUtilComparator>)comparator
 withComFasterxmlJacksonDatabindJsonNode:(ComFasterxmlJacksonDatabindJsonNode *)o {
  if (!([o isKindOfClass:[ComFasterxmlJacksonDatabindNodeArrayNode class]])) {
    return false;
  }
  ComFasterxmlJacksonDatabindNodeArrayNode *other = (ComFasterxmlJacksonDatabindNodeArrayNode *) cast_chk(o, [ComFasterxmlJacksonDatabindNodeArrayNode class]);
  jint len = [((id<JavaUtilList>) nil_chk(_children_)) size];
  if ([((ComFasterxmlJacksonDatabindNodeArrayNode *) nil_chk(other)) size] != len) {
    return false;
  }
  id<JavaUtilList> l1 = _children_;
  id<JavaUtilList> l2 = other->_children_;
  for (jint i = 0; i < len; ++i) {
    if (![((ComFasterxmlJacksonDatabindJsonNode *) nil_chk([l1 getWithInt:i])) equalsWithJavaUtilComparator:comparator withComFasterxmlJacksonDatabindJsonNode:[l2 getWithInt:i]]) {
      return false;
    }
  }
  return true;
}

- (void)serializeWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)f
        withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider {
  id<JavaUtilList> c = _children_;
  jint size = [((id<JavaUtilList>) nil_chk(c)) size];
  [((ComFasterxmlJacksonCoreJsonGenerator *) nil_chk(f)) writeStartArrayWithInt:size];
  for (jint i = 0; i < size; ++i) {
    ComFasterxmlJacksonDatabindJsonNode *n = [c getWithInt:i];
    [((ComFasterxmlJacksonDatabindNodeBaseJsonNode *) nil_chk(((ComFasterxmlJacksonDatabindNodeBaseJsonNode *) cast_chk(n, [ComFasterxmlJacksonDatabindNodeBaseJsonNode class])))) serializeWithComFasterxmlJacksonCoreJsonGenerator:f withComFasterxmlJacksonDatabindSerializerProvider:provider];
  }
  [f writeEndArray];
}

- (void)serializeWithTypeWithComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
                withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
            withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer {
  ComFasterxmlJacksonCoreTypeWritableTypeId *typeIdDef = [((ComFasterxmlJacksonDatabindJsontypeTypeSerializer *) nil_chk(typeSer)) writeTypePrefixWithComFasterxmlJacksonCoreJsonGenerator:g withComFasterxmlJacksonCoreTypeWritableTypeId:[typeSer typeIdWithId:self withComFasterxmlJacksonCoreJsonToken:JreLoadEnum(ComFasterxmlJacksonCoreJsonToken, START_ARRAY)]];
  for (ComFasterxmlJacksonDatabindJsonNode * __strong n in nil_chk(_children_)) {
    [((ComFasterxmlJacksonDatabindNodeBaseJsonNode *) nil_chk(((ComFasterxmlJacksonDatabindNodeBaseJsonNode *) cast_chk(n, [ComFasterxmlJacksonDatabindNodeBaseJsonNode class])))) serializeWithComFasterxmlJacksonCoreJsonGenerator:g withComFasterxmlJacksonDatabindSerializerProvider:provider];
  }
  [typeSer writeTypeSuffixWithComFasterxmlJacksonCoreJsonGenerator:g withComFasterxmlJacksonCoreTypeWritableTypeId:typeIdDef];
}

- (ComFasterxmlJacksonDatabindJsonNode *)findValueWithNSString:(NSString *)fieldName {
  for (ComFasterxmlJacksonDatabindJsonNode * __strong node in nil_chk(_children_)) {
    ComFasterxmlJacksonDatabindJsonNode *value = [((ComFasterxmlJacksonDatabindJsonNode *) nil_chk(node)) findValueWithNSString:fieldName];
    if (value != nil) {
      return value;
    }
  }
  return nil;
}

- (id<JavaUtilList>)findValuesWithNSString:(NSString *)fieldName
                          withJavaUtilList:(id<JavaUtilList>)foundSoFar {
  for (ComFasterxmlJacksonDatabindJsonNode * __strong node in nil_chk(_children_)) {
    foundSoFar = [((ComFasterxmlJacksonDatabindJsonNode *) nil_chk(node)) findValuesWithNSString:fieldName withJavaUtilList:foundSoFar];
  }
  return foundSoFar;
}

- (id<JavaUtilList>)findValuesAsTextWithNSString:(NSString *)fieldName
                                withJavaUtilList:(id<JavaUtilList>)foundSoFar {
  for (ComFasterxmlJacksonDatabindJsonNode * __strong node in nil_chk(_children_)) {
    foundSoFar = [((ComFasterxmlJacksonDatabindJsonNode *) nil_chk(node)) findValuesAsTextWithNSString:fieldName withJavaUtilList:foundSoFar];
  }
  return foundSoFar;
}

- (ComFasterxmlJacksonDatabindNodeObjectNode *)findParentWithNSString:(NSString *)fieldName {
  for (ComFasterxmlJacksonDatabindJsonNode * __strong node in nil_chk(_children_)) {
    ComFasterxmlJacksonDatabindJsonNode *parent = [((ComFasterxmlJacksonDatabindJsonNode *) nil_chk(node)) findParentWithNSString:fieldName];
    if (parent != nil) {
      return (ComFasterxmlJacksonDatabindNodeObjectNode *) cast_chk(parent, [ComFasterxmlJacksonDatabindNodeObjectNode class]);
    }
  }
  return nil;
}

- (id<JavaUtilList>)findParentsWithNSString:(NSString *)fieldName
                           withJavaUtilList:(id<JavaUtilList>)foundSoFar {
  for (ComFasterxmlJacksonDatabindJsonNode * __strong node in nil_chk(_children_)) {
    foundSoFar = [((ComFasterxmlJacksonDatabindJsonNode *) nil_chk(node)) findParentsWithNSString:fieldName withJavaUtilList:foundSoFar];
  }
  return foundSoFar;
}

- (ComFasterxmlJacksonDatabindJsonNode *)setWithInt:(jint)index
            withComFasterxmlJacksonDatabindJsonNode:(ComFasterxmlJacksonDatabindJsonNode *)value {
  if (value == nil) {
    value = [self nullNode];
  }
  if (index < 0 || index >= [((id<JavaUtilList>) nil_chk(_children_)) size]) {
    @throw create_JavaLangIndexOutOfBoundsException_initWithNSString_(JreStrcat("$I$I", @"Illegal index ", index, @", array size ", [self size]));
  }
  return [((id<JavaUtilList>) nil_chk(_children_)) setWithInt:index withId:value];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithComFasterxmlJacksonDatabindJsonNode:(ComFasterxmlJacksonDatabindJsonNode *)value {
  if (value == nil) {
    value = [self nullNode];
  }
  [self _addWithComFasterxmlJacksonDatabindJsonNode:value];
  return self;
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)addAllWithComFasterxmlJacksonDatabindNodeArrayNode:(ComFasterxmlJacksonDatabindNodeArrayNode *)other {
  [((id<JavaUtilList>) nil_chk(_children_)) addAllWithJavaUtilCollection:((ComFasterxmlJacksonDatabindNodeArrayNode *) nil_chk(other))->_children_];
  return self;
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)addAllWithJavaUtilCollection:(id<JavaUtilCollection>)nodes {
  [((id<JavaUtilList>) nil_chk(_children_)) addAllWithJavaUtilCollection:nodes];
  return self;
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                    withComFasterxmlJacksonDatabindJsonNode:(ComFasterxmlJacksonDatabindJsonNode *)value {
  if (value == nil) {
    value = [self nullNode];
  }
  [self _insertWithInt:index withComFasterxmlJacksonDatabindJsonNode:value];
  return self;
}

- (ComFasterxmlJacksonDatabindJsonNode *)removeWithInt:(jint)index {
  if (index >= 0 && index < [((id<JavaUtilList>) nil_chk(_children_)) size]) {
    return [((id<JavaUtilList>) nil_chk(_children_)) removeWithInt:index];
  }
  return nil;
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)removeAll {
  [((id<JavaUtilList>) nil_chk(_children_)) clear];
  return self;
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)addArray {
  ComFasterxmlJacksonDatabindNodeArrayNode *n = [self arrayNode];
  [self _addWithComFasterxmlJacksonDatabindJsonNode:n];
  return n;
}

- (ComFasterxmlJacksonDatabindNodeObjectNode *)addObject {
  ComFasterxmlJacksonDatabindNodeObjectNode *n = [self objectNode];
  [self _addWithComFasterxmlJacksonDatabindJsonNode:n];
  return n;
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)addPOJOWithId:(id)value {
  if (value == nil) {
    [self addNull];
  }
  else {
    [self _addWithComFasterxmlJacksonDatabindJsonNode:[self pojoNodeWithId:value]];
  }
  return self;
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)addRawValueWithComFasterxmlJacksonDatabindUtilRawValue:(ComFasterxmlJacksonDatabindUtilRawValue *)raw {
  if (raw == nil) {
    [self addNull];
  }
  else {
    [self _addWithComFasterxmlJacksonDatabindJsonNode:[self rawValueNodeWithComFasterxmlJacksonDatabindUtilRawValue:raw]];
  }
  return self;
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)addNull {
  [self _addWithComFasterxmlJacksonDatabindJsonNode:[self nullNode]];
  return self;
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithInt:(jint)v {
  [self _addWithComFasterxmlJacksonDatabindJsonNode:[self numberNodeWithInt:v]];
  return self;
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithJavaLangInteger:(JavaLangInteger *)value {
  if (value == nil) {
    return [self addNull];
  }
  return [self _addWithComFasterxmlJacksonDatabindJsonNode:[self numberNodeWithInt:[value intValue]]];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithLong:(jlong)v {
  return [self _addWithComFasterxmlJacksonDatabindJsonNode:[self numberNodeWithLong:v]];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithJavaLangLong:(JavaLangLong *)value {
  if (value == nil) {
    return [self addNull];
  }
  return [self _addWithComFasterxmlJacksonDatabindJsonNode:[self numberNodeWithLong:[value longLongValue]]];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithFloat:(jfloat)v {
  return [self _addWithComFasterxmlJacksonDatabindJsonNode:[self numberNodeWithFloat:v]];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithJavaLangFloat:(JavaLangFloat *)value {
  if (value == nil) {
    return [self addNull];
  }
  return [self _addWithComFasterxmlJacksonDatabindJsonNode:[self numberNodeWithFloat:[value floatValue]]];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithDouble:(jdouble)v {
  return [self _addWithComFasterxmlJacksonDatabindJsonNode:[self numberNodeWithDouble:v]];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithJavaLangDouble:(JavaLangDouble *)value {
  if (value == nil) {
    return [self addNull];
  }
  return [self _addWithComFasterxmlJacksonDatabindJsonNode:[self numberNodeWithDouble:[value doubleValue]]];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithJavaMathBigDecimal:(JavaMathBigDecimal *)v {
  if (v == nil) {
    return [self addNull];
  }
  return [self _addWithComFasterxmlJacksonDatabindJsonNode:[self numberNodeWithJavaMathBigDecimal:v]];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithJavaMathBigInteger:(JavaMathBigInteger *)v {
  if (v == nil) {
    return [self addNull];
  }
  return [self _addWithComFasterxmlJacksonDatabindJsonNode:[self numberNodeWithJavaMathBigInteger:v]];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithNSString:(NSString *)v {
  if (v == nil) {
    return [self addNull];
  }
  return [self _addWithComFasterxmlJacksonDatabindJsonNode:[self textNodeWithNSString:v]];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithBoolean:(jboolean)v {
  return [self _addWithComFasterxmlJacksonDatabindJsonNode:[self booleanNodeWithBoolean:v]];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithJavaLangBoolean:(JavaLangBoolean *)value {
  if (value == nil) {
    return [self addNull];
  }
  return [self _addWithComFasterxmlJacksonDatabindJsonNode:[self booleanNodeWithBoolean:[value booleanValue]]];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)addWithByteArray:(IOSByteArray *)v {
  if (v == nil) {
    return [self addNull];
  }
  return [self _addWithComFasterxmlJacksonDatabindJsonNode:[self binaryNodeWithByteArray:v]];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertArrayWithInt:(jint)index {
  ComFasterxmlJacksonDatabindNodeArrayNode *n = [self arrayNode];
  [self _insertWithInt:index withComFasterxmlJacksonDatabindJsonNode:n];
  return n;
}

- (ComFasterxmlJacksonDatabindNodeObjectNode *)insertObjectWithInt:(jint)index {
  ComFasterxmlJacksonDatabindNodeObjectNode *n = [self objectNode];
  [self _insertWithInt:index withComFasterxmlJacksonDatabindJsonNode:n];
  return n;
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertPOJOWithInt:(jint)index
                                                         withId:(id)value {
  if (value == nil) {
    return [self insertNullWithInt:index];
  }
  return [self _insertWithInt:index withComFasterxmlJacksonDatabindJsonNode:[self pojoNodeWithId:value]];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertNullWithInt:(jint)index {
  [self _insertWithInt:index withComFasterxmlJacksonDatabindJsonNode:[self nullNode]];
  return self;
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                                    withInt:(jint)v {
  [self _insertWithInt:index withComFasterxmlJacksonDatabindJsonNode:[self numberNodeWithInt:v]];
  return self;
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                        withJavaLangInteger:(JavaLangInteger *)value {
  if (value == nil) {
    [self insertNullWithInt:index];
  }
  else {
    [self _insertWithInt:index withComFasterxmlJacksonDatabindJsonNode:[self numberNodeWithInt:[value intValue]]];
  }
  return self;
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                                   withLong:(jlong)v {
  return [self _insertWithInt:index withComFasterxmlJacksonDatabindJsonNode:[self numberNodeWithLong:v]];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                           withJavaLangLong:(JavaLangLong *)value {
  if (value == nil) {
    return [self insertNullWithInt:index];
  }
  return [self _insertWithInt:index withComFasterxmlJacksonDatabindJsonNode:[self numberNodeWithLong:[value longLongValue]]];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                                  withFloat:(jfloat)v {
  return [self _insertWithInt:index withComFasterxmlJacksonDatabindJsonNode:[self numberNodeWithFloat:v]];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                          withJavaLangFloat:(JavaLangFloat *)value {
  if (value == nil) {
    return [self insertNullWithInt:index];
  }
  return [self _insertWithInt:index withComFasterxmlJacksonDatabindJsonNode:[self numberNodeWithFloat:[value floatValue]]];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                                 withDouble:(jdouble)v {
  return [self _insertWithInt:index withComFasterxmlJacksonDatabindJsonNode:[self numberNodeWithDouble:v]];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                         withJavaLangDouble:(JavaLangDouble *)value {
  if (value == nil) {
    return [self insertNullWithInt:index];
  }
  return [self _insertWithInt:index withComFasterxmlJacksonDatabindJsonNode:[self numberNodeWithDouble:[value doubleValue]]];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                     withJavaMathBigDecimal:(JavaMathBigDecimal *)v {
  if (v == nil) {
    return [self insertNullWithInt:index];
  }
  return [self _insertWithInt:index withComFasterxmlJacksonDatabindJsonNode:[self numberNodeWithJavaMathBigDecimal:v]];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                     withJavaMathBigInteger:(JavaMathBigInteger *)v {
  if (v == nil) {
    return [self insertNullWithInt:index];
  }
  return [self _insertWithInt:index withComFasterxmlJacksonDatabindJsonNode:[self numberNodeWithJavaMathBigInteger:v]];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                               withNSString:(NSString *)v {
  if (v == nil) {
    return [self insertNullWithInt:index];
  }
  return [self _insertWithInt:index withComFasterxmlJacksonDatabindJsonNode:[self textNodeWithNSString:v]];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                                withBoolean:(jboolean)v {
  return [self _insertWithInt:index withComFasterxmlJacksonDatabindJsonNode:[self booleanNodeWithBoolean:v]];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                        withJavaLangBoolean:(JavaLangBoolean *)value {
  if (value == nil) {
    return [self insertNullWithInt:index];
  }
  return [self _insertWithInt:index withComFasterxmlJacksonDatabindJsonNode:[self booleanNodeWithBoolean:[value booleanValue]]];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)insertWithInt:(jint)index
                                              withByteArray:(IOSByteArray *)v {
  if (v == nil) {
    return [self insertNullWithInt:index];
  }
  return [self _insertWithInt:index withComFasterxmlJacksonDatabindJsonNode:[self binaryNodeWithByteArray:v]];
}

- (jboolean)isEqual:(id)o {
  if (o == self) return true;
  if (o == nil) return false;
  if ([o isKindOfClass:[ComFasterxmlJacksonDatabindNodeArrayNode class]]) {
    return [((id<JavaUtilList>) nil_chk(_children_)) isEqual:((ComFasterxmlJacksonDatabindNodeArrayNode *) cast_chk(o, [ComFasterxmlJacksonDatabindNodeArrayNode class]))->_children_];
  }
  return false;
}

- (jboolean)_childrenEqualWithComFasterxmlJacksonDatabindNodeArrayNode:(ComFasterxmlJacksonDatabindNodeArrayNode *)other {
  return [((id<JavaUtilList>) nil_chk(_children_)) isEqual:((ComFasterxmlJacksonDatabindNodeArrayNode *) nil_chk(other))->_children_];
}

- (NSUInteger)hash {
  return ((jint) [((id<JavaUtilList>) nil_chk(_children_)) hash]);
}

- (NSString *)description {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_initWithInt_(16 + (JreLShift32([self size], 4)));
  [sb appendWithChar:'['];
  for (jint i = 0, len = [((id<JavaUtilList>) nil_chk(_children_)) size]; i < len; ++i) {
    if (i > 0) {
      [sb appendWithChar:','];
    }
    [sb appendWithNSString:[((ComFasterxmlJacksonDatabindJsonNode *) nil_chk([_children_ getWithInt:i])) description]];
  }
  [sb appendWithChar:']'];
  return [sb description];
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)_addWithComFasterxmlJacksonDatabindJsonNode:(ComFasterxmlJacksonDatabindJsonNode *)node {
  [((id<JavaUtilList>) nil_chk(_children_)) addWithId:node];
  return self;
}

- (ComFasterxmlJacksonDatabindNodeArrayNode *)_insertWithInt:(jint)index
                     withComFasterxmlJacksonDatabindJsonNode:(ComFasterxmlJacksonDatabindJsonNode *)node {
  if (index < 0) {
    [((id<JavaUtilList>) nil_chk(_children_)) addWithInt:0 withId:node];
  }
  else if (index >= [((id<JavaUtilList>) nil_chk(_children_)) size]) {
    [_children_ addWithId:node];
  }
  else {
    [_children_ addWithInt:index withId:node];
  }
  return self;
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

- (void)dealloc {
  RELEASE_(_children_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 1, -1, -1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, 3, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x4, 4, 5, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeJsonNodeType;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonCoreJsonToken;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 8, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x1, 9, 10, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x1, 9, 11, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x1, 12, 11, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x1, 12, 10, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 13, 14, -1, 15, -1, -1 },
    { NULL, "V", 0x1, 16, 17, 18, -1, -1, -1 },
    { NULL, "V", 0x1, 19, 20, 18, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x1, 21, 11, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 22, 23, -1, 24, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 25, 23, -1, 26, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeObjectNode;", 0x1, 27, 11, -1, -1, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, 28, 23, -1, 24, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x1, 29, 30, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 31, 32, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 33, 34, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 33, 35, -1, 36, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 37, 30, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonNode;", 0x1, 38, 10, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeObjectNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 39, 40, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 41, 42, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 31, 10, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 31, 43, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 31, 44, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 31, 45, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 31, 46, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 31, 47, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 31, 48, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 31, 49, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 31, 50, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 31, 51, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 31, 11, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 31, 52, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 31, 53, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 31, 54, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 55, 10, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeObjectNode;", 0x1, 56, 10, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 57, 58, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 59, 10, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 37, 60, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 37, 61, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 37, 62, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 37, 63, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 37, 64, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 37, 65, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 37, 66, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 37, 67, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 37, 68, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 37, 69, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 37, 70, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 37, 71, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 37, 72, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x1, 37, 73, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 13, 40, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 74, 34, -1, -1, -1, -1 },
    { NULL, "I", 0x1, 75, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 76, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x4, 77, 32, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindNodeArrayNode;", 0x4, 78, 30, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory:);
  methods[1].selector = @selector(initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory:withInt:);
  methods[2].selector = @selector(initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory:withJavaUtilList:);
  methods[3].selector = @selector(_atWithComFasterxmlJacksonCoreJsonPointer:);
  methods[4].selector = @selector(deepCopy);
  methods[5].selector = @selector(isEmptyWithComFasterxmlJacksonDatabindSerializerProvider:);
  methods[6].selector = @selector(getNodeType);
  methods[7].selector = @selector(isArray);
  methods[8].selector = @selector(asToken);
  methods[9].selector = @selector(size);
  methods[10].selector = @selector(elements);
  methods[11].selector = @selector(getWithInt:);
  methods[12].selector = @selector(getWithNSString:);
  methods[13].selector = @selector(pathWithNSString:);
  methods[14].selector = @selector(pathWithInt:);
  methods[15].selector = @selector(equalsWithJavaUtilComparator:withComFasterxmlJacksonDatabindJsonNode:);
  methods[16].selector = @selector(serializeWithComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:);
  methods[17].selector = @selector(serializeWithTypeWithComFasterxmlJacksonCoreJsonGenerator:withComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindJsontypeTypeSerializer:);
  methods[18].selector = @selector(findValueWithNSString:);
  methods[19].selector = @selector(findValuesWithNSString:withJavaUtilList:);
  methods[20].selector = @selector(findValuesAsTextWithNSString:withJavaUtilList:);
  methods[21].selector = @selector(findParentWithNSString:);
  methods[22].selector = @selector(findParentsWithNSString:withJavaUtilList:);
  methods[23].selector = @selector(setWithInt:withComFasterxmlJacksonDatabindJsonNode:);
  methods[24].selector = @selector(addWithComFasterxmlJacksonDatabindJsonNode:);
  methods[25].selector = @selector(addAllWithComFasterxmlJacksonDatabindNodeArrayNode:);
  methods[26].selector = @selector(addAllWithJavaUtilCollection:);
  methods[27].selector = @selector(insertWithInt:withComFasterxmlJacksonDatabindJsonNode:);
  methods[28].selector = @selector(removeWithInt:);
  methods[29].selector = @selector(removeAll);
  methods[30].selector = @selector(addArray);
  methods[31].selector = @selector(addObject);
  methods[32].selector = @selector(addPOJOWithId:);
  methods[33].selector = @selector(addRawValueWithComFasterxmlJacksonDatabindUtilRawValue:);
  methods[34].selector = @selector(addNull);
  methods[35].selector = @selector(addWithInt:);
  methods[36].selector = @selector(addWithJavaLangInteger:);
  methods[37].selector = @selector(addWithLong:);
  methods[38].selector = @selector(addWithJavaLangLong:);
  methods[39].selector = @selector(addWithFloat:);
  methods[40].selector = @selector(addWithJavaLangFloat:);
  methods[41].selector = @selector(addWithDouble:);
  methods[42].selector = @selector(addWithJavaLangDouble:);
  methods[43].selector = @selector(addWithJavaMathBigDecimal:);
  methods[44].selector = @selector(addWithJavaMathBigInteger:);
  methods[45].selector = @selector(addWithNSString:);
  methods[46].selector = @selector(addWithBoolean:);
  methods[47].selector = @selector(addWithJavaLangBoolean:);
  methods[48].selector = @selector(addWithByteArray:);
  methods[49].selector = @selector(insertArrayWithInt:);
  methods[50].selector = @selector(insertObjectWithInt:);
  methods[51].selector = @selector(insertPOJOWithInt:withId:);
  methods[52].selector = @selector(insertNullWithInt:);
  methods[53].selector = @selector(insertWithInt:withInt:);
  methods[54].selector = @selector(insertWithInt:withJavaLangInteger:);
  methods[55].selector = @selector(insertWithInt:withLong:);
  methods[56].selector = @selector(insertWithInt:withJavaLangLong:);
  methods[57].selector = @selector(insertWithInt:withFloat:);
  methods[58].selector = @selector(insertWithInt:withJavaLangFloat:);
  methods[59].selector = @selector(insertWithInt:withDouble:);
  methods[60].selector = @selector(insertWithInt:withJavaLangDouble:);
  methods[61].selector = @selector(insertWithInt:withJavaMathBigDecimal:);
  methods[62].selector = @selector(insertWithInt:withJavaMathBigInteger:);
  methods[63].selector = @selector(insertWithInt:withNSString:);
  methods[64].selector = @selector(insertWithInt:withBoolean:);
  methods[65].selector = @selector(insertWithInt:withJavaLangBoolean:);
  methods[66].selector = @selector(insertWithInt:withByteArray:);
  methods[67].selector = @selector(isEqual:);
  methods[68].selector = @selector(_childrenEqualWithComFasterxmlJacksonDatabindNodeArrayNode:);
  methods[69].selector = @selector(hash);
  methods[70].selector = @selector(description);
  methods[71].selector = @selector(_addWithComFasterxmlJacksonDatabindJsonNode:);
  methods[72].selector = @selector(_insertWithInt:withComFasterxmlJacksonDatabindJsonNode:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "_children_", "LJavaUtilList;", .constantValue.asLong = 0, 0x12, -1, -1, 79, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindNodeJsonNodeFactory;", "LComFasterxmlJacksonDatabindNodeJsonNodeFactory;I", "LComFasterxmlJacksonDatabindNodeJsonNodeFactory;LJavaUtilList;", "(Lcom/fasterxml/jackson/databind/node/JsonNodeFactory;Ljava/util/List<Lcom/fasterxml/jackson/databind/JsonNode;>;)V", "_at", "LComFasterxmlJacksonCoreJsonPointer;", "isEmpty", "LComFasterxmlJacksonDatabindSerializerProvider;", "()Ljava/util/Iterator<Lcom/fasterxml/jackson/databind/JsonNode;>;", "get", "I", "LNSString;", "path", "equals", "LJavaUtilComparator;LComFasterxmlJacksonDatabindJsonNode;", "(Ljava/util/Comparator<Lcom/fasterxml/jackson/databind/JsonNode;>;Lcom/fasterxml/jackson/databind/JsonNode;)Z", "serialize", "LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;", "LJavaIoIOException;", "serializeWithType", "LComFasterxmlJacksonCoreJsonGenerator;LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindJsontypeTypeSerializer;", "findValue", "findValues", "LNSString;LJavaUtilList;", "(Ljava/lang/String;Ljava/util/List<Lcom/fasterxml/jackson/databind/JsonNode;>;)Ljava/util/List<Lcom/fasterxml/jackson/databind/JsonNode;>;", "findValuesAsText", "(Ljava/lang/String;Ljava/util/List<Ljava/lang/String;>;)Ljava/util/List<Ljava/lang/String;>;", "findParent", "findParents", "set", "ILComFasterxmlJacksonDatabindJsonNode;", "add", "LComFasterxmlJacksonDatabindJsonNode;", "addAll", "LComFasterxmlJacksonDatabindNodeArrayNode;", "LJavaUtilCollection;", "(Ljava/util/Collection<+Lcom/fasterxml/jackson/databind/JsonNode;>;)Lcom/fasterxml/jackson/databind/node/ArrayNode;", "insert", "remove", "addPOJO", "LNSObject;", "addRawValue", "LComFasterxmlJacksonDatabindUtilRawValue;", "LJavaLangInteger;", "J", "LJavaLangLong;", "F", "LJavaLangFloat;", "D", "LJavaLangDouble;", "LJavaMathBigDecimal;", "LJavaMathBigInteger;", "Z", "LJavaLangBoolean;", "[B", "insertArray", "insertObject", "insertPOJO", "ILNSObject;", "insertNull", "II", "ILJavaLangInteger;", "IJ", "ILJavaLangLong;", "IF", "ILJavaLangFloat;", "ID", "ILJavaLangDouble;", "ILJavaMathBigDecimal;", "ILJavaMathBigInteger;", "ILNSString;", "IZ", "ILJavaLangBoolean;", "I[B", "_childrenEqual", "hashCode", "toString", "_add", "_insert", "Ljava/util/List<Lcom/fasterxml/jackson/databind/JsonNode;>;", "Lcom/fasterxml/jackson/databind/node/ContainerNode<Lcom/fasterxml/jackson/databind/node/ArrayNode;>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindNodeArrayNode = { "ArrayNode", "com.fasterxml.jackson.databind.node", ptrTable, methods, fields, 7, 0x1, 73, 1, -1, -1, -1, 80, -1 };
  return &_ComFasterxmlJacksonDatabindNodeArrayNode;
}

@end

void ComFasterxmlJacksonDatabindNodeArrayNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_(ComFasterxmlJacksonDatabindNodeArrayNode *self, ComFasterxmlJacksonDatabindNodeJsonNodeFactory *nf) {
  ComFasterxmlJacksonDatabindNodeContainerNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_(self, nf);
  JreStrongAssignAndConsume(&self->_children_, new_JavaUtilArrayList_init());
}

ComFasterxmlJacksonDatabindNodeArrayNode *new_ComFasterxmlJacksonDatabindNodeArrayNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_(ComFasterxmlJacksonDatabindNodeJsonNodeFactory *nf) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindNodeArrayNode, initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_, nf)
}

ComFasterxmlJacksonDatabindNodeArrayNode *create_ComFasterxmlJacksonDatabindNodeArrayNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_(ComFasterxmlJacksonDatabindNodeJsonNodeFactory *nf) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindNodeArrayNode, initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_, nf)
}

void ComFasterxmlJacksonDatabindNodeArrayNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_withInt_(ComFasterxmlJacksonDatabindNodeArrayNode *self, ComFasterxmlJacksonDatabindNodeJsonNodeFactory *nf, jint capacity) {
  ComFasterxmlJacksonDatabindNodeContainerNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_(self, nf);
  JreStrongAssignAndConsume(&self->_children_, new_JavaUtilArrayList_initWithInt_(capacity));
}

ComFasterxmlJacksonDatabindNodeArrayNode *new_ComFasterxmlJacksonDatabindNodeArrayNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_withInt_(ComFasterxmlJacksonDatabindNodeJsonNodeFactory *nf, jint capacity) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindNodeArrayNode, initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_withInt_, nf, capacity)
}

ComFasterxmlJacksonDatabindNodeArrayNode *create_ComFasterxmlJacksonDatabindNodeArrayNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_withInt_(ComFasterxmlJacksonDatabindNodeJsonNodeFactory *nf, jint capacity) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindNodeArrayNode, initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_withInt_, nf, capacity)
}

void ComFasterxmlJacksonDatabindNodeArrayNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_withJavaUtilList_(ComFasterxmlJacksonDatabindNodeArrayNode *self, ComFasterxmlJacksonDatabindNodeJsonNodeFactory *nf, id<JavaUtilList> children) {
  ComFasterxmlJacksonDatabindNodeContainerNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_(self, nf);
  JreStrongAssign(&self->_children_, children);
}

ComFasterxmlJacksonDatabindNodeArrayNode *new_ComFasterxmlJacksonDatabindNodeArrayNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_withJavaUtilList_(ComFasterxmlJacksonDatabindNodeJsonNodeFactory *nf, id<JavaUtilList> children) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindNodeArrayNode, initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_withJavaUtilList_, nf, children)
}

ComFasterxmlJacksonDatabindNodeArrayNode *create_ComFasterxmlJacksonDatabindNodeArrayNode_initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_withJavaUtilList_(ComFasterxmlJacksonDatabindNodeJsonNodeFactory *nf, id<JavaUtilList> children) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindNodeArrayNode, initWithComFasterxmlJacksonDatabindNodeJsonNodeFactory_withJavaUtilList_, nf, children)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindNodeArrayNode)
