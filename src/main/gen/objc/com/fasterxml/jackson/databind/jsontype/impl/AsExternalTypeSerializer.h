//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsExternalTypeSerializer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplAsExternalTypeSerializer")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindJsontypeImplAsExternalTypeSerializer
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplAsExternalTypeSerializer 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplAsExternalTypeSerializer 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindJsontypeImplAsExternalTypeSerializer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindJsontypeImplAsExternalTypeSerializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplAsExternalTypeSerializer || defined(INCLUDE_ComFasterxmlJacksonDatabindJsontypeImplAsExternalTypeSerializer))
#define ComFasterxmlJacksonDatabindJsontypeImplAsExternalTypeSerializer_

#define RESTRICT_ComFasterxmlJacksonDatabindJsontypeImplTypeSerializerBase 1
#define INCLUDE_ComFasterxmlJacksonDatabindJsontypeImplTypeSerializerBase 1
#include "com/fasterxml/jackson/databind/jsontype/impl/TypeSerializerBase.h"

@class ComFasterxmlJacksonAnnotationJsonTypeInfo_As;
@class ComFasterxmlJacksonCoreJsonGenerator;
@protocol ComFasterxmlJacksonDatabindBeanProperty;
@protocol ComFasterxmlJacksonDatabindJsontypeTypeIdResolver;

/*!
 @brief Type serializer that preferably embeds type information as an "external"
  type property; embedded in enclosing JSON object.
 Note that this serializer should only be used when value is being output
  at JSON Object context; otherwise it cannot work reliably, and will have
  to revert operation similar to <code>AsPropertyTypeSerializer</code>.
 <p>
  Note that implementation of serialization is bit cumbersome as we must
  serialized external type id AFTER object; this because callback only
  occurs after field name has been written.
 <p>
  Also note that this type of type id inclusion will NOT try to make use
  of native Type Ids, even if those exist.
 */
@interface ComFasterxmlJacksonDatabindJsontypeImplAsExternalTypeSerializer : ComFasterxmlJacksonDatabindJsontypeImplTypeSerializerBase {
 @public
  NSString *_typePropertyName_;
}

#pragma mark Public

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver:(id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver>)idRes
                                        withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property
                                                                       withNSString:(NSString *)propName;

- (ComFasterxmlJacksonDatabindJsontypeImplAsExternalTypeSerializer *)forPropertyWithComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)prop;

- (NSString *)getPropertyName;

- (ComFasterxmlJacksonAnnotationJsonTypeInfo_As *)getTypeInclusion;

#pragma mark Protected

- (void)_writeArrayPrefixWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g;

- (void)_writeArraySuffixWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
                   withNSString:(NSString *)typeId;

- (void)_writeObjectPrefixWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g;

- (void)_writeObjectSuffixWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
                    withNSString:(NSString *)typeId;

- (void)_writeScalarPrefixWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g;

- (void)_writeScalarSuffixWithId:(id)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)g
                    withNSString:(NSString *)typeId;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver:(id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver>)arg0
                                        withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindJsontypeImplAsExternalTypeSerializer)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindJsontypeImplAsExternalTypeSerializer, _typePropertyName_, NSString *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindJsontypeImplAsExternalTypeSerializer_initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withComFasterxmlJacksonDatabindBeanProperty_withNSString_(ComFasterxmlJacksonDatabindJsontypeImplAsExternalTypeSerializer *self, id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver> idRes, id<ComFasterxmlJacksonDatabindBeanProperty> property, NSString *propName);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindJsontypeImplAsExternalTypeSerializer *new_ComFasterxmlJacksonDatabindJsontypeImplAsExternalTypeSerializer_initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withComFasterxmlJacksonDatabindBeanProperty_withNSString_(id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver> idRes, id<ComFasterxmlJacksonDatabindBeanProperty> property, NSString *propName) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindJsontypeImplAsExternalTypeSerializer *create_ComFasterxmlJacksonDatabindJsontypeImplAsExternalTypeSerializer_initWithComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withComFasterxmlJacksonDatabindBeanProperty_withNSString_(id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver> idRes, id<ComFasterxmlJacksonDatabindBeanProperty> property, NSString *propName);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindJsontypeImplAsExternalTypeSerializer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplAsExternalTypeSerializer")
