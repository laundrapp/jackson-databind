//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/jsontype/impl/AsWrapperTypeDeserializer.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer || defined(INCLUDE_ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer))
#define ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer_

#define RESTRICT_ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase 1
#define INCLUDE_ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase 1
#include "com/fasterxml/jackson/databind/jsontype/impl/TypeDeserializerBase.h"

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class ComFasterxmlJacksonAnnotationJsonTypeInfo_As;
@class ComFasterxmlJacksonCoreJsonParser;
@class ComFasterxmlJacksonDatabindDeserializationContext;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsontypeTypeDeserializer;
@protocol ComFasterxmlJacksonDatabindBeanProperty;
@protocol ComFasterxmlJacksonDatabindJsontypeTypeIdResolver;

/*!
 @brief Type deserializer used with <code>As.WRAPPER_OBJECT</code>
  inclusion mechanism.Simple since JSON structure used is always
  the same, regardless of structure used for actual value: wrapping
  is done using a single-element JSON Object where type id is the key,
  and actual object data as the value.
 */
@interface ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer : ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase < JavaIoSerializable >

#pragma mark Public

/*!
 @since 2.8
 */
- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)bt
                withComFasterxmlJacksonDatabindJsontypeTypeIdResolver:(id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver>)idRes
                                                         withNSString:(NSString *)typePropertyName
                                                          withBoolean:(jboolean)typeIdVisible
                              withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)defaultImpl;

- (id)deserializeTypedFromAnyWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)jp
             withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt;

- (id)deserializeTypedFromArrayWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)jp
               withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt;

/*!
 @brief Deserializing type id enclosed using WRAPPER_OBJECT style is straightforward
 */
- (id)deserializeTypedFromObjectWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)jp
                withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt;

- (id)deserializeTypedFromScalarWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)jp
                withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt;

- (ComFasterxmlJacksonDatabindJsontypeTypeDeserializer *)forPropertyWithComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)prop;

- (ComFasterxmlJacksonAnnotationJsonTypeInfo_As *)getTypeInclusion;

#pragma mark Protected

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer:(ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer *)src
                                                       withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property;

/*!
 @brief Method that handles type information wrapper, locates actual
  subtype deserializer to use, and calls it to do actual
  deserialization.
 */
- (id)_deserializeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
  withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase:(ComFasterxmlJacksonDatabindJsontypeImplTypeDeserializerBase *)arg0
                                                  withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)arg1 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withNSString_withBoolean_withComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer *self, ComFasterxmlJacksonDatabindJavaType *bt, id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver> idRes, NSString *typePropertyName, jboolean typeIdVisible, ComFasterxmlJacksonDatabindJavaType *defaultImpl);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer *new_ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withNSString_withBoolean_withComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindJavaType *bt, id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver> idRes, NSString *typePropertyName, jboolean typeIdVisible, ComFasterxmlJacksonDatabindJavaType *defaultImpl) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer *create_ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJsontypeTypeIdResolver_withNSString_withBoolean_withComFasterxmlJacksonDatabindJavaType_(ComFasterxmlJacksonDatabindJavaType *bt, id<ComFasterxmlJacksonDatabindJsontypeTypeIdResolver> idRes, NSString *typePropertyName, jboolean typeIdVisible, ComFasterxmlJacksonDatabindJavaType *defaultImpl);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer_initWithComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer_withComFasterxmlJacksonDatabindBeanProperty_(ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer *self, ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer *src, id<ComFasterxmlJacksonDatabindBeanProperty> property);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer *new_ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer_initWithComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer_withComFasterxmlJacksonDatabindBeanProperty_(ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer *src, id<ComFasterxmlJacksonDatabindBeanProperty> property) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer *create_ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer_initWithComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer_withComFasterxmlJacksonDatabindBeanProperty_(ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer *src, id<ComFasterxmlJacksonDatabindBeanProperty> property);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindJsontypeImplAsWrapperTypeDeserializer")
