//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/core/JsonParser.h"
#include "com/fasterxml/jackson/core/JsonProcessingException.h"
#include "com/fasterxml/jackson/databind/DeserializationContext.h"
#include "com/fasterxml/jackson/databind/DeserializationFeature.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/JsonDeserializer.h"
#include "com/fasterxml/jackson/databind/JsonMappingException.h"
#include "com/fasterxml/jackson/databind/PropertyName.h"
#include "com/fasterxml/jackson/databind/deser/SettableBeanProperty.h"
#include "com/fasterxml/jackson/databind/deser/impl/BeanPropertyMap.h"
#include "com/fasterxml/jackson/databind/util/ClassUtil.h"
#include "com/fasterxml/jackson/databind/util/NameTransformer.h"
#include "java/io/IOException.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Iterable.h"
#include "java/lang/StringBuilder.h"
#include "java/lang/Throwable.h"
#include "java/lang/annotation/Annotation.h"
#include "java/lang/reflect/InvocationTargetException.h"
#include "java/util/ArrayList.h"
#include "java/util/Arrays.h"
#include "java/util/Collection.h"
#include "java/util/Collections.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Map.h"
#include "java/util/NoSuchElementException.h"
#include "java/util/Set.h"
#include "java/util/Spliterator.h"
#include "java/util/function/Consumer.h"

@interface ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap () {
 @public
  jint _hashMask_;
  /*!
   @brief Number of entries stored in the hash area.
   */
  jint _size_;
  jint _spillCount_;
  /*!
   @brief Hash area that contains key/property pairs in adjacent elements.
   */
  IOSObjectArray *_hashArea_;
  /*!
   @brief Array of properties in the exact order they were handed in.This is
  used by as-array serialization, deserialization.
   */
  IOSObjectArray *_propsInOrder_;
  /*!
   @brief Configuration of alias mappings, indexed by unmodified property name
  to unmodified aliases, if any; entries only included for properties
  that do have aliases.
   This is is used for constructing actual reverse lookup mapping, if
  needed, taking into account possible case-insensitivity, as well
  as possibility of name prefixes.
   @since 2.9
   */
  id<JavaUtilMap> _aliasDefs_;
  /*!
   @brief Mapping from secondary names (aliases) to primary names.
   @since 2.9
   */
  id<JavaUtilMap> _aliasMapping_;
}

+ (jint)findSizeWithInt:(jint)size;

- (id<JavaUtilList>)_properties;

- (ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)_find2WithNSString:(NSString *)key
                                                                     withInt:(jint)slot
                                                                      withId:(id)match;

- (ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)_findWithAliasWithNSString:(NSString *)keyFromAlias;

- (ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)_find2ViaAliasWithNSString:(NSString *)key
                                                                             withInt:(jint)slot
                                                                              withId:(id)match;

/*!
 @brief Helper method used to find exact location of a property with name
  given exactly, not subject to case changes, within hash area.
 Expectation is that such property SHOULD exist, although no
  exception is thrown.
 @since 2.7
 */
- (jint)_findIndexInHashWithNSString:(NSString *)key;

- (jint)_findFromOrderedWithComFasterxmlJacksonDatabindDeserSettableBeanProperty:(ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)prop;

- (jint)_hashCodeWithNSString:(NSString *)key;

- (id<JavaUtilMap>)_buildAliasMappingWithJavaUtilMap:(id<JavaUtilMap>)defs;

@end

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap, _hashArea_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap, _propsInOrder_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap, _aliasDefs_, id<JavaUtilMap>)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap, _aliasMapping_, id<JavaUtilMap>)

inline jlong ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_serialVersionUID 2LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap, serialVersionUID, jlong)

__attribute__((unused)) static jint ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_findSizeWithInt_(jint size);

__attribute__((unused)) static id<JavaUtilList> ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__properties(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *self);

__attribute__((unused)) static NSString *ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_getPropertyNameWithComFasterxmlJacksonDatabindDeserSettableBeanProperty_(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *self, ComFasterxmlJacksonDatabindDeserSettableBeanProperty *prop);

__attribute__((unused)) static ComFasterxmlJacksonDatabindDeserSettableBeanProperty *ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__find2WithNSString_withInt_withId_(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *self, NSString *key, jint slot, id match);

__attribute__((unused)) static ComFasterxmlJacksonDatabindDeserSettableBeanProperty *ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__findWithAliasWithNSString_(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *self, NSString *keyFromAlias);

__attribute__((unused)) static ComFasterxmlJacksonDatabindDeserSettableBeanProperty *ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__find2ViaAliasWithNSString_withInt_withId_(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *self, NSString *key, jint slot, id match);

__attribute__((unused)) static jint ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__findIndexInHashWithNSString_(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *self, NSString *key);

__attribute__((unused)) static jint ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__findFromOrderedWithComFasterxmlJacksonDatabindDeserSettableBeanProperty_(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *self, ComFasterxmlJacksonDatabindDeserSettableBeanProperty *prop);

__attribute__((unused)) static jint ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__hashCodeWithNSString_(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *self, NSString *key);

__attribute__((unused)) static id<JavaUtilMap> ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__buildAliasMappingWithJavaUtilMap_(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *self, id<JavaUtilMap> defs);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__Annotations$0(void);

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__Annotations$1(void);

@implementation ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap

- (instancetype __nonnull)initWithBoolean:(jboolean)caseInsensitive
                   withJavaUtilCollection:(id<JavaUtilCollection>)props
                          withJavaUtilMap:(id<JavaUtilMap>)aliasDefs {
  ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_initWithBoolean_withJavaUtilCollection_withJavaUtilMap_(self, caseInsensitive, props, aliasDefs);
  return self;
}

- (instancetype __nonnull)initWithBoolean:(jboolean)caseInsensitive
                   withJavaUtilCollection:(id<JavaUtilCollection>)props {
  ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_initWithBoolean_withJavaUtilCollection_(self, caseInsensitive, props);
  return self;
}

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindDeserImplBeanPropertyMap:(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *)base
                                                                          withBoolean:(jboolean)caseInsensitive {
  ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_initWithComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_withBoolean_(self, base, caseInsensitive);
  return self;
}

- (ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *)withCaseInsensitivityWithBoolean:(jboolean)state {
  if (_caseInsensitive_ == state) {
    return self;
  }
  return create_ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_initWithComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_withBoolean_(self, state);
}

- (void)init__WithJavaUtilCollection:(id<JavaUtilCollection>)props {
  _size_ = [((id<JavaUtilCollection>) nil_chk(props)) size];
  jint hashSize = ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_findSizeWithInt_(_size_);
  _hashMask_ = hashSize - 1;
  jint alloc_ = (hashSize + (JreRShift32(hashSize, 1))) * 2;
  IOSObjectArray *hashed = [IOSObjectArray arrayWithLength:alloc_ type:NSObject_class_()];
  jint spillCount = 0;
  for (ComFasterxmlJacksonDatabindDeserSettableBeanProperty * __strong prop in props) {
    if (prop == nil) {
      continue;
    }
    NSString *key = ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_getPropertyNameWithComFasterxmlJacksonDatabindDeserSettableBeanProperty_(self, prop);
    jint slot = ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__hashCodeWithNSString_(self, key);
    jint ix = (JreLShift32(slot, 1));
    if (IOSObjectArray_Get(hashed, ix) != nil) {
      ix = JreLShift32((hashSize + (JreRShift32(slot, 1))), 1);
      if (IOSObjectArray_Get(hashed, ix) != nil) {
        ix = (JreLShift32((hashSize + (JreRShift32(hashSize, 1))), 1)) + spillCount;
        spillCount += 2;
        if (ix >= hashed->size_) {
          hashed = JavaUtilArrays_copyOfWithNSObjectArray_withInt_(hashed, hashed->size_ + 4);
        }
      }
    }
    IOSObjectArray_Set(nil_chk(hashed), ix, key);
    IOSObjectArray_Set(hashed, ix + 1, prop);
  }
  JreStrongAssign(&_hashArea_, hashed);
  _spillCount_ = spillCount;
}

+ (jint)findSizeWithInt:(jint)size {
  return ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_findSizeWithInt_(size);
}

+ (ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *)constructWithJavaUtilCollection:(id<JavaUtilCollection>)props
                                                                             withBoolean:(jboolean)caseInsensitive
                                                                         withJavaUtilMap:(id<JavaUtilMap>)aliasMapping {
  return ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_constructWithJavaUtilCollection_withBoolean_withJavaUtilMap_(props, caseInsensitive, aliasMapping);
}

+ (ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *)constructWithJavaUtilCollection:(id<JavaUtilCollection>)props
                                                                             withBoolean:(jboolean)caseInsensitive {
  return ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_constructWithJavaUtilCollection_withBoolean_(props, caseInsensitive);
}

- (ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *)withPropertyWithComFasterxmlJacksonDatabindDeserSettableBeanProperty:(ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)newProp {
  NSString *key = ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_getPropertyNameWithComFasterxmlJacksonDatabindDeserSettableBeanProperty_(self, newProp);
  for (jint i = 1, end = ((IOSObjectArray *) nil_chk(_hashArea_))->size_; i < end; i += 2) {
    ComFasterxmlJacksonDatabindDeserSettableBeanProperty *prop = (ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) cast_chk(IOSObjectArray_Get(nil_chk(_hashArea_), i), [ComFasterxmlJacksonDatabindDeserSettableBeanProperty class]);
    if ((prop != nil) && [((NSString *) nil_chk([((ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) nil_chk(prop)) getName])) isEqual:key]) {
      IOSObjectArray_Set(nil_chk(_hashArea_), i, newProp);
      IOSObjectArray_Set(nil_chk(_propsInOrder_), ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__findFromOrderedWithComFasterxmlJacksonDatabindDeserSettableBeanProperty_(self, prop), newProp);
      return self;
    }
  }
  jint slot = ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__hashCodeWithNSString_(self, key);
  jint hashSize = _hashMask_ + 1;
  jint ix = (JreLShift32(slot, 1));
  if (IOSObjectArray_Get(nil_chk(_hashArea_), ix) != nil) {
    ix = JreLShift32((hashSize + (JreRShift32(slot, 1))), 1);
    if (IOSObjectArray_Get(_hashArea_, ix) != nil) {
      ix = (JreLShift32((hashSize + (JreRShift32(hashSize, 1))), 1)) + _spillCount_;
      _spillCount_ += 2;
      if (ix >= _hashArea_->size_) {
        JreStrongAssign(&_hashArea_, JavaUtilArrays_copyOfWithNSObjectArray_withInt_(_hashArea_, _hashArea_->size_ + 4));
      }
    }
  }
  IOSObjectArray_Set(nil_chk(_hashArea_), ix, key);
  IOSObjectArray_Set(_hashArea_, ix + 1, newProp);
  jint last = ((IOSObjectArray *) nil_chk(_propsInOrder_))->size_;
  JreStrongAssign(&_propsInOrder_, JavaUtilArrays_copyOfWithNSObjectArray_withInt_(_propsInOrder_, last + 1));
  IOSObjectArray_Set(nil_chk(_propsInOrder_), last, newProp);
  return self;
}

- (ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *)assignIndexes {
  jint index = 0;
  for (jint i = 1, end = ((IOSObjectArray *) nil_chk(_hashArea_))->size_; i < end; i += 2) {
    ComFasterxmlJacksonDatabindDeserSettableBeanProperty *prop = (ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) cast_chk(IOSObjectArray_Get(nil_chk(_hashArea_), i), [ComFasterxmlJacksonDatabindDeserSettableBeanProperty class]);
    if (prop != nil) {
      [prop assignIndexWithInt:index++];
    }
  }
  return self;
}

- (ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *)renameAllWithComFasterxmlJacksonDatabindUtilNameTransformer:(ComFasterxmlJacksonDatabindUtilNameTransformer *)transformer {
  if (transformer == nil || (transformer == JreLoadStatic(ComFasterxmlJacksonDatabindUtilNameTransformer, NOP))) {
    return self;
  }
  jint len = ((IOSObjectArray *) nil_chk(_propsInOrder_))->size_;
  JavaUtilArrayList *newProps = create_JavaUtilArrayList_initWithInt_(len);
  for (jint i = 0; i < len; ++i) {
    ComFasterxmlJacksonDatabindDeserSettableBeanProperty *prop = IOSObjectArray_Get(nil_chk(_propsInOrder_), i);
    if (prop == nil) {
      [newProps addWithId:prop];
      continue;
    }
    [newProps addWithId:[self _renameWithComFasterxmlJacksonDatabindDeserSettableBeanProperty:prop withComFasterxmlJacksonDatabindUtilNameTransformer:transformer]];
  }
  return create_ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_initWithBoolean_withJavaUtilCollection_withJavaUtilMap_(_caseInsensitive_, newProps, _aliasDefs_);
}

- (ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *)withoutPropertiesWithJavaUtilCollection:(id<JavaUtilCollection>)toExclude {
  if ([((id<JavaUtilCollection>) nil_chk(toExclude)) isEmpty]) {
    return self;
  }
  jint len = ((IOSObjectArray *) nil_chk(_propsInOrder_))->size_;
  JavaUtilArrayList *newProps = create_JavaUtilArrayList_initWithInt_(len);
  for (jint i = 0; i < len; ++i) {
    ComFasterxmlJacksonDatabindDeserSettableBeanProperty *prop = IOSObjectArray_Get(nil_chk(_propsInOrder_), i);
    if (prop != nil) {
      if (![toExclude containsWithId:[prop getName]]) {
        [newProps addWithId:prop];
      }
    }
  }
  return create_ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_initWithBoolean_withJavaUtilCollection_withJavaUtilMap_(_caseInsensitive_, newProps, _aliasDefs_);
}

- (void)replaceWithComFasterxmlJacksonDatabindDeserSettableBeanProperty:(ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)newProp {
  NSString *key = ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_getPropertyNameWithComFasterxmlJacksonDatabindDeserSettableBeanProperty_(self, newProp);
  jint ix = ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__findIndexInHashWithNSString_(self, key);
  if (ix < 0) {
    @throw create_JavaUtilNoSuchElementException_initWithNSString_(JreStrcat("$$$", @"No entry '", key, @"' found, can't replace"));
  }
  ComFasterxmlJacksonDatabindDeserSettableBeanProperty *prop = (ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) cast_chk(IOSObjectArray_Get(nil_chk(_hashArea_), ix), [ComFasterxmlJacksonDatabindDeserSettableBeanProperty class]);
  IOSObjectArray_Set(_hashArea_, ix, newProp);
  IOSObjectArray_Set(nil_chk(_propsInOrder_), ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__findFromOrderedWithComFasterxmlJacksonDatabindDeserSettableBeanProperty_(self, prop), newProp);
}

- (void)removeWithComFasterxmlJacksonDatabindDeserSettableBeanProperty:(ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)propToRm {
  JavaUtilArrayList *props = create_JavaUtilArrayList_initWithInt_(_size_);
  NSString *key = ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_getPropertyNameWithComFasterxmlJacksonDatabindDeserSettableBeanProperty_(self, propToRm);
  jboolean found = false;
  for (jint i = 1, end = ((IOSObjectArray *) nil_chk(_hashArea_))->size_; i < end; i += 2) {
    ComFasterxmlJacksonDatabindDeserSettableBeanProperty *prop = (ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) cast_chk(IOSObjectArray_Get(nil_chk(_hashArea_), i), [ComFasterxmlJacksonDatabindDeserSettableBeanProperty class]);
    if (prop == nil) {
      continue;
    }
    if (!found) {
      found = [((NSString *) nil_chk(key)) isEqual:IOSObjectArray_Get(_hashArea_, i - 1)];
      if (found) {
        IOSObjectArray_Set(nil_chk(_propsInOrder_), ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__findFromOrderedWithComFasterxmlJacksonDatabindDeserSettableBeanProperty_(self, prop), nil);
        continue;
      }
    }
    [props addWithId:prop];
  }
  if (!found) {
    @throw create_JavaUtilNoSuchElementException_initWithNSString_(JreStrcat("$$$", @"No entry '", [((ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) nil_chk(propToRm)) getName], @"' found, can't remove"));
  }
  [self init__WithJavaUtilCollection:props];
}

- (jint)size {
  return _size_;
}

- (jboolean)isCaseInsensitive {
  return _caseInsensitive_;
}

- (jboolean)hasAliases {
  return ![((id<JavaUtilMap>) nil_chk(_aliasDefs_)) isEmpty];
}

- (id<JavaUtilIterator>)iterator {
  return [((id<JavaUtilList>) nil_chk(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__properties(self))) iterator];
}

- (id<JavaUtilList>)_properties {
  return ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__properties(self);
}

- (IOSObjectArray *)getPropertiesInInsertionOrder {
  return _propsInOrder_;
}

- (NSString *)getPropertyNameWithComFasterxmlJacksonDatabindDeserSettableBeanProperty:(ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)prop {
  return ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_getPropertyNameWithComFasterxmlJacksonDatabindDeserSettableBeanProperty_(self, prop);
}

- (ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)findWithInt:(jint)index {
  for (jint i = 1, end = ((IOSObjectArray *) nil_chk(_hashArea_))->size_; i < end; i += 2) {
    ComFasterxmlJacksonDatabindDeserSettableBeanProperty *prop = (ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) cast_chk(IOSObjectArray_Get(nil_chk(_hashArea_), i), [ComFasterxmlJacksonDatabindDeserSettableBeanProperty class]);
    if ((prop != nil) && (index == [((ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) nil_chk(prop)) getPropertyIndex])) {
      return prop;
    }
  }
  return nil;
}

- (ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)findWithNSString:(NSString *)key {
  if (key == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(@"Cannot pass null property name");
  }
  if (_caseInsensitive_) {
    key = [key lowercaseString];
  }
  jint slot = ((jint) [((NSString *) nil_chk(key)) hash]) & _hashMask_;
  jint ix = (JreLShift32(slot, 1));
  id match = IOSObjectArray_Get(nil_chk(_hashArea_), ix);
  if ((match == key) || [key isEqual:match]) {
    return (ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) cast_chk(IOSObjectArray_Get(nil_chk(_hashArea_), ix + 1), [ComFasterxmlJacksonDatabindDeserSettableBeanProperty class]);
  }
  return ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__find2WithNSString_withInt_withId_(self, key, slot, match);
}

- (ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)_find2WithNSString:(NSString *)key
                                                                     withInt:(jint)slot
                                                                      withId:(id)match {
  return ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__find2WithNSString_withInt_withId_(self, key, slot, match);
}

- (ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)_findWithAliasWithNSString:(NSString *)keyFromAlias {
  return ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__findWithAliasWithNSString_(self, keyFromAlias);
}

- (ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)_find2ViaAliasWithNSString:(NSString *)key
                                                                             withInt:(jint)slot
                                                                              withId:(id)match {
  return ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__find2ViaAliasWithNSString_withInt_withId_(self, key, slot, match);
}

- (jboolean)findDeserializeAndSetWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
                 withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                withId:(id)bean
                                                          withNSString:(NSString *)key {
  ComFasterxmlJacksonDatabindDeserSettableBeanProperty *prop = [self findWithNSString:key];
  if (prop == nil) {
    return false;
  }
  @try {
    [prop deserializeAndSetWithComFasterxmlJacksonCoreJsonParser:p withComFasterxmlJacksonDatabindDeserializationContext:ctxt withId:bean];
  }
  @catch (JavaLangException *e) {
    [self wrapAndThrowWithJavaLangThrowable:e withId:bean withNSString:key withComFasterxmlJacksonDatabindDeserializationContext:ctxt];
  }
  return true;
}

- (NSString *)description {
  JavaLangStringBuilder *sb = create_JavaLangStringBuilder_init();
  [sb appendWithNSString:@"Properties=["];
  jint count = 0;
  id<JavaUtilIterator> it = [self iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    ComFasterxmlJacksonDatabindDeserSettableBeanProperty *prop = [it next];
    if (count++ > 0) {
      [sb appendWithNSString:@", "];
    }
    [sb appendWithNSString:[((ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) nil_chk(prop)) getName]];
    [sb appendWithChar:'('];
    [sb appendWithId:[prop getType]];
    [sb appendWithChar:')'];
  }
  [sb appendWithChar:']'];
  if (![((id<JavaUtilMap>) nil_chk(_aliasDefs_)) isEmpty]) {
    [sb appendWithNSString:@"(aliases: "];
    [sb appendWithId:_aliasDefs_];
    [sb appendWithNSString:@")"];
  }
  return [sb description];
}

- (ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)_renameWithComFasterxmlJacksonDatabindDeserSettableBeanProperty:(ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)prop
                                                                       withComFasterxmlJacksonDatabindUtilNameTransformer:(ComFasterxmlJacksonDatabindUtilNameTransformer *)xf {
  if (prop == nil) {
    return prop;
  }
  NSString *newName = [((ComFasterxmlJacksonDatabindUtilNameTransformer *) nil_chk(xf)) transformWithNSString:[prop getName]];
  prop = [prop withSimpleNameWithNSString:newName];
  ComFasterxmlJacksonDatabindJsonDeserializer *deser = [((ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) nil_chk(prop)) getValueDeserializer];
  if (deser != nil) {
    ComFasterxmlJacksonDatabindJsonDeserializer *newDeser = [deser unwrappingDeserializerWithComFasterxmlJacksonDatabindUtilNameTransformer:xf];
    if (newDeser != deser) {
      prop = [prop withValueDeserializerWithComFasterxmlJacksonDatabindJsonDeserializer:newDeser];
    }
  }
  return prop;
}

- (void)wrapAndThrowWithJavaLangThrowable:(JavaLangThrowable *)t
                                   withId:(id)bean
                             withNSString:(NSString *)fieldName
withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt {
  while ([t isKindOfClass:[JavaLangReflectInvocationTargetException class]] && [((JavaLangThrowable *) nil_chk(t)) getCause] != nil) {
    t = [((JavaLangThrowable *) nil_chk(t)) getCause];
  }
  ComFasterxmlJacksonDatabindUtilClassUtil_throwIfErrorWithJavaLangThrowable_(t);
  jboolean wrap = (ctxt == nil) || [((ComFasterxmlJacksonDatabindDeserializationContext *) nil_chk(ctxt)) isEnabledWithComFasterxmlJacksonDatabindDeserializationFeature:JreLoadEnum(ComFasterxmlJacksonDatabindDeserializationFeature, WRAP_EXCEPTIONS)];
  if ([t isKindOfClass:[JavaIoIOException class]]) {
    if (!wrap || !([t isKindOfClass:[ComFasterxmlJacksonCoreJsonProcessingException class]])) {
      @throw nil_chk((JavaIoIOException *) cast_chk(t, [JavaIoIOException class]));
    }
  }
  else if (!wrap) {
    ComFasterxmlJacksonDatabindUtilClassUtil_throwIfRTEWithJavaLangThrowable_(t);
  }
  @throw nil_chk(ComFasterxmlJacksonDatabindJsonMappingException_wrapWithPathWithJavaLangThrowable_withId_withNSString_(t, bean, fieldName));
}

- (jint)_findIndexInHashWithNSString:(NSString *)key {
  return ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__findIndexInHashWithNSString_(self, key);
}

- (jint)_findFromOrderedWithComFasterxmlJacksonDatabindDeserSettableBeanProperty:(ComFasterxmlJacksonDatabindDeserSettableBeanProperty *)prop {
  return ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__findFromOrderedWithComFasterxmlJacksonDatabindDeserSettableBeanProperty_(self, prop);
}

- (jint)_hashCodeWithNSString:(NSString *)key {
  return ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__hashCodeWithNSString_(self, key);
}

- (id<JavaUtilMap>)_buildAliasMappingWithJavaUtilMap:(id<JavaUtilMap>)defs {
  return ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__buildAliasMappingWithJavaUtilMap_(self, defs);
}

- (void)forEachWithJavaUtilFunctionConsumer:(id<JavaUtilFunctionConsumer>)arg0 {
  JavaLangIterable_forEachWithJavaUtilFunctionConsumer_(self, arg0);
}

- (id<JavaUtilSpliterator>)spliterator {
  return JavaLangIterable_spliterator(self);
}

- (NSUInteger)countByEnumeratingWithState:(NSFastEnumerationState *)state objects:(__unsafe_unretained id *)stackbuf count:(NSUInteger)len {
  return JreDefaultFastEnumeration(self, state, stackbuf);
}

- (void)dealloc {
  RELEASE_(_hashArea_);
  RELEASE_(_propsInOrder_);
  RELEASE_(_aliasDefs_);
  RELEASE_(_aliasMapping_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x1, -1, 0, -1, 1, -1, -1 },
    { NULL, NULL, 0x1, -1, 2, -1, 3, 4, -1 },
    { NULL, NULL, 0x4, -1, 5, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindDeserImplBeanPropertyMap;", 0x1, 6, 7, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 8, 9, -1, 10, -1, -1 },
    { NULL, "I", 0x1a, 11, 12, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindDeserImplBeanPropertyMap;", 0x9, 13, 14, -1, 15, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindDeserImplBeanPropertyMap;", 0x9, 13, 16, -1, 17, 18, -1 },
    { NULL, "LComFasterxmlJacksonDatabindDeserImplBeanPropertyMap;", 0x1, 19, 20, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindDeserImplBeanPropertyMap;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindDeserImplBeanPropertyMap;", 0x1, 21, 22, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindDeserImplBeanPropertyMap;", 0x1, 23, 9, -1, 24, -1, -1 },
    { NULL, "V", 0x1, 25, 20, -1, -1, -1, -1 },
    { NULL, "V", 0x1, 26, 20, -1, -1, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaUtilIterator;", 0x1, -1, -1, -1, 27, -1, -1 },
    { NULL, "LJavaUtilList;", 0x2, -1, -1, -1, 28, -1, -1 },
    { NULL, "[LComFasterxmlJacksonDatabindDeserSettableBeanProperty;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LNSString;", 0x14, 29, 20, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindDeserSettableBeanProperty;", 0x1, 30, 12, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindDeserSettableBeanProperty;", 0x1, 30, 31, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindDeserSettableBeanProperty;", 0x12, 32, 33, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindDeserSettableBeanProperty;", 0x2, 34, 31, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindDeserSettableBeanProperty;", 0x2, 35, 33, -1, -1, -1, -1 },
    { NULL, "Z", 0x1, 36, 37, 38, -1, -1, -1 },
    { NULL, "LNSString;", 0x1, 39, -1, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindDeserSettableBeanProperty;", 0x4, 40, 41, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 42, 43, 38, -1, -1, -1 },
    { NULL, "I", 0x12, 44, 31, -1, -1, -1, -1 },
    { NULL, "I", 0x12, 45, 20, -1, -1, -1, -1 },
    { NULL, "I", 0x12, 46, 31, -1, -1, -1, -1 },
    { NULL, "LJavaUtilMap;", 0x2, 47, 48, -1, 49, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithBoolean:withJavaUtilCollection:withJavaUtilMap:);
  methods[1].selector = @selector(initWithBoolean:withJavaUtilCollection:);
  methods[2].selector = @selector(initWithComFasterxmlJacksonDatabindDeserImplBeanPropertyMap:withBoolean:);
  methods[3].selector = @selector(withCaseInsensitivityWithBoolean:);
  methods[4].selector = @selector(init__WithJavaUtilCollection:);
  methods[5].selector = @selector(findSizeWithInt:);
  methods[6].selector = @selector(constructWithJavaUtilCollection:withBoolean:withJavaUtilMap:);
  methods[7].selector = @selector(constructWithJavaUtilCollection:withBoolean:);
  methods[8].selector = @selector(withPropertyWithComFasterxmlJacksonDatabindDeserSettableBeanProperty:);
  methods[9].selector = @selector(assignIndexes);
  methods[10].selector = @selector(renameAllWithComFasterxmlJacksonDatabindUtilNameTransformer:);
  methods[11].selector = @selector(withoutPropertiesWithJavaUtilCollection:);
  methods[12].selector = @selector(replaceWithComFasterxmlJacksonDatabindDeserSettableBeanProperty:);
  methods[13].selector = @selector(removeWithComFasterxmlJacksonDatabindDeserSettableBeanProperty:);
  methods[14].selector = @selector(size);
  methods[15].selector = @selector(isCaseInsensitive);
  methods[16].selector = @selector(hasAliases);
  methods[17].selector = @selector(iterator);
  methods[18].selector = @selector(_properties);
  methods[19].selector = @selector(getPropertiesInInsertionOrder);
  methods[20].selector = @selector(getPropertyNameWithComFasterxmlJacksonDatabindDeserSettableBeanProperty:);
  methods[21].selector = @selector(findWithInt:);
  methods[22].selector = @selector(findWithNSString:);
  methods[23].selector = @selector(_find2WithNSString:withInt:withId:);
  methods[24].selector = @selector(_findWithAliasWithNSString:);
  methods[25].selector = @selector(_find2ViaAliasWithNSString:withInt:withId:);
  methods[26].selector = @selector(findDeserializeAndSetWithComFasterxmlJacksonCoreJsonParser:withComFasterxmlJacksonDatabindDeserializationContext:withId:withNSString:);
  methods[27].selector = @selector(description);
  methods[28].selector = @selector(_renameWithComFasterxmlJacksonDatabindDeserSettableBeanProperty:withComFasterxmlJacksonDatabindUtilNameTransformer:);
  methods[29].selector = @selector(wrapAndThrowWithJavaLangThrowable:withId:withNSString:withComFasterxmlJacksonDatabindDeserializationContext:);
  methods[30].selector = @selector(_findIndexInHashWithNSString:);
  methods[31].selector = @selector(_findFromOrderedWithComFasterxmlJacksonDatabindDeserSettableBeanProperty:);
  methods[32].selector = @selector(_hashCodeWithNSString:);
  methods[33].selector = @selector(_buildAliasMappingWithJavaUtilMap:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "_caseInsensitive_", "Z", .constantValue.asLong = 0, 0x14, -1, -1, -1, -1 },
    { "_hashMask_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_size_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_spillCount_", "I", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_hashArea_", "[LNSObject;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_propsInOrder_", "[LComFasterxmlJacksonDatabindDeserSettableBeanProperty;", .constantValue.asLong = 0, 0x2, -1, -1, -1, -1 },
    { "_aliasDefs_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 50, -1 },
    { "_aliasMapping_", "LJavaUtilMap;", .constantValue.asLong = 0, 0x12, -1, -1, 51, -1 },
  };
  static const void *ptrTable[] = { "ZLJavaUtilCollection;LJavaUtilMap;", "(ZLjava/util/Collection<Lcom/fasterxml/jackson/databind/deser/SettableBeanProperty;>;Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Lcom/fasterxml/jackson/databind/PropertyName;>;>;)V", "ZLJavaUtilCollection;", "(ZLjava/util/Collection<Lcom/fasterxml/jackson/databind/deser/SettableBeanProperty;>;)V", (void *)&ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__Annotations$0, "LComFasterxmlJacksonDatabindDeserImplBeanPropertyMap;Z", "withCaseInsensitivity", "Z", "init", "LJavaUtilCollection;", "(Ljava/util/Collection<Lcom/fasterxml/jackson/databind/deser/SettableBeanProperty;>;)V", "findSize", "I", "construct", "LJavaUtilCollection;ZLJavaUtilMap;", "(Ljava/util/Collection<Lcom/fasterxml/jackson/databind/deser/SettableBeanProperty;>;ZLjava/util/Map<Ljava/lang/String;Ljava/util/List<Lcom/fasterxml/jackson/databind/PropertyName;>;>;)Lcom/fasterxml/jackson/databind/deser/impl/BeanPropertyMap;", "LJavaUtilCollection;Z", "(Ljava/util/Collection<Lcom/fasterxml/jackson/databind/deser/SettableBeanProperty;>;Z)Lcom/fasterxml/jackson/databind/deser/impl/BeanPropertyMap;", (void *)&ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__Annotations$1, "withProperty", "LComFasterxmlJacksonDatabindDeserSettableBeanProperty;", "renameAll", "LComFasterxmlJacksonDatabindUtilNameTransformer;", "withoutProperties", "(Ljava/util/Collection<Ljava/lang/String;>;)Lcom/fasterxml/jackson/databind/deser/impl/BeanPropertyMap;", "replace", "remove", "()Ljava/util/Iterator<Lcom/fasterxml/jackson/databind/deser/SettableBeanProperty;>;", "()Ljava/util/List<Lcom/fasterxml/jackson/databind/deser/SettableBeanProperty;>;", "getPropertyName", "find", "LNSString;", "_find2", "LNSString;ILNSObject;", "_findWithAlias", "_find2ViaAlias", "findDeserializeAndSet", "LComFasterxmlJacksonCoreJsonParser;LComFasterxmlJacksonDatabindDeserializationContext;LNSObject;LNSString;", "LJavaIoIOException;", "toString", "_rename", "LComFasterxmlJacksonDatabindDeserSettableBeanProperty;LComFasterxmlJacksonDatabindUtilNameTransformer;", "wrapAndThrow", "LJavaLangThrowable;LNSObject;LNSString;LComFasterxmlJacksonDatabindDeserializationContext;", "_findIndexInHash", "_findFromOrdered", "_hashCode", "_buildAliasMapping", "LJavaUtilMap;", "(Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Lcom/fasterxml/jackson/databind/PropertyName;>;>;)Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;", "Ljava/util/Map<Ljava/lang/String;Ljava/util/List<Lcom/fasterxml/jackson/databind/PropertyName;>;>;", "Ljava/util/Map<Ljava/lang/String;Ljava/lang/String;>;", "Ljava/lang/Object;Ljava/lang/Iterable<Lcom/fasterxml/jackson/databind/deser/SettableBeanProperty;>;Ljava/io/Serializable;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap = { "BeanPropertyMap", "com.fasterxml.jackson.databind.deser.impl", ptrTable, methods, fields, 7, 0x1, 34, 9, -1, -1, -1, 52, -1 };
  return &_ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap;
}

@end

void ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_initWithBoolean_withJavaUtilCollection_withJavaUtilMap_(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *self, jboolean caseInsensitive, id<JavaUtilCollection> props, id<JavaUtilMap> aliasDefs) {
  NSObject_init(self);
  self->_caseInsensitive_ = caseInsensitive;
  JreStrongAssign(&self->_propsInOrder_, [((id<JavaUtilCollection>) nil_chk(props)) toArrayWithNSObjectArray:[IOSObjectArray arrayWithLength:[props size] type:ComFasterxmlJacksonDatabindDeserSettableBeanProperty_class_()]]);
  JreStrongAssign(&self->_aliasDefs_, aliasDefs);
  JreStrongAssign(&self->_aliasMapping_, ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__buildAliasMappingWithJavaUtilMap_(self, aliasDefs));
  [self init__WithJavaUtilCollection:props];
}

ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *new_ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_initWithBoolean_withJavaUtilCollection_withJavaUtilMap_(jboolean caseInsensitive, id<JavaUtilCollection> props, id<JavaUtilMap> aliasDefs) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap, initWithBoolean_withJavaUtilCollection_withJavaUtilMap_, caseInsensitive, props, aliasDefs)
}

ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *create_ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_initWithBoolean_withJavaUtilCollection_withJavaUtilMap_(jboolean caseInsensitive, id<JavaUtilCollection> props, id<JavaUtilMap> aliasDefs) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap, initWithBoolean_withJavaUtilCollection_withJavaUtilMap_, caseInsensitive, props, aliasDefs)
}

void ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_initWithBoolean_withJavaUtilCollection_(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *self, jboolean caseInsensitive, id<JavaUtilCollection> props) {
  ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_initWithBoolean_withJavaUtilCollection_withJavaUtilMap_(self, caseInsensitive, props, JavaUtilCollections_emptyMap());
}

ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *new_ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_initWithBoolean_withJavaUtilCollection_(jboolean caseInsensitive, id<JavaUtilCollection> props) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap, initWithBoolean_withJavaUtilCollection_, caseInsensitive, props)
}

ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *create_ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_initWithBoolean_withJavaUtilCollection_(jboolean caseInsensitive, id<JavaUtilCollection> props) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap, initWithBoolean_withJavaUtilCollection_, caseInsensitive, props)
}

void ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_initWithComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_withBoolean_(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *self, ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *base, jboolean caseInsensitive) {
  NSObject_init(self);
  self->_caseInsensitive_ = caseInsensitive;
  JreStrongAssign(&self->_aliasDefs_, ((ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *) nil_chk(base))->_aliasDefs_);
  JreStrongAssign(&self->_aliasMapping_, base->_aliasMapping_);
  JreStrongAssign(&self->_propsInOrder_, JavaUtilArrays_copyOfWithNSObjectArray_withInt_(base->_propsInOrder_, ((IOSObjectArray *) nil_chk(base->_propsInOrder_))->size_));
  [self init__WithJavaUtilCollection:JavaUtilArrays_asListWithNSObjectArray_(self->_propsInOrder_)];
}

ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *new_ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_initWithComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_withBoolean_(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *base, jboolean caseInsensitive) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap, initWithComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_withBoolean_, base, caseInsensitive)
}

ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *create_ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_initWithComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_withBoolean_(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *base, jboolean caseInsensitive) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap, initWithComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_withBoolean_, base, caseInsensitive)
}

jint ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_findSizeWithInt_(jint size) {
  ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_initialize();
  if (size <= 5) {
    return 8;
  }
  if (size <= 12) {
    return 16;
  }
  jint needed = size + (JreRShift32(size, 2));
  jint result = 32;
  while (result < needed) {
    result += result;
  }
  return result;
}

ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_constructWithJavaUtilCollection_withBoolean_withJavaUtilMap_(id<JavaUtilCollection> props, jboolean caseInsensitive, id<JavaUtilMap> aliasMapping) {
  ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_initialize();
  return create_ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_initWithBoolean_withJavaUtilCollection_withJavaUtilMap_(caseInsensitive, props, aliasMapping);
}

ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_constructWithJavaUtilCollection_withBoolean_(id<JavaUtilCollection> props, jboolean caseInsensitive) {
  ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_initialize();
  return ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_constructWithJavaUtilCollection_withBoolean_withJavaUtilMap_(props, caseInsensitive, JavaUtilCollections_emptyMap());
}

id<JavaUtilList> ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__properties(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *self) {
  JavaUtilArrayList *p = create_JavaUtilArrayList_initWithInt_(self->_size_);
  for (jint i = 1, end = ((IOSObjectArray *) nil_chk(self->_hashArea_))->size_; i < end; i += 2) {
    ComFasterxmlJacksonDatabindDeserSettableBeanProperty *prop = (ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) cast_chk(IOSObjectArray_Get(nil_chk(self->_hashArea_), i), [ComFasterxmlJacksonDatabindDeserSettableBeanProperty class]);
    if (prop != nil) {
      [p addWithId:prop];
    }
  }
  return p;
}

NSString *ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap_getPropertyNameWithComFasterxmlJacksonDatabindDeserSettableBeanProperty_(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *self, ComFasterxmlJacksonDatabindDeserSettableBeanProperty *prop) {
  return self->_caseInsensitive_ ? [((NSString *) nil_chk([((ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) nil_chk(prop)) getName])) lowercaseString] : [((ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) nil_chk(prop)) getName];
}

ComFasterxmlJacksonDatabindDeserSettableBeanProperty *ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__find2WithNSString_withInt_withId_(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *self, NSString *key, jint slot, id match) {
  if (match == nil) {
    return ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__findWithAliasWithNSString_(self, [((id<JavaUtilMap>) nil_chk(self->_aliasMapping_)) getWithId:key]);
  }
  jint hashSize = self->_hashMask_ + 1;
  jint ix = JreLShift32(hashSize + (JreRShift32(slot, 1)), 1);
  match = IOSObjectArray_Get(nil_chk(self->_hashArea_), ix);
  if ([((NSString *) nil_chk(key)) isEqual:match]) {
    return (ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) cast_chk(IOSObjectArray_Get(nil_chk(self->_hashArea_), ix + 1), [ComFasterxmlJacksonDatabindDeserSettableBeanProperty class]);
  }
  if (match != nil) {
    jint i = JreLShift32((hashSize + (JreRShift32(hashSize, 1))), 1);
    for (jint end = i + self->_spillCount_; i < end; i += 2) {
      match = IOSObjectArray_Get(nil_chk(self->_hashArea_), i);
      if ((match == key) || [key isEqual:match]) {
        return (ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) cast_chk(IOSObjectArray_Get(nil_chk(self->_hashArea_), i + 1), [ComFasterxmlJacksonDatabindDeserSettableBeanProperty class]);
      }
    }
  }
  return ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__findWithAliasWithNSString_(self, [((id<JavaUtilMap>) nil_chk(self->_aliasMapping_)) getWithId:key]);
}

ComFasterxmlJacksonDatabindDeserSettableBeanProperty *ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__findWithAliasWithNSString_(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *self, NSString *keyFromAlias) {
  if (keyFromAlias == nil) {
    return nil;
  }
  jint slot = ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__hashCodeWithNSString_(self, keyFromAlias);
  jint ix = (JreLShift32(slot, 1));
  id match = IOSObjectArray_Get(nil_chk(self->_hashArea_), ix);
  if ([keyFromAlias isEqual:match]) {
    return (ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) cast_chk(IOSObjectArray_Get(nil_chk(self->_hashArea_), ix + 1), [ComFasterxmlJacksonDatabindDeserSettableBeanProperty class]);
  }
  if (match == nil) {
    return nil;
  }
  return ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__find2ViaAliasWithNSString_withInt_withId_(self, keyFromAlias, slot, match);
}

ComFasterxmlJacksonDatabindDeserSettableBeanProperty *ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__find2ViaAliasWithNSString_withInt_withId_(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *self, NSString *key, jint slot, id match) {
  jint hashSize = self->_hashMask_ + 1;
  jint ix = JreLShift32(hashSize + (JreRShift32(slot, 1)), 1);
  match = IOSObjectArray_Get(nil_chk(self->_hashArea_), ix);
  if ([((NSString *) nil_chk(key)) isEqual:match]) {
    return (ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) cast_chk(IOSObjectArray_Get(nil_chk(self->_hashArea_), ix + 1), [ComFasterxmlJacksonDatabindDeserSettableBeanProperty class]);
  }
  if (match != nil) {
    jint i = JreLShift32((hashSize + (JreRShift32(hashSize, 1))), 1);
    for (jint end = i + self->_spillCount_; i < end; i += 2) {
      match = IOSObjectArray_Get(nil_chk(self->_hashArea_), i);
      if ((match == key) || [key isEqual:match]) {
        return (ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) cast_chk(IOSObjectArray_Get(nil_chk(self->_hashArea_), i + 1), [ComFasterxmlJacksonDatabindDeserSettableBeanProperty class]);
      }
    }
  }
  return nil;
}

jint ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__findIndexInHashWithNSString_(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *self, NSString *key) {
  jint slot = ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__hashCodeWithNSString_(self, key);
  jint ix = (JreLShift32(slot, 1));
  if ([((NSString *) nil_chk(key)) isEqual:IOSObjectArray_Get(nil_chk(self->_hashArea_), ix)]) {
    return ix + 1;
  }
  jint hashSize = self->_hashMask_ + 1;
  ix = JreLShift32(hashSize + (JreRShift32(slot, 1)), 1);
  if ([key isEqual:IOSObjectArray_Get(nil_chk(self->_hashArea_), ix)]) {
    return ix + 1;
  }
  jint i = JreLShift32((hashSize + (JreRShift32(hashSize, 1))), 1);
  for (jint end = i + self->_spillCount_; i < end; i += 2) {
    if ([key isEqual:IOSObjectArray_Get(nil_chk(self->_hashArea_), i)]) {
      return i + 1;
    }
  }
  return -1;
}

jint ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__findFromOrderedWithComFasterxmlJacksonDatabindDeserSettableBeanProperty_(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *self, ComFasterxmlJacksonDatabindDeserSettableBeanProperty *prop) {
  for (jint i = 0, end = ((IOSObjectArray *) nil_chk(self->_propsInOrder_))->size_; i < end; ++i) {
    if (IOSObjectArray_Get(self->_propsInOrder_, i) == prop) {
      return i;
    }
  }
  @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$$", @"Illegal state: property '", [((ComFasterxmlJacksonDatabindDeserSettableBeanProperty *) nil_chk(prop)) getName], @"' missing from _propsInOrder"));
}

jint ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__hashCodeWithNSString_(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *self, NSString *key) {
  return ((jint) [((NSString *) nil_chk(key)) hash]) & self->_hashMask_;
}

id<JavaUtilMap> ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__buildAliasMappingWithJavaUtilMap_(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap *self, id<JavaUtilMap> defs) {
  if ((defs == nil) || [((id<JavaUtilMap>) nil_chk(defs)) isEmpty]) {
    return JavaUtilCollections_emptyMap();
  }
  id<JavaUtilMap> aliases = create_JavaUtilHashMap_init();
  for (id<JavaUtilMap_Entry> __strong entry_ in nil_chk([((id<JavaUtilMap>) nil_chk(defs)) entrySet])) {
    NSString *key = [((id<JavaUtilMap_Entry>) nil_chk(entry_)) getKey];
    if (self->_caseInsensitive_) {
      key = [((NSString *) nil_chk(key)) lowercaseString];
    }
    for (ComFasterxmlJacksonDatabindPropertyName * __strong pn in nil_chk([entry_ getValue])) {
      NSString *mapped = [((ComFasterxmlJacksonDatabindPropertyName *) nil_chk(pn)) getSimpleName];
      if (self->_caseInsensitive_) {
        mapped = [((NSString *) nil_chk(mapped)) lowercaseString];
      }
      [aliases putWithId:mapped withId:key];
    }
  }
  return aliases;
}

IOSObjectArray *ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

IOSObjectArray *ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap__Annotations$1() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindDeserImplBeanPropertyMap)
