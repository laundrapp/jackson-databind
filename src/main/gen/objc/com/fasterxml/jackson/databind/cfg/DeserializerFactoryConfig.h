//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/cfg/DeserializerFactoryConfig.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig || defined(INCLUDE_ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig))
#define ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig_

#define RESTRICT_JavaIoSerializable 1
#define INCLUDE_JavaIoSerializable 1
#include "java/io/Serializable.h"

@class ComFasterxmlJacksonDatabindAbstractTypeResolver;
@class ComFasterxmlJacksonDatabindDeserBeanDeserializerModifier;
@class IOSObjectArray;
@protocol ComFasterxmlJacksonDatabindDeserDeserializers;
@protocol ComFasterxmlJacksonDatabindDeserKeyDeserializers;
@protocol ComFasterxmlJacksonDatabindDeserValueInstantiators;
@protocol JavaLangIterable;

/*!
 @brief Configuration settings container class for <code>DeserializerFactory</code>.
 */
@interface ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig : NSObject < JavaIoSerializable > {
 @public
  /*!
   @brief List of providers for additional deserializers, checked before considering default
  basic or bean deserializers.
   */
  IOSObjectArray *_additionalDeserializers_;
  /*!
   @brief List of providers for additional key deserializers, checked before considering
  standard key deserializers.
   */
  IOSObjectArray *_additionalKeyDeserializers_;
  /*!
   @brief List of modifiers that can change the way <code>BeanDeserializer</code> instances
  are configured and constructed.
   */
  IOSObjectArray *_modifiers_;
  /*!
   @brief List of objects that may be able to resolve abstract types to
  concrete types.Used by functionality like "mr Bean" to materialize
  types as needed.
   */
  IOSObjectArray *_abstractTypeResolvers_;
  /*!
   @brief List of objects that know how to create instances of POJO types;
  possibly using custom construction (non-annoted constructors; factory
  methods external to value type etc).
   Used to support objects that are created using non-standard methods;
  or to support post-constructor functionality.
   */
  IOSObjectArray *_valueInstantiators_;
}

#pragma mark Public

/*!
 @brief Constructor for creating basic configuration with no additional
  handlers.
 */
- (instancetype __nonnull)init;

- (id<JavaLangIterable>)abstractTypeResolvers;

- (id<JavaLangIterable>)deserializerModifiers;

- (id<JavaLangIterable>)deserializers;

- (jboolean)hasAbstractTypeResolvers;

- (jboolean)hasDeserializerModifiers;

- (jboolean)hasDeserializers;

- (jboolean)hasKeyDeserializers;

- (jboolean)hasValueInstantiators;

- (id<JavaLangIterable>)keyDeserializers;

- (id<JavaLangIterable>)valueInstantiators;

/*!
 @brief Fluent/factory method used to construct a configuration object that
  has same configuration as this instance plus one additional
  abstract type resolver.
 Added resolver has the highest priority (that is, it
  gets called before any already registered resolver).
 */
- (ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig *)withAbstractTypeResolverWithComFasterxmlJacksonDatabindAbstractTypeResolver:(ComFasterxmlJacksonDatabindAbstractTypeResolver *)resolver;

/*!
 @brief Fluent/factory method used to construct a configuration object that
  has same deserializer providers as this instance, plus one specified
  as argument.Additional provider will be added before existing ones,
  meaning it has priority over existing definitions.
 */
- (ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig *)withAdditionalDeserializersWithComFasterxmlJacksonDatabindDeserDeserializers:(id<ComFasterxmlJacksonDatabindDeserDeserializers>)additional;

/*!
 @brief Fluent/factory method used to construct a configuration object that
  has same key deserializer providers as this instance, plus one specified
  as argument.Additional provider will be added before existing ones,
  meaning it has priority over existing definitions.
 */
- (ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig *)withAdditionalKeyDeserializersWithComFasterxmlJacksonDatabindDeserKeyDeserializers:(id<ComFasterxmlJacksonDatabindDeserKeyDeserializers>)additional;

/*!
 @brief Fluent/factory method used to construct a configuration object that
  has same configuration as this instance plus one additional
  deserialiazer modifier.Added modifier has the highest priority (that is, it
  gets called before any already registered modifier).
 */
- (ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig *)withDeserializerModifierWithComFasterxmlJacksonDatabindDeserBeanDeserializerModifier:(ComFasterxmlJacksonDatabindDeserBeanDeserializerModifier *)modifier;

/*!
 @brief Fluent/factory method used to construct a configuration object that
  has same configuration as this instance plus specified additional
  value instantiator provider object.
 Added instantiator provider has the highest priority (that is, it
  gets called before any already registered resolver).
 @param instantiators Object that can provide <code>com.fasterxml.jackson.databind.deser.ValueInstantiator</code> s for
      constructing POJO values during deserialization
 */
- (ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig *)withValueInstantiatorsWithComFasterxmlJacksonDatabindDeserValueInstantiators:(id<ComFasterxmlJacksonDatabindDeserValueInstantiators>)instantiators;

#pragma mark Protected

/*!
 @brief Copy-constructor that will create an instance that contains defined
  set of additional deserializer providers.
 */
- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindDeserDeserializersArray:(IOSObjectArray *)allAdditionalDeserializers
                           withComFasterxmlJacksonDatabindDeserKeyDeserializersArray:(IOSObjectArray *)allAdditionalKeyDeserializers
                   withComFasterxmlJacksonDatabindDeserBeanDeserializerModifierArray:(IOSObjectArray *)modifiers
                            withComFasterxmlJacksonDatabindAbstractTypeResolverArray:(IOSObjectArray *)atr
                         withComFasterxmlJacksonDatabindDeserValueInstantiatorsArray:(IOSObjectArray *)vi;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig, _additionalDeserializers_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig, _additionalKeyDeserializers_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig, _modifiers_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig, _abstractTypeResolvers_, IOSObjectArray *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig, _valueInstantiators_, IOSObjectArray *)

inline IOSObjectArray *ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig_get_NO_DESERIALIZERS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig_NO_DESERIALIZERS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig, NO_DESERIALIZERS, IOSObjectArray *)

inline IOSObjectArray *ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig_get_NO_MODIFIERS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig_NO_MODIFIERS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig, NO_MODIFIERS, IOSObjectArray *)

inline IOSObjectArray *ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig_get_NO_ABSTRACT_TYPE_RESOLVERS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig_NO_ABSTRACT_TYPE_RESOLVERS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig, NO_ABSTRACT_TYPE_RESOLVERS, IOSObjectArray *)

inline IOSObjectArray *ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig_get_NO_VALUE_INSTANTIATORS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig_NO_VALUE_INSTANTIATORS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig, NO_VALUE_INSTANTIATORS, IOSObjectArray *)

/*!
 @brief By default we plug default key deserializers using as "just another" set of
  of key deserializers.
 @since 2.2
 */
inline IOSObjectArray *ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig_get_DEFAULT_KEY_DESERIALIZERS(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT IOSObjectArray *ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig_DEFAULT_KEY_DESERIALIZERS;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig, DEFAULT_KEY_DESERIALIZERS, IOSObjectArray *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig_init(ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig *new_ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig *create_ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig_init(void);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig_initWithComFasterxmlJacksonDatabindDeserDeserializersArray_withComFasterxmlJacksonDatabindDeserKeyDeserializersArray_withComFasterxmlJacksonDatabindDeserBeanDeserializerModifierArray_withComFasterxmlJacksonDatabindAbstractTypeResolverArray_withComFasterxmlJacksonDatabindDeserValueInstantiatorsArray_(ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig *self, IOSObjectArray *allAdditionalDeserializers, IOSObjectArray *allAdditionalKeyDeserializers, IOSObjectArray *modifiers, IOSObjectArray *atr, IOSObjectArray *vi);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig *new_ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig_initWithComFasterxmlJacksonDatabindDeserDeserializersArray_withComFasterxmlJacksonDatabindDeserKeyDeserializersArray_withComFasterxmlJacksonDatabindDeserBeanDeserializerModifierArray_withComFasterxmlJacksonDatabindAbstractTypeResolverArray_withComFasterxmlJacksonDatabindDeserValueInstantiatorsArray_(IOSObjectArray *allAdditionalDeserializers, IOSObjectArray *allAdditionalKeyDeserializers, IOSObjectArray *modifiers, IOSObjectArray *atr, IOSObjectArray *vi) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig *create_ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig_initWithComFasterxmlJacksonDatabindDeserDeserializersArray_withComFasterxmlJacksonDatabindDeserKeyDeserializersArray_withComFasterxmlJacksonDatabindDeserBeanDeserializerModifierArray_withComFasterxmlJacksonDatabindAbstractTypeResolverArray_withComFasterxmlJacksonDatabindDeserValueInstantiatorsArray_(IOSObjectArray *allAdditionalDeserializers, IOSObjectArray *allAdditionalKeyDeserializers, IOSObjectArray *modifiers, IOSObjectArray *atr, IOSObjectArray *vi);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindCfgDeserializerFactoryConfig")
