//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ext/CoreXMLSerializers.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindExtCoreXMLSerializers")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindExtCoreXMLSerializers
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindExtCoreXMLSerializers 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindExtCoreXMLSerializers 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindExtCoreXMLSerializers

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindExtCoreXMLSerializers_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindExtCoreXMLSerializers || defined(INCLUDE_ComFasterxmlJacksonDatabindExtCoreXMLSerializers))
#define ComFasterxmlJacksonDatabindExtCoreXMLSerializers_

#define RESTRICT_ComFasterxmlJacksonDatabindSerSerializers 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerSerializers_Base 1
#include "com/fasterxml/jackson/databind/ser/Serializers.h"

@class ComFasterxmlJacksonDatabindBeanDescription;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsonSerializer;
@class ComFasterxmlJacksonDatabindSerializationConfig;

/*!
 @brief Provider for serializers of XML types that are part of full JDK 1.5, but
  that some alleged 1.5 platforms are missing (Android, GAE).
 And for this reason these are added using more dynamic mechanism.
 <p>
  Note: since many of classes defined are abstract, caller must take
  care not to just use straight equivalency check but rather consider
  subclassing as well.
 */
@interface ComFasterxmlJacksonDatabindExtCoreXMLSerializers : ComFasterxmlJacksonDatabindSerSerializers_Base

#pragma mark Public

- (instancetype __nonnull)init;

- (ComFasterxmlJacksonDatabindJsonSerializer *)findSerializerWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                        withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                                 withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindExtCoreXMLSerializers)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindExtCoreXMLSerializers_init(ComFasterxmlJacksonDatabindExtCoreXMLSerializers *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindExtCoreXMLSerializers *new_ComFasterxmlJacksonDatabindExtCoreXMLSerializers_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindExtCoreXMLSerializers *create_ComFasterxmlJacksonDatabindExtCoreXMLSerializers_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindExtCoreXMLSerializers)

#endif

#if !defined (ComFasterxmlJacksonDatabindExtCoreXMLSerializers_XMLGregorianCalendarSerializer_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindExtCoreXMLSerializers || defined(INCLUDE_ComFasterxmlJacksonDatabindExtCoreXMLSerializers_XMLGregorianCalendarSerializer))
#define ComFasterxmlJacksonDatabindExtCoreXMLSerializers_XMLGregorianCalendarSerializer_

#define RESTRICT_ComFasterxmlJacksonDatabindSerStdStdSerializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerStdStdSerializer 1
#include "com/fasterxml/jackson/databind/ser/std/StdSerializer.h"

#define RESTRICT_ComFasterxmlJacksonDatabindSerContextualSerializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindSerContextualSerializer 1
#include "com/fasterxml/jackson/databind/ser/ContextualSerializer.h"

@class ComFasterxmlJacksonCoreJsonGenerator;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsonSerializer;
@class ComFasterxmlJacksonDatabindJsontypeTypeSerializer;
@class ComFasterxmlJacksonDatabindSerializerProvider;
@class IOSClass;
@class JavaUtilCalendar;
@class JavaxXmlDatatypeXMLGregorianCalendar;
@protocol ComFasterxmlJacksonDatabindBeanProperty;
@protocol ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper;

@interface ComFasterxmlJacksonDatabindExtCoreXMLSerializers_XMLGregorianCalendarSerializer : ComFasterxmlJacksonDatabindSerStdStdSerializer < ComFasterxmlJacksonDatabindSerContextualSerializer > {
 @public
  ComFasterxmlJacksonDatabindJsonSerializer *_delegate_;
}

#pragma mark Public

- (instancetype __nonnull)init;

- (void)acceptJsonFormatVisitorWithComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper:(id<ComFasterxmlJacksonDatabindJsonFormatVisitorsJsonFormatVisitorWrapper>)visitor
                                                                 withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)typeHint;

- (ComFasterxmlJacksonDatabindJsonSerializer *)createContextualWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                                     withComFasterxmlJacksonDatabindBeanProperty:(id<ComFasterxmlJacksonDatabindBeanProperty>)property;

- (ComFasterxmlJacksonDatabindJsonSerializer *)getDelegatee;

- (jboolean)isEmptyWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
                                                              withId:(JavaxXmlDatatypeXMLGregorianCalendar *)value;

- (void)serializeWithId:(JavaxXmlDatatypeXMLGregorianCalendar *)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider;

- (void)serializeWithTypeWithId:(JavaxXmlDatatypeXMLGregorianCalendar *)value
withComFasterxmlJacksonCoreJsonGenerator:(ComFasterxmlJacksonCoreJsonGenerator *)gen
withComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)provider
withComFasterxmlJacksonDatabindJsontypeTypeSerializer:(ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)typeSer;

#pragma mark Protected

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJsonSerializer:(ComFasterxmlJacksonDatabindJsonSerializer *)del;

- (JavaUtilCalendar *)_convertWithJavaxXmlDatatypeXMLGregorianCalendar:(JavaxXmlDatatypeXMLGregorianCalendar *)input;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindSerStdStdSerializer:(ComFasterxmlJacksonDatabindSerStdStdSerializer *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0
                               withBoolean:(jboolean)arg1 NS_UNAVAILABLE;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonDatabindExtCoreXMLSerializers_XMLGregorianCalendarSerializer)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindExtCoreXMLSerializers_XMLGregorianCalendarSerializer, _delegate_, ComFasterxmlJacksonDatabindJsonSerializer *)

inline ComFasterxmlJacksonDatabindExtCoreXMLSerializers_XMLGregorianCalendarSerializer *ComFasterxmlJacksonDatabindExtCoreXMLSerializers_XMLGregorianCalendarSerializer_get_instance(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT ComFasterxmlJacksonDatabindExtCoreXMLSerializers_XMLGregorianCalendarSerializer *ComFasterxmlJacksonDatabindExtCoreXMLSerializers_XMLGregorianCalendarSerializer_instance;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindExtCoreXMLSerializers_XMLGregorianCalendarSerializer, instance, ComFasterxmlJacksonDatabindExtCoreXMLSerializers_XMLGregorianCalendarSerializer *)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindExtCoreXMLSerializers_XMLGregorianCalendarSerializer_init(ComFasterxmlJacksonDatabindExtCoreXMLSerializers_XMLGregorianCalendarSerializer *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindExtCoreXMLSerializers_XMLGregorianCalendarSerializer *new_ComFasterxmlJacksonDatabindExtCoreXMLSerializers_XMLGregorianCalendarSerializer_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindExtCoreXMLSerializers_XMLGregorianCalendarSerializer *create_ComFasterxmlJacksonDatabindExtCoreXMLSerializers_XMLGregorianCalendarSerializer_init(void);

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindExtCoreXMLSerializers_XMLGregorianCalendarSerializer_initWithComFasterxmlJacksonDatabindJsonSerializer_(ComFasterxmlJacksonDatabindExtCoreXMLSerializers_XMLGregorianCalendarSerializer *self, ComFasterxmlJacksonDatabindJsonSerializer *del);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindExtCoreXMLSerializers_XMLGregorianCalendarSerializer *new_ComFasterxmlJacksonDatabindExtCoreXMLSerializers_XMLGregorianCalendarSerializer_initWithComFasterxmlJacksonDatabindJsonSerializer_(ComFasterxmlJacksonDatabindJsonSerializer *del) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindExtCoreXMLSerializers_XMLGregorianCalendarSerializer *create_ComFasterxmlJacksonDatabindExtCoreXMLSerializers_XMLGregorianCalendarSerializer_initWithComFasterxmlJacksonDatabindJsonSerializer_(ComFasterxmlJacksonDatabindJsonSerializer *del);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindExtCoreXMLSerializers_XMLGregorianCalendarSerializer)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindExtCoreXMLSerializers")
