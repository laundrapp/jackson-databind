//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ser/BeanSerializerFactory.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/annotation/JsonIgnoreProperties.h"
#include "com/fasterxml/jackson/annotation/JsonTypeInfo.h"
#include "com/fasterxml/jackson/annotation/ObjectIdGenerator.h"
#include "com/fasterxml/jackson/annotation/ObjectIdGenerators.h"
#include "com/fasterxml/jackson/databind/AnnotationIntrospector.h"
#include "com/fasterxml/jackson/databind/BeanDescription.h"
#include "com/fasterxml/jackson/databind/BeanProperty.h"
#include "com/fasterxml/jackson/databind/JavaType.h"
#include "com/fasterxml/jackson/databind/JsonMappingException.h"
#include "com/fasterxml/jackson/databind/JsonSerializer.h"
#include "com/fasterxml/jackson/databind/MapperFeature.h"
#include "com/fasterxml/jackson/databind/PropertyMetadata.h"
#include "com/fasterxml/jackson/databind/PropertyName.h"
#include "com/fasterxml/jackson/databind/SerializationConfig.h"
#include "com/fasterxml/jackson/databind/SerializerProvider.h"
#include "com/fasterxml/jackson/databind/cfg/ConfigOverride.h"
#include "com/fasterxml/jackson/databind/cfg/SerializerFactoryConfig.h"
#include "com/fasterxml/jackson/databind/introspect/AnnotatedClass.h"
#include "com/fasterxml/jackson/databind/introspect/AnnotatedField.h"
#include "com/fasterxml/jackson/databind/introspect/AnnotatedMember.h"
#include "com/fasterxml/jackson/databind/introspect/AnnotatedMethod.h"
#include "com/fasterxml/jackson/databind/introspect/BeanPropertyDefinition.h"
#include "com/fasterxml/jackson/databind/introspect/ObjectIdInfo.h"
#include "com/fasterxml/jackson/databind/jsontype/SubtypeResolver.h"
#include "com/fasterxml/jackson/databind/jsontype/TypeResolverBuilder.h"
#include "com/fasterxml/jackson/databind/jsontype/TypeSerializer.h"
#include "com/fasterxml/jackson/databind/ser/AnyGetterWriter.h"
#include "com/fasterxml/jackson/databind/ser/BasicSerializerFactory.h"
#include "com/fasterxml/jackson/databind/ser/BeanPropertyWriter.h"
#include "com/fasterxml/jackson/databind/ser/BeanSerializer.h"
#include "com/fasterxml/jackson/databind/ser/BeanSerializerBuilder.h"
#include "com/fasterxml/jackson/databind/ser/BeanSerializerFactory.h"
#include "com/fasterxml/jackson/databind/ser/BeanSerializerModifier.h"
#include "com/fasterxml/jackson/databind/ser/PropertyBuilder.h"
#include "com/fasterxml/jackson/databind/ser/ResolvableSerializer.h"
#include "com/fasterxml/jackson/databind/ser/SerializerFactory.h"
#include "com/fasterxml/jackson/databind/ser/Serializers.h"
#include "com/fasterxml/jackson/databind/ser/impl/FilteredBeanPropertyWriter.h"
#include "com/fasterxml/jackson/databind/ser/impl/ObjectIdWriter.h"
#include "com/fasterxml/jackson/databind/ser/impl/PropertyBasedObjectIdGenerator.h"
#include "com/fasterxml/jackson/databind/ser/std/MapSerializer.h"
#include "com/fasterxml/jackson/databind/ser/std/StdDelegatingSerializer.h"
#include "com/fasterxml/jackson/databind/type/ReferenceType.h"
#include "com/fasterxml/jackson/databind/type/TypeFactory.h"
#include "com/fasterxml/jackson/databind/util/ClassUtil.h"
#include "com/fasterxml/jackson/databind/util/Converter.h"
#include "java/lang/Boolean.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/IllegalStateException.h"
#include "java/lang/Iterable.h"
#include "java/lang/RuntimeException.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/Iterator.h"
#include "java/util/List.h"
#include "java/util/Set.h"

inline jlong ComFasterxmlJacksonDatabindSerBeanSerializerFactory_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindSerBeanSerializerFactory_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindSerBeanSerializerFactory, serialVersionUID, jlong)

J2OBJC_INITIALIZED_DEFN(ComFasterxmlJacksonDatabindSerBeanSerializerFactory)

ComFasterxmlJacksonDatabindSerBeanSerializerFactory *ComFasterxmlJacksonDatabindSerBeanSerializerFactory_instance;

@implementation ComFasterxmlJacksonDatabindSerBeanSerializerFactory

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindCfgSerializerFactoryConfig:(ComFasterxmlJacksonDatabindCfgSerializerFactoryConfig *)config {
  ComFasterxmlJacksonDatabindSerBeanSerializerFactory_initWithComFasterxmlJacksonDatabindCfgSerializerFactoryConfig_(self, config);
  return self;
}

- (ComFasterxmlJacksonDatabindSerSerializerFactory *)withConfigWithComFasterxmlJacksonDatabindCfgSerializerFactoryConfig:(ComFasterxmlJacksonDatabindCfgSerializerFactoryConfig *)config {
  if (_factoryConfig_ == config) {
    return self;
  }
  if ([self java_getClass] != ComFasterxmlJacksonDatabindSerBeanSerializerFactory_class_()) {
    @throw create_JavaLangIllegalStateException_initWithNSString_(JreStrcat("$$$", @"Subtype of BeanSerializerFactory (", [[self java_getClass] getName], @") has not properly overridden method 'withAdditionalSerializers': cannot instantiate subtype with additional serializer definitions"));
  }
  return create_ComFasterxmlJacksonDatabindSerBeanSerializerFactory_initWithComFasterxmlJacksonDatabindCfgSerializerFactoryConfig_(config);
}

- (id<JavaLangIterable>)customSerializers {
  return [((ComFasterxmlJacksonDatabindCfgSerializerFactoryConfig *) nil_chk(_factoryConfig_)) serializers];
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)createSerializerWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                                         withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)origType {
  ComFasterxmlJacksonDatabindSerializationConfig *config = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(prov)) getConfig];
  ComFasterxmlJacksonDatabindBeanDescription *beanDesc = [((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(config)) introspectWithComFasterxmlJacksonDatabindJavaType:origType];
  ComFasterxmlJacksonDatabindJsonSerializer *ser = [self findSerializerFromAnnotationWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindIntrospectAnnotated:[((ComFasterxmlJacksonDatabindBeanDescription *) nil_chk(beanDesc)) getClassInfo]];
  if (ser != nil) {
    return ser;
  }
  jboolean staticTyping;
  ComFasterxmlJacksonDatabindAnnotationIntrospector *intr = [config getAnnotationIntrospector];
  ComFasterxmlJacksonDatabindJavaType *type;
  if (intr == nil) {
    type = origType;
  }
  else {
    @try {
      type = [intr refineSerializationTypeWithComFasterxmlJacksonDatabindCfgMapperConfig:config withComFasterxmlJacksonDatabindIntrospectAnnotated:[beanDesc getClassInfo] withComFasterxmlJacksonDatabindJavaType:origType];
    }
    @catch (ComFasterxmlJacksonDatabindJsonMappingException *e) {
      return [prov reportBadTypeDefinitionWithComFasterxmlJacksonDatabindBeanDescription:beanDesc withNSString:[e getMessage] withNSObjectArray:[IOSObjectArray arrayWithLength:0 type:NSObject_class_()]];
    }
  }
  if (type == origType) {
    staticTyping = false;
  }
  else {
    staticTyping = true;
    if (![((ComFasterxmlJacksonDatabindJavaType *) nil_chk(type)) hasRawClassWithIOSClass:[((ComFasterxmlJacksonDatabindJavaType *) nil_chk(origType)) getRawClass]]) {
      beanDesc = [config introspectWithComFasterxmlJacksonDatabindJavaType:type];
    }
  }
  id<ComFasterxmlJacksonDatabindUtilConverter> conv = [((ComFasterxmlJacksonDatabindBeanDescription *) nil_chk(beanDesc)) findSerializationConverter];
  if (conv == nil) {
    return [self _createSerializer2WithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindJavaType:type withComFasterxmlJacksonDatabindBeanDescription:beanDesc withBoolean:staticTyping];
  }
  ComFasterxmlJacksonDatabindJavaType *delegateType = [conv getOutputTypeWithComFasterxmlJacksonDatabindTypeTypeFactory:[prov getTypeFactory]];
  if (![((ComFasterxmlJacksonDatabindJavaType *) nil_chk(delegateType)) hasRawClassWithIOSClass:[((ComFasterxmlJacksonDatabindJavaType *) nil_chk(type)) getRawClass]]) {
    beanDesc = [config introspectWithComFasterxmlJacksonDatabindJavaType:delegateType];
    ser = [self findSerializerFromAnnotationWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindIntrospectAnnotated:[((ComFasterxmlJacksonDatabindBeanDescription *) nil_chk(beanDesc)) getClassInfo]];
  }
  if (ser == nil && ![delegateType isJavaLangObject]) {
    ser = [self _createSerializer2WithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindJavaType:delegateType withComFasterxmlJacksonDatabindBeanDescription:beanDesc withBoolean:true];
  }
  return create_ComFasterxmlJacksonDatabindSerStdStdDelegatingSerializer_initWithComFasterxmlJacksonDatabindUtilConverter_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindJsonSerializer_(conv, delegateType, ser);
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)_createSerializer2WithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                                           withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                                    withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                                                       withBoolean:(jboolean)staticTyping {
  ComFasterxmlJacksonDatabindJsonSerializer *ser = nil;
  ComFasterxmlJacksonDatabindSerializationConfig *config = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(prov)) getConfig];
  if ([((ComFasterxmlJacksonDatabindJavaType *) nil_chk(type)) isContainerType]) {
    if (!staticTyping) {
      staticTyping = [self usesStaticTypingWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindBeanDescription:beanDesc withComFasterxmlJacksonDatabindJsontypeTypeSerializer:nil];
    }
    ser = [self buildContainerSerializerWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindJavaType:type withComFasterxmlJacksonDatabindBeanDescription:beanDesc withBoolean:staticTyping];
    if (ser != nil) {
      return ser;
    }
  }
  else {
    if ([type isReferenceType]) {
      ser = [self findReferenceSerializerWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindTypeReferenceType:(ComFasterxmlJacksonDatabindTypeReferenceType *) cast_chk(type, [ComFasterxmlJacksonDatabindTypeReferenceType class]) withComFasterxmlJacksonDatabindBeanDescription:beanDesc withBoolean:staticTyping];
    }
    else {
      for (id<ComFasterxmlJacksonDatabindSerSerializers> __strong serializers in nil_chk([self customSerializers])) {
        ser = [((id<ComFasterxmlJacksonDatabindSerSerializers>) nil_chk(serializers)) findSerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindJavaType:type withComFasterxmlJacksonDatabindBeanDescription:beanDesc];
        if (ser != nil) {
          break;
        }
      }
    }
    if (ser == nil) {
      ser = [self findSerializerByAnnotationsWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindJavaType:type withComFasterxmlJacksonDatabindBeanDescription:beanDesc];
    }
  }
  if (ser == nil) {
    ser = [self findSerializerByLookupWithComFasterxmlJacksonDatabindJavaType:type withComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindBeanDescription:beanDesc withBoolean:staticTyping];
    if (ser == nil) {
      ser = [self findSerializerByPrimaryTypeWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindJavaType:type withComFasterxmlJacksonDatabindBeanDescription:beanDesc withBoolean:staticTyping];
      if (ser == nil) {
        ser = [self findBeanSerializerWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindJavaType:type withComFasterxmlJacksonDatabindBeanDescription:beanDesc];
        if (ser == nil) {
          ser = [self findSerializerByAddonTypeWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindJavaType:type withComFasterxmlJacksonDatabindBeanDescription:beanDesc withBoolean:staticTyping];
          if (ser == nil) {
            ser = [prov getUnknownTypeSerializerWithIOSClass:[((ComFasterxmlJacksonDatabindBeanDescription *) nil_chk(beanDesc)) getBeanClass]];
          }
        }
      }
    }
  }
  if (ser != nil) {
    if ([((ComFasterxmlJacksonDatabindCfgSerializerFactoryConfig *) nil_chk(_factoryConfig_)) hasSerializerModifiers]) {
      for (ComFasterxmlJacksonDatabindSerBeanSerializerModifier * __strong mod in nil_chk([_factoryConfig_ serializerModifiers])) {
        ser = [((ComFasterxmlJacksonDatabindSerBeanSerializerModifier *) nil_chk(mod)) modifySerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindBeanDescription:beanDesc withComFasterxmlJacksonDatabindJsonSerializer:ser];
      }
    }
  }
  return ser;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)findBeanSerializerWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                                           withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                                    withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc {
  if (![self isPotentialBeanTypeWithIOSClass:[((ComFasterxmlJacksonDatabindJavaType *) nil_chk(type)) getRawClass]]) {
    if (![type isEnumType]) {
      return nil;
    }
  }
  return [self constructBeanSerializerWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindBeanDescription:beanDesc];
}

- (ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)findPropertyTypeSerializerWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)baseType
                                                                      withComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                withComFasterxmlJacksonDatabindIntrospectAnnotatedMember:(ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *)accessor {
  ComFasterxmlJacksonDatabindAnnotationIntrospector *ai = [((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(config)) getAnnotationIntrospector];
  id<ComFasterxmlJacksonDatabindJsontypeTypeResolverBuilder> b = [((ComFasterxmlJacksonDatabindAnnotationIntrospector *) nil_chk(ai)) findPropertyTypeResolverWithComFasterxmlJacksonDatabindCfgMapperConfig:config withComFasterxmlJacksonDatabindIntrospectAnnotatedMember:accessor withComFasterxmlJacksonDatabindJavaType:baseType];
  ComFasterxmlJacksonDatabindJsontypeTypeSerializer *typeSer;
  if (b == nil) {
    typeSer = [self createTypeSerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindJavaType:baseType];
  }
  else {
    id<JavaUtilCollection> subtypes = [((ComFasterxmlJacksonDatabindJsontypeSubtypeResolver *) nil_chk([config getSubtypeResolver])) collectAndResolveSubtypesByClassWithComFasterxmlJacksonDatabindCfgMapperConfig:config withComFasterxmlJacksonDatabindIntrospectAnnotatedMember:accessor withComFasterxmlJacksonDatabindJavaType:baseType];
    typeSer = [b buildTypeSerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindJavaType:baseType withJavaUtilCollection:subtypes];
  }
  return typeSer;
}

- (ComFasterxmlJacksonDatabindJsontypeTypeSerializer *)findPropertyContentTypeSerializerWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)containerType
                                                                             withComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                       withComFasterxmlJacksonDatabindIntrospectAnnotatedMember:(ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *)accessor {
  ComFasterxmlJacksonDatabindJavaType *contentType = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(containerType)) getContentType];
  ComFasterxmlJacksonDatabindAnnotationIntrospector *ai = [((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(config)) getAnnotationIntrospector];
  id<ComFasterxmlJacksonDatabindJsontypeTypeResolverBuilder> b = [((ComFasterxmlJacksonDatabindAnnotationIntrospector *) nil_chk(ai)) findPropertyContentTypeResolverWithComFasterxmlJacksonDatabindCfgMapperConfig:config withComFasterxmlJacksonDatabindIntrospectAnnotatedMember:accessor withComFasterxmlJacksonDatabindJavaType:containerType];
  ComFasterxmlJacksonDatabindJsontypeTypeSerializer *typeSer;
  if (b == nil) {
    typeSer = [self createTypeSerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindJavaType:contentType];
  }
  else {
    id<JavaUtilCollection> subtypes = [((ComFasterxmlJacksonDatabindJsontypeSubtypeResolver *) nil_chk([config getSubtypeResolver])) collectAndResolveSubtypesByClassWithComFasterxmlJacksonDatabindCfgMapperConfig:config withComFasterxmlJacksonDatabindIntrospectAnnotatedMember:accessor withComFasterxmlJacksonDatabindJavaType:contentType];
    typeSer = [b buildTypeSerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindJavaType:contentType withJavaUtilCollection:subtypes];
  }
  return typeSer;
}

- (ComFasterxmlJacksonDatabindJsonSerializer *)constructBeanSerializerWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                                         withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc {
  if ([((ComFasterxmlJacksonDatabindBeanDescription *) nil_chk(beanDesc)) getBeanClass] == NSObject_class_()) {
    return [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(prov)) getUnknownTypeSerializerWithIOSClass:NSObject_class_()];
  }
  ComFasterxmlJacksonDatabindSerializationConfig *config = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(prov)) getConfig];
  ComFasterxmlJacksonDatabindSerBeanSerializerBuilder *builder = [self constructBeanSerializerBuilderWithComFasterxmlJacksonDatabindBeanDescription:beanDesc];
  [((ComFasterxmlJacksonDatabindSerBeanSerializerBuilder *) nil_chk(builder)) setConfigWithComFasterxmlJacksonDatabindSerializationConfig:config];
  id<JavaUtilList> props = [self findBeanPropertiesWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindBeanDescription:beanDesc withComFasterxmlJacksonDatabindSerBeanSerializerBuilder:builder];
  if (props == nil) {
    props = create_JavaUtilArrayList_init();
  }
  else {
    props = [self removeOverlappingTypeIdsWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindBeanDescription:beanDesc withComFasterxmlJacksonDatabindSerBeanSerializerBuilder:builder withJavaUtilList:props];
  }
  [((ComFasterxmlJacksonDatabindAnnotationIntrospector *) nil_chk([prov getAnnotationIntrospector])) findAndAddVirtualPropertiesWithComFasterxmlJacksonDatabindCfgMapperConfig:config withComFasterxmlJacksonDatabindIntrospectAnnotatedClass:[beanDesc getClassInfo] withJavaUtilList:props];
  if ([((ComFasterxmlJacksonDatabindCfgSerializerFactoryConfig *) nil_chk(_factoryConfig_)) hasSerializerModifiers]) {
    for (ComFasterxmlJacksonDatabindSerBeanSerializerModifier * __strong mod in nil_chk([_factoryConfig_ serializerModifiers])) {
      props = [((ComFasterxmlJacksonDatabindSerBeanSerializerModifier *) nil_chk(mod)) changePropertiesWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindBeanDescription:beanDesc withJavaUtilList:props];
    }
  }
  props = [self filterBeanPropertiesWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindBeanDescription:beanDesc withJavaUtilList:props];
  if ([_factoryConfig_ hasSerializerModifiers]) {
    for (ComFasterxmlJacksonDatabindSerBeanSerializerModifier * __strong mod in nil_chk([_factoryConfig_ serializerModifiers])) {
      props = [((ComFasterxmlJacksonDatabindSerBeanSerializerModifier *) nil_chk(mod)) orderPropertiesWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindBeanDescription:beanDesc withJavaUtilList:props];
    }
  }
  [builder setObjectIdWriterWithComFasterxmlJacksonDatabindSerImplObjectIdWriter:[self constructObjectIdHandlerWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindBeanDescription:beanDesc withJavaUtilList:props]];
  [builder setPropertiesWithJavaUtilList:props];
  [builder setFilterIdWithId:[self findFilterIdWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindBeanDescription:beanDesc]];
  ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *anyGetter = [beanDesc findAnyGetter];
  if (anyGetter != nil) {
    ComFasterxmlJacksonDatabindJavaType *type = [anyGetter getType];
    jboolean staticTyping = [((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(config)) isEnabledWithComFasterxmlJacksonDatabindMapperFeature:JreLoadEnum(ComFasterxmlJacksonDatabindMapperFeature, USE_STATIC_TYPING)];
    ComFasterxmlJacksonDatabindJavaType *valueType = [((ComFasterxmlJacksonDatabindJavaType *) nil_chk(type)) getContentType];
    ComFasterxmlJacksonDatabindJsontypeTypeSerializer *typeSer = [self createTypeSerializerWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindJavaType:valueType];
    ComFasterxmlJacksonDatabindJsonSerializer *anySer = [self findSerializerFromAnnotationWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindIntrospectAnnotated:anyGetter];
    if (anySer == nil) {
      anySer = ComFasterxmlJacksonDatabindSerStdMapSerializer_constructWithJavaUtilSet_withComFasterxmlJacksonDatabindJavaType_withBoolean_withComFasterxmlJacksonDatabindJsontypeTypeSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withComFasterxmlJacksonDatabindJsonSerializer_withId_(nil, type, staticTyping, typeSer, nil, nil, nil);
    }
    ComFasterxmlJacksonDatabindPropertyName *name = ComFasterxmlJacksonDatabindPropertyName_constructWithNSString_([anyGetter getName]);
    ComFasterxmlJacksonDatabindBeanProperty_Std *anyProp = create_ComFasterxmlJacksonDatabindBeanProperty_Std_initWithComFasterxmlJacksonDatabindPropertyName_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindPropertyName_withComFasterxmlJacksonDatabindIntrospectAnnotatedMember_withComFasterxmlJacksonDatabindPropertyMetadata_(name, valueType, nil, anyGetter, JreLoadStatic(ComFasterxmlJacksonDatabindPropertyMetadata, STD_OPTIONAL));
    [builder setAnyGetterWithComFasterxmlJacksonDatabindSerAnyGetterWriter:create_ComFasterxmlJacksonDatabindSerAnyGetterWriter_initWithComFasterxmlJacksonDatabindBeanProperty_withComFasterxmlJacksonDatabindIntrospectAnnotatedMember_withComFasterxmlJacksonDatabindJsonSerializer_(anyProp, anyGetter, anySer)];
  }
  [self processViewsWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindSerBeanSerializerBuilder:builder];
  if ([_factoryConfig_ hasSerializerModifiers]) {
    for (ComFasterxmlJacksonDatabindSerBeanSerializerModifier * __strong mod in nil_chk([_factoryConfig_ serializerModifiers])) {
      builder = [((ComFasterxmlJacksonDatabindSerBeanSerializerModifier *) nil_chk(mod)) updateBuilderWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindBeanDescription:beanDesc withComFasterxmlJacksonDatabindSerBeanSerializerBuilder:builder];
    }
  }
  ComFasterxmlJacksonDatabindJsonSerializer *ser = nil;
  @try {
    ser = [builder build];
  }
  @catch (JavaLangRuntimeException *e) {
    [prov reportBadTypeDefinitionWithComFasterxmlJacksonDatabindBeanDescription:beanDesc withNSString:@"Failed to construct BeanSerializer for %s: (%s) %s" withNSObjectArray:[IOSObjectArray arrayWithObjects:(id[]){ [beanDesc getType], [[e java_getClass] getName], [e getMessage] } count:3 type:NSObject_class_()]];
  }
  if (ser == nil) {
    if ([beanDesc hasKnownClassAnnotations]) {
      return [builder createDummy];
    }
  }
  return ser;
}

- (ComFasterxmlJacksonDatabindSerImplObjectIdWriter *)constructObjectIdHandlerWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                                                 withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                                                               withJavaUtilList:(id<JavaUtilList>)props {
  ComFasterxmlJacksonDatabindIntrospectObjectIdInfo *objectIdInfo = [((ComFasterxmlJacksonDatabindBeanDescription *) nil_chk(beanDesc)) getObjectIdInfo];
  if (objectIdInfo == nil) {
    return nil;
  }
  ComFasterxmlJacksonAnnotationObjectIdGenerator *gen;
  IOSClass *implClass = [objectIdInfo getGeneratorType];
  if (implClass == ComFasterxmlJacksonAnnotationObjectIdGenerators_PropertyGenerator_class_()) {
    NSString *propName = [((ComFasterxmlJacksonDatabindPropertyName *) nil_chk([objectIdInfo getPropertyName])) getSimpleName];
    ComFasterxmlJacksonDatabindSerBeanPropertyWriter *idProp = nil;
    for (jint i = 0, len = [((id<JavaUtilList>) nil_chk(props)) size]; ; ++i) {
      if (i == len) {
        @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$$$C", @"Invalid Object Id definition for ", [((IOSClass *) nil_chk([beanDesc getBeanClass])) getName], @": cannot find property with name '", propName, '\''));
      }
      ComFasterxmlJacksonDatabindSerBeanPropertyWriter *prop = [props getWithInt:i];
      if ([((NSString *) nil_chk(propName)) isEqual:[((ComFasterxmlJacksonDatabindSerBeanPropertyWriter *) nil_chk(prop)) getName]]) {
        idProp = prop;
        if (i > 0) {
          [props removeWithInt:i];
          [props addWithInt:0 withId:idProp];
        }
        break;
      }
    }
    ComFasterxmlJacksonDatabindJavaType *idType = [idProp getType];
    gen = create_ComFasterxmlJacksonDatabindSerImplPropertyBasedObjectIdGenerator_initWithComFasterxmlJacksonDatabindIntrospectObjectIdInfo_withComFasterxmlJacksonDatabindSerBeanPropertyWriter_(objectIdInfo, idProp);
    return ComFasterxmlJacksonDatabindSerImplObjectIdWriter_constructWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindPropertyName_withComFasterxmlJacksonAnnotationObjectIdGenerator_withBoolean_(idType, nil, gen, [objectIdInfo getAlwaysAsId]);
  }
  ComFasterxmlJacksonDatabindJavaType *type = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(prov)) constructTypeWithJavaLangReflectType:implClass];
  ComFasterxmlJacksonDatabindJavaType *idType = IOSObjectArray_Get(nil_chk([((ComFasterxmlJacksonDatabindTypeTypeFactory *) nil_chk([prov getTypeFactory])) findTypeParametersWithComFasterxmlJacksonDatabindJavaType:type withIOSClass:ComFasterxmlJacksonAnnotationObjectIdGenerator_class_()]), 0);
  gen = [prov objectIdGeneratorInstanceWithComFasterxmlJacksonDatabindIntrospectAnnotated:[beanDesc getClassInfo] withComFasterxmlJacksonDatabindIntrospectObjectIdInfo:objectIdInfo];
  return ComFasterxmlJacksonDatabindSerImplObjectIdWriter_constructWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindPropertyName_withComFasterxmlJacksonAnnotationObjectIdGenerator_withBoolean_(idType, [objectIdInfo getPropertyName], gen, [objectIdInfo getAlwaysAsId]);
}

- (ComFasterxmlJacksonDatabindSerBeanPropertyWriter *)constructFilteredBeanWriterWithComFasterxmlJacksonDatabindSerBeanPropertyWriter:(ComFasterxmlJacksonDatabindSerBeanPropertyWriter *)writer
                                                                                                                    withIOSClassArray:(IOSObjectArray *)inViews {
  return ComFasterxmlJacksonDatabindSerImplFilteredBeanPropertyWriter_constructViewBasedWithComFasterxmlJacksonDatabindSerBeanPropertyWriter_withIOSClassArray_(writer, inViews);
}

- (ComFasterxmlJacksonDatabindSerPropertyBuilder *)constructPropertyBuilderWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                                                               withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc {
  return create_ComFasterxmlJacksonDatabindSerPropertyBuilder_initWithComFasterxmlJacksonDatabindSerializationConfig_withComFasterxmlJacksonDatabindBeanDescription_(config, beanDesc);
}

- (ComFasterxmlJacksonDatabindSerBeanSerializerBuilder *)constructBeanSerializerBuilderWithComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc {
  return create_ComFasterxmlJacksonDatabindSerBeanSerializerBuilder_initWithComFasterxmlJacksonDatabindBeanDescription_(beanDesc);
}

- (jboolean)isPotentialBeanTypeWithIOSClass:(IOSClass *)type {
  return (ComFasterxmlJacksonDatabindUtilClassUtil_canBeABeanTypeWithIOSClass_(type) == nil) && !ComFasterxmlJacksonDatabindUtilClassUtil_isProxyTypeWithIOSClass_(type);
}

- (id<JavaUtilList>)findBeanPropertiesWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                         withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                withComFasterxmlJacksonDatabindSerBeanSerializerBuilder:(ComFasterxmlJacksonDatabindSerBeanSerializerBuilder *)builder {
  id<JavaUtilList> properties = [((ComFasterxmlJacksonDatabindBeanDescription *) nil_chk(beanDesc)) findProperties];
  ComFasterxmlJacksonDatabindSerializationConfig *config = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(prov)) getConfig];
  [self removeIgnorableTypesWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindBeanDescription:beanDesc withJavaUtilList:properties];
  if ([((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(config)) isEnabledWithComFasterxmlJacksonDatabindMapperFeature:JreLoadEnum(ComFasterxmlJacksonDatabindMapperFeature, REQUIRE_SETTERS_FOR_GETTERS)]) {
    [self removeSetterlessGettersWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindBeanDescription:beanDesc withJavaUtilList:properties];
  }
  if ([((id<JavaUtilList>) nil_chk(properties)) isEmpty]) {
    return nil;
  }
  jboolean staticTyping = [self usesStaticTypingWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindBeanDescription:beanDesc withComFasterxmlJacksonDatabindJsontypeTypeSerializer:nil];
  ComFasterxmlJacksonDatabindSerPropertyBuilder *pb = [self constructPropertyBuilderWithComFasterxmlJacksonDatabindSerializationConfig:config withComFasterxmlJacksonDatabindBeanDescription:beanDesc];
  JavaUtilArrayList *result = create_JavaUtilArrayList_initWithInt_([properties size]);
  for (ComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition * __strong property in properties) {
    ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *accessor = [((ComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition *) nil_chk(property)) getAccessor];
    if ([property isTypeId]) {
      if (accessor != nil) {
        [((ComFasterxmlJacksonDatabindSerBeanSerializerBuilder *) nil_chk(builder)) setTypeIdWithComFasterxmlJacksonDatabindIntrospectAnnotatedMember:accessor];
      }
      continue;
    }
    ComFasterxmlJacksonDatabindAnnotationIntrospector_ReferenceProperty *refType = [property findReferenceType];
    if (refType != nil && [refType isBackReference]) {
      continue;
    }
    if ([accessor isKindOfClass:[ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod class]]) {
      [result addWithId:[self _constructWriterWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition:property withComFasterxmlJacksonDatabindSerPropertyBuilder:pb withBoolean:staticTyping withComFasterxmlJacksonDatabindIntrospectAnnotatedMember:(ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod *) cast_chk(accessor, [ComFasterxmlJacksonDatabindIntrospectAnnotatedMethod class])]];
    }
    else {
      [result addWithId:[self _constructWriterWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition:property withComFasterxmlJacksonDatabindSerPropertyBuilder:pb withBoolean:staticTyping withComFasterxmlJacksonDatabindIntrospectAnnotatedMember:(ComFasterxmlJacksonDatabindIntrospectAnnotatedField *) cast_chk(accessor, [ComFasterxmlJacksonDatabindIntrospectAnnotatedField class])]];
    }
  }
  return result;
}

- (id<JavaUtilList>)filterBeanPropertiesWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                            withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                          withJavaUtilList:(id<JavaUtilList>)props {
  ComFasterxmlJacksonAnnotationJsonIgnoreProperties_Value *ignorals = [((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(config)) getDefaultPropertyIgnoralsWithIOSClass:[((ComFasterxmlJacksonDatabindBeanDescription *) nil_chk(beanDesc)) getBeanClass] withComFasterxmlJacksonDatabindIntrospectAnnotatedClass:[beanDesc getClassInfo]];
  if (ignorals != nil) {
    id<JavaUtilSet> ignored = [ignorals findIgnoredForSerialization];
    if (![((id<JavaUtilSet>) nil_chk(ignored)) isEmpty]) {
      id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(props)) iterator];
      while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
        if ([ignored containsWithId:[((ComFasterxmlJacksonDatabindSerBeanPropertyWriter *) nil_chk([it next])) getName]]) {
          [it remove];
        }
      }
    }
  }
  return props;
}

- (void)processViewsWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
               withComFasterxmlJacksonDatabindSerBeanSerializerBuilder:(ComFasterxmlJacksonDatabindSerBeanSerializerBuilder *)builder {
  id<JavaUtilList> props = [((ComFasterxmlJacksonDatabindSerBeanSerializerBuilder *) nil_chk(builder)) getProperties];
  jboolean includeByDefault = [((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(config)) isEnabledWithComFasterxmlJacksonDatabindMapperFeature:JreLoadEnum(ComFasterxmlJacksonDatabindMapperFeature, DEFAULT_VIEW_INCLUSION)];
  jint propCount = [((id<JavaUtilList>) nil_chk(props)) size];
  jint viewsFound = 0;
  IOSObjectArray *filtered = [IOSObjectArray arrayWithLength:propCount type:ComFasterxmlJacksonDatabindSerBeanPropertyWriter_class_()];
  for (jint i = 0; i < propCount; ++i) {
    ComFasterxmlJacksonDatabindSerBeanPropertyWriter *bpw = [props getWithInt:i];
    IOSObjectArray *views = [((ComFasterxmlJacksonDatabindSerBeanPropertyWriter *) nil_chk(bpw)) getViews];
    if (views == nil) {
      if (includeByDefault) {
        IOSObjectArray_Set(filtered, i, bpw);
      }
    }
    else {
      ++viewsFound;
      IOSObjectArray_Set(filtered, i, [self constructFilteredBeanWriterWithComFasterxmlJacksonDatabindSerBeanPropertyWriter:bpw withIOSClassArray:views]);
    }
  }
  if (includeByDefault && viewsFound == 0) {
    return;
  }
  [builder setFilteredPropertiesWithComFasterxmlJacksonDatabindSerBeanPropertyWriterArray:filtered];
}

- (void)removeIgnorableTypesWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                              withJavaUtilList:(id<JavaUtilList>)properties {
  ComFasterxmlJacksonDatabindAnnotationIntrospector *intr = [((ComFasterxmlJacksonDatabindSerializationConfig *) nil_chk(config)) getAnnotationIntrospector];
  JavaUtilHashMap *ignores = create_JavaUtilHashMap_init();
  id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(properties)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    ComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition *property = [it next];
    ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *accessor = [((ComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition *) nil_chk(property)) getAccessor];
    if (accessor == nil) {
      [it remove];
      continue;
    }
    IOSClass *type = [property getRawPrimaryType];
    JavaLangBoolean *result = [ignores getWithId:type];
    if (result == nil) {
      result = [((ComFasterxmlJacksonDatabindCfgConfigOverride *) nil_chk([config getConfigOverrideWithIOSClass:type])) getIsIgnoredType];
      if (result == nil) {
        ComFasterxmlJacksonDatabindBeanDescription *desc = [config introspectClassAnnotationsWithIOSClass:type];
        ComFasterxmlJacksonDatabindIntrospectAnnotatedClass *ac = [((ComFasterxmlJacksonDatabindBeanDescription *) nil_chk(desc)) getClassInfo];
        result = [((ComFasterxmlJacksonDatabindAnnotationIntrospector *) nil_chk(intr)) isIgnorableTypeWithComFasterxmlJacksonDatabindIntrospectAnnotatedClass:ac];
        if (result == nil) {
          result = JreLoadStatic(JavaLangBoolean, FALSE);
        }
      }
      [ignores putWithId:type withId:result];
    }
    if ([((JavaLangBoolean *) nil_chk(result)) booleanValue]) {
      [it remove];
    }
  }
}

- (void)removeSetterlessGettersWithComFasterxmlJacksonDatabindSerializationConfig:(ComFasterxmlJacksonDatabindSerializationConfig *)config
                                   withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                                                 withJavaUtilList:(id<JavaUtilList>)properties {
  id<JavaUtilIterator> it = [((id<JavaUtilList>) nil_chk(properties)) iterator];
  while ([((id<JavaUtilIterator>) nil_chk(it)) hasNext]) {
    ComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition *property = [it next];
    if (![((ComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition *) nil_chk(property)) couldDeserialize] && ![property isExplicitlyIncluded]) {
      [it remove];
    }
  }
}

- (id<JavaUtilList>)removeOverlappingTypeIdsWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                               withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc
                                      withComFasterxmlJacksonDatabindSerBeanSerializerBuilder:(ComFasterxmlJacksonDatabindSerBeanSerializerBuilder *)builder
                                                                             withJavaUtilList:(id<JavaUtilList>)props {
  for (jint i = 0, end = [((id<JavaUtilList>) nil_chk(props)) size]; i < end; ++i) {
    ComFasterxmlJacksonDatabindSerBeanPropertyWriter *bpw = [props getWithInt:i];
    ComFasterxmlJacksonDatabindJsontypeTypeSerializer *td = [((ComFasterxmlJacksonDatabindSerBeanPropertyWriter *) nil_chk(bpw)) getTypeSerializer];
    if ((td == nil) || ([((ComFasterxmlJacksonDatabindJsontypeTypeSerializer *) nil_chk(td)) getTypeInclusion] != JreLoadEnum(ComFasterxmlJacksonAnnotationJsonTypeInfo_As, EXTERNAL_PROPERTY))) {
      continue;
    }
    NSString *n = [((ComFasterxmlJacksonDatabindJsontypeTypeSerializer *) nil_chk(td)) getPropertyName];
    ComFasterxmlJacksonDatabindPropertyName *typePropName = ComFasterxmlJacksonDatabindPropertyName_constructWithNSString_(n);
    for (ComFasterxmlJacksonDatabindSerBeanPropertyWriter * __strong w2 in props) {
      if ((w2 != bpw) && [((ComFasterxmlJacksonDatabindSerBeanPropertyWriter *) nil_chk(w2)) wouldConflictWithNameWithComFasterxmlJacksonDatabindPropertyName:typePropName]) {
        [bpw assignTypeSerializerWithComFasterxmlJacksonDatabindJsontypeTypeSerializer:nil];
        break;
      }
    }
  }
  return props;
}

- (ComFasterxmlJacksonDatabindSerBeanPropertyWriter *)_constructWriterWithComFasterxmlJacksonDatabindSerializerProvider:(ComFasterxmlJacksonDatabindSerializerProvider *)prov
                                                        withComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition:(ComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition *)propDef
                                                                      withComFasterxmlJacksonDatabindSerPropertyBuilder:(ComFasterxmlJacksonDatabindSerPropertyBuilder *)pb
                                                                                                            withBoolean:(jboolean)staticTyping
                                                               withComFasterxmlJacksonDatabindIntrospectAnnotatedMember:(ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *)accessor {
  ComFasterxmlJacksonDatabindPropertyName *name = [((ComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition *) nil_chk(propDef)) getFullName];
  ComFasterxmlJacksonDatabindJavaType *type = [((ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *) nil_chk(accessor)) getType];
  ComFasterxmlJacksonDatabindBeanProperty_Std *property = create_ComFasterxmlJacksonDatabindBeanProperty_Std_initWithComFasterxmlJacksonDatabindPropertyName_withComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindPropertyName_withComFasterxmlJacksonDatabindIntrospectAnnotatedMember_withComFasterxmlJacksonDatabindPropertyMetadata_(name, type, [propDef getWrapperName], accessor, [propDef getMetadata]);
  ComFasterxmlJacksonDatabindJsonSerializer *annotatedSerializer = [self findSerializerFromAnnotationWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindIntrospectAnnotated:accessor];
  if ([ComFasterxmlJacksonDatabindSerResolvableSerializer_class_() isInstance:annotatedSerializer]) {
    [((id<ComFasterxmlJacksonDatabindSerResolvableSerializer>) nil_chk(((id<ComFasterxmlJacksonDatabindSerResolvableSerializer>) cast_check(annotatedSerializer, ComFasterxmlJacksonDatabindSerResolvableSerializer_class_())))) resolveWithComFasterxmlJacksonDatabindSerializerProvider:prov];
  }
  annotatedSerializer = [((ComFasterxmlJacksonDatabindSerializerProvider *) nil_chk(prov)) handlePrimaryContextualizationWithComFasterxmlJacksonDatabindJsonSerializer:annotatedSerializer withComFasterxmlJacksonDatabindBeanProperty:property];
  ComFasterxmlJacksonDatabindJsontypeTypeSerializer *contentTypeSer = nil;
  if ([((ComFasterxmlJacksonDatabindJavaType *) nil_chk(type)) isContainerType] || [type isReferenceType]) {
    contentTypeSer = [self findPropertyContentTypeSerializerWithComFasterxmlJacksonDatabindJavaType:type withComFasterxmlJacksonDatabindSerializationConfig:[prov getConfig] withComFasterxmlJacksonDatabindIntrospectAnnotatedMember:accessor];
  }
  ComFasterxmlJacksonDatabindJsontypeTypeSerializer *typeSer = [self findPropertyTypeSerializerWithComFasterxmlJacksonDatabindJavaType:type withComFasterxmlJacksonDatabindSerializationConfig:[prov getConfig] withComFasterxmlJacksonDatabindIntrospectAnnotatedMember:accessor];
  return [((ComFasterxmlJacksonDatabindSerPropertyBuilder *) nil_chk(pb)) buildWriterWithComFasterxmlJacksonDatabindSerializerProvider:prov withComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition:propDef withComFasterxmlJacksonDatabindJavaType:type withComFasterxmlJacksonDatabindJsonSerializer:annotatedSerializer withComFasterxmlJacksonDatabindJsontypeTypeSerializer:typeSer withComFasterxmlJacksonDatabindJsontypeTypeSerializer:contentTypeSer withComFasterxmlJacksonDatabindIntrospectAnnotatedMember:accessor withBoolean:staticTyping];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerSerializerFactory;", 0x1, 1, 0, -1, -1, -1, -1 },
    { NULL, "LJavaLangIterable;", 0x4, -1, -1, -1, 2, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 3, 4, 5, 6, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x4, 7, 8, 5, 9, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x1, 10, 11, 5, 12, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsontypeTypeSerializer;", 0x1, 13, 14, 5, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsontypeTypeSerializer;", 0x1, 15, 14, 5, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindJsonSerializer;", 0x4, 16, 17, 5, 18, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerImplObjectIdWriter;", 0x4, 19, 20, 5, 21, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerBeanPropertyWriter;", 0x4, 22, 23, -1, 24, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerPropertyBuilder;", 0x4, 25, 26, -1, -1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerBeanSerializerBuilder;", 0x4, 27, 28, -1, -1, -1, -1 },
    { NULL, "Z", 0x4, 29, 30, -1, 31, -1, -1 },
    { NULL, "LJavaUtilList;", 0x4, 32, 33, 5, 34, -1, -1 },
    { NULL, "LJavaUtilList;", 0x4, 35, 36, -1, 37, -1, -1 },
    { NULL, "V", 0x4, 38, 39, -1, -1, -1, -1 },
    { NULL, "V", 0x4, 40, 36, -1, 41, -1, -1 },
    { NULL, "V", 0x4, 42, 36, -1, 41, -1, -1 },
    { NULL, "LJavaUtilList;", 0x4, 43, 44, -1, 45, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindSerBeanPropertyWriter;", 0x4, 46, 47, 5, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithComFasterxmlJacksonDatabindCfgSerializerFactoryConfig:);
  methods[1].selector = @selector(withConfigWithComFasterxmlJacksonDatabindCfgSerializerFactoryConfig:);
  methods[2].selector = @selector(customSerializers);
  methods[3].selector = @selector(createSerializerWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindJavaType:);
  methods[4].selector = @selector(_createSerializer2WithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindBeanDescription:withBoolean:);
  methods[5].selector = @selector(findBeanSerializerWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindBeanDescription:);
  methods[6].selector = @selector(findPropertyTypeSerializerWithComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindSerializationConfig:withComFasterxmlJacksonDatabindIntrospectAnnotatedMember:);
  methods[7].selector = @selector(findPropertyContentTypeSerializerWithComFasterxmlJacksonDatabindJavaType:withComFasterxmlJacksonDatabindSerializationConfig:withComFasterxmlJacksonDatabindIntrospectAnnotatedMember:);
  methods[8].selector = @selector(constructBeanSerializerWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindBeanDescription:);
  methods[9].selector = @selector(constructObjectIdHandlerWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindBeanDescription:withJavaUtilList:);
  methods[10].selector = @selector(constructFilteredBeanWriterWithComFasterxmlJacksonDatabindSerBeanPropertyWriter:withIOSClassArray:);
  methods[11].selector = @selector(constructPropertyBuilderWithComFasterxmlJacksonDatabindSerializationConfig:withComFasterxmlJacksonDatabindBeanDescription:);
  methods[12].selector = @selector(constructBeanSerializerBuilderWithComFasterxmlJacksonDatabindBeanDescription:);
  methods[13].selector = @selector(isPotentialBeanTypeWithIOSClass:);
  methods[14].selector = @selector(findBeanPropertiesWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindBeanDescription:withComFasterxmlJacksonDatabindSerBeanSerializerBuilder:);
  methods[15].selector = @selector(filterBeanPropertiesWithComFasterxmlJacksonDatabindSerializationConfig:withComFasterxmlJacksonDatabindBeanDescription:withJavaUtilList:);
  methods[16].selector = @selector(processViewsWithComFasterxmlJacksonDatabindSerializationConfig:withComFasterxmlJacksonDatabindSerBeanSerializerBuilder:);
  methods[17].selector = @selector(removeIgnorableTypesWithComFasterxmlJacksonDatabindSerializationConfig:withComFasterxmlJacksonDatabindBeanDescription:withJavaUtilList:);
  methods[18].selector = @selector(removeSetterlessGettersWithComFasterxmlJacksonDatabindSerializationConfig:withComFasterxmlJacksonDatabindBeanDescription:withJavaUtilList:);
  methods[19].selector = @selector(removeOverlappingTypeIdsWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindBeanDescription:withComFasterxmlJacksonDatabindSerBeanSerializerBuilder:withJavaUtilList:);
  methods[20].selector = @selector(_constructWriterWithComFasterxmlJacksonDatabindSerializerProvider:withComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition:withComFasterxmlJacksonDatabindSerPropertyBuilder:withBoolean:withComFasterxmlJacksonDatabindIntrospectAnnotatedMember:);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindSerBeanSerializerFactory_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "instance", "LComFasterxmlJacksonDatabindSerBeanSerializerFactory;", .constantValue.asLong = 0, 0x19, -1, 48, -1, -1 },
  };
  static const void *ptrTable[] = { "LComFasterxmlJacksonDatabindCfgSerializerFactoryConfig;", "withConfig", "()Ljava/lang/Iterable<Lcom/fasterxml/jackson/databind/ser/Serializers;>;", "createSerializer", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindJavaType;", "LComFasterxmlJacksonDatabindJsonMappingException;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/JavaType;)Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", "_createSerializer2", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindJavaType;LComFasterxmlJacksonDatabindBeanDescription;Z", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/BeanDescription;Z)Lcom/fasterxml/jackson/databind/JsonSerializer<*>;", "findBeanSerializer", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindJavaType;LComFasterxmlJacksonDatabindBeanDescription;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/JavaType;Lcom/fasterxml/jackson/databind/BeanDescription;)Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", "findPropertyTypeSerializer", "LComFasterxmlJacksonDatabindJavaType;LComFasterxmlJacksonDatabindSerializationConfig;LComFasterxmlJacksonDatabindIntrospectAnnotatedMember;", "findPropertyContentTypeSerializer", "constructBeanSerializer", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindBeanDescription;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanDescription;)Lcom/fasterxml/jackson/databind/JsonSerializer<Ljava/lang/Object;>;", "constructObjectIdHandler", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindBeanDescription;LJavaUtilList;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanDescription;Ljava/util/List<Lcom/fasterxml/jackson/databind/ser/BeanPropertyWriter;>;)Lcom/fasterxml/jackson/databind/ser/impl/ObjectIdWriter;", "constructFilteredBeanWriter", "LComFasterxmlJacksonDatabindSerBeanPropertyWriter;[LIOSClass;", "(Lcom/fasterxml/jackson/databind/ser/BeanPropertyWriter;[Ljava/lang/Class<*>;)Lcom/fasterxml/jackson/databind/ser/BeanPropertyWriter;", "constructPropertyBuilder", "LComFasterxmlJacksonDatabindSerializationConfig;LComFasterxmlJacksonDatabindBeanDescription;", "constructBeanSerializerBuilder", "LComFasterxmlJacksonDatabindBeanDescription;", "isPotentialBeanType", "LIOSClass;", "(Ljava/lang/Class<*>;)Z", "findBeanProperties", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindBeanDescription;LComFasterxmlJacksonDatabindSerBeanSerializerBuilder;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanDescription;Lcom/fasterxml/jackson/databind/ser/BeanSerializerBuilder;)Ljava/util/List<Lcom/fasterxml/jackson/databind/ser/BeanPropertyWriter;>;", "filterBeanProperties", "LComFasterxmlJacksonDatabindSerializationConfig;LComFasterxmlJacksonDatabindBeanDescription;LJavaUtilList;", "(Lcom/fasterxml/jackson/databind/SerializationConfig;Lcom/fasterxml/jackson/databind/BeanDescription;Ljava/util/List<Lcom/fasterxml/jackson/databind/ser/BeanPropertyWriter;>;)Ljava/util/List<Lcom/fasterxml/jackson/databind/ser/BeanPropertyWriter;>;", "processViews", "LComFasterxmlJacksonDatabindSerializationConfig;LComFasterxmlJacksonDatabindSerBeanSerializerBuilder;", "removeIgnorableTypes", "(Lcom/fasterxml/jackson/databind/SerializationConfig;Lcom/fasterxml/jackson/databind/BeanDescription;Ljava/util/List<Lcom/fasterxml/jackson/databind/introspect/BeanPropertyDefinition;>;)V", "removeSetterlessGetters", "removeOverlappingTypeIds", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindBeanDescription;LComFasterxmlJacksonDatabindSerBeanSerializerBuilder;LJavaUtilList;", "(Lcom/fasterxml/jackson/databind/SerializerProvider;Lcom/fasterxml/jackson/databind/BeanDescription;Lcom/fasterxml/jackson/databind/ser/BeanSerializerBuilder;Ljava/util/List<Lcom/fasterxml/jackson/databind/ser/BeanPropertyWriter;>;)Ljava/util/List<Lcom/fasterxml/jackson/databind/ser/BeanPropertyWriter;>;", "_constructWriter", "LComFasterxmlJacksonDatabindSerializerProvider;LComFasterxmlJacksonDatabindIntrospectBeanPropertyDefinition;LComFasterxmlJacksonDatabindSerPropertyBuilder;ZLComFasterxmlJacksonDatabindIntrospectAnnotatedMember;", &ComFasterxmlJacksonDatabindSerBeanSerializerFactory_instance };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindSerBeanSerializerFactory = { "BeanSerializerFactory", "com.fasterxml.jackson.databind.ser", ptrTable, methods, fields, 7, 0x1, 21, 2, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindSerBeanSerializerFactory;
}

+ (void)initialize {
  if (self == [ComFasterxmlJacksonDatabindSerBeanSerializerFactory class]) {
    JreStrongAssignAndConsume(&ComFasterxmlJacksonDatabindSerBeanSerializerFactory_instance, new_ComFasterxmlJacksonDatabindSerBeanSerializerFactory_initWithComFasterxmlJacksonDatabindCfgSerializerFactoryConfig_(nil));
    J2OBJC_SET_INITIALIZED(ComFasterxmlJacksonDatabindSerBeanSerializerFactory)
  }
}

@end

void ComFasterxmlJacksonDatabindSerBeanSerializerFactory_initWithComFasterxmlJacksonDatabindCfgSerializerFactoryConfig_(ComFasterxmlJacksonDatabindSerBeanSerializerFactory *self, ComFasterxmlJacksonDatabindCfgSerializerFactoryConfig *config) {
  ComFasterxmlJacksonDatabindSerBasicSerializerFactory_initWithComFasterxmlJacksonDatabindCfgSerializerFactoryConfig_(self, config);
}

ComFasterxmlJacksonDatabindSerBeanSerializerFactory *new_ComFasterxmlJacksonDatabindSerBeanSerializerFactory_initWithComFasterxmlJacksonDatabindCfgSerializerFactoryConfig_(ComFasterxmlJacksonDatabindCfgSerializerFactoryConfig *config) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindSerBeanSerializerFactory, initWithComFasterxmlJacksonDatabindCfgSerializerFactoryConfig_, config)
}

ComFasterxmlJacksonDatabindSerBeanSerializerFactory *create_ComFasterxmlJacksonDatabindSerBeanSerializerFactory_initWithComFasterxmlJacksonDatabindCfgSerializerFactoryConfig_(ComFasterxmlJacksonDatabindCfgSerializerFactoryConfig *config) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindSerBeanSerializerFactory, initWithComFasterxmlJacksonDatabindCfgSerializerFactoryConfig_, config)
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindSerBeanSerializerFactory)
