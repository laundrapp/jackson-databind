//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/ext/CoreXMLDeserializers.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindExtCoreXMLDeserializers")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindExtCoreXMLDeserializers
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindExtCoreXMLDeserializers 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindExtCoreXMLDeserializers 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindExtCoreXMLDeserializers

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindExtCoreXMLDeserializers || defined(INCLUDE_ComFasterxmlJacksonDatabindExtCoreXMLDeserializers))
#define ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_

#define RESTRICT_ComFasterxmlJacksonDatabindDeserDeserializers 1
#define INCLUDE_ComFasterxmlJacksonDatabindDeserDeserializers_Base 1
#include "com/fasterxml/jackson/databind/deser/Deserializers.h"

@class ComFasterxmlJacksonDatabindBeanDescription;
@class ComFasterxmlJacksonDatabindDeserializationConfig;
@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindJsonDeserializer;
@class JavaxXmlDatatypeDatatypeFactory;

/*!
 @brief Container deserializers that handle "core" XML types: ones included in standard
  JDK 1.5.Types are directly needed by JAXB, but may be unavailable on some
  limited platforms; hence separate out from basic deserializer factory.
 */
@interface ComFasterxmlJacksonDatabindExtCoreXMLDeserializers : ComFasterxmlJacksonDatabindDeserDeserializers_Base

#pragma mark Public

- (instancetype __nonnull)init;

- (ComFasterxmlJacksonDatabindJsonDeserializer *)findBeanDeserializerWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)type
                                                        withComFasterxmlJacksonDatabindDeserializationConfig:(ComFasterxmlJacksonDatabindDeserializationConfig *)config
                                                              withComFasterxmlJacksonDatabindBeanDescription:(ComFasterxmlJacksonDatabindBeanDescription *)beanDesc;

@end

J2OBJC_STATIC_INIT(ComFasterxmlJacksonDatabindExtCoreXMLDeserializers)

/*!
 @brief Data type factories are thread-safe after instantiation (and
  configuration, if any); and since instantion (esp.implementation
  introspection) can be expensive we better reuse the instance.
 */
inline JavaxXmlDatatypeDatatypeFactory *ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_get__dataTypeFactory(void);
/*! INTERNAL ONLY - Use accessor function from above. */
FOUNDATION_EXPORT JavaxXmlDatatypeDatatypeFactory *ComFasterxmlJacksonDatabindExtCoreXMLDeserializers__dataTypeFactory;
J2OBJC_STATIC_FIELD_OBJ_FINAL(ComFasterxmlJacksonDatabindExtCoreXMLDeserializers, _dataTypeFactory, JavaxXmlDatatypeDatatypeFactory *)

inline jint ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_get_TYPE_DURATION(void);
#define ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_TYPE_DURATION 1
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindExtCoreXMLDeserializers, TYPE_DURATION, jint)

inline jint ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_get_TYPE_G_CALENDAR(void);
#define ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_TYPE_G_CALENDAR 2
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindExtCoreXMLDeserializers, TYPE_G_CALENDAR, jint)

inline jint ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_get_TYPE_QNAME(void);
#define ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_TYPE_QNAME 3
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindExtCoreXMLDeserializers, TYPE_QNAME, jint)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_init(ComFasterxmlJacksonDatabindExtCoreXMLDeserializers *self);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindExtCoreXMLDeserializers *new_ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_init(void) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindExtCoreXMLDeserializers *create_ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_init(void);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindExtCoreXMLDeserializers)

#endif

#if !defined (ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindExtCoreXMLDeserializers || defined(INCLUDE_ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std))
#define ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std_

#define RESTRICT_ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer 1
#define INCLUDE_ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer 1
#include "com/fasterxml/jackson/databind/deser/std/FromStringDeserializer.h"

@class ComFasterxmlJacksonCoreJsonParser;
@class ComFasterxmlJacksonDatabindDeserializationContext;
@class IOSClass;
@class JavaUtilDate;
@class JavaxXmlDatatypeXMLGregorianCalendar;

/*!
 @brief Combo-deserializer that supports deserialization of somewhat optional
  javax.xml types <code>QName</code>, <code>Duration</code> and <code>XMLGregorianCalendar</code>.
 Combined into a single class to eliminate bunch of one-off implementation
  classes, to reduce resulting jar size (mostly).
 @since 2.4
 */
@interface ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std : ComFasterxmlJacksonDatabindDeserStdFromStringDeserializer {
 @public
  jint _kind_;
}

#pragma mark Public

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)raw
                                   withInt:(jint)kind;

- (id)deserializeWithComFasterxmlJacksonCoreJsonParser:(ComFasterxmlJacksonCoreJsonParser *)p
 withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt;

#pragma mark Protected

- (id)_deserializeWithNSString:(NSString *)value
withComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt;

- (JavaxXmlDatatypeXMLGregorianCalendar *)_gregorianFromDateWithComFasterxmlJacksonDatabindDeserializationContext:(ComFasterxmlJacksonDatabindDeserializationContext *)ctxt
                                                                                                 withJavaUtilDate:(JavaUtilDate *)d;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std_initWithIOSClass_withInt_(ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std *self, IOSClass *raw, jint kind);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std *new_ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std_initWithIOSClass_withInt_(IOSClass *raw, jint kind) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std *create_ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std_initWithIOSClass_withInt_(IOSClass *raw, jint kind);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindExtCoreXMLDeserializers_Std)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindExtCoreXMLDeserializers")
