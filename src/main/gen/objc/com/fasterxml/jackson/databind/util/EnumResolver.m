//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/util/EnumResolver.java
//

#include "IOSClass.h"
#include "IOSObjectArray.h"
#include "J2ObjC_source.h"
#include "com/fasterxml/jackson/databind/AnnotationIntrospector.h"
#include "com/fasterxml/jackson/databind/introspect/AnnotatedMember.h"
#include "com/fasterxml/jackson/databind/util/CompactStringObjectMap.h"
#include "com/fasterxml/jackson/databind/util/EnumResolver.h"
#include "java/lang/Deprecated.h"
#include "java/lang/Enum.h"
#include "java/lang/Exception.h"
#include "java/lang/IllegalArgumentException.h"
#include "java/lang/annotation/Annotation.h"
#include "java/util/ArrayList.h"
#include "java/util/Collection.h"
#include "java/util/HashMap.h"
#include "java/util/List.h"
#include "java/util/Set.h"

inline jlong ComFasterxmlJacksonDatabindUtilEnumResolver_get_serialVersionUID(void);
#define ComFasterxmlJacksonDatabindUtilEnumResolver_serialVersionUID 1LL
J2OBJC_STATIC_FIELD_CONSTANT(ComFasterxmlJacksonDatabindUtilEnumResolver, serialVersionUID, jlong)

__attribute__((unused)) static IOSObjectArray *ComFasterxmlJacksonDatabindUtilEnumResolver__Annotations$0(void);

@implementation ComFasterxmlJacksonDatabindUtilEnumResolver

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)enumClass
                     withJavaLangEnumArray:(IOSObjectArray *)enums
                       withJavaUtilHashMap:(JavaUtilHashMap *)map
                          withJavaLangEnum:(JavaLangEnum *)defaultValue {
  ComFasterxmlJacksonDatabindUtilEnumResolver_initWithIOSClass_withJavaLangEnumArray_withJavaUtilHashMap_withJavaLangEnum_(self, enumClass, enums, map, defaultValue);
  return self;
}

+ (ComFasterxmlJacksonDatabindUtilEnumResolver *)constructForWithIOSClass:(IOSClass *)enumCls
                    withComFasterxmlJacksonDatabindAnnotationIntrospector:(ComFasterxmlJacksonDatabindAnnotationIntrospector *)ai {
  return ComFasterxmlJacksonDatabindUtilEnumResolver_constructForWithIOSClass_withComFasterxmlJacksonDatabindAnnotationIntrospector_(enumCls, ai);
}

+ (ComFasterxmlJacksonDatabindUtilEnumResolver *)constructUsingToStringWithIOSClass:(IOSClass *)enumCls {
  return ComFasterxmlJacksonDatabindUtilEnumResolver_constructUsingToStringWithIOSClass_(enumCls);
}

+ (ComFasterxmlJacksonDatabindUtilEnumResolver *)constructUsingToStringWithIOSClass:(IOSClass *)enumCls
                              withComFasterxmlJacksonDatabindAnnotationIntrospector:(ComFasterxmlJacksonDatabindAnnotationIntrospector *)ai {
  return ComFasterxmlJacksonDatabindUtilEnumResolver_constructUsingToStringWithIOSClass_withComFasterxmlJacksonDatabindAnnotationIntrospector_(enumCls, ai);
}

+ (ComFasterxmlJacksonDatabindUtilEnumResolver *)constructUsingMethodWithIOSClass:(IOSClass *)enumCls
                         withComFasterxmlJacksonDatabindIntrospectAnnotatedMember:(ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *)accessor
                            withComFasterxmlJacksonDatabindAnnotationIntrospector:(ComFasterxmlJacksonDatabindAnnotationIntrospector *)ai {
  return ComFasterxmlJacksonDatabindUtilEnumResolver_constructUsingMethodWithIOSClass_withComFasterxmlJacksonDatabindIntrospectAnnotatedMember_withComFasterxmlJacksonDatabindAnnotationIntrospector_(enumCls, accessor, ai);
}

+ (ComFasterxmlJacksonDatabindUtilEnumResolver *)constructUnsafeWithIOSClass:(IOSClass *)rawEnumCls
                       withComFasterxmlJacksonDatabindAnnotationIntrospector:(ComFasterxmlJacksonDatabindAnnotationIntrospector *)ai {
  return ComFasterxmlJacksonDatabindUtilEnumResolver_constructUnsafeWithIOSClass_withComFasterxmlJacksonDatabindAnnotationIntrospector_(rawEnumCls, ai);
}

+ (ComFasterxmlJacksonDatabindUtilEnumResolver *)constructUnsafeUsingToStringWithIOSClass:(IOSClass *)rawEnumCls
                                    withComFasterxmlJacksonDatabindAnnotationIntrospector:(ComFasterxmlJacksonDatabindAnnotationIntrospector *)ai {
  return ComFasterxmlJacksonDatabindUtilEnumResolver_constructUnsafeUsingToStringWithIOSClass_withComFasterxmlJacksonDatabindAnnotationIntrospector_(rawEnumCls, ai);
}

+ (ComFasterxmlJacksonDatabindUtilEnumResolver *)constructUnsafeUsingMethodWithIOSClass:(IOSClass *)rawEnumCls
                               withComFasterxmlJacksonDatabindIntrospectAnnotatedMember:(ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *)accessor
                                  withComFasterxmlJacksonDatabindAnnotationIntrospector:(ComFasterxmlJacksonDatabindAnnotationIntrospector *)ai {
  return ComFasterxmlJacksonDatabindUtilEnumResolver_constructUnsafeUsingMethodWithIOSClass_withComFasterxmlJacksonDatabindIntrospectAnnotatedMember_withComFasterxmlJacksonDatabindAnnotationIntrospector_(rawEnumCls, accessor, ai);
}

- (ComFasterxmlJacksonDatabindUtilCompactStringObjectMap *)constructLookup {
  return ComFasterxmlJacksonDatabindUtilCompactStringObjectMap_constructWithJavaUtilMap_(_enumsById_);
}

- (JavaLangEnum *)findEnumWithNSString:(NSString *)key {
  return [((JavaUtilHashMap *) nil_chk(_enumsById_)) getWithId:key];
}

- (JavaLangEnum *)getEnumWithInt:(jint)index {
  if (index < 0 || index >= ((IOSObjectArray *) nil_chk(_enums_))->size_) {
    return nil;
  }
  return IOSObjectArray_Get(nil_chk(_enums_), index);
}

- (JavaLangEnum *)getDefaultValue {
  return _defaultValue_;
}

- (IOSObjectArray *)getRawEnums {
  return _enums_;
}

- (id<JavaUtilList>)getEnums {
  JavaUtilArrayList *enums = create_JavaUtilArrayList_initWithInt_(((IOSObjectArray *) nil_chk(_enums_))->size_);
  {
    IOSObjectArray *a__ = _enums_;
    JavaLangEnum * const *b__ = a__->buffer_;
    JavaLangEnum * const *e__ = b__ + a__->size_;
    while (b__ < e__) {
      JavaLangEnum *e = *b__++;
      [enums addWithId:e];
    }
  }
  return enums;
}

- (id<JavaUtilCollection>)getEnumIds {
  return [((JavaUtilHashMap *) nil_chk(_enumsById_)) keySet];
}

- (IOSClass *)getEnumClass {
  return _enumClass_;
}

- (jint)lastValidIndex {
  return ((IOSObjectArray *) nil_chk(_enums_))->size_ - 1;
}

- (void)dealloc {
  RELEASE_(_enumClass_);
  RELEASE_(_enums_);
  RELEASE_(_enumsById_);
  RELEASE_(_defaultValue_);
  [super dealloc];
}

+ (const J2ObjcClassInfo *)__metadata {
  static J2ObjcMethodInfo methods[] = {
    { NULL, NULL, 0x4, -1, 0, -1, 1, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindUtilEnumResolver;", 0x9, 2, 3, -1, 4, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindUtilEnumResolver;", 0x9, 5, 6, -1, 7, 8, -1 },
    { NULL, "LComFasterxmlJacksonDatabindUtilEnumResolver;", 0x9, 5, 3, -1, 4, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindUtilEnumResolver;", 0x9, 9, 10, -1, 11, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindUtilEnumResolver;", 0x9, 12, 3, -1, 13, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindUtilEnumResolver;", 0x9, 14, 3, -1, 13, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindUtilEnumResolver;", 0x9, 15, 10, -1, 16, -1, -1 },
    { NULL, "LComFasterxmlJacksonDatabindUtilCompactStringObjectMap;", 0x1, -1, -1, -1, -1, -1, -1 },
    { NULL, "LJavaLangEnum;", 0x1, 17, 18, -1, 19, -1, -1 },
    { NULL, "LJavaLangEnum;", 0x1, 20, 21, -1, 22, -1, -1 },
    { NULL, "LJavaLangEnum;", 0x1, -1, -1, -1, 23, -1, -1 },
    { NULL, "[LJavaLangEnum;", 0x1, -1, -1, -1, 24, -1, -1 },
    { NULL, "LJavaUtilList;", 0x1, -1, -1, -1, 25, -1, -1 },
    { NULL, "LJavaUtilCollection;", 0x1, -1, -1, -1, 26, -1, -1 },
    { NULL, "LIOSClass;", 0x1, -1, -1, -1, 27, -1, -1 },
    { NULL, "I", 0x1, -1, -1, -1, -1, -1, -1 },
  };
  #pragma clang diagnostic push
  #pragma clang diagnostic ignored "-Wobjc-multiple-method-names"
  #pragma clang diagnostic ignored "-Wundeclared-selector"
  methods[0].selector = @selector(initWithIOSClass:withJavaLangEnumArray:withJavaUtilHashMap:withJavaLangEnum:);
  methods[1].selector = @selector(constructForWithIOSClass:withComFasterxmlJacksonDatabindAnnotationIntrospector:);
  methods[2].selector = @selector(constructUsingToStringWithIOSClass:);
  methods[3].selector = @selector(constructUsingToStringWithIOSClass:withComFasterxmlJacksonDatabindAnnotationIntrospector:);
  methods[4].selector = @selector(constructUsingMethodWithIOSClass:withComFasterxmlJacksonDatabindIntrospectAnnotatedMember:withComFasterxmlJacksonDatabindAnnotationIntrospector:);
  methods[5].selector = @selector(constructUnsafeWithIOSClass:withComFasterxmlJacksonDatabindAnnotationIntrospector:);
  methods[6].selector = @selector(constructUnsafeUsingToStringWithIOSClass:withComFasterxmlJacksonDatabindAnnotationIntrospector:);
  methods[7].selector = @selector(constructUnsafeUsingMethodWithIOSClass:withComFasterxmlJacksonDatabindIntrospectAnnotatedMember:withComFasterxmlJacksonDatabindAnnotationIntrospector:);
  methods[8].selector = @selector(constructLookup);
  methods[9].selector = @selector(findEnumWithNSString:);
  methods[10].selector = @selector(getEnumWithInt:);
  methods[11].selector = @selector(getDefaultValue);
  methods[12].selector = @selector(getRawEnums);
  methods[13].selector = @selector(getEnums);
  methods[14].selector = @selector(getEnumIds);
  methods[15].selector = @selector(getEnumClass);
  methods[16].selector = @selector(lastValidIndex);
  #pragma clang diagnostic pop
  static const J2ObjcFieldInfo fields[] = {
    { "serialVersionUID", "J", .constantValue.asLong = ComFasterxmlJacksonDatabindUtilEnumResolver_serialVersionUID, 0x1a, -1, -1, -1, -1 },
    { "_enumClass_", "LIOSClass;", .constantValue.asLong = 0, 0x14, -1, -1, 28, -1 },
    { "_enums_", "[LJavaLangEnum;", .constantValue.asLong = 0, 0x14, -1, -1, 29, -1 },
    { "_enumsById_", "LJavaUtilHashMap;", .constantValue.asLong = 0, 0x14, -1, -1, 30, -1 },
    { "_defaultValue_", "LJavaLangEnum;", .constantValue.asLong = 0, 0x14, -1, -1, 31, -1 },
  };
  static const void *ptrTable[] = { "LIOSClass;[LJavaLangEnum;LJavaUtilHashMap;LJavaLangEnum;", "(Ljava/lang/Class<Ljava/lang/Enum<*>;>;[Ljava/lang/Enum<*>;Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Enum<*>;>;Ljava/lang/Enum<*>;)V", "constructFor", "LIOSClass;LComFasterxmlJacksonDatabindAnnotationIntrospector;", "(Ljava/lang/Class<Ljava/lang/Enum<*>;>;Lcom/fasterxml/jackson/databind/AnnotationIntrospector;)Lcom/fasterxml/jackson/databind/util/EnumResolver;", "constructUsingToString", "LIOSClass;", "(Ljava/lang/Class<Ljava/lang/Enum<*>;>;)Lcom/fasterxml/jackson/databind/util/EnumResolver;", (void *)&ComFasterxmlJacksonDatabindUtilEnumResolver__Annotations$0, "constructUsingMethod", "LIOSClass;LComFasterxmlJacksonDatabindIntrospectAnnotatedMember;LComFasterxmlJacksonDatabindAnnotationIntrospector;", "(Ljava/lang/Class<Ljava/lang/Enum<*>;>;Lcom/fasterxml/jackson/databind/introspect/AnnotatedMember;Lcom/fasterxml/jackson/databind/AnnotationIntrospector;)Lcom/fasterxml/jackson/databind/util/EnumResolver;", "constructUnsafe", "(Ljava/lang/Class<*>;Lcom/fasterxml/jackson/databind/AnnotationIntrospector;)Lcom/fasterxml/jackson/databind/util/EnumResolver;", "constructUnsafeUsingToString", "constructUnsafeUsingMethod", "(Ljava/lang/Class<*>;Lcom/fasterxml/jackson/databind/introspect/AnnotatedMember;Lcom/fasterxml/jackson/databind/AnnotationIntrospector;)Lcom/fasterxml/jackson/databind/util/EnumResolver;", "findEnum", "LNSString;", "(Ljava/lang/String;)Ljava/lang/Enum<*>;", "getEnum", "I", "(I)Ljava/lang/Enum<*>;", "()Ljava/lang/Enum<*>;", "()[Ljava/lang/Enum<*>;", "()Ljava/util/List<Ljava/lang/Enum<*>;>;", "()Ljava/util/Collection<Ljava/lang/String;>;", "()Ljava/lang/Class<Ljava/lang/Enum<*>;>;", "Ljava/lang/Class<Ljava/lang/Enum<*>;>;", "[Ljava/lang/Enum<*>;", "Ljava/util/HashMap<Ljava/lang/String;Ljava/lang/Enum<*>;>;", "Ljava/lang/Enum<*>;" };
  static const J2ObjcClassInfo _ComFasterxmlJacksonDatabindUtilEnumResolver = { "EnumResolver", "com.fasterxml.jackson.databind.util", ptrTable, methods, fields, 7, 0x1, 17, 5, -1, -1, -1, -1, -1 };
  return &_ComFasterxmlJacksonDatabindUtilEnumResolver;
}

@end

void ComFasterxmlJacksonDatabindUtilEnumResolver_initWithIOSClass_withJavaLangEnumArray_withJavaUtilHashMap_withJavaLangEnum_(ComFasterxmlJacksonDatabindUtilEnumResolver *self, IOSClass *enumClass, IOSObjectArray *enums, JavaUtilHashMap *map, JavaLangEnum *defaultValue) {
  NSObject_init(self);
  JreStrongAssign(&self->_enumClass_, enumClass);
  JreStrongAssign(&self->_enums_, enums);
  JreStrongAssign(&self->_enumsById_, map);
  JreStrongAssign(&self->_defaultValue_, defaultValue);
}

ComFasterxmlJacksonDatabindUtilEnumResolver *new_ComFasterxmlJacksonDatabindUtilEnumResolver_initWithIOSClass_withJavaLangEnumArray_withJavaUtilHashMap_withJavaLangEnum_(IOSClass *enumClass, IOSObjectArray *enums, JavaUtilHashMap *map, JavaLangEnum *defaultValue) {
  J2OBJC_NEW_IMPL(ComFasterxmlJacksonDatabindUtilEnumResolver, initWithIOSClass_withJavaLangEnumArray_withJavaUtilHashMap_withJavaLangEnum_, enumClass, enums, map, defaultValue)
}

ComFasterxmlJacksonDatabindUtilEnumResolver *create_ComFasterxmlJacksonDatabindUtilEnumResolver_initWithIOSClass_withJavaLangEnumArray_withJavaUtilHashMap_withJavaLangEnum_(IOSClass *enumClass, IOSObjectArray *enums, JavaUtilHashMap *map, JavaLangEnum *defaultValue) {
  J2OBJC_CREATE_IMPL(ComFasterxmlJacksonDatabindUtilEnumResolver, initWithIOSClass_withJavaLangEnumArray_withJavaUtilHashMap_withJavaLangEnum_, enumClass, enums, map, defaultValue)
}

ComFasterxmlJacksonDatabindUtilEnumResolver *ComFasterxmlJacksonDatabindUtilEnumResolver_constructForWithIOSClass_withComFasterxmlJacksonDatabindAnnotationIntrospector_(IOSClass *enumCls, ComFasterxmlJacksonDatabindAnnotationIntrospector *ai) {
  ComFasterxmlJacksonDatabindUtilEnumResolver_initialize();
  IOSObjectArray *enumValues = [((IOSClass *) nil_chk(enumCls)) getEnumConstants];
  if (enumValues == nil) {
    @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$$", @"No enum constants for class ", [enumCls getName]));
  }
  IOSObjectArray *names = [((ComFasterxmlJacksonDatabindAnnotationIntrospector *) nil_chk(ai)) findEnumValuesWithIOSClass:enumCls withJavaLangEnumArray:enumValues withNSStringArray:[IOSObjectArray arrayWithLength:enumValues->size_ type:NSString_class_()]];
  JavaUtilHashMap *map = create_JavaUtilHashMap_init();
  for (jint i = 0, len = enumValues->size_; i < len; ++i) {
    NSString *name = IOSObjectArray_Get(nil_chk(names), i);
    if (name == nil) {
      name = [((JavaLangEnum *) nil_chk(IOSObjectArray_Get(enumValues, i))) name];
    }
    [map putWithId:name withId:IOSObjectArray_Get(enumValues, i)];
  }
  JavaLangEnum *defaultEnum = [ai findDefaultEnumValueWithIOSClass:enumCls];
  return create_ComFasterxmlJacksonDatabindUtilEnumResolver_initWithIOSClass_withJavaLangEnumArray_withJavaUtilHashMap_withJavaLangEnum_(enumCls, enumValues, map, defaultEnum);
}

ComFasterxmlJacksonDatabindUtilEnumResolver *ComFasterxmlJacksonDatabindUtilEnumResolver_constructUsingToStringWithIOSClass_(IOSClass *enumCls) {
  ComFasterxmlJacksonDatabindUtilEnumResolver_initialize();
  return ComFasterxmlJacksonDatabindUtilEnumResolver_constructUsingToStringWithIOSClass_withComFasterxmlJacksonDatabindAnnotationIntrospector_(enumCls, nil);
}

ComFasterxmlJacksonDatabindUtilEnumResolver *ComFasterxmlJacksonDatabindUtilEnumResolver_constructUsingToStringWithIOSClass_withComFasterxmlJacksonDatabindAnnotationIntrospector_(IOSClass *enumCls, ComFasterxmlJacksonDatabindAnnotationIntrospector *ai) {
  ComFasterxmlJacksonDatabindUtilEnumResolver_initialize();
  IOSObjectArray *enumValues = [((IOSClass *) nil_chk(enumCls)) getEnumConstants];
  JavaUtilHashMap *map = create_JavaUtilHashMap_init();
  for (jint i = ((IOSObjectArray *) nil_chk(enumValues))->size_; --i >= 0; ) {
    JavaLangEnum *e = IOSObjectArray_Get(enumValues, i);
    [map putWithId:[((JavaLangEnum *) nil_chk(e)) description] withId:e];
  }
  JavaLangEnum *defaultEnum = (ai == nil) ? nil : [((ComFasterxmlJacksonDatabindAnnotationIntrospector *) nil_chk(ai)) findDefaultEnumValueWithIOSClass:enumCls];
  return create_ComFasterxmlJacksonDatabindUtilEnumResolver_initWithIOSClass_withJavaLangEnumArray_withJavaUtilHashMap_withJavaLangEnum_(enumCls, enumValues, map, defaultEnum);
}

ComFasterxmlJacksonDatabindUtilEnumResolver *ComFasterxmlJacksonDatabindUtilEnumResolver_constructUsingMethodWithIOSClass_withComFasterxmlJacksonDatabindIntrospectAnnotatedMember_withComFasterxmlJacksonDatabindAnnotationIntrospector_(IOSClass *enumCls, ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *accessor, ComFasterxmlJacksonDatabindAnnotationIntrospector *ai) {
  ComFasterxmlJacksonDatabindUtilEnumResolver_initialize();
  IOSObjectArray *enumValues = [((IOSClass *) nil_chk(enumCls)) getEnumConstants];
  JavaUtilHashMap *map = create_JavaUtilHashMap_init();
  for (jint i = ((IOSObjectArray *) nil_chk(enumValues))->size_; --i >= 0; ) {
    JavaLangEnum *en = IOSObjectArray_Get(enumValues, i);
    @try {
      id o = [((ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *) nil_chk(accessor)) getValueWithId:en];
      if (o != nil) {
        [map putWithId:[o description] withId:en];
      }
    }
    @catch (JavaLangException *e) {
      @throw create_JavaLangIllegalArgumentException_initWithNSString_(JreStrcat("$@$$", @"Failed to access @JsonValue of Enum value ", en, @": ", [e getMessage]));
    }
  }
  JavaLangEnum *defaultEnum = (ai != nil) ? [((ComFasterxmlJacksonDatabindAnnotationIntrospector *) nil_chk(ai)) findDefaultEnumValueWithIOSClass:enumCls] : nil;
  return create_ComFasterxmlJacksonDatabindUtilEnumResolver_initWithIOSClass_withJavaLangEnumArray_withJavaUtilHashMap_withJavaLangEnum_(enumCls, enumValues, map, defaultEnum);
}

ComFasterxmlJacksonDatabindUtilEnumResolver *ComFasterxmlJacksonDatabindUtilEnumResolver_constructUnsafeWithIOSClass_withComFasterxmlJacksonDatabindAnnotationIntrospector_(IOSClass *rawEnumCls, ComFasterxmlJacksonDatabindAnnotationIntrospector *ai) {
  ComFasterxmlJacksonDatabindUtilEnumResolver_initialize();
  IOSClass *enumCls = rawEnumCls;
  return ComFasterxmlJacksonDatabindUtilEnumResolver_constructForWithIOSClass_withComFasterxmlJacksonDatabindAnnotationIntrospector_(enumCls, ai);
}

ComFasterxmlJacksonDatabindUtilEnumResolver *ComFasterxmlJacksonDatabindUtilEnumResolver_constructUnsafeUsingToStringWithIOSClass_withComFasterxmlJacksonDatabindAnnotationIntrospector_(IOSClass *rawEnumCls, ComFasterxmlJacksonDatabindAnnotationIntrospector *ai) {
  ComFasterxmlJacksonDatabindUtilEnumResolver_initialize();
  IOSClass *enumCls = rawEnumCls;
  return ComFasterxmlJacksonDatabindUtilEnumResolver_constructUsingToStringWithIOSClass_withComFasterxmlJacksonDatabindAnnotationIntrospector_(enumCls, ai);
}

ComFasterxmlJacksonDatabindUtilEnumResolver *ComFasterxmlJacksonDatabindUtilEnumResolver_constructUnsafeUsingMethodWithIOSClass_withComFasterxmlJacksonDatabindIntrospectAnnotatedMember_withComFasterxmlJacksonDatabindAnnotationIntrospector_(IOSClass *rawEnumCls, ComFasterxmlJacksonDatabindIntrospectAnnotatedMember *accessor, ComFasterxmlJacksonDatabindAnnotationIntrospector *ai) {
  ComFasterxmlJacksonDatabindUtilEnumResolver_initialize();
  IOSClass *enumCls = rawEnumCls;
  return ComFasterxmlJacksonDatabindUtilEnumResolver_constructUsingMethodWithIOSClass_withComFasterxmlJacksonDatabindIntrospectAnnotatedMember_withComFasterxmlJacksonDatabindAnnotationIntrospector_(enumCls, accessor, ai);
}

IOSObjectArray *ComFasterxmlJacksonDatabindUtilEnumResolver__Annotations$0() {
  return [IOSObjectArray arrayWithObjects:(id[]){ create_JavaLangDeprecated() } count:1 type:JavaLangAnnotationAnnotation_class_()];
}

J2OBJC_CLASS_TYPE_LITERAL_SOURCE(ComFasterxmlJacksonDatabindUtilEnumResolver)
