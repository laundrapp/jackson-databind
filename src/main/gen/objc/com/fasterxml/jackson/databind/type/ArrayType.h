//
//  Generated by the J2ObjC translator.  DO NOT EDIT!
//  source: /Users/Salton/Documents/Projects/jackson-databind/src/main/java/com/fasterxml/jackson/databind/type/ArrayType.java
//

#include "J2ObjC_header.h"

#pragma push_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindTypeArrayType")
#ifdef RESTRICT_ComFasterxmlJacksonDatabindTypeArrayType
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindTypeArrayType 0
#else
#define INCLUDE_ALL_ComFasterxmlJacksonDatabindTypeArrayType 1
#endif
#undef RESTRICT_ComFasterxmlJacksonDatabindTypeArrayType

#if __has_feature(nullability)
#pragma clang diagnostic push
#pragma GCC diagnostic ignored "-Wnullability-completeness"
#endif

#if !defined (ComFasterxmlJacksonDatabindTypeArrayType_) && (INCLUDE_ALL_ComFasterxmlJacksonDatabindTypeArrayType || defined(INCLUDE_ComFasterxmlJacksonDatabindTypeArrayType))
#define ComFasterxmlJacksonDatabindTypeArrayType_

#define RESTRICT_ComFasterxmlJacksonDatabindTypeTypeBase 1
#define INCLUDE_ComFasterxmlJacksonDatabindTypeTypeBase 1
#include "com/fasterxml/jackson/databind/type/TypeBase.h"

@class ComFasterxmlJacksonDatabindJavaType;
@class ComFasterxmlJacksonDatabindTypeTypeBindings;
@class IOSClass;
@class IOSObjectArray;
@class JavaLangStringBuilder;

/*!
 @brief Array types represent Java arrays, both primitive and object valued.
 Further, Object-valued arrays can have element type of any other
  legal <code>JavaType</code>.
 */
@interface ComFasterxmlJacksonDatabindTypeArrayType : ComFasterxmlJacksonDatabindTypeTypeBase {
 @public
  /*!
   @brief Type of elements in the array.
   */
  ComFasterxmlJacksonDatabindJavaType *_componentType_;
  /*!
   @brief We will also keep track of shareable instance of empty array,
  since it usually needs to be constructed any way; and because
  it is essentially immutable and thus can be shared.
   */
  id _emptyArray_;
}

#pragma mark Public

+ (ComFasterxmlJacksonDatabindTypeArrayType *)constructWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)componentType
                                               withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)bindings;

+ (ComFasterxmlJacksonDatabindTypeArrayType *)constructWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)componentType
                                               withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)bindings
                                                                                        withId:(id)valueHandler
                                                                                        withId:(id)typeHandler;

- (jboolean)isEqual:(id)o;

- (ComFasterxmlJacksonDatabindJavaType *)getContentType;

- (id)getContentTypeHandler;

- (id)getContentValueHandler;

- (JavaLangStringBuilder *)getErasedSignatureWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (JavaLangStringBuilder *)getGenericSignatureWithJavaLangStringBuilder:(JavaLangStringBuilder *)sb;

- (jboolean)hasGenericTypes;

- (jboolean)hasHandlers;

/*!
 @brief For some odd reason, modifiers for array classes would
  claim they are abstract types.Not so, at least for our
  purposes.
 */
- (jboolean)isAbstract;

- (jboolean)isArrayType;

/*!
 @brief For some odd reason, modifiers for array classes would
  claim they are abstract types.Not so, at least for our
  purposes.
 */
- (jboolean)isConcrete;

- (jboolean)isContainerType;

- (ComFasterxmlJacksonDatabindJavaType *)refineWithIOSClass:(IOSClass *)contentClass
            withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)bindings
                    withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)superClass
               withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)superInterfaces;

- (NSString *)description;

- (ComFasterxmlJacksonDatabindJavaType *)withContentTypeWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)contentType;

- (ComFasterxmlJacksonDatabindTypeArrayType *)withContentTypeHandlerWithId:(id)h;

- (ComFasterxmlJacksonDatabindTypeArrayType *)withContentValueHandlerWithId:(id)h;

- (ComFasterxmlJacksonDatabindTypeArrayType *)withStaticTyping;

- (ComFasterxmlJacksonDatabindTypeArrayType *)withTypeHandlerWithId:(id)h;

- (ComFasterxmlJacksonDatabindTypeArrayType *)withValueHandlerWithId:(id)h;

#pragma mark Protected

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)componentType
                      withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)bindings
                                                               withId:(id)emptyInstance
                                                               withId:(id)valueHandler
                                                               withId:(id)typeHandler
                                                          withBoolean:(jboolean)asStatic;

/*!
 @brief Handling of narrowing conversions for arrays is trickier: for now,
  it is not even allowed.
 */
- (ComFasterxmlJacksonDatabindJavaType *)_narrowWithIOSClass:(IOSClass *)subclass;

// Disallowed inherited constructors, do not use.

- (instancetype __nonnull)initWithComFasterxmlJacksonDatabindTypeTypeBase:(ComFasterxmlJacksonDatabindTypeTypeBase *)arg0 NS_UNAVAILABLE;

- (instancetype __nonnull)initWithIOSClass:(IOSClass *)arg0
withComFasterxmlJacksonDatabindTypeTypeBindings:(ComFasterxmlJacksonDatabindTypeTypeBindings *)arg1
   withComFasterxmlJacksonDatabindJavaType:(ComFasterxmlJacksonDatabindJavaType *)arg2
withComFasterxmlJacksonDatabindJavaTypeArray:(IOSObjectArray *)arg3
                                   withInt:(jint)arg4
                                    withId:(id)arg5
                                    withId:(id)arg6
                               withBoolean:(jboolean)arg7 NS_UNAVAILABLE;

@end

J2OBJC_EMPTY_STATIC_INIT(ComFasterxmlJacksonDatabindTypeArrayType)

J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindTypeArrayType, _componentType_, ComFasterxmlJacksonDatabindJavaType *)
J2OBJC_FIELD_SETTER(ComFasterxmlJacksonDatabindTypeArrayType, _emptyArray_, id)

FOUNDATION_EXPORT void ComFasterxmlJacksonDatabindTypeArrayType_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindTypeTypeBindings_withId_withId_withId_withBoolean_(ComFasterxmlJacksonDatabindTypeArrayType *self, ComFasterxmlJacksonDatabindJavaType *componentType, ComFasterxmlJacksonDatabindTypeTypeBindings *bindings, id emptyInstance, id valueHandler, id typeHandler, jboolean asStatic);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindTypeArrayType *new_ComFasterxmlJacksonDatabindTypeArrayType_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindTypeTypeBindings_withId_withId_withId_withBoolean_(ComFasterxmlJacksonDatabindJavaType *componentType, ComFasterxmlJacksonDatabindTypeTypeBindings *bindings, id emptyInstance, id valueHandler, id typeHandler, jboolean asStatic) NS_RETURNS_RETAINED;

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindTypeArrayType *create_ComFasterxmlJacksonDatabindTypeArrayType_initWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindTypeTypeBindings_withId_withId_withId_withBoolean_(ComFasterxmlJacksonDatabindJavaType *componentType, ComFasterxmlJacksonDatabindTypeTypeBindings *bindings, id emptyInstance, id valueHandler, id typeHandler, jboolean asStatic);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindTypeArrayType *ComFasterxmlJacksonDatabindTypeArrayType_constructWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindTypeTypeBindings_(ComFasterxmlJacksonDatabindJavaType *componentType, ComFasterxmlJacksonDatabindTypeTypeBindings *bindings);

FOUNDATION_EXPORT ComFasterxmlJacksonDatabindTypeArrayType *ComFasterxmlJacksonDatabindTypeArrayType_constructWithComFasterxmlJacksonDatabindJavaType_withComFasterxmlJacksonDatabindTypeTypeBindings_withId_withId_(ComFasterxmlJacksonDatabindJavaType *componentType, ComFasterxmlJacksonDatabindTypeTypeBindings *bindings, id valueHandler, id typeHandler);

J2OBJC_TYPE_LITERAL_HEADER(ComFasterxmlJacksonDatabindTypeArrayType)

#endif


#if __has_feature(nullability)
#pragma clang diagnostic pop
#endif
#pragma pop_macro("INCLUDE_ALL_ComFasterxmlJacksonDatabindTypeArrayType")
